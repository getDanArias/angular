{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../tools/tsc-watch/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/* tslint:disable:no-console  */\nimport {spawn} from 'child_process';\nimport {existsSync, mkdirSync, writeFileSync} from 'fs';\n\nimport {TSC, TscWatch, reportError} from './tsc_watch';\n\nexport * from './tsc_watch';\nimport 'reflect-metadata';\n\nfunction md(dir: string, folders: string[]) {\n  if (folders.length) {\n    const next = folders.shift();\n    const path = dir + '/' + next;\n    if (!existsSync(path)) {\n      mkdirSync(path);\n    }\n    md(path, folders);\n  }\n}\n\nlet tscWatch: TscWatch = null;\nconst platform = process.argv.length >= 3 ? process.argv[2] : null;\nconst runMode: string = process.argv.length >= 4 ? process.argv[3] : null;\nconst BaseConfig = {\n  start: 'File change detected. Starting incremental compilation...',\n  error: 'error',\n  complete: 'Compilation complete. Watching for file changes.'\n};\n\nif (platform == 'node') {\n  tscWatch = new TscWatch(Object.assign(\n      {\n        tsconfig: 'packages/tsconfig.json',\n        onChangeCmds: [[\n          'node', 'dist/tools/cjs-jasmine', '--', '@angular/**/*_spec.js',\n          '@angular/compiler-cli/test/**/*_spec.js', '@angular/benchpress/test/**/*_spec.js'\n        ]]\n      },\n      BaseConfig));\n} else if (platform == 'browser') {\n  tscWatch = new TscWatch(Object.assign(\n      {\n        tsconfig: 'packages/tsconfig.json',\n        onStartCmds: [\n          [\n            'node', 'node_modules/karma/bin/karma', 'start', '--no-auto-watch', '--port=9876',\n            'karma-js.conf.js'\n          ],\n          [\n            'node', 'node_modules/karma/bin/karma', 'start', '--no-auto-watch', '--port=9877',\n            'packages/router/karma.conf.js'\n          ],\n        ],\n        onChangeCmds: [\n          ['node', 'node_modules/karma/bin/karma', 'run', 'karma-js.conf.js', '--port=9876'],\n          ['node', 'node_modules/karma/bin/karma', 'run', '--port=9877'],\n        ]\n      },\n      BaseConfig));\n} else if (platform == 'router') {\n  tscWatch = new TscWatch(Object.assign(\n      {\n        tsconfig: 'packages/tsconfig.json',\n        onStartCmds: [\n          [\n            'node', 'node_modules/karma/bin/karma', 'start', '--no-auto-watch', '--port=9877',\n            'packages/router/karma.conf.js'\n          ],\n        ],\n        onChangeCmds: [\n          ['node', 'node_modules/karma/bin/karma', 'run', '--port=9877'],\n        ]\n      },\n      BaseConfig));\n} else if (platform == 'browserNoRouter') {\n  tscWatch = new TscWatch(Object.assign(\n      {\n        tsconfig: 'packages/tsconfig.json',\n        onStartCmds: [[\n          'node', 'node_modules/karma/bin/karma', 'start', '--no-auto-watch', '--port=9876',\n          'karma-js.conf.js'\n        ]],\n        onChangeCmds: [\n          ['node', 'node_modules/karma/bin/karma', 'run', 'karma-js.conf.js', '--port=9876'],\n        ]\n      },\n      BaseConfig));\n} else if (platform == 'tools') {\n  tscWatch = new TscWatch(Object.assign(\n      {\n        tsconfig: 'tools/tsconfig.json',\n        onChangeCmds: [[\n          'node', 'dist/tools/cjs-jasmine/index-tools', '--',\n          '@angular/tsc-wrapped/**/*{_,.}spec.js'\n        ]]\n      },\n      BaseConfig));\n} else {\n  throw new Error(`unknown platform: ${platform}`);\n}\n\nif (runMode === 'watch') {\n  tscWatch.watch();\n} else if (runMode === 'runCmdsOnly') {\n  tscWatch.runCmdsOnly();\n} else {\n  tscWatch.run();\n}\n"]}