{"version":3,"file":"url_resolver.js","sourceRoot":"","sources":["../../../../../packages/examples/compiler/ts/url_resolver/url_resolver.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;AAEH,gDAA8C;AAC9C,wCAAuC;AACvC,gEAAwD;AACxD,gFAAyE;AAEzE,IAAI,KAAU,CAAC;AAEf,0BAA0B;AAC1B,mBAAoB,SAAQ,sBAAW;IACrC,OAAO,CAAC,OAAe,EAAE,GAAW;QAClC,sCAAsC;QACtC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,2BAA2B,EAAE,GAAG,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC;CACF;AAOD,IAAM,SAAS,GAAf;CACC,CAAA;AADK,SAAS;IALd,eAAQ,CAAC;QACR,OAAO,EAAE,CAAC,gCAAa,CAAC;QACxB,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,sBAAW,EAAE,QAAQ,EAAE,aAAa,EAAC,CAAC;QAC5D,SAAS,EAAE,CAAC,KAAK,CAAC;KACnB,CAAC;GACI,SAAS,CACd;AAED;IACE,iDAAsB,EAAE,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AACtD,CAAC;AAFD,oBAEC;AACD,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {UrlResolver} from '@angular/compiler';\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nlet MyApp: any;\n\n// #docregion url_resolver\nclass MyUrlResolver extends UrlResolver {\n  resolve(baseUrl: string, url: string): string {\n    // Serve CSS files from a special CDN.\n    if (url.substr(-4) === '.css') {\n      return super.resolve('http://cdn.myapp.com/css/', url);\n    }\n    return super.resolve(baseUrl, url);\n  }\n}\n\n@NgModule({\n  imports: [BrowserModule],\n  providers: [{provide: UrlResolver, useClass: MyUrlResolver}],\n  bootstrap: [MyApp]\n})\nclass AppModule {\n}\n\nexport function main() {\n  platformBrowserDynamic().bootstrapModule(AppModule);\n}\n// #enddocregion\n"]}