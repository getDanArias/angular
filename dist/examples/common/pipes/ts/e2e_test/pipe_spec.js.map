{"version":3,"file":"pipe_spec.js","sourceRoot":"","sources":["../../../../../../packages/examples/common/pipes/ts/e2e_test/pipe_spec.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,2CAAuE;AACvE,2DAAmE;AAEnE,wBAAwB,QAAgB;IACtC,MAAM,EAAE,GAAG,+BAAkB,CAAC;IAC9B,gEAAgE;IAChE,oBAAO,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,cAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAClD,CAAC;AAED,QAAQ,CAAC,MAAM,EAAE;IACf,SAAS,CAAC,gCAAqB,CAAC,CAAC;IAEjC,QAAQ,CAAC,OAAO,EAAE;QAChB,MAAM,GAAG,GAAG,mBAAmB,CAAC;QAEhC,EAAE,CAAC,oCAAoC,EAAE;YACvC,oBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,cAAc,CAAC,oBAAoB,CAAC,CAAC;YACrC,MAAM,CAAC,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;iBAClE,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAC/B,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YACrD,MAAM,CAAC,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;iBAClE,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE;YACtC,oBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,cAAc,CAAC,iBAAiB,CAAC,CAAC;YAClC,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAClE,MAAM,CAAC,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;iBAC9D,OAAO,CAAC,kBAAkB,CAAC,CAAC;YACjC,MAAM,CAAC,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;iBAC9D,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {$, ExpectedConditions, browser, by, element} from 'protractor';\nimport {verifyNoBrowserErrors} from '../../../../_common/e2e_util';\n\nfunction waitForElement(selector: string) {\n  const EC = ExpectedConditions;\n  // Waits for the element with id 'abc' to be present on the dom.\n  browser.wait(EC.presenceOf($(selector)), 20000);\n}\n\ndescribe('pipe', () => {\n  afterEach(verifyNoBrowserErrors);\n\n  describe('async', () => {\n    const URL = '/common/pipes/ts/';\n\n    it('should resolve and display promise', () => {\n      browser.get(URL);\n      waitForElement('async-promise-pipe');\n      expect(element.all(by.css('async-promise-pipe span')).get(0).getText())\n          .toEqual('Wait for it...');\n      element(by.css('async-promise-pipe button')).click();\n      expect(element.all(by.css('async-promise-pipe span')).get(0).getText())\n          .toEqual('Wait for it... hi there!');\n    });\n\n    it('should update lowercase/uppercase', () => {\n      browser.get(URL);\n      waitForElement('lowerupper-pipe');\n      element(by.css('lowerupper-pipe input')).sendKeys('Hello World!');\n      expect(element.all(by.css('lowerupper-pipe pre')).get(0).getText())\n          .toEqual('\\'hello world!\\'');\n      expect(element.all(by.css('lowerupper-pipe pre')).get(1).getText())\n          .toEqual('\\'HELLO WORLD!\\'');\n    });\n  });\n});\n"]}