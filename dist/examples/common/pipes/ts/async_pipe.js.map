{"version":3,"file":"async_pipe.js","sourceRoot":"","sources":["../../../../../packages/examples/common/pipes/ts/async_pipe.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;AAEH,wCAAwC;AACxC,gDAA2C;AAG3C,8BAA8B;AAS9B,IAAa,yBAAyB,GAAtC;IAME;QALA,aAAQ,GAAyB,IAAI,CAAC;QACtC,YAAO,GAAY,KAAK,CAAC;QAEjB,YAAO,GAAkB,IAAI,CAAC;QAEtB,IAAI,CAAC,KAAK,EAAE,CAAC;IAAC,CAAC;IAE/B,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,OAAO,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,OAAO;QACL,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAS,CAAC,WAAW,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC;IACH,CAAC;CACF,CAAA;AArBY,yBAAyB;IARrC,gBAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,QAAQ,EAAE;;;;SAIH;KACR,CAAC;GACW,yBAAyB,CAqBrC;AArBY,8DAAyB;AAsBtC,gBAAgB;AAEhB,iCAAiC;AAKjC,IAAa,4BAA4B,GAAzC;IAPA,gBAAgB;IAEhB,iCAAiC;IACjC;QAKE,SAAI,GAAG,IAAI,uBAAU,CAAS,CAAC,QAA4B;YACzD,WAAW,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;CAAA,CAAA;AAJY,4BAA4B;IAJxC,gBAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,QAAQ,EAAE,oEAAoE;KAC/E,CAAC;GACW,4BAA4B,CAIxC;AAJY,oEAA4B;AAKzC,gBAAgB;AAEhB,kGAAkG;AAClG,mGAAmG;AACnG,cAAc;AACd,qBAAqB,EAAY,EAAE,KAAa;IAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;IAC1B,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC;QACvB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC7B,CAAC;IACD,QAAQ,CAAC,GAAG,CACR,QAAQ,MAAM,CAAC,WAAW,CAAC,cAAa,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,SAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscriber} from 'rxjs/Subscriber';\n\n// #docregion AsyncPipePromise\n@Component({\n  selector: 'async-promise-pipe',\n  template: `<div>\n    <code>promise|async</code>: \n    <button (click)=\"clicked()\">{{ arrived ? 'Reset' : 'Resolve' }}</button>\n    <span>Wait for it... {{ greeting | async }}</span>\n  </div>`\n})\nexport class AsyncPromisePipeComponent {\n  greeting: Promise<string>|null = null;\n  arrived: boolean = false;\n\n  private resolve: Function|null = null;\n\n  constructor() { this.reset(); }\n\n  reset() {\n    this.arrived = false;\n    this.greeting = new Promise<string>((resolve, reject) => { this.resolve = resolve; });\n  }\n\n  clicked() {\n    if (this.arrived) {\n      this.reset();\n    } else {\n      this.resolve !('hi there!');\n      this.arrived = true;\n    }\n  }\n}\n// #enddocregion\n\n// #docregion AsyncPipeObservable\n@Component({\n  selector: 'async-observable-pipe',\n  template: '<div><code>observable|async</code>: Time: {{ time | async }}</div>'\n})\nexport class AsyncObservablePipeComponent {\n  time = new Observable<string>((observer: Subscriber<string>) => {\n    setInterval(() => observer.next(new Date().toString()), 1000);\n  });\n}\n// #enddocregion\n\n// For some reason protractor hangs on setInterval. So we will run outside of angular zone so that\n// protractor will not see us. Also we want to have this outside the docregion so as not to confuse\n// the reader.\nfunction setInterval(fn: Function, delay: number) {\n  const zone = Zone.current;\n  let rootZone = zone;\n  while (rootZone.parent) {\n    rootZone = rootZone.parent;\n  }\n  rootZone.run(\n      () => { window.setInterval(function() { zone.run(fn, this, arguments as any); }, delay); });\n}\n"]}