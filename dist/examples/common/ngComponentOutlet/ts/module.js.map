{"version":3,"file":"module.js","sourceRoot":"","sources":["../../../../../packages/examples/common/ngComponentOutlet/ts/module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {Compiler, Component, Injectable, Injector, NgModule, NgModuleFactory, ReflectiveInjector} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n\n// #docregion SimpleExample\n@Component({selector: 'hello-world', template: 'Hello World!'})\nclass HelloWorld {\n}\n\n@Component({\n  selector: 'ng-component-outlet-simple-example',\n  template: `<ng-container *ngComponentOutlet=\"HelloWorld\"></ng-container>`\n})\nclass NgTemplateOutletSimpleExample {\n  // This field is necessary to expose HelloWorld to the template.\n  HelloWorld = HelloWorld;\n}\n// #enddocregion\n\n// #docregion CompleteExample\n@Injectable()\nclass Greeter {\n  suffix = '!';\n}\n\n@Component({\n  selector: 'complete-component',\n  template: `Complete: <ng-content></ng-content> <ng-content></ng-content>{{ greeter.suffix }}`\n})\nclass CompleteComponent {\n  constructor(public greeter: Greeter) {}\n}\n\n@Component({\n  selector: 'ng-component-outlet-complete-example',\n  template: `\n    <ng-container *ngComponentOutlet=\"CompleteComponent; \n                                      injector: myInjector; \n                                      content: myContent\"></ng-container>`\n})\nclass NgTemplateOutletCompleteExample {\n  // This field is necessary to expose CompleteComponent to the template.\n  CompleteComponent = CompleteComponent;\n  myInjector: Injector;\n\n  myContent = [[document.createTextNode('Ahoj')], [document.createTextNode('Svet')]];\n\n  constructor(injector: Injector) {\n    this.myInjector = ReflectiveInjector.resolveAndCreate([Greeter], injector);\n  }\n}\n// #enddocregion\n\n// #docregion NgModuleFactoryExample\n@Component({selector: 'other-module-component', template: `Other Module Component!`})\nclass OtherModuleComponent {\n}\n\n@Component({\n  selector: 'ng-component-outlet-other-module-example',\n  template: `\n    <ng-container *ngComponentOutlet=\"OtherModuleComponent;\n                                      ngModuleFactory: myModule;\"></ng-container>`\n})\nclass NgTemplateOutletOtherModuleExample {\n  // This field is necessary to expose OtherModuleComponent to the template.\n  OtherModuleComponent = OtherModuleComponent;\n  myModule: NgModuleFactory<any>;\n\n  constructor(compiler: Compiler) { this.myModule = compiler.compileModuleSync(OtherModule); }\n}\n// #enddocregion\n\n\n@Component({\n  selector: 'example-app',\n  template: `<ng-component-outlet-simple-example></ng-component-outlet-simple-example>\n             <hr/>\n             <ng-component-outlet-complete-example></ng-component-outlet-complete-example>\n             <hr/>\n             <ng-component-outlet-other-module-example></ng-component-outlet-other-module-example>`\n})\nclass ExampleApp {\n}\n\n@NgModule({\n  imports: [BrowserModule],\n  declarations: [\n    ExampleApp, NgTemplateOutletSimpleExample, NgTemplateOutletCompleteExample,\n    NgTemplateOutletOtherModuleExample, HelloWorld, CompleteComponent\n  ],\n  entryComponents: [HelloWorld, CompleteComponent],\n  bootstrap: [ExampleApp]\n})\nexport class AppModule {\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OtherModuleComponent],\n  entryComponents: [OtherModuleComponent]\n})\nexport class OtherModule {\n}"]}