{"version":3,"file":"fake_async.js","sourceRoot":"","sources":["../../../../packages/examples/testing/ts/fake_async.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,mDAA4E;AAG5E,mBAAmB;AACnB,QAAQ,CAAC,WAAW,EAAE;IACpB,EAAE,CAAC,gCAAgC,EAAO,mBAAS,CAAC;QAC/C,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,UAAU,CAAC,QAAQ,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,cAAI,CAAC,EAAE,CAAC,CAAC;QACT,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,cAAI,CAAC,EAAE,CAAC,CAAC;QACT,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC;AACH,gBAAgB;AAEhB,qBAAqB;AACrB,QAAQ,CAAC,WAAW,EAAE;IACpB,EAAE,CAAC,yBAAyB,EAAO,mBAAS,CAAC;QACxC,+DAA+D;QAC/D,0DAA0D;QAC1D,4CAA4C;QAC5C,WAAW,CAAC,QAAO,CAAC,EAAE,GAAG,CAAC,CAAC;QAE3B,+BAA+B;QAC/B,8BAAoB,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC;AACH,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {discardPeriodicTasks, fakeAsync, tick} from '@angular/core/testing';\n\n\n// #docregion basic\ndescribe('this test', () => {\n  it('looks async but is synchronous', <any>fakeAsync((): void => {\n       let flag = false;\n       setTimeout(() => { flag = true; }, 100);\n       expect(flag).toBe(false);\n       tick(50);\n       expect(flag).toBe(false);\n       tick(50);\n       expect(flag).toBe(true);\n     }));\n});\n// #enddocregion\n\n// #docregion pending\ndescribe('this test', () => {\n  it('aborts a periodic timer', <any>fakeAsync((): void => {\n       // This timer is scheduled but doesn't need to complete for the\n       // test to pass (maybe it's a timeout for some operation).\n       // Leaving it will cause the test to fail...\n       setInterval(() => {}, 100);\n\n       // Unless we clean it up first.\n       discardPeriodicTasks();\n     }));\n});\n// #enddocregion\n"]}