{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../../packages/examples/testing/ts/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,IAAI,EAAO,CAAC;AACZ;CAAkB;AAClB;CAA2C;AAE3C,wBAAwB;AACxB,QAAQ,CAAC,gBAAgB,EAAE;IACzB,EAAE,CAAC,gBAAgB,EAAE;QACI,kBAAkB;IACtB,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AACH,gBAAgB;AAEhB,uBAAuB;AACvB,+CAA+C;AAC/C,SAAS,CAAC,gBAAgB,EAAE;IAC1B,EAAE,CAAC,YAAY,EAAE;QACI,sBAAsB;IAC1B,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC;AACH,QAAQ,CAAC,mBAAmB,EAAE;IAC5B,EAAE,CAAC,iBAAiB,EAAE,QAAQ,MAAM,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC;AACH,gBAAgB;AAEhB,uBAAuB;AACvB,SAAS,CACL,gBAAgB,EAAE,QAAQ,EAAE,CAAC,YAAY,EAAE,QAAQ,MAAM,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/F,QAAQ,CAAC,mBAAmB,EAAE;IAC5B,EAAE,CAAC,iBAAiB,EAAE;QACI,sBAAsB;IAC1B,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC;AACH,gBAAgB;AAEhB,iBAAiB;AACjB,QAAQ,CAAC,gBAAgB,EAAE;IACzB,+CAA+C;IAC/C,GAAG,CAAC,YAAY,EAAE;QACI,sBAAsB;IAC1B,CAAC,CAAC,CAAC;IACrB,EAAE,CAAC,kBAAkB,EAAE,QAAQ,MAAM,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC;AACH,gBAAgB;AAEhB,iBAAiB;AACjB,QAAQ,CAAC,gBAAgB,EAAE;IACzB,GAAG,CAAC,YAAY,EAAE,QAAQ,MAAM,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,EAAE,CAAC,kBAAkB,EAAE;QACI,sBAAsB;IAC1B,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AACH,gBAAgB;AAEhB,wBAAwB;AACxB,QAAQ,CAAC,gBAAgB,EAAE;IACzB,UAAU,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,EAAE,CAAC,aAAa,EAAE;QACI,yBAAyB;IAC7B,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,gBAAgB;AAEhB,uBAAuB;AACvB,QAAQ,CAAC,gBAAgB,EAAE;IACzB,SAAS,CAAC,CAAC,IAAc,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAM,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,EAAE,CAAC,aAAa,EAAE;QACI,qDAAqD;QACrD,2CAA2C;IAC/C,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC;AACH,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nlet db: any;\nclass MyService {}\nclass MyMockService implements MyService {}\n\n// #docregion describeIt\ndescribe('some component', () => {\n  it('does something', () => {\n                           // This is a test.\n                       });\n});\n// #enddocregion\n\n// #docregion fdescribe\n/* tslint:disable-next-line:no-jasmine-focus */\nfdescribe('some component', () => {\n  it('has a test', () => {\n                       // This test will run.\n                   });\n});\ndescribe('another component', () => {\n  it('also has a test', () => { throw 'This test will not run.'; });\n});\n// #enddocregion\n\n// #docregion xdescribe\nxdescribe(\n    'some component', () => { it('has a test', () => { throw 'This test will not run.'; }); });\ndescribe('another component', () => {\n  it('also has a test', () => {\n                            // This test will run.\n                        });\n});\n// #enddocregion\n\n// #docregion fit\ndescribe('some component', () => {\n  /* tslint:disable-next-line:no-jasmine-focus */\n  fit('has a test', () => {\n                        // This test will run.\n                    });\n  it('has another test', () => { throw 'This test will not run.'; });\n});\n// #enddocregion\n\n// #docregion xit\ndescribe('some component', () => {\n  xit('has a test', () => { throw 'This test will not run.'; });\n  it('has another test', () => {\n                             // This test will run.\n                         });\n});\n// #enddocregion\n\n// #docregion beforeEach\ndescribe('some component', () => {\n  beforeEach(() => { db.connect(); });\n  it('uses the db', () => {\n                        // Database is connected.\n                    });\n});\n// #enddocregion\n\n// #docregion afterEach\ndescribe('some component', () => {\n  afterEach((done: Function) => { db.reset().then((_: any) => done()); });\n  it('uses the db', () => {\n                        // This test can leave the database in a dirty state.\n                        // The afterEach will ensure it gets reset.\n                    });\n});\n// #enddocregion\n"]}