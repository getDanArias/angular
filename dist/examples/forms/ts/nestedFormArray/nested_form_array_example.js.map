{"version":3,"file":"nested_form_array_example.js","sourceRoot":"","sources":["../../../../../packages/examples/forms/ts/nestedFormArray/nested_form_array_example.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;AAEH,gCAAgC;AAChC,uBAAuB;AACvB,wCAAwC;AACxC,0CAAiE;AAkBjE,IAAa,eAAe,GAA5B;IAhBA;QAiBE,SAAI,GAAG,IAAI,iBAAS,CAAC;YACnB,MAAM,EAAE,IAAI,iBAAS,CAAC;gBACpB,IAAI,mBAAW,CAAC,IAAI,CAAC;gBACrB,IAAI,mBAAW,CAAC,IAAI,CAAC;aACtB,CAAC;SACH,CAAC,CAAC;IAYL,CAAC;IAVC,IAAI,MAAM,KAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAc,CAAC,CAAC,CAAC;IAExE,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,mBAAW,EAAE,CAAC,CAAC,CAAC,CAAC;IAElD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAE,eAAe;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAI,2BAA2B;IAC9D,CAAC;IAED,SAAS,KAAK,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CACvD,CAAA;AAlBY,eAAe;IAhB3B,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE;;;;;;;;;;;;GAYT;KACF,CAAC;GACW,eAAe,CAkB3B;AAlBY,0CAAe;AAmB5B,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/* tslint:disable:no-console  */\n// #docregion Component\nimport {Component} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'example-app',\n  template: `\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cities.controls; index as i\">\n          <input [formControlName]=\"i\" placeholder=\"City\">\n        </div>\n      </div>\n      <button>Submit</button>\n    </form>\n    \n    <button (click)=\"addCity()\">Add City</button>\n    <button (click)=\"setPreset()\">Set preset</button>\n  `,\n})\nexport class NestedFormArray {\n  form = new FormGroup({\n    cities: new FormArray([\n      new FormControl('SF'),\n      new FormControl('NY'),\n    ]),\n  });\n\n  get cities(): FormArray { return this.form.get('cities') as FormArray; }\n\n  addCity() { this.cities.push(new FormControl()); }\n\n  onSubmit() {\n    console.log(this.cities.value);  // ['SF', 'NY']\n    console.log(this.form.value);    // { cities: ['SF', 'NY'] }\n  }\n\n  setPreset() { this.cities.patchValue(['LA', 'MTV']); }\n}\n// #enddocregion\n"]}