{"version":3,"file":"form_builder_spec.js","sourceRoot":"","sources":["../../../../../../packages/examples/forms/ts/formBuilder/e2e_test/form_builder_spec.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,2CAAoE;AACpE,2DAAmE;AAEnE,QAAQ,CAAC,qBAAqB,EAAE;IAC9B,SAAS,CAAC,gCAAqB,CAAC,CAAC;IACjC,IAAI,MAA0B,CAAC;IAC/B,IAAI,UAA8B,CAAC;IAEnC,UAAU,CAAC;QACT,oBAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,MAAM,GAAG,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACtC,UAAU,GAAG,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE;QACxC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QAExE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementArrayFinder, browser, by, element} from 'protractor';\nimport {verifyNoBrowserErrors} from '../../../../_common/e2e_util';\n\ndescribe('formBuilder example', () => {\n  afterEach(verifyNoBrowserErrors);\n  let inputs: ElementArrayFinder;\n  let paragraphs: ElementArrayFinder;\n\n  beforeEach(() => {\n    browser.get('/forms/ts/formBuilder/index.html');\n    inputs = element.all(by.css('input'));\n    paragraphs = element.all(by.css('p'));\n  });\n\n  it('should populate the UI with initial values', () => {\n    expect(inputs.get(0).getAttribute('value')).toEqual('Nancy');\n    expect(inputs.get(1).getAttribute('value')).toEqual('Drew');\n  });\n\n  it('should update the validation status', () => {\n    expect(paragraphs.get(1).getText()).toEqual('Validation status: VALID');\n\n    inputs.get(0).click();\n    inputs.get(0).clear();\n    inputs.get(0).sendKeys('a');\n    expect(paragraphs.get(1).getText()).toEqual('Validation status: INVALID');\n  });\n\n});\n"]}