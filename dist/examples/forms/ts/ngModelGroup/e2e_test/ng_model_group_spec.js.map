{"version":3,"file":"ng_model_group_spec.js","sourceRoot":"","sources":["../../../../../../packages/examples/forms/ts/ngModelGroup/e2e_test/ng_model_group_spec.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,2CAAoE;AACpE,2DAAmE;AAEnE,QAAQ,CAAC,sBAAsB,EAAE;IAC/B,SAAS,CAAC,gCAAqB,CAAC,CAAC;IACjC,IAAI,MAA0B,CAAC;IAC/B,IAAI,OAA2B,CAAC;IAEhC,UAAU,CAAC;QACT,oBAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACjD,MAAM,GAAG,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACtC,OAAO,GAAG,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAE5B,MAAM,CAAC,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE;QACxD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QACvB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementArrayFinder, browser, by, element} from 'protractor';\nimport {verifyNoBrowserErrors} from '../../../../_common/e2e_util';\n\ndescribe('ngModelGroup example', () => {\n  afterEach(verifyNoBrowserErrors);\n  let inputs: ElementArrayFinder;\n  let buttons: ElementArrayFinder;\n\n  beforeEach(() => {\n    browser.get('/forms/ts/ngModelGroup/index.html');\n    inputs = element.all(by.css('input'));\n    buttons = element.all(by.css('button'));\n  });\n\n  it('should populate the UI with initial values', () => {\n    expect(inputs.get(0).getAttribute('value')).toEqual('Nancy');\n    expect(inputs.get(1).getAttribute('value')).toEqual('Drew');\n  });\n\n  it('should show the error when name is invalid', () => {\n    inputs.get(0).click();\n    inputs.get(0).clear();\n    inputs.get(0).sendKeys('a');\n\n    expect(element(by.css('p')).getText()).toEqual('Name is invalid.');\n  });\n\n  it('should set the value when changing the domain model', () => {\n    buttons.get(1).click();\n    expect(inputs.get(0).getAttribute('value')).toEqual('Bess');\n    expect(inputs.get(1).getAttribute('value')).toEqual('Marvin');\n  });\n\n});\n"]}