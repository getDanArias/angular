{"version":3,"file":"simple_form_control_spec.js","sourceRoot":"","sources":["../../../../../../packages/examples/forms/ts/simpleFormControl/e2e_test/simple_form_control_spec.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,2CAA+D;AAC/D,2DAAmE;AAEnE,QAAQ,CAAC,2BAA2B,EAAE;IACpC,SAAS,CAAC,gCAAqB,CAAC,CAAC;IAEjC,QAAQ,CAAC,YAAY,EAAE;QACrB,IAAI,KAAoB,CAAC;QACzB,IAAI,MAAqB,CAAC;QAC1B,IAAI,OAAsB,CAAC;QAE3B,UAAU,CAAC;YACT,oBAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,KAAK,GAAG,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,MAAM,GAAG,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC5C,OAAO,GAAG,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE;YACtD,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACrD,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE;YAC1C,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAErB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE;YAC3C,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAE9D,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpB,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE;YAC1C,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementFinder, browser, by, element} from 'protractor';\nimport {verifyNoBrowserErrors} from '../../../../_common/e2e_util';\n\ndescribe('simpleFormControl example', () => {\n  afterEach(verifyNoBrowserErrors);\n\n  describe('index view', () => {\n    let input: ElementFinder;\n    let valueP: ElementFinder;\n    let statusP: ElementFinder;\n\n    beforeEach(() => {\n      browser.get('/forms/ts/simpleFormControl/index.html');\n      input = element(by.css('input'));\n      valueP = element(by.css('p:first-of-type'));\n      statusP = element(by.css('p:last-of-type'));\n    });\n\n    it('should populate the form control value in the DOM', () => {\n      expect(input.getAttribute('value')).toEqual('value');\n      expect(valueP.getText()).toEqual('Value: value');\n    });\n\n    it('should update the value as user types', () => {\n      input.click();\n      input.sendKeys('s!');\n\n      expect(valueP.getText()).toEqual('Value: values!');\n    });\n\n    it('should show the correct validity state', () => {\n      expect(statusP.getText()).toEqual('Validation status: VALID');\n\n      input.click();\n      input.clear();\n      input.sendKeys('a');\n      expect(statusP.getText()).toEqual('Validation status: INVALID');\n    });\n\n    it('should set the value programmatically', () => {\n      element(by.css('button')).click();\n      expect(input.getAttribute('value')).toEqual('new value');\n    });\n\n  });\n});\n"]}