{"version":3,"file":"simple_form_group_spec.js","sourceRoot":"","sources":["../../../../../../packages/examples/forms/ts/simpleFormGroup/e2e_test/simple_form_group_spec.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,2CAA+D;AAC/D,2DAAmE;AAEnE,QAAQ,CAAC,yBAAyB,EAAE;IAClC,SAAS,CAAC,gCAAqB,CAAC,CAAC;IAEjC,QAAQ,CAAC,YAAY,EAAE;QACrB,IAAI,UAAyB,CAAC;QAC9B,IAAI,SAAwB,CAAC;QAE7B,UAAU,CAAC;YACT,oBAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,UAAU,GAAG,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;YAC1D,SAAS,GAAG,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE;YACvD,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC1D,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE;YACnD,UAAU,CAAC,KAAK,EAAE,CAAC;YACnB,UAAU,CAAC,KAAK,EAAE,CAAC;YACnB,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAEzB,MAAM,CAAC,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE;YAC1C,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YACvD,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC3D,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementFinder, browser, by, element} from 'protractor';\nimport {verifyNoBrowserErrors} from '../../../../_common/e2e_util';\n\ndescribe('formControlName example', () => {\n  afterEach(verifyNoBrowserErrors);\n\n  describe('index view', () => {\n    let firstInput: ElementFinder;\n    let lastInput: ElementFinder;\n\n    beforeEach(() => {\n      browser.get('/forms/ts/simpleFormGroup/index.html');\n      firstInput = element(by.css('[formControlName=\"first\"]'));\n      lastInput = element(by.css('[formControlName=\"last\"]'));\n    });\n\n    it('should populate the form control values in the DOM', () => {\n      expect(firstInput.getAttribute('value')).toEqual('Nancy');\n      expect(lastInput.getAttribute('value')).toEqual('Drew');\n    });\n\n    it('should show the error when the form is invalid', () => {\n      firstInput.click();\n      firstInput.clear();\n      firstInput.sendKeys('a');\n\n      expect(element(by.css('div')).getText()).toEqual('Name is too short.');\n    });\n\n    it('should set the value programmatically', () => {\n      element(by.css('button:not([type=\"submit\"])')).click();\n      expect(firstInput.getAttribute('value')).toEqual('Carson');\n      expect(lastInput.getAttribute('value')).toEqual('Drew');\n    });\n\n  });\n});\n"]}