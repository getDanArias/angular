{"version":3,"file":"reactive_radio_button_spec.js","sourceRoot":"","sources":["../../../../../../packages/examples/forms/ts/reactiveRadioButtons/e2e_test/reactive_radio_button_spec.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,2CAAoE;AACpE,2DAAmE;AAEnE,QAAQ,CAAC,sBAAsB,EAAE;IAC/B,SAAS,CAAC,gCAAqB,CAAC,CAAC;IACjC,IAAI,MAA0B,CAAC;IAE/B,UAAU,CAAC;QACT,oBAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QACzD,MAAM,GAAG,oBAAO,CAAC,GAAG,CAAC,eAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE5D,MAAM,CAAC,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE;QAC3D,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAEtB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE5D,MAAM,CAAC,oBAAO,CAAC,eAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementArrayFinder, browser, by, element} from 'protractor';\nimport {verifyNoBrowserErrors} from '../../../../_common/e2e_util';\n\ndescribe('radioButtons example', () => {\n  afterEach(verifyNoBrowserErrors);\n  let inputs: ElementArrayFinder;\n\n  beforeEach(() => {\n    browser.get('/forms/ts/reactiveRadioButtons/index.html');\n    inputs = element.all(by.css('input'));\n  });\n\n  it('should populate the UI with initial values', () => {\n    expect(inputs.get(0).getAttribute('checked')).toEqual(null);\n    expect(inputs.get(1).getAttribute('checked')).toEqual('true');\n    expect(inputs.get(2).getAttribute('checked')).toEqual(null);\n\n    expect(element(by.css('p')).getText()).toEqual('Form value: { \"food\": \"lamb\" }');\n  });\n\n  it('update model and other buttons as the UI value changes', () => {\n    inputs.get(0).click();\n\n    expect(inputs.get(0).getAttribute('checked')).toEqual('true');\n    expect(inputs.get(1).getAttribute('checked')).toEqual(null);\n    expect(inputs.get(2).getAttribute('checked')).toEqual(null);\n\n    expect(element(by.css('p')).getText()).toEqual('Form value: { \"food\": \"beef\" }');\n  });\n});\n"]}