{"version":3,"file":"module.js","sourceRoot":"","sources":["../../../../../packages/examples/upgrade/static/ts/module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Component, Directive, DoCheck, ElementRef, EventEmitter, Inject, Injectable, Injector, Input, NgModule, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {UpgradeComponent, UpgradeModule, downgradeComponent, downgradeInjectable} from '@angular/upgrade/static';\n\ninterface Hero {\n  name: string;\n  description: string;\n}\n\n// #docregion Angular Stuff\n// #docregion ng2-heroes\n// This Angular component will be \"downgraded\" to be used in AngularJS\n@Component({\n  selector: 'ng2-heroes',\n  // This template uses the upgraded `ng1-hero` component\n  // Note that because its element is compiled by Angular we must use camelCased attribute names\n  template: `<header><ng-content selector=\"h1\"></ng-content></header>\n             <ng-content selector=\".extra\"></ng-content>\n             <div *ngFor=\"let hero of heroes\">\n               <ng1-hero [hero]=\"hero\" (onRemove)=\"removeHero.emit(hero)\"><strong>Super Hero</strong></ng1-hero>\n             </div>\n             <button (click)=\"addHero.emit()\">Add Hero</button>`,\n})\nclass Ng2HeroesComponent {\n  @Input() heroes: Hero[];\n  @Output() addHero = new EventEmitter();\n  @Output() removeHero = new EventEmitter();\n}\n// #enddocregion\n\n// #docregion ng2-heroes-service\n// This Angular service will be \"downgraded\" to be used in AngularJS\n@Injectable()\nclass HeroesService {\n  heroes: Hero[] = [\n    {name: 'superman', description: 'The man of steel'},\n    {name: 'wonder woman', description: 'Princess of the Amazons'},\n    {name: 'thor', description: 'The hammer-wielding god'}\n  ];\n\n  // #docregion use-ng1-upgraded-service\n  constructor(@Inject('titleCase') titleCase: (v: string) => string) {\n    // Change all the hero names to title case, using the \"upgraded\" AngularJS service\n    this.heroes.forEach((hero: Hero) => hero.name = titleCase(hero.name));\n  }\n  // #enddocregion\n\n  addHero() {\n    this.heroes =\n        this.heroes.concat([{name: 'Kamala Khan', description: 'Epic shape-shifting healer'}]);\n  }\n\n  removeHero(hero: Hero) { this.heroes = this.heroes.filter((item: Hero) => item !== hero); }\n}\n// #enddocregion\n\n// #docregion ng1-hero-wrapper\n// This Angular directive will act as an interface to the \"upgraded\" AngularJS component\n@Directive({selector: 'ng1-hero'})\nclass Ng1HeroComponentWrapper extends UpgradeComponent implements OnInit, OnChanges, DoCheck,\n    OnDestroy {\n  // The names of the input and output properties here must match the names of the\n  // `<` and `&` bindings in the AngularJS component that is being wrapped\n  @Input() hero: Hero;\n  @Output() onRemove: EventEmitter<void>;\n  constructor(@Inject(ElementRef) elementRef: ElementRef, @Inject(Injector) injector: Injector) {\n    // We must pass the name of the directive as used by AngularJS to the super\n    super('ng1Hero', elementRef, injector);\n  }\n\n  // For this class to work when compiled with AoT, we must implement these lifecycle hooks\n  // because the AoT compiler will not realise that the super class implements them\n  ngOnInit() { super.ngOnInit(); }\n\n  ngOnChanges(changes: SimpleChanges) { super.ngOnChanges(changes); }\n\n  ngDoCheck() { super.ngDoCheck(); }\n\n  ngOnDestroy() { super.ngOnDestroy(); }\n}\n// #enddocregion\n\n// #docregion ng2-module\n// This NgModule represents the Angular pieces of the application\n@NgModule({\n  declarations: [Ng2HeroesComponent, Ng1HeroComponentWrapper],\n  providers: [\n    HeroesService,\n    // #docregion upgrade-ng1-service\n    // Register an Angular provider whose value is the \"upgraded\" AngularJS service\n    {provide: 'titleCase', useFactory: (i: any) => i.get('titleCase'), deps: ['$injector']}\n    // #enddocregion\n  ],\n  // All components that are to be \"downgraded\" must be declared as `entryComponents`\n  entryComponents: [Ng2HeroesComponent],\n  // We must import `UpgradeModule` to get access to the AngularJS core services\n  imports: [BrowserModule, UpgradeModule]\n})\nclass Ng2AppModule {\n  ngDoBootstrap() { /* this is a placeholder to stop the boostrapper from complaining */\n  }\n}\n//Â #enddocregion\n// #enddocregion\n\n\n// #docregion Angular 1 Stuff\n// #docregion ng1-module\n// This Angular 1 module represents the AngularJS pieces of the application\ndeclare var angular: ng.IAngularStatic;\nconst ng1AppModule = angular.module('ng1AppModule', []);\n// #enddocregion\n\n// #docregion ng1-hero\n// This AngularJS component will be \"upgraded\" to be used in Angular\nng1AppModule.component('ng1Hero', {\n  bindings: {hero: '<', onRemove: '&'},\n  transclude: true,\n  template: `<div class=\"title\" ng-transclude></div>\n             <h2>{{ $ctrl.hero.name }}</h2>\n             <p>{{ $ctrl.hero.description }}</p>\n             <button ng-click=\"$ctrl.onRemove()\">Remove</button>`\n});\n// #enddocregion\n\n// #docregion ng1-title-case-service\n// This AngularJS service will be \"upgraded\" to be used in Angular\nng1AppModule.factory(\n    'titleCase',\n    () => (value: string) => value.replace(/((^|\\s)[a-z])/g, (_, c) => c.toUpperCase()));\n// #enddocregion\n\n// #docregion downgrade-ng2-heroes-service\n// Register an AngularJS service, whose value is the \"downgraded\" Angular injectable.\nng1AppModule.factory('heroesService', downgradeInjectable(HeroesService));\n// #enddocregion\n\n// #docregion ng2-heroes-wrapper\n// This is directive will act as the interface to the \"downgraded\"  Angular component\nng1AppModule.directive('ng2Heroes', downgradeComponent({component: Ng2HeroesComponent}));\n// #enddocregion\n\n// #docregion example-app\n// This is our top level application component\nng1AppModule.component('exampleApp', {\n  // We inject the \"downgraded\" HeroesService into this AngularJS component\n  // (We don't need the `HeroesService` type for AngularJS DI - it just helps with TypeScript\n  // compilation)\n  controller: [\n    'heroesService', function(heroesService: HeroesService) { this.heroesService = heroesService; }\n  ],\n  // This template make use of the downgraded `ng2-heroes` component\n  // Note that because its element is compiled by AngularJS we must use kebab-case attributes for\n  // inputs and outputs\n  template: `<link rel=\"stylesheet\" href=\"./styles.css\">\n             <ng2-heroes [heroes]=\"$ctrl.heroesService.heroes\" (add-hero)=\"$ctrl.heroesService.addHero()\" (remove-hero)=\"$ctrl.heroesService.removeHero($event)\">\n               <h1>Heroes</h1>\n               <p class=\"extra\">There are {{ $ctrl.heroesService.heroes.length }} heroes.</p>\n             </ng2-heroes>`\n});\n//Â #enddocregion\n// #enddocregion\n\n\n// #docregion bootstrap\n// First we bootstrap the Angular HybridModule\n// (We are using the dynamic browser platform as this example has not been compiled AoT)\nplatformBrowserDynamic().bootstrapModule(Ng2AppModule).then(ref => {\n  // Once Angular bootstrap is complete then we bootstrap the AngularJS module\n  const upgrade = ref.injector.get(UpgradeModule) as UpgradeModule;\n  upgrade.bootstrap(document.body, [ng1AppModule.name]);\n});\n// #enddocregion\n"]}