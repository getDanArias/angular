{"version":3,"file":"animation_example.js","sourceRoot":"","sources":["../../../../../../packages/examples/core/animation/ts/dsl/animation_example.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;AAEH,uBAAuB;AACvB,oDAA+E;AAC/E,wCAAkD;AAClD,qEAA6E;AAiC7E,IAAa,YAAY,GAAzB;IAEE,gBAAgB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAClC,MAAM,KAAK,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,CAAC,CAAC;IAC/C,QAAQ,KAAK,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,CAAC,CAAC;CACnD,CAAA;AALY,YAAY;IA/BxB,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,CAAC;;;;;;;;;;;GAWR,CAAC;QACF,UAAU,EAAE,CAAC,oBAAO,CAChB,WAAW,EACX;gBACE,kBAAK,CAAC,iBAAiB,EAAE,kBAAK,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAC,CAAC,CAAC;gBACxF,kBAAK,CAAC,UAAU,EAAE,kBAAK,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;gBAC7E,uBAAU,CACN,wBAAwB,EAAE,CAAC,oBAAO,CAAC,GAAG,EAAE,kBAAK,CAAC,EAAC,MAAM,EAAE,OAAO,EAAC,CAAC,CAAC,EAAE,oBAAO,CAAC,GAAG,CAAC,CAAC,CAAC;aACtF,CAAC,CAAC;QACP,QAAQ,EAAE;;;;;;;GAOT;KACF,CAAC;GACW,YAAY,CAKxB;AALY,oCAAY;AASzB,IAAa,SAAS,GAAtB;CACC,CAAA;AADY,SAAS;IAFrB,eAAQ,CACL,EAAC,OAAO,EAAE,CAAC,oCAAuB,CAAC,EAAE,YAAY,EAAE,CAAC,YAAY,CAAC,EAAE,SAAS,EAAE,CAAC,YAAY,CAAC,EAAC,CAAC;GACrF,SAAS,CACrB;AADY,8BAAS;AAGtB,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// #docregion Component\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Component, NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@Component({\n  selector: 'example-app',\n  styles: [`\n    .toggle-container {\n      background-color:white;\n      border:10px solid black;\n      width:200px;\n      text-align:center;\n      line-height:100px;\n      font-size:50px;\n      box-sizing:border-box;\n      overflow:hidden;\n    }\n  `],\n  animations: [trigger(\n      'openClose',\n      [\n        state('collapsed, void', style({height: '0px', color: 'maroon', borderColor: 'maroon'})),\n        state('expanded', style({height: '*', borderColor: 'green', color: 'green'})),\n        transition(\n            'collapsed <=> expanded', [animate(500, style({height: '250px'})), animate(500)])\n      ])],\n  template: `\n    <button (click)=\"expand()\">Open</button>\n    <button (click)=\"collapse()\">Closed</button>\n    <hr />\n    <div class=\"toggle-container\" [@openClose]=\"stateExpression\">\n      Look at this box\n    </div>\n  `\n})\nexport class MyExpandoCmp {\n  stateExpression: string;\n  constructor() { this.collapse(); }\n  expand() { this.stateExpression = 'expanded'; }\n  collapse() { this.stateExpression = 'collapsed'; }\n}\n\n@NgModule(\n    {imports: [BrowserAnimationsModule], declarations: [MyExpandoCmp], bootstrap: [MyExpandoCmp]})\nexport class AppModule {\n}\n\n// #enddocregion\n"]}