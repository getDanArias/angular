{"version":3,"file":"view_children_example.js","sourceRoot":"","sources":["../../../../../../packages/examples/core/di/ts/viewChildren/view_children_example.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;AAEH,uBAAuB;AACvB,wCAAkG;AAGlG,IAAa,IAAI,GAAjB;CAEC,CAAA;AADU;IAAR,YAAK,EAAE;gCAAY;AADT,IAAI;IADhB,gBAAS,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC;GACjB,IAAI,CAEhB;AAFY,oBAAI;AAgBjB,IAAa,gBAAgB,GAA7B;IAZA;QAcE,oBAAe,GAAW,EAAE,CAAC;QAE7B,eAAU,GAAG,KAAK,CAAC;IAYrB,CAAC;IAVC,IAAI,KAAK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;IAElC,eAAe;QACb,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,wBAAwB;QACtB,UAAU,CAAC,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxF,CAAC;CACF,CAAA;AAfqB;IAAnB,mBAAY,CAAC,IAAI,CAAC;+CAAwB;AADhC,gBAAgB;IAZ5B,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE;;;;;;;;GAQT;KACF,CAAC;GACW,gBAAgB,CAgB5B;AAhBY,4CAAgB;AAiB7B,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// #docregion Component\nimport {AfterViewInit, Component, Directive, Input, QueryList, ViewChildren} from '@angular/core';\n\n@Directive({selector: 'pane'})\nexport class Pane {\n  @Input() id: string;\n}\n\n@Component({\n  selector: 'example-app',\n  template: `\n    <pane id=\"1\"></pane>\n    <pane id=\"2\"></pane>\n    <pane id=\"3\" *ngIf=\"shouldShow\"></pane>\n    \n    <button (click)=\"show()\">Show 3</button>\n       \n    <div>panes: {{serializedPanes}}</div> \n  `,\n})\nexport class ViewChildrenComp implements AfterViewInit {\n  @ViewChildren(Pane) panes: QueryList<Pane>;\n  serializedPanes: string = '';\n\n  shouldShow = false;\n\n  show() { this.shouldShow = true; }\n\n  ngAfterViewInit() {\n    this.calculateSerializedPanes();\n    this.panes.changes.subscribe((r) => { this.calculateSerializedPanes(); });\n  }\n\n  calculateSerializedPanes() {\n    setTimeout(() => { this.serializedPanes = this.panes.map(p => p.id).join(', '); }, 0);\n  }\n}\n// #enddocregion\n"]}