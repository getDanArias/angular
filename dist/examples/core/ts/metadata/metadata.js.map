{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../../../../packages/examples/core/ts/metadata/metadata.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;;;;AAEH,wCAAoE;AAEpE;CAAwB;AAAA,CAAC;AAEzB,uBAAuB;AAEvB,IAAM,KAAK,GAAX;IAFA,uBAAuB;IACvB;QAEE,SAAI,GAAW,OAAO,CAAC;IACzB,CAAC;CAAA,CAAA;AAFK,KAAK;IADV,gBAAS,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAC,CAAC;GACtD,KAAK,CAEV;AACD,gBAAgB;AAEhB,8BAA8B;AAE9B,IAAM,IAAI,GAAV;IAEE,YAAgC,KAAa,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;CACvE,CAAA;AAHK,IAAI;IADT,gBAAS,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB,EAAC,CAAC;IAG7C,WAAA,gBAAS,CAAC,OAAO,CAAC,CAAA;GAF3B,IAAI,CAGT;AACD,gBAAgB;AAEhB,+BAA+B;AAE/B,IAAM,kBAAkB,GAAxB;IACE,YAA+B,IAAY;QACzC,uCAAuC;IACzC,CAAC;CACF,CAAA;AAJK,kBAAkB;IADvB,gBAAS,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC;IAEhB,WAAA,gBAAS,CAAC,MAAM,CAAC,CAAA;GAD1B,kBAAkB,CAIvB;AACD,gBAAgB;AAEhB,uBAAuB;AAEvB,IAAM,cAAc,GAApB;IACE;QACE,kBAAkB;IACpB,CAAC;CACF,CAAA;AAJK,cAAc;IADnB,gBAAS,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC;GACzB,cAAc,CAInB;AACD,gBAAgB;AAEhB,kBAAkB;AAElB,IAAM,SAAS,GAAf;IACE,SAAS,CAAC,CAAS,EAAE,IAAW,IAAI,MAAM,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;CAC9D,CAAA;AAFK,SAAS;IADd,WAAI,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC;GACpB,SAAS,CAEd;AACD,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Component, Directive, Pipe} from '@angular/core';\n\nclass CustomDirective {};\n\n// #docregion component\n@Component({selector: 'greet', template: 'Hello {{name}}!'})\nclass Greet {\n  name: string = 'World';\n}\n// #enddocregion\n\n// #docregion attributeFactory\n@Component({selector: 'page', template: 'Title: {{title}}'})\nclass Page {\n  title: string;\n  constructor(@Attribute('title') title: string) { this.title = title; }\n}\n// #enddocregion\n\n// #docregion attributeMetadata\n@Directive({selector: 'input'})\nclass InputAttrDirective {\n  constructor(@Attribute('type') type: string) {\n    // type would be 'text' in this example\n  }\n}\n// #enddocregion\n\n// #docregion directive\n@Directive({selector: 'input'})\nclass InputDirective {\n  constructor() {\n    // Add some logic.\n  }\n}\n// #enddocregion\n\n// #docregion pipe\n@Pipe({name: 'lowercase'})\nclass Lowercase {\n  transform(v: string, args: any[]) { return v.toLowerCase(); }\n}\n// #enddocregion\n"]}