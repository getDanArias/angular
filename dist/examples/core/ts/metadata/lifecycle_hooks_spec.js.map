{"version":3,"file":"lifecycle_hooks_spec.js","sourceRoot":"","sources":["../../../../../packages/examples/core/ts/metadata/lifecycle_hooks_spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, DoCheck, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, Type} from '@angular/core';\nimport {TestBed} from '@angular/core/testing';\n\nexport function main() {\n  describe('lifecycle hooks examples', () => {\n    it('should work with ngOnInit', () => {\n      // #docregion OnInit\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements OnInit {\n        ngOnInit() {\n          // ...\n        }\n      }\n      // #enddocregion\n\n      expect(createAndLogComponent(MyComponent)).toEqual([['ngOnInit', []]]);\n    });\n\n    it('should work with ngDoCheck', () => {\n      // #docregion DoCheck\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements DoCheck {\n        ngDoCheck() {\n          // ...\n        }\n      }\n      // #enddocregion\n\n      expect(createAndLogComponent(MyComponent)).toEqual([['ngDoCheck', []]]);\n    });\n\n    it('should work with ngAfterContentChecked', () => {\n      // #docregion AfterContentChecked\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements AfterContentChecked {\n        ngAfterContentChecked() {\n          // ...\n        }\n      }\n      // #enddocregion\n\n      expect(createAndLogComponent(MyComponent)).toEqual([['ngAfterContentChecked', []]]);\n    });\n\n    it('should work with ngAfterContentInit', () => {\n      // #docregion AfterContentInit\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements AfterContentInit {\n        ngAfterContentInit() {\n          // ...\n        }\n      }\n      // #enddocregion\n\n      expect(createAndLogComponent(MyComponent)).toEqual([['ngAfterContentInit', []]]);\n    });\n\n    it('should work with ngAfterViewChecked', () => {\n      // #docregion AfterViewChecked\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements AfterViewChecked {\n        ngAfterViewChecked() {\n          // ...\n        }\n      }\n      // #enddocregion\n\n      expect(createAndLogComponent(MyComponent)).toEqual([['ngAfterViewChecked', []]]);\n    });\n\n    it('should work with ngAfterViewInit', () => {\n      // #docregion AfterViewInit\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements AfterViewInit {\n        ngAfterViewInit() {\n          // ...\n        }\n      }\n      // #enddocregion\n\n      expect(createAndLogComponent(MyComponent)).toEqual([['ngAfterViewInit', []]]);\n    });\n\n    it('should work with ngOnDestroy', () => {\n      // #docregion OnDestroy\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements OnDestroy {\n        ngOnDestroy() {\n          // ...\n        }\n      }\n      // #enddocregion\n\n      expect(createAndLogComponent(MyComponent)).toEqual([['ngOnDestroy', []]]);\n    });\n\n    it('should work with ngOnChanges', () => {\n      // #docregion OnChanges\n      @Component({selector: 'my-cmp', template: `...`})\n      class MyComponent implements OnChanges {\n        @Input()\n        prop: number;\n\n        ngOnChanges(changes: SimpleChanges) {\n          // changes.prop contains the old and the new value...\n        }\n      }\n      // #enddocregion\n\n      const log = createAndLogComponent(MyComponent, ['prop']);\n      expect(log.length).toBe(1);\n      expect(log[0][0]).toBe('ngOnChanges');\n      const changes: SimpleChanges = log[0][1][0];\n      expect(changes['prop'].currentValue).toBe(true);\n    });\n  });\n\n  function createAndLogComponent(clazz: Type<any>, inputs: string[] = []): any[] {\n    const log: any[] = [];\n    createLoggingSpiesFromProto(clazz, log);\n\n    const inputBindings = inputs.map(input => `[${input}] = true`).join(' ');\n\n    @Component({template: `<my-cmp ${inputBindings}></my-cmp>`})\n    class ParentComponent {\n    }\n\n\n    const fixture = TestBed.configureTestingModule({declarations: [ParentComponent, clazz]})\n                        .createComponent(ParentComponent);\n    fixture.detectChanges();\n    fixture.destroy();\n    return log;\n  }\n\n  function createLoggingSpiesFromProto(clazz: Type<any>, log: any[]) {\n    const proto = clazz.prototype;\n    Object.keys(proto).forEach((method) => {\n      proto[method] = (...args: any[]) => { log.push([method, args]); };\n    });\n  }\n}\n"]}