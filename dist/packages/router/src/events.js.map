{"version":3,"sources":["../../../../packages/router/src/events.ts"],"names":[],"mappings":"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","file":"events.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Route} from './config';\nimport {RouterStateSnapshot} from './router_state';\n/**\n * \\@whatItDoes Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n * \n * Example:\n * \n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n */\nconstructor(\npublic id: number,\npublic url: string) {}\n}\n\nfunction RouterEvent_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRouterEvent.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRouterEvent.prototype.url;\n}\n\n/**\n * \\@whatItDoes Base for events tied to a specific `Route`, as opposed to events for the Router\n * lifecycle. `RouteEvent`s may be fired multiple times during a single navigation and will\n * always receive the `Route` they pertain to.\n * \n * Example:\n * \n * ```\n * class MyService {\n *   constructor(public router: Router, spinner: Spinner) {\n *     router.events.filter(e => e instanceof RouteEvent).subscribe(e => {\n *       if (e instanceof ChildActivationStart) {\n *         spinner.start(e.route);\n *       } else if (e instanceof ChildActivationEnd) {\n *         spinner.end(e.route);\n *       }\n *     });\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class RouteEvent {\n/**\n * @param {?} route\n */\nconstructor(\npublic route: Route) {}\n}\n\nfunction RouteEvent_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRouteEvent.prototype.route;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n * \n * \\@stable\n */\nexport class NavigationStart extends RouterEvent {\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return `NavigationStart(id: ${this.id}, url: '${this.url}')`; }\n}\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n * \n * \\@stable\n */\nexport class NavigationEnd extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic urlAfterRedirects: string) {\n    super(id, url);\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n\nfunction NavigationEnd_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationEnd.prototype.urlAfterRedirects;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n * \n * \\@stable\n */\nexport class NavigationCancel extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} reason\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic reason: string) {\n    super(id, url);\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return `NavigationCancel(id: ${this.id}, url: '${this.url}')`; }\n}\n\nfunction NavigationCancel_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationCancel.prototype.reason;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n * \n * \\@stable\n */\nexport class NavigationError extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} error\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic error: any) {\n    super(id, url);\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n\nfunction NavigationError_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationError.prototype.error;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n * \n * \\@stable\n */\nexport class RoutesRecognized extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {\n    super(id, url);\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction RoutesRecognized_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.state;\n}\n\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n * \n * \\@experimental\n */\nexport class GuardsCheckStart extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {\n    super(id, url);\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction GuardsCheckStart_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckStart.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckStart.prototype.state;\n}\n\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n * \n * \\@experimental\n */\nexport class GuardsCheckEnd extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n * @param {?} shouldActivate\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot,\npublic shouldActivate: boolean) {\n    super(id, url);\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n  }\n}\n\nfunction GuardsCheckEnd_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.state;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.shouldActivate;\n}\n\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n * \n * \\@experimental\n */\nexport class ResolveStart extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {\n    super(id, url);\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction ResolveStart_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveStart.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveStart.prototype.state;\n}\n\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n * \n * \\@experimental\n */\nexport class ResolveEnd extends RouterEvent {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\n      /** @docsNotRequired */\n      id: number,\n      /** @docsNotRequired */\n      url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {\n    super(id, url);\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction ResolveEnd_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveEnd.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveEnd.prototype.state;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n * \n * \\@experimental\n */\nexport class RouteConfigLoadStart extends RouteEvent {\n/**\n * @return {?}\n */\ntoString(): string { return `RouteConfigLoadStart(path: ${this.route.path})`; }\n}\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n * \n * \\@experimental\n */\nexport class RouteConfigLoadEnd extends RouteEvent {\n/**\n * @return {?}\n */\ntoString(): string { return `RouteConfigLoadEnd(path: ${this.route.path})`; }\n}\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationEnd} for use of this experimental API.\n * \n * \\@experimental\n */\nexport class ChildActivationStart extends RouteEvent {\n/**\n * @return {?}\n */\ntoString(): string { return `ChildActivationStart(path: '${this.route.path}')`; }\n}\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationStart} for use of this experimental API.\n * \n * \\@experimental\n */\nexport class ChildActivationEnd extends RouteEvent {\n/**\n * @return {?}\n */\ntoString(): string { return `ChildActivationEnd(path: '${this.route.path}')`; }\n}\n\n/**\n * @whatItDoes Represents a router event, allowing you to track the lifecycle of the router.\n *\n * The sequence of router events is:\n *\n * - {@link NavigationStart},\n * - {@link RouteConfigLoadStart},\n * - {@link RouteConfigLoadEnd},\n * - {@link RoutesRecognized},\n * - {@link GuardsCheckStart},\n * - {@link ChildActivationStart},\n * - {@link GuardsCheckEnd},\n * - {@link ResolveStart},\n * - {@link ResolveEnd},\n * - {@link ChildActivationEnd}\n * - {@link NavigationEnd},\n * - {@link NavigationCancel},\n * - {@link NavigationError}\n *\n * @stable\n */\nexport type Event = RouterEvent | RouteEvent;\n"]}