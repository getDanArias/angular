{"version":3,"sources":["../../../../packages/platform-server/src/http.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH;;;;;;GAMG;AACH,MALC,gBAAA,CAAK,IAAA,GAAY,OAAA,CAAQ,MAAC,CAAM,CAAC;AAOlC,OALO,EAAA,UAAE,EAAW,QAAA,EAAmB,MAAA,eAAA,CAAA;AAMvC,OALO,EAAA,UAAE,EAA0C,IAAA,EAAM,UAAA,EAAqB,cAAA,EAA0B,UAAA,EAAY,YAAA,EAAa,MAAA,eAAA,CAAA;AAOjI,OALO,EAAqC,WAAA,EAA4C,iBAAA,EAAmB,WAAA,EAAa,UAAA,EAAY,oBAAA,IAAwB,mBAAA,EAAoB,MAAA,sBAAA,CAAA;AAOhL,OALO,EAAA,UAAE,EAAU,MAAA,iBAAA,CAAA;AASnB,MAAI,gBAAA,CALE,aAAA,GAAgB,sBAAA,CAAuB;AAM7C;;;GAGG;AACH,4BAR4B,GAAK;IAS/B,EAAE,CAAC,CAAC,CARC,aAAC,CAAa,IAAC,CAAI,GAAC,CAAG,CAAC,CAAC,CAAA;QAS5B,MARM,IAAI,KAAA,CAAM,gEAAC,GAAgE,EAAG,CAAE,CAAC;IASzF,CAAC;AACH,CAAC;AACD,MANC;IAOD;;OAEG;IACH,KATG,KAAyB,MAAA,CAAO,IAAI,IAAA,CAAK,cAAC,EAAc,CAAE,CAAC,CAAA;;AACvD,oBAAA,GAA+C;IAUtD,EATE,IAAA,EAAM,UAAA,EAJN;CAcD,CATC;AAUF,kBAVE;AAEK,wBAAA,GAA4F,MAAM,EAUxG,CATC;AAYF;IACA,gBAAgB;IAChB,SAZO,CAAA,UAAS,CAAA;IAahB;;;OAGG;IACH,SAAS,CAZC,cAAK,CAAA;AAaf,CAAC;AAED,MAlBC;IAmBD;;;OAGG;IACH,gBAtBG,CANgB,GAAK,IAAe,CAAA;;AAOhC,6BAAA,GAA+C;IAuBtD,EAtBE,IAAA,EAAM,UAAA,EAVN;CAiCD,CAtBC;AAuBF,kBAAkB;AArBX,iCAAA,GAA4F,MAAM,EAuBxG,CAtBC;AAyBF;IACA,gBAAgB;IAChB,kBAZe,CAAA,UAAA,CAAA;IAaf;;;OAGG;IACH,kBAZgB,CAAA,cAAA,CAAA;AAahB,CAAC;AAED;;GAEG;AACH,MA/CC;IAgDD;;;OAGG;IACH,IAvCG,CAZI,OAAS;QAoDZ,MAAM,CAnDC,IAAI,UAAA,CAAW,CAAC,QAAqB;YAoD1C,IAAI,gBAZY,CAvCZ,IAAA,GAAW,CAAA,CAAE,IAAA,CAAA,CAAA,CAAO;YAoDxB,IAZI,gBAAA,CAvCA,SAAA,GAAqB,KAAA,CAAM;YAoD/B,IAZG,gBAAA,CAvCC,GAAA,GAAyB,IAAA,CAAK;YAoDlC,IAAI,gBAAgB,CAnDhB,WAAA,GAAmB,IAAA,CAAK;YAoD5B,IAAI,gBAZe,CAvCf,UAAA,GAAkB,IAAA,CAAK;YAqD3B,MAAM,gBAZc,CAvCd,YAAA,GAAe,CAAA,KAAQ;gBAoD3B,IAZE,GAvCK,KAAA,CAAM;gBAoDb,SAAS,GAnDG,IAAA,CAAK;gBAqDjB,MAZE,gBAAA,CAvCI,QAAA,GAAW,IAAA,CAAK,QAAC,CAAQ,OAAC,CAAO,CAAC;gBAwCxC,GAAC,GAvCK,QAAA,CAAS,SAAC,CAoDZ,GAAG,IAnDI,WAAA,GAAc,GAAA,EAoDrB,GAAG;oBACD,EAAE,CAAC,CAAC,CAnDC,SAAC,CAAS,CAAC,CAAA;wBAoDd,MAnDM,IAAI,KAAA,CAwCN,oFAAgC,CAvCqD,CAAC;oBAoD5F,CAAC;oBACD,UAZM,GAvCO,GAAA,CAAI;oBAoDjB,SAAS,GAnDG,KAAA,CAAM;oBAwCnB,IAAG,CAvCG,MAAC,EAAM,CAAE;gBAoDhB,CAZC,EAaD;oBACE,EAAE,CAAC,CAAC,CAnDC,SAAC,CAAS,CAAC,CAAA;wBAwCpB,MAvCY,IAAI,KAAA,CAwCP,oFAAA,CAvCsF,CAAC;oBAwC5F,CAAC;oBACD,SAAQ,GAvCI,KAAA,CAAM;oBAwCtB,IAAA,CAvCS,MAAC,EAAM,CAAE;gBAwCnB,CAAA,CAvCK,CAAC;YAwCT,CAAC,CAvCC;YAqDF,MAAM,gBAAgB,CAnDhB,UAAA,GAAa,CAAA,KAAQ;gBAoDzB,EAAE,CAAC,CAZC,CAvCC,SAAC,CAAS,CAAC,CAAA;oBAwCtB,MAAA,CAAA;gBAaM,CAAC;gBAXF,SAAM,GAvCO,KAAA,CAAM;gBAoDlB,EAAE,CAAC,CAAC,GAnDC,CAAG,CAAC,CAAA;oBAoDP,GAZE,CAvCE,WAAC,EAAW,CAAE;oBAoDlB,GAAG,GAnDG,IAAA,CAAK;gBAoDb,CAAC;YACH,CAAC,CAnDC;YAqDF,MAAM,gBAZY,CAvCZ,UAAA,GAAa;gBAoDjB,EAZE,CAAA,CAAA,UAvCG,KAAc,IAAA,CAAK,CAAC,CAAA;oBAwC7B,QAAA,CAvCe,KAAC,CAAK,UAAC,CAAU,CAAC;gBAoD7B,CAAC;gBAnDC,IAAA,CAAK,CAAA;oBAoDL,QAZE,CAvCO,IAAC,CAAI,WAAC,CAAW,CAAC;oBAwC3B,QAAA,CAvCS,QAAC,EAAQ,CAAE;gBAoDtB,CAAC;YAXL,CAAA,CAvCI;YAyCF,8EAA2B;YAa3B,+EAZ0E;YAC5E,4CAAA;YACF,MAAA,gBAAA,CAvCU,KAAA,GAAQ,IAAA,CAAK,OAAC,CAAO,iBAAC,CAoDxB,gCAAgC,EAnDE,UAAA,EAAY,EAAA,EAAI,MAAM,IAAA,EAAM,UAAA,CAAW,CAAC;YAwCnF,YAAY,CAvCM,KAAC,CAAK,CAAC;YAqDpB,MAAM,CAnDC;gBAoDL,EAAE,CAAC,CAAC,SAnDC,IAAY,IAAA,CAAK,CAAC,CAAA;oBAoDrB,IAZC,CAvCI,IAAC,CAAI,UAAC,CAAU,IAAC,CAAI,CAAC;oBAwCjC,SAAA,GAvCkB,KAAA,CAAM;gBAwC1B,CAAA;gBAaM,EAAE,CAAC,CAAC,GAnDC,CAAG,CAAC,CAAA;oBAwCV,GAAM,CAvCC,WAAC,EAAW,CAAE;oBAoDlB,GAAG,GAnDG,IAAA,CAAK;gBAoDb,CAAC;YACH,CAAC,CAnDC;QAoDJ,CAAC,CAnDC,CAAC;IAoDL,CAAC;CAhDF;AAqDD;IAEA;;;;OAIG;IACH,oBAZa,CAAA,SAAa,CAAA,QAAa,GAAC,UAAA,OAAkB,IAAE,CAAA,CAAA;AAa5D,CAAC;AAED,MA7DC,8BAAoC,SAAQ,oBAAuC;IAiEpF;;;OAGG;IACH,YAhEqB,OAAS,EAAiB,OAAS;QAsDrD,KAAA,EArDO,CAAE;QADS,YAAA,GAAA,OAAA,CAAS;QAAiB,YAAA,GAAA,OAAA,CAAS;QAmEpD,kBAAkB,CAjEC,OAAC,CAAO,GAAC,CAAG,CAAC;QAkEhC,IAAI,CAjEC,QAAC,GAAU,IAAA,CAAK,IAAC,CAAI,OAAC,CAAO,CAAC;IAkErC,CAAC;IACH;;;OAGG;IACH,QAxDG,CAZQ,OAAS;QAqEhB,IAAI,CApEC,cAAC,GAAgB,IAAA,CAAK,OAAC,CAAO,gBAAC,CAAgB,OAAC,CAAO,CAAC;QAqE7D,MAAM,CAAiB,CApEhB,IAAA,CAAK,cAAC,CAAc,QAAgC,CAAA,CAAC;IAqE9D,CAAC;IACH;;OAEG;IACH,IAtEM,UAAA;QAuEF,MAAM,CAtEC,CAAA,CAAE,IAAC,CAAI,cAAC,GAAgB,IAAA,CAAK,cAAC,CAAc,UAAC,GAAY,UAAA,CAAW,MAAC,CAAM;IAuEpF,CAAC;CArEF;AAwED;IACA,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC3C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,cAAc,CAAC;IACjD,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,OAAO,CAAC;IAC1C,gBAAgB;IAChB,uBAAuB,CAAC,SAAS,CAAC,OAAO,CAAC;AAC1C,CAAC;AAED,MAjFC;IAkFD;;OAEG;IACH,YApFsB,OAAS;QAAT,YAAA,GAAA,OAAA,CAAS;IAAY,CAAA;IAqF3C;;;OAGG;IACH,gBA3EG,CAZgB,OAAS;QAwFxB,MAAM,CAvFC,IAAI,uBAAA,CAAwB,OAAC,EAAQ,IAAA,CAAK,OAAC,CAAO,CAAC;IAwF5D,CAAC;CAtFF;AAyFD;IACA,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,OAAO,CAAC;AACvC,CAAC;AAED,MA5FC,wBAA8B,SA6F3B,oBA5FsD;IA6F1D;;OAEG;IACH,YA/FsB,OAAS;QAAe,KAAA,EAAM,CAAE;QAAhC,YAAA,GAAA,OAAA,CAAS;IAAwB,CAAA;IAgGvD;;;OAGG;IACH,MAtFG,CAZM,OAAyB,IAAgC,MAAA,CAAO,IAAA,CAAK,IAAC,CAAI,OAAC,CAAO,CAAC,CAAC,CAAA;IAmG7F;;;OAGG;IApGS,QAAA,CAAS,OAAyB;QAsG1C,MAAM,CArGC,IAAA,CAAK,OAAC,CAAO,MAAC,CAAM,OAAC,CAAO,CAAC;IAsGtC,CAAC;CApGF;AAuGD;IACA,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC;AACpC,CAAC;AAED;;;;GAIG;AACH,MAnGC,sBAZ2B,UAAY,EAAY,OAAS;IAgH3D,MAAM,gBAAgB,CA/GhB,YAAA,GAAe,IAAI,oBAAA,CAAqB,UAAC,CAAU,CAAC;IAgH1D,MAAM,CA/GC,IAAI,IAAA,CAAK,YAAC,EAAa,OAAA,CAAQ,CAAC;AAgHzC,CAAC;AACD;;;;GAIG;AACH,MAvGC,yCAwGG,OAnHS,EAAa,YAAkC;IAoH1D,MAAM,gBAAgB,CAnHhB,WAAA,GAA2B,mBAAA,CAAoB,OAAC,EAAQ,YAAA,CAAa,CAAC;IAoH5E,MAAM,CAnHC,IAAI,iBAAA,CAAkB,WAAC,CAAW,CAAC;AAoH5C,CAAC;AAED,MAAM,CAnHC,MAAA,gBAAA,CAAM,qBAAA,GAAoC;IAoH/C,EAAC,OAnHC,EAAQ,IAAA,EAAM,UAAA,EAAY,WAAA,EAAa,IAAA,EAAM,CAAA,UAAE,EAAW,cAAA,CAAe,EAAC;IAoH5E,EAAC,OAnHC,EAAQ,UAAA,EAAY,QAAA,EAAU,SAAA,EAAU,EAAE,EAAA,OAAE,EAAQ,YAAA,EAAc,QAAA,EAAU,kBAAA,EAAmB;IAoHjG,EAAC,OAnHC,EAAQ,UAAA,EAAY,QAAA,EAAU,SAAA,EAAU,EAAE;QAoH1C,OAAO,EAnHE,WAAA;QAoHT,UAAU,EAnHE,8BAAA;QAoHZ,IAAI,EAnHE,CAAA,WAAE,EAAY,CAAA,IAAK,QAAA,EAAS,EAAG,iBAAA,CAAkB,CAAC;KAoHzD;CACF,CAnHC","file":"http.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst /** @type {?} */ xhr2: any = require('xhr2');\n\nimport {Injectable, Optional, Provider} from '@angular/core';\nimport {BrowserXhr, Connection, ConnectionBackend, Http, ReadyState, Request, RequestOptions, Response, XHRBackend, XSRFStrategy} from '@angular/http';\n\nimport {HttpClient, HttpEvent, HttpRequest, HttpHandler, HttpInterceptor, HttpResponse, HTTP_INTERCEPTORS, HttpBackend, XhrFactory, ÉµinterceptingHandler as interceptingHandler} from '@angular/common/http';\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\n\nconst /** @type {?} */ isAbsoluteUrl = /^[a-zA-Z\\-\\+.]+:\\/\\//;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction validateRequestUrl(url: string): void {\n  if (!isAbsoluteUrl.test(url)) {\n    throw new Error(`URLs requested via Http on the server must be absolute. URL: ${url}`);\n  }\n}\nexport class ServerXhr implements BrowserXhr {\n/**\n * @return {?}\n */\nbuild(): XMLHttpRequest { return new xhr2.XMLHttpRequest(); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction ServerXhr_tsickle_Closure_declarations() {\n/** @type {?} */\nServerXhr.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerXhr.ctorParameters;\n}\n\nexport class ServerXsrfStrategy implements XSRFStrategy {\n/**\n * @param {?} req\n * @return {?}\n */\nconfigureRequest(req: Request): void {}\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction ServerXsrfStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nServerXsrfStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerXsrfStrategy.ctorParameters;\n}\n\n/**\n * @abstract\n */\nexport abstract class ZoneMacroTaskWrapper<S, R> {\n/**\n * @param {?} request\n * @return {?}\n */\nwrap(request: S): Observable<R> {\n    return new Observable((observer: Observer<R>) => {\n      let /** @type {?} */ task: Task = /** @type {?} */(( null));\n      let /** @type {?} */ scheduled: boolean = false;\n      let /** @type {?} */ sub: Subscription|null = null;\n      let /** @type {?} */ savedResult: any = null;\n      let /** @type {?} */ savedError: any = null;\n\n      const /** @type {?} */ scheduleTask = (_task: Task) => {\n        task = _task;\n        scheduled = true;\n\n        const /** @type {?} */ delegate = this.delegate(request);\n        sub = delegate.subscribe(\n            res => savedResult = res,\n            err => {\n              if (!scheduled) {\n                throw new Error(\n                    'An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n              }\n              savedError = err;\n              scheduled = false;\n              task.invoke();\n            },\n            () => {\n              if (!scheduled) {\n                throw new Error(\n                    'An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n              }\n              scheduled = false;\n              task.invoke();\n            });\n      };\n\n      const /** @type {?} */ cancelTask = (_task: Task) => {\n        if (!scheduled) {\n          return;\n        }\n        scheduled = false;\n        if (sub) {\n          sub.unsubscribe();\n          sub = null;\n        }\n      };\n\n      const /** @type {?} */ onComplete = () => {\n        if (savedError !== null) {\n          observer.error(savedError);\n        } else {\n          observer.next(savedResult);\n          observer.complete();\n        }\n      };\n\n      // MockBackend for Http is synchronous, which means that if scheduleTask is by\n      // scheduleMacroTask, the request will hit MockBackend and the response will be\n      // sent, causing task.invoke() to be called.\n      const /** @type {?} */ _task = Zone.current.scheduleMacroTask(\n          'ZoneMacroTaskWrapper.subscribe', onComplete, {}, () => null, cancelTask);\n      scheduleTask(_task);\n\n      return () => {\n        if (scheduled && task) {\n          task.zone.cancelTask(task);\n          scheduled = false;\n        }\n        if (sub) {\n          sub.unsubscribe();\n          sub = null;\n        }\n      };\n    });\n  }\n\n  protected abstract delegate(request: S): Observable<R>;\n}\n\nfunction ZoneMacroTaskWrapper_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} request\n * @return {?}\n */\nZoneMacroTaskWrapper.prototype.delegate = function(request) {};\n}\n\nexport class ZoneMacroTaskConnection extends ZoneMacroTaskWrapper<Request, Response> implements\n    Connection {\n  response: Observable<Response>;\n  lastConnection: Connection;\n/**\n * @param {?} request\n * @param {?} backend\n */\nconstructor(public request: Request,\nprivate backend: XHRBackend) {\n    super();\n    validateRequestUrl(request.url);\n    this.response = this.wrap(request);\n  }\n/**\n * @param {?} request\n * @return {?}\n */\ndelegate(request: Request): Observable<Response> {\n    this.lastConnection = this.backend.createConnection(request);\n    return /** @type {?} */(( this.lastConnection.response as Observable<Response>));\n  }\n/**\n * @return {?}\n */\nget readyState(): ReadyState {\n    return !!this.lastConnection ? this.lastConnection.readyState : ReadyState.Unsent;\n  }\n}\n\nfunction ZoneMacroTaskConnection_tsickle_Closure_declarations() {\n/** @type {?} */\nZoneMacroTaskConnection.prototype.response;\n/** @type {?} */\nZoneMacroTaskConnection.prototype.lastConnection;\n/** @type {?} */\nZoneMacroTaskConnection.prototype.request;\n/** @type {?} */\nZoneMacroTaskConnection.prototype.backend;\n}\n\nexport class ZoneMacroTaskBackend implements ConnectionBackend {\n/**\n * @param {?} backend\n */\nconstructor(private backend: XHRBackend) {}\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: any): ZoneMacroTaskConnection {\n    return new ZoneMacroTaskConnection(request, this.backend);\n  }\n}\n\nfunction ZoneMacroTaskBackend_tsickle_Closure_declarations() {\n/** @type {?} */\nZoneMacroTaskBackend.prototype.backend;\n}\n\nexport class ZoneClientBackend extends\n    ZoneMacroTaskWrapper<HttpRequest<any>, HttpEvent<any>> implements HttpBackend {\n/**\n * @param {?} backend\n */\nconstructor(private backend: HttpBackend) { super(); }\n/**\n * @param {?} request\n * @return {?}\n */\nhandle(request: HttpRequest<any>): Observable<HttpEvent<any>> { return this.wrap(request); }\n/**\n * @param {?} request\n * @return {?}\n */\nprotected delegate(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.backend.handle(request);\n  }\n}\n\nfunction ZoneClientBackend_tsickle_Closure_declarations() {\n/** @type {?} */\nZoneClientBackend.prototype.backend;\n}\n\n/**\n * @param {?} xhrBackend\n * @param {?} options\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, options: RequestOptions) {\n  const /** @type {?} */ macroBackend = new ZoneMacroTaskBackend(xhrBackend);\n  return new Http(macroBackend, options);\n}\n/**\n * @param {?} backend\n * @param {?} interceptors\n * @return {?}\n */\nexport function zoneWrappedInterceptingHandler(\n    backend: HttpBackend, interceptors: HttpInterceptor[] | null) {\n  const /** @type {?} */ realBackend: HttpBackend = interceptingHandler(backend, interceptors);\n  return new ZoneClientBackend(realBackend);\n}\n\nexport const /** @type {?} */ SERVER_HTTP_PROVIDERS: Provider[] = [\n  {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n  {provide: BrowserXhr, useClass: ServerXhr}, {provide: XSRFStrategy, useClass: ServerXsrfStrategy},\n  {provide: XhrFactory, useClass: ServerXhr}, {\n    provide: HttpHandler,\n    useFactory: zoneWrappedInterceptingHandler,\n    deps: [HttpBackend, [new Optional(), HTTP_INTERCEPTORS]]\n  }\n];\n"]}