{"version":3,"sources":["../../../../../../packages/platform-browser/src/dom/debug/ng_probe.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,KAAK,IAAA,MAAA,eAAA,CAAA;AAMZ,OALO,EAAA,WAAE,EAAW,MAAA,SAAA,CAAA;AAOpB,MAAM,gBAAgB,CALhB,WAAA,GAAc;IAMlB,gBAAgB,EALE,IAAA,CAAK,cAAC;IAMxB,QAAQ,EALE,IAAA,CAAK,MAAC;CAMjB,CALC;AAOF,MAAM,gBAAgB,CALhB,mBAAA,GAAsB,OAAA,CAAQ;AAMpC,MAAM,gBAAgB,CALhB,uBAAA,GAA0B,YAAA,CAAa;AAM7C;;;;;;GAMG;AACH,MANC,+BAAoC,OAAS;IAO5C,MAAM,CANC,IAAA,CAAK,YAAC,CAAY,OAAC,CAAO,CAAC;AAOpC,CAAC;AACD;;;GAGG;AACH,MALC;IAMD;;;OAGG;IACH,YATqB,IAAM,EAAe,KAAO;QAA5B,SAAA,GAAA,IAAA,CAAM;QAAe,UAAA,GAAA,KAAA,CAAO;IAAK,CAAA;CACrD;AAYD;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC;AAC7B,CAAC;AAED;;;;GAIG;AACH,MAtBC,yBAA8B,WAA0B,EAAG,UAA8B;IAuBxF,MAAM,gBAAgB,CAtBhB,MAAA,GAAS,CAAA,WAAE,IAAc,EAAA,CAAG,CAAC,MAAC,CAAM,UAAC,IAAa,EAAA,CAAG,CAAC;IAuB5D,WAAW,CAtBC,mBAAC,EAAoB,oBAAA,CAAqB,CAAC;IAuBvD,WAAW,CAtBC,uBAAC,oBAA0B,WAAG,EAAY,mBAAI,CAAmB,MAAC,IAAS,EAAA,CAAG,EAAE,CAAC;IAuB7F,MAAM,CAtBC,MAAM,oBAAA,CAAqB;AAuBpC,CAAC;AACD;;;GAGG;AACH,6BAzB6B,MAAqB;IA0BhD,MAAM,CAzBC,MAAA,CAAO,MAAC,CAAM,CAAC,IAAM,EAAK,CAAG,KAAQ,CAAA,IAAE,CAAI,CAAC,CAAC,IAAC,CAAI,GAAG,CAAA,CAAE,KAAC,EAAM,IAAA,CAAK,EAAE,EAAA,CAAG,CAAC;AA0BlF,CAAC;AACD;;GAEG;AACH,MAxBC,CAAM,MAAA,gBAAA,CAAM,uBAAA,GAA2C;IAyBtD;QACE,OAAO,EAxBE,IAAA,CAAK,eAAC;QAyBf,UAAU,EAxBE,cAAA;QAyBZ,IAAI,EAxBE;YAyBJ,CAAC,YAxBC,EAAa,IAAI,IAAA,CAAK,QAAC,EAAQ,CAAE;YAyBnC,CAAC,IAxBC,CAAI,YAAC,EAAa,IAAI,IAAA,CAAK,QAAC,EAAQ,CAAE;SAyBzC;QACD,KAAK,EAxBE,IAAA;KAyBR;CACF,CAxBC","file":"ng_probe.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as core from '@angular/core';\nimport {exportNgVar} from '../util';\n\nconst /** @type {?} */ CORE_TOKENS = {\n  'ApplicationRef': core.ApplicationRef,\n  'NgZone': core.NgZone,\n};\n\nconst /** @type {?} */ INSPECT_GLOBAL_NAME = 'probe';\nconst /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\nexport function inspectNativeElement(element: any): core.DebugNode|null {\n  return core.getDebugNode(element);\n}\n/**\n * Deprecated. Use the one from '\\@angular/core'.\n * @deprecated\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * @param {?} extraTokens\n * @param {?} coreTokens\n * @return {?}\n */\nexport function _createNgProbe(extraTokens: NgProbeToken[], coreTokens: core.NgProbeToken[]): any {\n  const /** @type {?} */ tokens = (extraTokens || []).concat(coreTokens || []);\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(tokens || [])});\n  return () => inspectNativeElement;\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const /** @type {?} */ ELEMENT_PROBE_PROVIDERS: core.Provider[] = [\n  {\n    provide: core.APP_INITIALIZER,\n    useFactory: _createNgProbe,\n    deps: [\n      [NgProbeToken, new core.Optional()],\n      [core.NgProbeToken, new core.Optional()],\n    ],\n    multi: true,\n  },\n];\n"]}