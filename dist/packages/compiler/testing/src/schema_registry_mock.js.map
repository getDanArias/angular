{"version":3,"sources":["../../../../../packages/compiler/testing/src/schema_registry_mock.ts"],"names":[],"mappings":"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","file":"schema_registry_mock.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementSchemaRegistry} from '@angular/compiler';\nimport {SchemaMetadata, SecurityContext} from '@angular/core';\nexport class MockSchemaRegistry implements ElementSchemaRegistry {\n/**\n * @param {?} existingProperties\n * @param {?} attrPropMapping\n * @param {?} existingElements\n * @param {?} invalidProperties\n * @param {?} invalidAttributes\n */\nconstructor(\npublic existingProperties: {[key: string]: boolean},\npublic attrPropMapping: {[key: string]: string},\npublic existingElements: {[key: string]: boolean},\npublic invalidProperties: Array<string>,\npublic invalidAttributes: Array<string>) {}\n/**\n * @param {?} tagName\n * @param {?} property\n * @param {?} schemas\n * @return {?}\n */\nhasProperty(tagName: string, property: string, schemas: SchemaMetadata[]): boolean {\n    const /** @type {?} */ value = this.existingProperties[property];\n    return value === void 0 ? true : value;\n  }\n/**\n * @param {?} tagName\n * @param {?} schemaMetas\n * @return {?}\n */\nhasElement(tagName: string, schemaMetas: SchemaMetadata[]): boolean {\n    const /** @type {?} */ value = this.existingElements[tagName.toLowerCase()];\n    return value === void 0 ? true : value;\n  }\n/**\n * @return {?}\n */\nallKnownElementNames(): string[] { return Object.keys(this.existingElements); }\n/**\n * @param {?} selector\n * @param {?} property\n * @param {?} isAttribute\n * @return {?}\n */\nsecurityContext(selector: string, property: string, isAttribute: boolean): SecurityContext {\n    return SecurityContext.NONE;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\ngetMappedPropName(attrName: string): string { return this.attrPropMapping[attrName] || attrName; }\n/**\n * @return {?}\n */\ngetDefaultComponentElementName(): string { return 'ng-component'; }\n/**\n * @param {?} name\n * @return {?}\n */\nvalidateProperty(name: string): {error: boolean, msg?: string} {\n    if (this.invalidProperties.indexOf(name) > -1) {\n      return {error: true, msg: `Binding to property '${name}' is disallowed for security reasons`};\n    } else {\n      return {error: false};\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nvalidateAttribute(name: string): {error: boolean, msg?: string} {\n    if (this.invalidAttributes.indexOf(name) > -1) {\n      return {\n        error: true,\n        msg: `Binding to attribute '${name}' is disallowed for security reasons`\n      };\n    } else {\n      return {error: false};\n    }\n  }\n/**\n * @param {?} propName\n * @return {?}\n */\nnormalizeAnimationStyleProperty(propName: string): string { return propName; }\n/**\n * @param {?} camelCaseProp\n * @param {?} userProvidedProp\n * @param {?} val\n * @return {?}\n */\nnormalizeAnimationStyleValue(camelCaseProp: string, userProvidedProp: string, val: string|number):\n      {error: string, value: string} {\n    return {error: /** @type {?} */(( null)), value: val.toString()};\n  }\n}\n\nfunction MockSchemaRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nMockSchemaRegistry.prototype.existingProperties;\n/** @type {?} */\nMockSchemaRegistry.prototype.attrPropMapping;\n/** @type {?} */\nMockSchemaRegistry.prototype.existingElements;\n/** @type {?} */\nMockSchemaRegistry.prototype.invalidProperties;\n/** @type {?} */\nMockSchemaRegistry.prototype.invalidAttributes;\n}\n\n"]}