{"version":3,"sources":["../../../../../packages/compiler/src/ml_parser/xml_tags.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,cAAE,EAA6B,MAAA,QAAA,CAAA;AAMtC,MAJC;IAID;QACE,mBAAc,GAJY,KAAA,CAAM;QAQhC,gBAAW,GAJmB,cAAA,CAAe,aAAC,CAAa;QAK3D,WAAM,GAJY,KAAA,CAAM;QAKxB,kBAAa,GAJY,KAAA,CAAM;QAK/B,iBAAY,GAJY,IAAA,CAAK;IAe/B,CAVC;IAAD;;;OAGG;IACH,kBAPG,CAAkB,aAAe,IAAmB,MAAA,CAAO,KAAA,CAAM,CAAC,CAAA;IAQrE;;;OAGG;IACH,eAVG,CAAe,IAAM,IAAmB,MAAA,CAAO,KAAA,CAAM,CAAC,CAAA;CACxD;AAYD;IACA,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,cAAc,CAAC;IAC1C,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC;IAC3C,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC;IACvC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,uBAAuB,CAAC;IACnD,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC;IACvC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;IAClC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,aAAa,CAAC;IACzC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,YAAY,CAAC;AACxC,CAAC;AAGD,MAAM,gBAAgB,CA9BhB,eAAA,GAAkB,IAAI,gBAAA,EAAiB,CAAE;AA+B/C;;;GAGG;AACH,MAjCC,8BAAmC,OAAS;IAkC3C,MAAM,CAjCC,eAAA,CAAgB;AAkCzB,CAAC","file":"xml_tags.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\nexport class XmlTagDefinition implements TagDefinition {\n  closedByParent: boolean = false;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType = TagContentType.PARSABLE_DATA;\n  isVoid: boolean = false;\n  ignoreFirstLf: boolean = false;\n  canSelfClose: boolean = true;\n/**\n * @param {?} currentParent\n * @return {?}\n */\nrequireExtraParent(currentParent: string): boolean { return false; }\n/**\n * @param {?} name\n * @return {?}\n */\nisClosedByChild(name: string): boolean { return false; }\n}\n\nfunction XmlTagDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlTagDefinition.prototype.closedByParent;\n/** @type {?} */\nXmlTagDefinition.prototype.requiredParents;\n/** @type {?} */\nXmlTagDefinition.prototype.parentToAdd;\n/** @type {?} */\nXmlTagDefinition.prototype.implicitNamespacePrefix;\n/** @type {?} */\nXmlTagDefinition.prototype.contentType;\n/** @type {?} */\nXmlTagDefinition.prototype.isVoid;\n/** @type {?} */\nXmlTagDefinition.prototype.ignoreFirstLf;\n/** @type {?} */\nXmlTagDefinition.prototype.canSelfClose;\n}\n\n\nconst /** @type {?} */ _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getXmlTagDefinition(tagName: string): XmlTagDefinition {\n  return _TAG_DEFINITION;\n}\n"]}