{"version":3,"sources":["../../../../../packages/compiler/src/output/ts_emitter.ts"],"names":[],"mappings":"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","file":"ts_emitter.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {StaticSymbol} from '../aot/static_symbol';\nimport {CompileIdentifierMetadata} from '../compile_metadata';\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext, OutputEmitter} from './abstract_emitter';\nimport * as o from './output_ast';\n\nconst /** @type {?} */ _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function debugOutputAstAsTypeScript(ast: o.Statement | o.Expression | o.Type | any[]):\n    string {\n  const /** @type {?} */ converter = new _TsEmitterVisitor();\n  const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n  const /** @type {?} */ asts: any[] = Array.isArray(ast) ? ast : [ast];\n\n  asts.forEach((ast) => {\n    if (ast instanceof o.Statement) {\n      ast.visitStatement(converter, ctx);\n    } else if (ast instanceof o.Expression) {\n      ast.visitExpression(converter, ctx);\n    } else if (ast instanceof o.Type) {\n      ast.visitType(converter, ctx);\n    } else {\n      throw new Error(`Don't know how to print debug info for ${ast}`);\n    }\n  });\n  return ctx.toSource();\n}\nexport class TypeScriptEmitter implements OutputEmitter {\n/**\n * @param {?} srcFilePath\n * @param {?} genFilePath\n * @param {?} stmts\n * @param {?=} preamble\n * @param {?=} emitSourceMaps\n * @return {?}\n */\nemitStatementsAndContext(\n      srcFilePath: string, genFilePath: string, stmts: o.Statement[], preamble: string = '',\n      emitSourceMaps: boolean = true): {sourceText: string, context: EmitterVisitorContext} {\n    const /** @type {?} */ converter = new _TsEmitterVisitor();\n\n    const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n\n    converter.visitAllStatements(stmts, ctx);\n\n    const /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n    converter.reexports.forEach((reexports, exportedModuleName) => {\n      const /** @type {?} */ reexportsCode =\n          reexports.map(reexport => `${reexport.name} as ${reexport.as}`).join(',');\n      preambleLines.push(`export {${reexportsCode}} from '${exportedModuleName}';`);\n    });\n\n    converter.importsWithPrefixes.forEach((prefix, importedModuleName) => {\n      // Note: can't write the real word for import as it screws up system.js auto detection...\n      preambleLines.push(\n          `imp` +\n          `ort * as ${prefix} from '${importedModuleName}';`);\n    });\n\n    const /** @type {?} */ sm = emitSourceMaps ?\n        ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n        '';\n    const /** @type {?} */ lines = [...preambleLines, ctx.toSource(), sm];\n    if (sm) {\n      // always add a newline at the end, as some tools have bugs without it.\n      lines.push('');\n    }\n    ctx.setPreambleLineCount(preambleLines.length);\n    return {sourceText: lines.join('\\n'), context: ctx};\n  }\n/**\n * @param {?} srcFilePath\n * @param {?} genFilePath\n * @param {?} stmts\n * @param {?=} preamble\n * @return {?}\n */\nemitStatements(\n      srcFilePath: string, genFilePath: string, stmts: o.Statement[], preamble: string = '') {\n    return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n  }\n}\nclass _TsEmitterVisitor extends AbstractEmitterVisitor implements o.TypeVisitor {\nprivate typeExpression = 0;\nconstructor() { super(false); }\n\n  importsWithPrefixes = new Map<string, string>();\n  reexports = new Map<string, {name: string, as: string}[]>();\n/**\n * @param {?} t\n * @param {?} ctx\n * @param {?=} defaultType\n * @return {?}\n */\nvisitType(t: o.Type|null, ctx: EmitterVisitorContext, defaultType: string = 'any') {\n    if (t) {\n      this.typeExpression++;\n      t.visitType(this, ctx);\n      this.typeExpression--;\n    } else {\n      ctx.print(null, defaultType);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralExpr(ast: o.LiteralExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value;\n    if (value == null && ast.type != o.INFERRED_TYPE) {\n      ctx.print(ast, `(${value} as any)`);\n      return null;\n    }\n    return super.visitLiteralExpr(ast, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: EmitterVisitorContext): any {\n    if (ast.entries.length === 0) {\n      ctx.print(ast, '(');\n    }\n    const /** @type {?} */ result = super.visitLiteralArrayExpr(ast, ctx);\n    if (ast.entries.length === 0) {\n      ctx.print(ast, ' as any[])');\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    this._visitIdentifier(ast.value, ast.typeParams, ctx);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitAssertNotNullExpr(ast: o.AssertNotNull, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ result = super.visitAssertNotNullExpr(ast, ctx);\n    ctx.print(ast, '!');\n    return result;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n        !stmt.type) {\n      // check for a reexport\n      const {name, moduleName} = stmt.value.value;\n      if (moduleName) {\n        let /** @type {?} */ reexports = this.reexports.get(moduleName);\n        if (!reexports) {\n          reexports = [];\n          this.reexports.set(moduleName, reexports);\n        }\n        reexports.push({name: /** @type {?} */(( name)), as: stmt.name});\n        return null;\n      }\n    }\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    if (stmt.hasModifier(o.StmtModifier.Final)) {\n      ctx.print(stmt, `const`);\n    } else {\n      ctx.print(stmt, `var`);\n    }\n    ctx.print(stmt, ` ${stmt.name}`);\n    this._printColonType(stmt.type, ctx);\n    ctx.print(stmt, ` = `);\n    stmt.value.visitExpression(this, ctx);\n    ctx.println(stmt, `;`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(<`); /** @type {?} */((\n    ast.type)).visitType(this, ctx);\n    ctx.print(ast, `>`);\n    ast.value.visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitInstantiateExpr(ast: o.InstantiateExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `new `);\n    this.typeExpression++;\n    ast.classExpr.visitExpression(this, ctx);\n    this.typeExpression--;\n    ctx.print(ast, `(`);\n    this.visitAllExpressions(ast.args, ctx, ',');\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `class ${stmt.name}`);\n    if (stmt.parent != null) {\n      ctx.print(stmt, ` extends `);\n      this.typeExpression++;\n      stmt.parent.visitExpression(this, ctx);\n      this.typeExpression--;\n    }\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n    if (stmt.constructorMethod != null) {\n      this._visitClassConstructor(stmt, ctx);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    ctx.popClass();\n    return null;\n  }\n/**\n * @param {?} field\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassField(field: o.ClassField, ctx: EmitterVisitorContext) {\n    if (field.hasModifier(o.StmtModifier.Private)) {\n      // comment out as a workaround for #10967\n      ctx.print(null, `/*private*/ `);\n    }\n    ctx.print(null, field.name);\n    this._printColonType(field.type, ctx);\n    ctx.println(null, `;`);\n  }\n/**\n * @param {?} getter\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassGetter(getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    if (getter.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `get ${getter.name}()`);\n    this._printColonType(getter.type, ctx);\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(getter.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `constructor(`);\n    this._visitParams(stmt.constructorMethod.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n/**\n * @param {?} method\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassMethod(method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    if (method.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `${method.name}(`);\n    this._visitParams(method.params, ctx);\n    ctx.print(null, `)`);\n    this._printColonType(method.type, ctx, 'void');\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(method.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(`);\n    this._visitParams(ast.params, ctx);\n    ctx.print(ast, `)`);\n    this._printColonType(ast.type, ctx, 'void');\n    ctx.println(ast, ` => {`);\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.print(stmt, `)`);\n    this._printColonType(stmt.type, ctx, 'void');\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const /** @type {?} */ catchStmts =\n        [ /** @type {?} */((<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])))].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitBuiltintType(type: o.BuiltinType, ctx: EmitterVisitorContext): any {\n    let /** @type {?} */ typeStr: string;\n    switch (type.name) {\n      case o.BuiltinTypeName.Bool:\n        typeStr = 'boolean';\n        break;\n      case o.BuiltinTypeName.Dynamic:\n        typeStr = 'any';\n        break;\n      case o.BuiltinTypeName.Function:\n        typeStr = 'Function';\n        break;\n      case o.BuiltinTypeName.Number:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.Int:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.String:\n        typeStr = 'string';\n        break;\n      default:\n        throw new Error(`Unsupported builtin type ${type.name}`);\n    }\n    ctx.print(null, typeStr);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExpressionType(ast: o.ExpressionType, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitArrayType(type: o.ArrayType, ctx: EmitterVisitorContext): any {\n    this.visitType(type.of, ctx);\n    ctx.print(null, `[]`);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitMapType(type: o.MapType, ctx: EmitterVisitorContext): any {\n    ctx.print(null, `{[key: string]:`);\n    this.visitType(type.valueType, ctx);\n    ctx.print(null, `}`);\n    return null;\n  }\n/**\n * @param {?} method\n * @return {?}\n */\ngetBuiltinMethodName(method: o.BuiltinMethod): string {\n    let /** @type {?} */ name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n/**\n * @param {?} params\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => {\n      ctx.print(null, param.name);\n      this._printColonType(param.type, ctx);\n    }, params, ctx, ',');\n  }\n/**\n * @param {?} value\n * @param {?} typeParams\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitIdentifier(\n      value: o.ExternalReference, typeParams: o.Type[]|null, ctx: EmitterVisitorContext): void {\n    const {name, moduleName} = value;\n    if (moduleName) {\n      let /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n      if (prefix == null) {\n        prefix = `i${this.importsWithPrefixes.size}`;\n        this.importsWithPrefixes.set(moduleName, prefix);\n      }\n      ctx.print(null, `${prefix}.`);\n    }\n    ctx.print(null, /** @type {?} */(( name)));\n\n    if (this.typeExpression > 0) {\n      // If we are in a type expression that refers to a generic type then supply\n      // the required type parameters. If there were not enough type parameters\n      // supplied, supply any as the type. Outside a type expression the reference\n      // should not supply type parameters and be treated as a simple value reference\n      // to the constructor function itself.\n      const /** @type {?} */ suppliedParameters = typeParams || [];\n      if (suppliedParameters.length > 0) {\n        ctx.print(null, `<`);\n        this.visitAllObjects(type => type.visitType(this, ctx), /** @type {?} */(( typeParams)), ctx, ',');\n        ctx.print(null, `>`);\n      }\n    }\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @param {?=} defaultType\n * @return {?}\n */\n\nprivate _printColonType(type: o.Type|null, ctx: EmitterVisitorContext, defaultType?: string) {\n    if (type !== o.INFERRED_TYPE) {\n      ctx.print(null, ':');\n      this.visitType(type, ctx, defaultType);\n    }\n  }\n}\n\nfunction _TsEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_TsEmitterVisitor.prototype.typeExpression;\n/** @type {?} */\n_TsEmitterVisitor.prototype.importsWithPrefixes;\n/** @type {?} */\n_TsEmitterVisitor.prototype.reexports;\n}\n\n"]}