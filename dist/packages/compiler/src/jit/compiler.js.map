{"version":3,"sources":["../../../../../packages/compiler/src/jit/compiler.ts"],"names":[],"mappings":"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","file":"compiler.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactory, Inject, Injector, ModuleWithComponentFactories, NgModuleFactory, Type, ɵConsole as Console, ɵgetComponentViewDefinitionFactory as getComponentViewDefinitionFactory, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompileStylesheetMetadata, CompileTypeSummary, ProviderMeta, ProxyClass, createHostComponentMeta, identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {CompilerInjectable} from '../injectable';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport * as ir from '../output/output_ast';\nimport {interpretStatements} from '../output/output_interpreter';\nimport {jitStatements} from '../output/output_jit';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {SummaryResolver} from '../summary_resolver';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {OutputContext, SyncAsync} from '../util';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n * \n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class JitCompiler implements Compiler {\nprivate _compiledTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledHostTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledDirectiveWrapperCache = new Map<Type<any>, Type<any>>();\nprivate _compiledNgModuleCache = new Map<Type<any>, NgModuleFactory<any>>();\nprivate _sharedStylesheetCount = 0;\n/**\n * @param {?} _injector\n * @param {?} _metadataResolver\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _ngModuleCompiler\n * @param {?} _summaryResolver\n * @param {?} _compilerConfig\n * @param {?} _console\n */\nconstructor(\nprivate _injector: Injector,\nprivate _metadataResolver: CompileMetadataResolver,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _ngModuleCompiler: NgModuleCompiler,\nprivate _summaryResolver: SummaryResolver<Type<any>>,\nprivate _compilerConfig: CompilerConfig,\nprivate _console: Console) {}\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    this._console.warn(\n        'Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n    const /** @type {?} */ template = this._compiledTemplateCache.get(component);\n    if (!template) {\n      throw new Error(`The component ${stringify(component)} is not yet compiled!`);\n    }\n    return /** @type {?} */(( template.compMeta.template)).ngContentSelectors;\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\ngetComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    const /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n    return /** @type {?} */(( <ComponentFactory<T>>summary.componentFactory));\n  }\n/**\n * @param {?} summaries\n * @return {?}\n */\nloadAotSummaries(summaries: () => any[]) {\n    this.clearCache();\n    flattenSummaries(summaries).forEach((summary) => {\n      this._summaryResolver.addSummary(\n          {symbol: summary.type.reference, metadata: null, type: summary});\n    });\n  }\n/**\n * @param {?} ref\n * @return {?}\n */\nhasAotSummary(ref: Type<any>) { return !!this._summaryResolver.resolveSummary(ref); }\n/**\n * @param {?} ids\n * @return {?}\n */\n\nprivate _filterJitIdentifiers(ids: CompileIdentifierMetadata[]): any[] {\n    return ids.map(mod => mod.reference).filter((ref) => !this.hasAotSummary(ref));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\n\nprivate _compileModuleAndComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsync<NgModuleFactory<T>> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      this._compileComponents(moduleType, null);\n      return this._compileModule(moduleType);\n    });\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\n\nprivate _compileModuleAndAllComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsync<ModuleWithComponentFactories<T>> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      const /** @type {?} */ componentFactories: ComponentFactory<any>[] = [];\n      this._compileComponents(moduleType, componentFactories);\n      return new ModuleWithComponentFactories(this._compileModule(moduleType), componentFactories);\n    });\n  }\n/**\n * @param {?} mainModule\n * @param {?} isSync\n * @return {?}\n */\n\nprivate _loadModules(mainModule: any, isSync: boolean): SyncAsync<any> {\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    const /** @type {?} */ mainNgModule = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(mainModule)));\n    // Note: for runtime compilation, we want to transitively compile all modules,\n    // so we also need to load the declared directives / pipes for all nested modules.\n    this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach((nestedNgModule) => {\n      // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n      const /** @type {?} */ moduleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n      this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach((ref) => {\n        const /** @type {?} */ promise =\n            this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      this._filterJitIdentifiers(moduleMeta.declaredPipes)\n          .forEach((ref) => this._metadataResolver.getOrLoadPipeMetadata(ref));\n    });\n    return SyncAsync.all(loading);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\n\nprivate _compileModule<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    let /** @type {?} */ ngModuleFactory = /** @type {?} */(( this._compiledNgModuleCache.get(moduleType)));\n    if (!ngModuleFactory) {\n      const /** @type {?} */ moduleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(moduleType)));\n      // Always provide a bound Compiler\n      const /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(\n          Compiler, {useFactory: () => new ModuleBoundCompiler(this, moduleMeta.type.reference)}))];\n      const /** @type {?} */ outputCtx = createOutputContext();\n      const /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n      if (!this._compilerConfig.useJit) {\n        ngModuleFactory =\n            interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n      } else {\n        ngModuleFactory = jitStatements(\n            ngModuleJitUrl(moduleMeta), outputCtx.statements, )[compileResult.ngModuleFactoryVar];\n      }\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n/**\n * \\@internal\n * @param {?} mainModule\n * @param {?} allComponentFactories\n * @return {?}\n */\n_compileComponents(mainModule: Type<any>, allComponentFactories: ComponentFactory<any>[]|null) {\n    const /** @type {?} */ ngModule = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(mainModule)));\n    const /** @type {?} */ moduleByJitDirective = new Map<any, CompileNgModuleMetadata>();\n    const /** @type {?} */ templates = new Set<CompiledTemplate>();\n\n    const /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n    transJitModules.forEach((localMod) => {\n      const /** @type {?} */ localModuleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(localMod)));\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        moduleByJitDirective.set(dirRef, localModuleMeta);\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          if (allComponentFactories) {\n            const /** @type {?} */ template =\n                this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n            templates.add(template);\n            allComponentFactories.push( /** @type {?} */((<ComponentFactory<any>>dirMeta.componentFactory)));\n          }\n        }\n      });\n    });\n    transJitModules.forEach((localMod) => {\n      const /** @type {?} */ localModuleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(localMod)));\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            const /** @type {?} */ moduleMeta = /** @type {?} */(( moduleByJitDirective.get(entryComponentType.componentType)));\n            templates.add(\n                this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        if (!this.hasAotSummary(entryComponentType.componentType.reference)) {\n          const /** @type {?} */ moduleMeta = /** @type {?} */(( moduleByJitDirective.get(entryComponentType.componentType)));\n          templates.add(\n              this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n        }\n      });\n    });\n    templates.forEach((template) => this._compileTemplate(template));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    const /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._compiledNgModuleCache.clear();\n  }\n/**\n * @param {?} compType\n * @param {?} ngModule\n * @return {?}\n */\n\nprivate _createCompiledHostTemplate(compType: Type<any>, ngModule: CompileNgModuleMetadata):\n      CompiledTemplate {\n    if (!ngModule) {\n      throw new Error(\n          `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n    let /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n\n      const /** @type {?} */ componentFactory = /** @type {?} */(( <ComponentFactory<any>>compMeta.componentFactory));\n      const /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n      const /** @type {?} */ hostMeta = createHostComponentMeta(\n          hostClass, compMeta, /** @type {?} */(( <any>getComponentViewDefinitionFactory(componentFactory))));\n      compiledTemplate =\n          new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @return {?}\n */\n\nprivate _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    let /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} template\n * @return {?}\n */\n\nprivate _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const /** @type {?} */ compMeta = template.compMeta;\n    const /** @type {?} */ externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const /** @type {?} */ outputContext = createOutputContext();\n    const /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */((\n    compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n      const /** @type {?} */ compiledStylesheet =\n          this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n      externalStylesheetsByModuleUrl.set( /** @type {?} */((stylesheetMeta.moduleUrl)), compiledStylesheet);\n    });\n    this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n    const /** @type {?} */ directives =\n        template.directives.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const {template: parsedTemplate, pipes: usedPipes} = this._templateParser.parse(\n        compMeta, /** @type {?} */(( /** @type {?} */(( compMeta.template)).template)), directives, pipes, template.ngModule.schemas,\n        templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */(( template.compMeta.template))));\n    const /** @type {?} */ compileResult = this._viewCompiler.compileComponent(\n        outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar),\n        usedPipes);\n    let /** @type {?} */ evalResult: any;\n    if (!this._compilerConfig.useJit) {\n      evalResult = interpretStatements(outputContext.statements);\n    } else {\n      evalResult = jitStatements(\n          templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n    }\n    const /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n    const /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n    template.compiled(viewClass, rendererType);\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\n\nprivate _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      const /** @type {?} */ nestedCompileResult = /** @type {?} */(( externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n      const /** @type {?} */ nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.setValue(nestedStylesArr);\n    });\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\n\nprivate _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n    } else {\n      return jitStatements(\n          sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++),\n          result.outputCtx.statements)[result.stylesVar];\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n{type: CompileMetadataResolver, },\n{type: TemplateParser, },\n{type: StyleCompiler, },\n{type: ViewCompiler, },\n{type: NgModuleCompiler, },\n{type: SummaryResolver, },\n{type: CompilerConfig, },\n{type: Console, },\n];\n}\n\nfunction JitCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nJitCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJitCompiler.ctorParameters;\n/** @type {?} */\nJitCompiler.prototype._compiledTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledHostTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledDirectiveWrapperCache;\n/** @type {?} */\nJitCompiler.prototype._compiledNgModuleCache;\n/** @type {?} */\nJitCompiler.prototype._sharedStylesheetCount;\n/** @type {?} */\nJitCompiler.prototype._injector;\n/** @type {?} */\nJitCompiler.prototype._metadataResolver;\n/** @type {?} */\nJitCompiler.prototype._templateParser;\n/** @type {?} */\nJitCompiler.prototype._styleCompiler;\n/** @type {?} */\nJitCompiler.prototype._viewCompiler;\n/** @type {?} */\nJitCompiler.prototype._ngModuleCompiler;\n/** @type {?} */\nJitCompiler.prototype._summaryResolver;\n/** @type {?} */\nJitCompiler.prototype._compilerConfig;\n/** @type {?} */\nJitCompiler.prototype._console;\n}\n\nclass CompiledTemplate {\nprivate _viewClass: Function = /** @type {?} */(( null));\n  isCompiled = false;\n/**\n * @param {?} isHost\n * @param {?} compType\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} directives\n */\nconstructor(\npublic isHost: boolean,\npublic compType: CompileIdentifierMetadata,\npublic compMeta: CompileDirectiveMetadata,\npublic ngModule: CompileNgModuleMetadata,\npublic directives: CompileIdentifierMetadata[]) {}\n/**\n * @param {?} viewClass\n * @param {?} rendererType\n * @return {?}\n */\ncompiled(viewClass: Function, rendererType: any) {\n    this._viewClass = viewClass;\n    ( /** @type {?} */((<ProxyClass>this.compMeta.componentViewType))).setDelegate(viewClass);\n    for (let /** @type {?} */ prop in rendererType) {\n      ( /** @type {?} */((<any>this.compMeta.rendererType)))[prop] = rendererType[prop];\n    }\n    this.isCompiled = true;\n  }\n}\n\nfunction CompiledTemplate_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiledTemplate.prototype._viewClass;\n/** @type {?} */\nCompiledTemplate.prototype.isCompiled;\n/** @type {?} */\nCompiledTemplate.prototype.isHost;\n/** @type {?} */\nCompiledTemplate.prototype.compType;\n/** @type {?} */\nCompiledTemplate.prototype.compMeta;\n/** @type {?} */\nCompiledTemplate.prototype.ngModule;\n/** @type {?} */\nCompiledTemplate.prototype.directives;\n}\n\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nclass ModuleBoundCompiler implements Compiler {\n/**\n * @param {?} _delegate\n * @param {?} _ngModule\n */\nconstructor(private _delegate: JitCompiler,\nprivate _ngModule: Type<any>) {}\n/**\n * @return {?}\n */\nget _injector(): Injector { return this._delegate.injector; }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    return this._delegate.getNgContentSelectors(component);\n  }\n/**\n * Clears all caches\n * @return {?}\n */\nclearCache(): void { this._delegate.clearCache(); }\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\nfunction ModuleBoundCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleBoundCompiler.prototype._delegate;\n/** @type {?} */\nModuleBoundCompiler.prototype._ngModule;\n}\n\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn: () => any[], out: CompileTypeSummary[] = []): CompileTypeSummary[] {\n  fn().forEach((entry) => {\n    if (typeof entry === 'function') {\n      flattenSummaries(entry, out);\n    } else {\n      out.push(entry);\n    }\n  });\n  return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext(): OutputContext {\n  const /** @type {?} */ importExpr = (symbol: any) =>\n      ir.importExpr({name: identifierName(symbol), moduleName: null, runtime: symbol});\n  return {statements: [], genFilePath: '', importExpr};\n}\n"]}