{"version":3,"sources":["../../../../../packages/compiler/src/i18n/extractor_merger.ts"],"names":[],"mappings":"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","file":"extractor_merger.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as html from '../ml_parser/ast';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\n\nimport * as i18n from './i18n_ast';\nimport {createI18nMessageFactory} from './i18n_parser';\nimport {I18nError} from './parse_util';\nimport {TranslationBundle} from './translation_bundle';\n\nconst /** @type {?} */ _I18N_ATTR = 'i18n';\nconst /** @type {?} */ _I18N_ATTR_PREFIX = 'i18n-';\nconst /** @type {?} */ _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nconst /** @type {?} */ MEANING_SEPARATOR = '|';\nconst /** @type {?} */ ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function extractMessages(\n    nodes: html.Node[], interpolationConfig: InterpolationConfig, implicitTags: string[],\n    implicitAttrs: {[k: string]: string[]}): ExtractionResult {\n  const /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n  return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function mergeTranslations(\n    nodes: html.Node[], translations: TranslationBundle, interpolationConfig: InterpolationConfig,\n    implicitTags: string[], implicitAttrs: {[k: string]: string[]}): ParseTreeResult {\n  const /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n  return visitor.merge(nodes, translations, interpolationConfig);\n}\nexport class ExtractionResult {\n/**\n * @param {?} messages\n * @param {?} errors\n */\nconstructor(public messages: i18n.Message[],\npublic errors: I18nError[]) {}\n}\n\nfunction ExtractionResult_tsickle_Closure_declarations() {\n/** @type {?} */\nExtractionResult.prototype.messages;\n/** @type {?} */\nExtractionResult.prototype.errors;\n}\n\ntype _VisitorMode = number;\nlet _VisitorMode: any = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n * \n * \\@internal\n */\nclass _Visitor implements html.Visitor {\nprivate _depth: number;\nprivate _inI18nNode: boolean;\nprivate _inImplicitNode: boolean;\nprivate _inI18nBlock: boolean;\nprivate _blockMeaningAndDesc: string;\nprivate _blockChildren: html.Node[];\nprivate _blockStartDepth: number;\nprivate _inIcu: boolean;\nprivate _msgCountAtSectionStart: number|undefined;\nprivate _errors: I18nError[];\nprivate _mode: _VisitorMode;\nprivate _messages: i18n.Message[];\nprivate _translations: TranslationBundle;\nprivate _createI18nMessage:\n      (msg: html.Node[], meaning: string, description: string, id: string) => i18n.Message;\n/**\n * @param {?} _implicitTags\n * @param {?} _implicitAttrs\n */\nconstructor(private _implicitTags: string[],\nprivate _implicitAttrs: {[k: string]: string[]}) {}\n/**\n * Extracts the messages from the tree\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @return {?}\n */\nextract(nodes: html.Node[], interpolationConfig: InterpolationConfig): ExtractionResult {\n    this._init(_VisitorMode.Extract, interpolationConfig);\n\n    nodes.forEach(node => node.visit(this, null));\n\n    if (this._inI18nBlock) {\n      this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n    }\n\n    return new ExtractionResult(this._messages, this._errors);\n  }\n/**\n * Returns a tree where all translatable nodes are translated\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @return {?}\n */\nmerge(\n      nodes: html.Node[], translations: TranslationBundle,\n      interpolationConfig: InterpolationConfig): ParseTreeResult {\n    this._init(_VisitorMode.Merge, interpolationConfig);\n    this._translations = translations;\n\n    // Construct a single fake root element\n    const /** @type {?} */ wrapper = new html.Element('wrapper', [], nodes, /** @type {?} */(( undefined)), undefined, undefined);\n\n    const /** @type {?} */ translatedNode = wrapper.visit(this, null);\n\n    if (this._inI18nBlock) {\n      this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n    }\n\n    return new ParseTreeResult(translatedNode.children, this._errors);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: html.ExpansionCase, context: any): any {\n    // Parse cases for translatable html attributes\n    const /** @type {?} */ expression = html.visitAll(this, icuCase.expression, context);\n\n    if (this._mode === _VisitorMode.Merge) {\n      return new html.ExpansionCase(\n          icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan,\n          icuCase.expSourceSpan);\n    }\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: html.Expansion, context: any): html.Expansion {\n    this._mayBeAddBlockChildren(icu);\n\n    const /** @type {?} */ wasInIcu = this._inIcu;\n\n    if (!this._inIcu) {\n      // nested ICU messages should not be extracted but top-level translated as a whole\n      if (this._isInTranslatableSection) {\n        this._addMessage([icu]);\n      }\n      this._inIcu = true;\n    }\n\n    const /** @type {?} */ cases = html.visitAll(this, icu.cases, context);\n\n    if (this._mode === _VisitorMode.Merge) {\n      icu = new html.Expansion(\n          icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n    }\n\n    this._inIcu = wasInIcu;\n\n    return icu;\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any {\n    const /** @type {?} */ isOpening = _isOpeningComment(comment);\n\n    if (isOpening && this._isInTranslatableSection) {\n      this._reportError(comment, 'Could not start a block inside a translatable section');\n      return;\n    }\n\n    const /** @type {?} */ isClosing = _isClosingComment(comment);\n\n    if (isClosing && !this._inI18nBlock) {\n      this._reportError(comment, 'Trying to close an unopened block');\n      return;\n    }\n\n    if (!this._inI18nNode && !this._inIcu) {\n      if (!this._inI18nBlock) {\n        if (isOpening) {\n          this._inI18nBlock = true;\n          this._blockStartDepth = this._depth;\n          this._blockChildren = [];\n          this._blockMeaningAndDesc = /** @type {?} */((\n              comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n          this._openTranslatableSection(comment);\n        }\n      } else {\n        if (isClosing) {\n          if (this._depth == this._blockStartDepth) {\n            this._closeTranslatableSection(comment, this._blockChildren);\n            this._inI18nBlock = false;\n            const /** @type {?} */ message = /** @type {?} */(( this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n            // merge attributes in sections\n            const /** @type {?} */ nodes = this._translateMessage(comment, message);\n            return html.visitAll(this, nodes);\n          } else {\n            this._reportError(comment, 'I18N blocks should not cross element boundaries');\n            return;\n          }\n        }\n      }\n    }\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: html.Text, context: any): html.Text {\n    if (this._isInTranslatableSection) {\n      this._mayBeAddBlockChildren(text);\n    }\n    return text;\n  }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: html.Element, context: any): html.Element|null {\n    this._mayBeAddBlockChildren(el);\n    this._depth++;\n    const /** @type {?} */ wasInI18nNode = this._inI18nNode;\n    const /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n    let /** @type {?} */ childNodes: html.Node[] = [];\n    let /** @type {?} */ translatedChildNodes: html.Node[] = /** @type {?} */(( undefined));\n\n    // Extract:\n    // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n    // - ICU messages\n    const /** @type {?} */ i18nAttr = _getI18nAttr(el);\n    const /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n    const /** @type {?} */ isImplicit = this._implicitTags.some(tag => el.name === tag) && !this._inIcu &&\n        !this._isInTranslatableSection;\n    const /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n    this._inImplicitNode = wasInImplicitNode || isImplicit;\n\n    if (!this._isInTranslatableSection && !this._inIcu) {\n      if (i18nAttr || isTopLevelImplicit) {\n        this._inI18nNode = true;\n        const /** @type {?} */ message = /** @type {?} */(( this._addMessage(el.children, i18nMeta)));\n        translatedChildNodes = this._translateMessage(el, message);\n      }\n\n      if (this._mode == _VisitorMode.Extract) {\n        const /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n        if (isTranslatable) this._openTranslatableSection(el);\n        html.visitAll(this, el.children);\n        if (isTranslatable) this._closeTranslatableSection(el, el.children);\n      }\n    } else {\n      if (i18nAttr || isTopLevelImplicit) {\n        this._reportError(\n            el, 'Could not mark an element as translatable inside a translatable section');\n      }\n\n      if (this._mode == _VisitorMode.Extract) {\n        // Descend into child nodes for extraction\n        html.visitAll(this, el.children);\n      }\n    }\n\n    if (this._mode === _VisitorMode.Merge) {\n      const /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n      visitNodes.forEach(child => {\n        const /** @type {?} */ visited = child.visit(this, context);\n        if (visited && !this._isInTranslatableSection) {\n          // Do not add the children from translatable sections (= i18n blocks here)\n          // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n          childNodes = childNodes.concat(visited);\n        }\n      });\n    }\n\n    this._visitAttributesOf(el);\n\n    this._depth--;\n    this._inI18nNode = wasInI18nNode;\n    this._inImplicitNode = wasInImplicitNode;\n\n    if (this._mode === _VisitorMode.Merge) {\n      const /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n      return new html.Element(\n          el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan,\n          el.endSourceSpan);\n    }\n    return null;\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any {\n    throw new Error('unreachable code');\n  }\n/**\n * @param {?} mode\n * @param {?} interpolationConfig\n * @return {?}\n */\n\nprivate _init(mode: _VisitorMode, interpolationConfig: InterpolationConfig): void {\n    this._mode = mode;\n    this._inI18nBlock = false;\n    this._inI18nNode = false;\n    this._depth = 0;\n    this._inIcu = false;\n    this._msgCountAtSectionStart = undefined;\n    this._errors = [];\n    this._messages = [];\n    this._inImplicitNode = false;\n    this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n  }\n/**\n * @param {?} el\n * @return {?}\n */\n\nprivate _visitAttributesOf(el: html.Element): void {\n    const /** @type {?} */ explicitAttrNameToValue: {[k: string]: string} = {};\n    const /** @type {?} */ implicitAttrNames: string[] = this._implicitAttrs[el.name] || [];\n\n    el.attrs.filter(attr => attr.name.startsWith(_I18N_ATTR_PREFIX))\n        .forEach(\n            attr => explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value);\n\n    el.attrs.forEach(attr => {\n      if (attr.name in explicitAttrNameToValue) {\n        this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n      } else if (implicitAttrNames.some(name => attr.name === name)) {\n        this._addMessage([attr]);\n      }\n    });\n  }\n/**\n * @param {?} ast\n * @param {?=} msgMeta\n * @return {?}\n */\n\nprivate _addMessage(ast: html.Node[], msgMeta?: string): i18n.Message|null {\n    if (ast.length == 0 ||\n        ast.length == 1 && ast[0] instanceof html.Attribute && !( /** @type {?} */((<html.Attribute>ast[0]))).value) {\n      // Do not create empty messages\n      return null;\n    }\n\n    const {meaning, description, id} = _parseMessageMeta(msgMeta);\n    const /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n    this._messages.push(message);\n    return message;\n  }\n/**\n * @param {?} el\n * @param {?} message\n * @return {?}\n */\n\nprivate _translateMessage(el: html.Node, message: i18n.Message): html.Node[] {\n    if (message && this._mode === _VisitorMode.Merge) {\n      const /** @type {?} */ nodes = this._translations.get(message);\n\n      if (nodes) {\n        return nodes;\n      }\n\n      this._reportError(\n          el, `Translation unavailable for message id=\"${this._translations.digest(message)}\"`);\n    }\n\n    return [];\n  }\n/**\n * @param {?} el\n * @return {?}\n */\n\nprivate _translateAttributes(el: html.Element): html.Attribute[] {\n    const /** @type {?} */ attributes = el.attrs;\n    const /** @type {?} */ i18nParsedMessageMeta:\n        {[name: string]: {meaning: string, description: string, id: string}} = {};\n\n    attributes.forEach(attr => {\n      if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            _parseMessageMeta(attr.value);\n      }\n    });\n\n    const /** @type {?} */ translatedAttributes: html.Attribute[] = [];\n\n    attributes.forEach((attr) => {\n      if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        // strip i18n specific attributes\n        return;\n      }\n\n      if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n        const {meaning, description, id} = i18nParsedMessageMeta[attr.name];\n        const /** @type {?} */ message: i18n.Message = this._createI18nMessage([attr], meaning, description, id);\n        const /** @type {?} */ nodes = this._translations.get(message);\n        if (nodes) {\n          if (nodes.length == 0) {\n            translatedAttributes.push(new html.Attribute(attr.name, '', attr.sourceSpan));\n          } else if (nodes[0] instanceof html.Text) {\n            const /** @type {?} */ value = ( /** @type {?} */((nodes[0] as html.Text))).value;\n            translatedAttributes.push(new html.Attribute(attr.name, value, attr.sourceSpan));\n          } else {\n            this._reportError(\n                el,\n                `Unexpected translation for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n          }\n        } else {\n          this._reportError(\n              el,\n              `Translation unavailable for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n        }\n      } else {\n        translatedAttributes.push(attr);\n      }\n    });\n\n    return translatedAttributes;\n  }\n/**\n * Add the node as a child of the block when:\n * - we are in a block,\n * - we are not inside a ICU message (those are handled separately),\n * - the node is a \"direct child\" of the block\n * @param {?} node\n * @return {?}\n */\n\nprivate _mayBeAddBlockChildren(node: html.Node): void {\n    if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n      this._blockChildren.push(node);\n    }\n  }\n/**\n * Marks the start of a section, see `_closeTranslatableSection`\n * @param {?} node\n * @return {?}\n */\n\nprivate _openTranslatableSection(node: html.Node): void {\n    if (this._isInTranslatableSection) {\n      this._reportError(node, 'Unexpected section start');\n    } else {\n      this._msgCountAtSectionStart = this._messages.length;\n    }\n  }\n/**\n * A translatable section could be:\n * - the content of translatable element,\n * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n * @return {?}\n */\n\nprivate get _isInTranslatableSection(): boolean {\n    return this._msgCountAtSectionStart !== void 0;\n  }\n/**\n * Terminates a section.\n * \n * If a section has only one significant children (comments not significant) then we should not\n * keep the message from this children:\n * \n * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n * - one for the <p> content with meaning and description,\n * - another one for the ICU message.\n * \n * In this case the last message is discarded as it contains less information (the AST is\n * otherwise identical).\n * \n * Note that we should still keep messages extracted from attributes inside the section (ie in the\n * ICU message here)\n * @param {?} node\n * @param {?} directChildren\n * @return {?}\n */\n\nprivate _closeTranslatableSection(node: html.Node, directChildren: html.Node[]): void {\n    if (!this._isInTranslatableSection) {\n      this._reportError(node, 'Unexpected section end');\n      return;\n    }\n\n    const /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n    const /** @type {?} */ significantChildren: number = directChildren.reduce(\n        (count: number, node: html.Node): number => count + (node instanceof html.Comment ? 0 : 1),\n        0);\n\n    if (significantChildren == 1) {\n      for (let /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */(( startIndex)); i--) {\n        const /** @type {?} */ ast = this._messages[i].nodes;\n        if (!(ast.length == 1 && ast[0] instanceof i18n.Text)) {\n          this._messages.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    this._msgCountAtSectionStart = undefined;\n  }\n/**\n * @param {?} node\n * @param {?} msg\n * @return {?}\n */\n\nprivate _reportError(node: html.Node, msg: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), msg));\n  }\n}\n\nfunction _Visitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_Visitor.prototype._depth;\n/** @type {?} */\n_Visitor.prototype._inI18nNode;\n/** @type {?} */\n_Visitor.prototype._inImplicitNode;\n/** @type {?} */\n_Visitor.prototype._inI18nBlock;\n/** @type {?} */\n_Visitor.prototype._blockMeaningAndDesc;\n/** @type {?} */\n_Visitor.prototype._blockChildren;\n/** @type {?} */\n_Visitor.prototype._blockStartDepth;\n/** @type {?} */\n_Visitor.prototype._inIcu;\n/** @type {?} */\n_Visitor.prototype._msgCountAtSectionStart;\n/** @type {?} */\n_Visitor.prototype._errors;\n/** @type {?} */\n_Visitor.prototype._mode;\n/** @type {?} */\n_Visitor.prototype._messages;\n/** @type {?} */\n_Visitor.prototype._translations;\n/** @type {?} */\n_Visitor.prototype._createI18nMessage;\n/** @type {?} */\n_Visitor.prototype._implicitTags;\n/** @type {?} */\n_Visitor.prototype._implicitAttrs;\n}\n\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n: html.Node): boolean {\n  return !!(n instanceof html.Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n: html.Node): boolean {\n  return !!(n instanceof html.Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p: html.Element): html.Attribute|null {\n  return p.attrs.find(attr => attr.name === _I18N_ATTR) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n?: string): {meaning: string, description: string, id: string} {\n  if (!i18n) return {meaning: '', description: '', id: ''};\n\n  const /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n  const /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n  const [meaningAndDesc, id] =\n      (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n  const [meaning, description] = (descIndex > -1) ?\n      [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n      ['', meaningAndDesc];\n\n  return {meaning, description, id};\n}\n"]}