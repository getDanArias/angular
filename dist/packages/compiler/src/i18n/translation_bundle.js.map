{"version":3,"sources":["../../../../../packages/compiler/src/i18n/translation_bundle.ts"],"names":[],"mappings":"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","file":"translation_bundle.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy, ÉµConsole as Console} from '@angular/core';\nimport * as html from '../ml_parser/ast';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport * as i18n from './i18n_ast';\nimport {I18nError} from './parse_util';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for translated messages\n */\nexport class TranslationBundle {\nprivate _i18nToHtml: I18nToHtmlVisitor;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?=} locale\n * @param {?=} digest\n * @param {?=} mapperFactory\n * @param {?=} missingTranslationStrategy\n * @param {?=} console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {}, locale: string|null,\npublic digest: (m: i18n.Message) => string,\npublic mapperFactory?: (m: i18n.Message) => PlaceholderMapper,\n      missingTranslationStrategy: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    this._i18nToHtml = new I18nToHtmlVisitor(\n        _i18nNodesByMsgId, locale, digest, /** @type {?} */(( mapperFactory)), missingTranslationStrategy, console);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @param {?} serializer\n * @param {?} missingTranslationStrategy\n * @param {?=} console\n * @return {?}\n */\nstatic load(\n      content: string, url: string, serializer: Serializer,\n      missingTranslationStrategy: MissingTranslationStrategy,\n      console?: Console): TranslationBundle {\n    const {locale, i18nNodesByMsgId} = serializer.load(content, url);\n    const /** @type {?} */ digestFn = (m: i18n.Message) => serializer.digest(m);\n    const /** @type {?} */ mapperFactory = (m: i18n.Message) => /** @type {?} */(( serializer.createNameMapper(m)));\n    return new TranslationBundle(\n        i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nget(srcMsg: i18n.Message): html.Node[] {\n    const /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n\n    if (html.errors.length) {\n      throw new Error(html.errors.join('\\n'));\n    }\n\n    return html.nodes;\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nhas(srcMsg: i18n.Message): boolean { return this.digest(srcMsg) in this._i18nNodesByMsgId; }\n}\n\nfunction TranslationBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationBundle.prototype._i18nToHtml;\n/** @type {?} */\nTranslationBundle.prototype._i18nNodesByMsgId;\n/** @type {?} */\nTranslationBundle.prototype.digest;\n/** @type {?} */\nTranslationBundle.prototype.mapperFactory;\n}\n\nclass I18nToHtmlVisitor implements i18n.Visitor {\nprivate _srcMsg: i18n.Message;\nprivate _contextStack: {msg: i18n.Message, mapper: (name: string) => string}[] = [];\nprivate _errors: I18nError[] = [];\nprivate _mapper: (name: string) => string;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?=} _locale\n * @param {?=} _digest\n * @param {?=} _mapperFactory\n * @param {?=} _missingTranslationStrategy\n * @param {?=} _console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {},\nprivate _locale: string|null,\nprivate _digest: (m: i18n.Message) => string,\nprivate _mapperFactory: (m: i18n.Message) => PlaceholderMapper,\nprivate _missingTranslationStrategy: MissingTranslationStrategy,\nprivate _console?: Console) {\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nconvert(srcMsg: i18n.Message): {nodes: html.Node[], errors: I18nError[]} {\n    this._contextStack.length = 0;\n    this._errors.length = 0;\n\n    // i18n to text\n    const /** @type {?} */ text = this._convertToText(srcMsg);\n\n    // text to html\n    const /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n    const /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n\n    return {\n      nodes: html.rootNodes,\n      errors: [...this._errors, ...html.errors],\n    };\n  }\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): string { return text.value; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): any {\n    return container.children.map(n => n.visit(this)).join('');\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): any {\n    const /** @type {?} */ cases = Object.keys(icu.cases).map(k => `${k} {${icu.cases[k].visit(this)}}`);\n\n    // TODO(vicb): Once all format switch to using expression placeholders\n    // we should throw when the placeholder is not in the source message\n    const /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n        this._srcMsg.placeholders[icu.expression] :\n        icu.expression;\n\n    return `{${exp}, ${icu.type}, ${cases.join(' ')}}`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): string {\n    const /** @type {?} */ phName = this._mapper(ph.name);\n    if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n      return this._srcMsg.placeholders[phName];\n    }\n\n    if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n      return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n    }\n\n    this._addError(ph, `Unknown placeholder \"${ph.name}\"`);\n    return '';\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): string {\n    const /** @type {?} */ tag = `${ph.tag}`;\n    const /** @type {?} */ attrs = Object.keys(ph.attrs).map(name => `${name}=\"${ph.attrs[name]}\"`).join(' ');\n    if (ph.isVoid) {\n      return `<${tag} ${attrs}/>`;\n    }\n    const /** @type {?} */ children = ph.children.map((c: i18n.Node) => c.visit(this)).join('');\n    return `<${tag} ${attrs}>${children}</${tag}>`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): string {\n    // An ICU placeholder references the source message to be serialized\n    return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n  }\n/**\n * Convert a source message to a translated text string:\n * - text nodes are replaced with their translation,\n * - placeholders are replaced with their content,\n * - ICU nodes are converted to ICU expressions.\n * @param {?} srcMsg\n * @return {?}\n */\n\nprivate _convertToText(srcMsg: i18n.Message): string {\n    const /** @type {?} */ id = this._digest(srcMsg);\n    const /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n    let /** @type {?} */ nodes: i18n.Node[];\n\n    this._contextStack.push({msg: this._srcMsg, mapper: this._mapper});\n    this._srcMsg = srcMsg;\n\n    if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n      // When there is a translation use its nodes as the source\n      // And create a mapper to convert serialized placeholder names to internal names\n      nodes = this._i18nNodesByMsgId[id];\n      this._mapper = (name: string) => mapper ? /** @type {?} */(( mapper.toInternalName(name))) : name;\n    } else {\n      // When no translation has been found\n      // - report an error / a warning / nothing,\n      // - use the nodes from the original message\n      // - placeholders are already internal and need no mapper\n      if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n        const /** @type {?} */ ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n        this._addError(srcMsg.nodes[0], `Missing translation for message \"${id}\"${ctx}`);\n      } else if (\n          this._console &&\n          this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n        const /** @type {?} */ ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n        this._console.warn(`Missing translation for message \"${id}\"${ctx}`);\n      }\n      nodes = srcMsg.nodes;\n      this._mapper = (name: string) => name;\n    }\n    const /** @type {?} */ text = nodes.map(node => node.visit(this)).join('');\n    const /** @type {?} */ context = /** @type {?} */(( this._contextStack.pop()));\n    this._srcMsg = context.msg;\n    this._mapper = context.mapper;\n    return text;\n  }\n/**\n * @param {?} el\n * @param {?} msg\n * @return {?}\n */\n\nprivate _addError(el: i18n.Node, msg: string) {\n    this._errors.push(new I18nError(el.sourceSpan, msg));\n  }\n}\n\nfunction I18nToHtmlVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nToHtmlVisitor.prototype._srcMsg;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._contextStack;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._errors;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapper;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._i18nNodesByMsgId;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._locale;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._digest;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapperFactory;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._missingTranslationStrategy;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._console;\n}\n\n"]}