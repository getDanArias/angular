{"version":3,"sources":["../../../../packages/compiler/src/directive_normalizer.ts"],"names":[],"mappings":"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","file":"directive_normalizer.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileAnimationEntryMetadata, CompileDirectiveMetadata, CompileStylesheetMetadata, CompileTemplateMetadata, templateSourceUrl} from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {CompilerInjectable} from './injectable';\nimport * as html from './ml_parser/ast';\nimport {HtmlParser} from './ml_parser/html_parser';\nimport {InterpolationConfig} from './ml_parser/interpolation_config';\nimport {ResourceLoader} from './resource_loader';\nimport {extractStyleUrls, isStyleUrlResolvable} from './style_url_resolver';\nimport {PreparsedElementType, preparseElement} from './template_parser/template_preparser';\nimport {UrlResolver} from './url_resolver';\nimport {SyncAsync, isDefined, syntaxError} from './util';\n/**\n * @record\n */\nexport function PrenormalizedTemplateMetadata() {}\n\n\nfunction PrenormalizedTemplateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.ngModuleType;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.componentType;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.moduleUrl;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.template;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.templateUrl;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.styles;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.styleUrls;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.interpolation;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.encapsulation;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.animations;\n}\n\n\nexport interface PrenormalizedTemplateMetadata {\n  ngModuleType: any;\n  componentType: any;\n  moduleUrl: string;\n  template: string|null;\n  templateUrl: string|null;\n  styles: string[];\n  styleUrls: string[];\n  interpolation: [string, string]|null;\n  encapsulation: ViewEncapsulation|null;\n  animations: CompileAnimationEntryMetadata[];\n}\nexport class DirectiveNormalizer {\nprivate _resourceLoaderCache = new Map<string, SyncAsync<string>>();\n/**\n * @param {?} _resourceLoader\n * @param {?} _urlResolver\n * @param {?} _htmlParser\n * @param {?} _config\n */\nconstructor(\nprivate _resourceLoader: ResourceLoader,\nprivate _urlResolver: UrlResolver,\nprivate _htmlParser: HtmlParser,\nprivate _config: CompilerConfig) {}\n/**\n * @return {?}\n */\nclearCache(): void { this._resourceLoaderCache.clear(); }\n/**\n * @param {?} normalizedDirective\n * @return {?}\n */\nclearCacheFor(normalizedDirective: CompileDirectiveMetadata): void {\n    if (!normalizedDirective.isComponent) {\n      return;\n    }\n    const /** @type {?} */ template = /** @type {?} */(( normalizedDirective.template));\n    this._resourceLoaderCache.delete( /** @type {?} */((template.templateUrl)));\n    template.externalStylesheets.forEach(\n        (stylesheet) => { this._resourceLoaderCache.delete( /** @type {?} */((stylesheet.moduleUrl))); });\n  }\n/**\n * @param {?} url\n * @return {?}\n */\n\nprivate _fetch(url: string): SyncAsync<string> {\n    let /** @type {?} */ result = this._resourceLoaderCache.get(url);\n    if (!result) {\n      result = this._resourceLoader.get(url);\n      this._resourceLoaderCache.set(url, result);\n    }\n    return result;\n  }\n/**\n * @param {?} prenormData\n * @return {?}\n */\nnormalizeTemplate(prenormData: PrenormalizedTemplateMetadata):\n      SyncAsync<CompileTemplateMetadata> {\n    if (isDefined(prenormData.template)) {\n      if (isDefined(prenormData.templateUrl)) {\n        throw syntaxError(\n            `'${stringify(prenormData.componentType)}' component cannot define both template and templateUrl`);\n      }\n      if (typeof prenormData.template !== 'string') {\n        throw syntaxError(\n            `The template specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n    } else if (isDefined(prenormData.templateUrl)) {\n      if (typeof prenormData.templateUrl !== 'string') {\n        throw syntaxError(\n            `The templateUrl specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n    } else {\n      throw syntaxError(\n          `No template specified for component ${stringify(prenormData.componentType)}`);\n    }\n    return SyncAsync.then(\n        this.normalizeTemplateOnly(prenormData),\n        (result: CompileTemplateMetadata) => this.normalizeExternalStylesheets(result));\n  }\n/**\n * @param {?} prenomData\n * @return {?}\n */\nnormalizeTemplateOnly(prenomData: PrenormalizedTemplateMetadata):\n      SyncAsync<CompileTemplateMetadata> {\n    let /** @type {?} */ template: SyncAsync<string>;\n    let /** @type {?} */ templateUrl: string;\n    if (prenomData.template != null) {\n      template = prenomData.template;\n      templateUrl = prenomData.moduleUrl;\n    } else {\n      templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */(( prenomData.templateUrl)));\n      template = this._fetch(templateUrl);\n    }\n    return SyncAsync.then(\n        template, (template) => this.normalizeLoadedTemplate(prenomData, template, templateUrl));\n  }\n/**\n * @param {?} prenormData\n * @param {?} template\n * @param {?} templateAbsUrl\n * @return {?}\n */\nnormalizeLoadedTemplate(\n      prenormData: PrenormalizedTemplateMetadata, template: string,\n      templateAbsUrl: string): CompileTemplateMetadata {\n    const /** @type {?} */ isInline = !!prenormData.template;\n    const /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray( /** @type {?} */((prenormData.interpolation)));\n    const /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(\n        template,\n        templateSourceUrl(\n            {reference: prenormData.ngModuleType}, {type: {reference: prenormData.componentType}},\n            {isInline, templateUrl: templateAbsUrl}),\n        true, interpolationConfig);\n    if (rootNodesAndErrors.errors.length > 0) {\n      const /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`);\n    }\n\n    const /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n      styles: prenormData.styles,\n      styleUrls: prenormData.styleUrls,\n      moduleUrl: prenormData.moduleUrl\n    }));\n\n    const /** @type {?} */ visitor = new TemplatePreparseVisitor();\n    html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n    const /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata(\n        {styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl}));\n\n    let /** @type {?} */ encapsulation = prenormData.encapsulation;\n    if (encapsulation == null) {\n      encapsulation = this._config.defaultEncapsulation;\n    }\n\n    const /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n    const /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n\n    if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n        styleUrls.length === 0) {\n      encapsulation = ViewEncapsulation.None;\n    }\n\n    return new CompileTemplateMetadata({\n      encapsulation,\n      template,\n      templateUrl: templateAbsUrl, styles, styleUrls,\n      ngContentSelectors: visitor.ngContentSelectors,\n      animations: prenormData.animations,\n      interpolation: prenormData.interpolation, isInline,\n      externalStylesheets: []\n    });\n  }\n/**\n * @param {?} templateMeta\n * @return {?}\n */\nnormalizeExternalStylesheets(templateMeta: CompileTemplateMetadata):\n      SyncAsync<CompileTemplateMetadata> {\n    return SyncAsync.then(\n        this._loadMissingExternalStylesheets(templateMeta.styleUrls),\n        (externalStylesheets) => new CompileTemplateMetadata({\n          encapsulation: templateMeta.encapsulation,\n          template: templateMeta.template,\n          templateUrl: templateMeta.templateUrl,\n          styles: templateMeta.styles,\n          styleUrls: templateMeta.styleUrls,\n          externalStylesheets: externalStylesheets,\n          ngContentSelectors: templateMeta.ngContentSelectors,\n          animations: templateMeta.animations,\n          interpolation: templateMeta.interpolation,\n          isInline: templateMeta.isInline,\n        }));\n  }\n/**\n * @param {?} styleUrls\n * @param {?=} loadedStylesheets\n * @return {?}\n */\n\nprivate _loadMissingExternalStylesheets(\n      styleUrls: string[],\n      loadedStylesheets:\n          Map<string, CompileStylesheetMetadata> = new Map<string, CompileStylesheetMetadata>()):\n      SyncAsync<CompileStylesheetMetadata[]> {\n    return SyncAsync.then(\n        SyncAsync.all(styleUrls.filter((styleUrl) => !loadedStylesheets.has(styleUrl))\n                          .map(\n                              styleUrl => SyncAsync.then(\n                                  this._fetch(styleUrl),\n                                  (loadedStyle) => {\n                                    const /** @type {?} */ stylesheet =\n                                        this.normalizeStylesheet(new CompileStylesheetMetadata(\n                                            {styles: [loadedStyle], moduleUrl: styleUrl}));\n                                    loadedStylesheets.set(styleUrl, stylesheet);\n                                    return this._loadMissingExternalStylesheets(\n                                        stylesheet.styleUrls, loadedStylesheets);\n                                  }))),\n        (_) => Array.from(loadedStylesheets.values()));\n  }\n/**\n * @param {?} stylesheet\n * @return {?}\n */\nnormalizeStylesheet(stylesheet: CompileStylesheetMetadata): CompileStylesheetMetadata {\n    const /** @type {?} */ moduleUrl = /** @type {?} */(( stylesheet.moduleUrl));\n    const /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n                             .map(url => this._urlResolver.resolve(moduleUrl, url));\n\n    const /** @type {?} */ allStyles = stylesheet.styles.map(style => {\n      const /** @type {?} */ styleWithImports = extractStyleUrls(this._urlResolver, moduleUrl, style);\n      allStyleUrls.push(...styleWithImports.styleUrls);\n      return styleWithImports.style;\n    });\n\n    return new CompileStylesheetMetadata(\n        {styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl});\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ResourceLoader, },\n{type: UrlResolver, },\n{type: HtmlParser, },\n{type: CompilerConfig, },\n];\n}\n\nfunction DirectiveNormalizer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectiveNormalizer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectiveNormalizer.ctorParameters;\n/** @type {?} */\nDirectiveNormalizer.prototype._resourceLoaderCache;\n/** @type {?} */\nDirectiveNormalizer.prototype._resourceLoader;\n/** @type {?} */\nDirectiveNormalizer.prototype._urlResolver;\n/** @type {?} */\nDirectiveNormalizer.prototype._htmlParser;\n/** @type {?} */\nDirectiveNormalizer.prototype._config;\n}\n\nclass TemplatePreparseVisitor implements html.Visitor {\n  ngContentSelectors: string[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n  ngNonBindableStackCount: number = 0;\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: html.Element, context: any): any {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    switch (preparsedElement.type) {\n      case PreparsedElementType.NG_CONTENT:\n        if (this.ngNonBindableStackCount === 0) {\n          this.ngContentSelectors.push(preparsedElement.selectAttr);\n        }\n        break;\n      case PreparsedElementType.STYLE:\n        let /** @type {?} */ textContent = '';\n        ast.children.forEach(child => {\n          if (child instanceof html.Text) {\n            textContent += child.value;\n          }\n        });\n        this.styles.push(textContent);\n        break;\n      case PreparsedElementType.STYLESHEET:\n        this.styleUrls.push(preparsedElement.hrefAttr);\n        break;\n      default:\n        break;\n    }\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount++;\n    }\n    html.visitAll(this, ast.children);\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount--;\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(ast: html.Expansion, context: any): any { html.visitAll(this, ast.cases); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(ast: html.ExpansionCase, context: any): any {\n    html.visitAll(this, ast.expression);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitComment(ast: html.Comment, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(ast: html.Attribute, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: html.Text, context: any): any { return null; }\n}\n\nfunction TemplatePreparseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplatePreparseVisitor.prototype.ngContentSelectors;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.styles;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.styleUrls;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.ngNonBindableStackCount;\n}\n\n"]}