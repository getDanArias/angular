{"version":3,"sources":["../../../../../packages/core/src/view/refs.ts"],"names":[],"mappings":"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","file":"refs.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return ( /** @type {?} */((componentFactory as ComponentFactory_))).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * \\@internal\n */\nviewDefFactory: ViewDefinitionFactory;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} _inputs\n * @param {?} _outputs\n * @param {?} ngContentSelectors\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory,\nprivate _inputs: {[propName: string]: string}|null,\nprivate _outputs: {[propName: string]: string},\npublic ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n/**\n * @return {?}\n */\nget inputs() {\n    const /** @type {?} */ inputsArr: {propName: string, templateName: string}[] = [];\n    const /** @type {?} */ inputs = /** @type {?} */(( this._inputs));\n    for (let /** @type {?} */ propName in inputs) {\n      const /** @type {?} */ templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n/**\n * @return {?}\n */\nget outputs() {\n    const /** @type {?} */ outputsArr: {propName: string, templateName: string}[] = [];\n    for (let /** @type {?} */ propName in this._outputs) {\n      const /** @type {?} */ templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n    const /** @type {?} */ componentNodeIndex = /** @type {?} */(( /** @type {?} */(( viewDef.nodes[0].element)).componentProvider)).index;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype.viewDefFactory;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n/** @type {?} */\nComponentFactory_.prototype._inputs;\n/** @type {?} */\nComponentFactory_.prototype._outputs;\n/** @type {?} */\nComponentFactory_.prototype.ngContentSelectors;\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ implements ViewContainerData {\n/**\n * \\@internal\n */\n_embeddedViews: ViewData[] = [];\n/**\n * @param {?} _view\n * @param {?} _elDef\n * @param {?} _data\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef,\nprivate _data: ElementData) {}\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = /** @type {?} */(( view.parent));\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = /** @type {?} */(( detachEmbeddedView(this._data, i)));\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef|null {\n    const /** @type {?} */ view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._embeddedViews.length; };\n/**\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModuleRef\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const /** @type {?} */ componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef|null {\n    const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewContainerRef_.prototype._embeddedViews;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n/** @type {?} */\nViewContainerRef_.prototype._data;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n/**\n * \\@internal\n */\n_view: ViewData;\nprivate _viewContainerRef: ViewContainerRef|null;\nprivate _appRef: ApplicationRef|null;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { markParentViewsForCheck(this._view); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.Attached; }\n/**\n * @return {?}\n */\ndetectChanges(): void {\n    const /** @type {?} */ fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    Services.checkAndUpdateView(this._view);\n    if (fs.end) {\n      fs.end();\n    }\n  }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.Attached; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n/**\n * \\@internal\n */\n_projectedViews: ViewData[];\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) { super(); }\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, /** @type {?} */(( /** @type {?} */(( this._def.element)).template)), context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTemplateRef_.prototype._projectedViews;\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef|null) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const /** @type {?} */ elData = asElementData(view, def.index);\n    return /** @type {?} */(( def.element)).template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.index).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.index).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) { /** @type {?} */((\n      this.delegate.destroyNode))(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\nprivate _destroyListeners: (() => void)[] = [];\nprivate _destroyed: boolean = false;\n/**\n * \\@internal\n */\n_providers: any[];\n/**\n * @param {?} _moduleType\n * @param {?} _parent\n * @param {?} _bootstrapComponents\n * @param {?} _def\n */\nconstructor(\nprivate _moduleType: Type<any>,\npublic _parent: Injector,\npublic _bootstrapComponents: Type<any>[],\npublic _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: DepFlags.None}, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget instance() { return this.get(this._moduleType); }\n/**\n * @return {?}\n */\nget componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n\nfunction NgModuleRef__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleRef_.prototype._destroyListeners;\n/** @type {?} */\nNgModuleRef_.prototype._destroyed;\n/**\n * \\@internal\n * @type {?}\n */\nNgModuleRef_.prototype._providers;\n/** @type {?} */\nNgModuleRef_.prototype._moduleType;\n/** @type {?} */\nNgModuleRef_.prototype._parent;\n/** @type {?} */\nNgModuleRef_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleRef_.prototype._def;\n}\n\n"]}