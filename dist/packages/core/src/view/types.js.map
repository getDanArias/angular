{"version":3,"sources":["../../../../../packages/core/src/view/types.ts"],"names":[],"mappings":"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","file":"types.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\nexport function DefinitionFactory() {}\n\n\nfunction DefinitionFactory_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(logger: NodeLogger): D;\n*/\n}\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\nexport function NodeLogger() {}\n\n\nfunction NodeLogger_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): () => void;\n*/\n}\n\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n/**\n * @record\n */\nexport function Definition() {}\n\n\nfunction Definition_tsickle_Closure_declarations() {\n/** @type {?} */\nDefinition.prototype.factory;\n}\n\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n/**\n * @record\n */\nexport function NgModuleDefinition() {}\n\n\nfunction NgModuleDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleDefinition.prototype.providers;\n/** @type {?} */\nNgModuleDefinition.prototype.providersByKey;\n}\n\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n}\n/**\n * @record\n */\nexport function NgModuleDefinitionFactory() {}\n\n\nfunction NgModuleDefinitionFactory_tsickle_Closure_declarations() {\n}\n\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n;\n/**\n * @record\n */\nexport function ViewDefinition() {}\n\n\nfunction ViewDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nViewDefinition.prototype.flags;\n/** @type {?} */\nViewDefinition.prototype.updateDirectives;\n/** @type {?} */\nViewDefinition.prototype.updateRenderer;\n/** @type {?} */\nViewDefinition.prototype.handleEvent;\n/**\n * Order: Depth first.\n * Especially providers are before elements / anchors.\n * @type {?}\n */\nViewDefinition.prototype.nodes;\n/**\n * aggregated NodeFlags for all nodes *\n * @type {?}\n */\nViewDefinition.prototype.nodeFlags;\n/** @type {?} */\nViewDefinition.prototype.rootNodeFlags;\n/** @type {?} */\nViewDefinition.prototype.lastRenderRootNode;\n/** @type {?} */\nViewDefinition.prototype.bindingCount;\n/** @type {?} */\nViewDefinition.prototype.outputCount;\n/**\n * Binary or of all query ids that are matched by one of the nodes.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nViewDefinition.prototype.nodeMatchedQueries;\n}\n\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n/**\n * @record\n */\nexport function ViewDefinitionFactory() {}\n\n\nfunction ViewDefinitionFactory_tsickle_Closure_declarations() {\n}\n\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n/**\n * @record\n */\nexport function ViewUpdateFn() {}\n\n\nfunction ViewUpdateFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(check: NodeCheckFn, view: ViewData): void;\n*/\n}\n\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n/**\n * @record\n */\nexport function NodeCheckFn() {}\n\n\nfunction NodeCheckFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n*/\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n*/\n}\n\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline, Dynamic}\n/**\n * @record\n */\nexport function ViewHandleEventFn() {}\n\n\nfunction ViewHandleEventFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n*/\n}\n\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n/**\n * A node definition in the view.\n * \n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\nexport function NodeDef() {}\n\n\nfunction NodeDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeDef.prototype.flags;\n/** @type {?} */\nNodeDef.prototype.index;\n/** @type {?} */\nNodeDef.prototype.parent;\n/** @type {?} */\nNodeDef.prototype.renderParent;\n/**\n * this is checked against NgContentDef.index to find matched nodes\n * @type {?}\n */\nNodeDef.prototype.ngContentIndex;\n/**\n * number of transitive children\n * @type {?}\n */\nNodeDef.prototype.childCount;\n/**\n * aggregated NodeFlags for all transitive children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.childFlags;\n/**\n * aggregated NodeFlags for all direct children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.directChildFlags;\n/** @type {?} */\nNodeDef.prototype.bindingIndex;\n/** @type {?} */\nNodeDef.prototype.bindings;\n/** @type {?} */\nNodeDef.prototype.bindingFlags;\n/** @type {?} */\nNodeDef.prototype.outputIndex;\n/** @type {?} */\nNodeDef.prototype.outputs;\n/**\n * references that the user placed on the element\n * @type {?}\n */\nNodeDef.prototype.references;\n/**\n * ids and value types of all queries that are matched by this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueries;\n/**\n * Binary or of all matched query ids of this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueryIds;\n/**\n * Binary or of all query ids that are matched by one of the children.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nNodeDef.prototype.childMatchedQueries;\n/** @type {?} */\nNodeDef.prototype.element;\n/** @type {?} */\nNodeDef.prototype.provider;\n/** @type {?} */\nNodeDef.prototype.text;\n/** @type {?} */\nNodeDef.prototype.query;\n/** @type {?} */\nNodeDef.prototype.ngContent;\n}\n\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  index: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n/**\n * @record\n */\nexport function BindingDef() {}\n\n\nfunction BindingDef_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingDef.prototype.flags;\n/** @type {?} */\nBindingDef.prototype.ns;\n/** @type {?} */\nBindingDef.prototype.name;\n/** @type {?} */\nBindingDef.prototype.nonMinifiedName;\n/** @type {?} */\nBindingDef.prototype.securityContext;\n/** @type {?} */\nBindingDef.prototype.suffix;\n}\n\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n/**\n * @record\n */\nexport function OutputDef() {}\n\n\nfunction OutputDef_tsickle_Closure_declarations() {\n/** @type {?} */\nOutputDef.prototype.type;\n/** @type {?} */\nOutputDef.prototype.target;\n/** @type {?} */\nOutputDef.prototype.eventName;\n/** @type {?} */\nOutputDef.prototype.propName;\n}\n\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef,\n  RenderElement,\n  TemplateRef,\n  ViewContainerRef,\n  Provider\n}\n/**\n * @record\n */\nexport function ElementDef() {}\n\n\nfunction ElementDef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementDef.prototype.name;\n/** @type {?} */\nElementDef.prototype.ns;\n/**\n * ns, name, value\n * @type {?}\n */\nElementDef.prototype.attrs;\n/** @type {?} */\nElementDef.prototype.template;\n/** @type {?} */\nElementDef.prototype.componentProvider;\n/** @type {?} */\nElementDef.prototype.componentRendererType;\n/** @type {?} */\nElementDef.prototype.componentView;\n/**\n * visible public providers for DI in the view,\n * as see from this element. This does not include private providers.\n * @type {?}\n */\nElementDef.prototype.publicProviders;\n/**\n * same as visiblePublicProviders, but also includes private providers\n * that are located on this element.\n * @type {?}\n */\nElementDef.prototype.allProviders;\n/** @type {?} */\nElementDef.prototype.handleEvent;\n}\n\n\nexport interface ElementDef {\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n/**\n * @record\n */\nexport function ElementHandleEventFn() {}\n\n\nfunction ElementHandleEventFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, eventName: string, event: any): boolean;\n*/\n}\n\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n/**\n * @record\n */\nexport function ProviderDef() {}\n\n\nfunction ProviderDef_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderDef.prototype.token;\n/** @type {?} */\nProviderDef.prototype.value;\n/** @type {?} */\nProviderDef.prototype.deps;\n}\n\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n/**\n * @record\n */\nexport function NgModuleProviderDef() {}\n\n\nfunction NgModuleProviderDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleProviderDef.prototype.flags;\n/** @type {?} */\nNgModuleProviderDef.prototype.index;\n/** @type {?} */\nNgModuleProviderDef.prototype.token;\n/** @type {?} */\nNgModuleProviderDef.prototype.value;\n/** @type {?} */\nNgModuleProviderDef.prototype.deps;\n}\n\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n/**\n * @record\n */\nexport function DepDef() {}\n\n\nfunction DepDef_tsickle_Closure_declarations() {\n/** @type {?} */\nDepDef.prototype.flags;\n/** @type {?} */\nDepDef.prototype.token;\n/** @type {?} */\nDepDef.prototype.tokenKey;\n}\n\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Value = 2 << 2,\n}\n/**\n * @record\n */\nexport function TextDef() {}\n\n\nfunction TextDef_tsickle_Closure_declarations() {\n/** @type {?} */\nTextDef.prototype.prefix;\n}\n\n\nexport interface TextDef { prefix: string; }\n/**\n * @record\n */\nexport function QueryDef() {}\n\n\nfunction QueryDef_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryDef.prototype.id;\n/** @type {?} */\nQueryDef.prototype.filterId;\n/** @type {?} */\nQueryDef.prototype.bindings;\n}\n\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n/**\n * @record\n */\nexport function QueryBindingDef() {}\n\n\nfunction QueryBindingDef_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBindingDef.prototype.propName;\n/** @type {?} */\nQueryBindingDef.prototype.bindingType;\n}\n\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First, All}\n/**\n * @record\n */\nexport function NgContentDef() {}\n\n\nfunction NgContentDef_tsickle_Closure_declarations() {\n/**\n * this index is checked against NodeDef.ngContentIndex to find the nodes\n * that are matched by this ng-content.\n * Note that a NodeDef with an ng-content can be reprojected, i.e.\n * have a ngContentIndex on its own.\n * @type {?}\n */\nNgContentDef.prototype.index;\n}\n\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n/**\n * @record\n */\nexport function NgModuleData() {}\n\n\nfunction NgModuleData_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleData.prototype._def;\n/** @type {?} */\nNgModuleData.prototype._parent;\n/** @type {?} */\nNgModuleData.prototype._providers;\n}\n\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ViewData() {}\n\n\nfunction ViewData_tsickle_Closure_declarations() {\n/** @type {?} */\nViewData.prototype.def;\n/** @type {?} */\nViewData.prototype.root;\n/** @type {?} */\nViewData.prototype.renderer;\n/** @type {?} */\nViewData.prototype.parentNodeDef;\n/** @type {?} */\nViewData.prototype.parent;\n/** @type {?} */\nViewData.prototype.viewContainerParent;\n/** @type {?} */\nViewData.prototype.component;\n/** @type {?} */\nViewData.prototype.context;\n/** @type {?} */\nViewData.prototype.nodes;\n/** @type {?} */\nViewData.prototype.state;\n/** @type {?} */\nViewData.prototype.oldValues;\n/** @type {?} */\nViewData.prototype.disposables;\n}\n\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges\n}\n/**\n * @record\n */\nexport function DisposableFn() {}\n\n\nfunction DisposableFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): void;\n*/\n}\n\n\nexport interface DisposableFn { (): void; }\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n/**\n * Data for an instantiated NodeType.Text.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function TextData() {}\n\n\nfunction TextData_tsickle_Closure_declarations() {\n/** @type {?} */\nTextData.prototype.renderText;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.Element.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ElementData() {}\n\n\nfunction ElementData_tsickle_Closure_declarations() {\n/** @type {?} */\nElementData.prototype.renderElement;\n/** @type {?} */\nElementData.prototype.componentView;\n/** @type {?} */\nElementData.prototype.viewContainer;\n/** @type {?} */\nElementData.prototype.template;\n}\n\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n/**\n * @record\n */\nexport function ViewContainerData() {}\n\n\nfunction ViewContainerData_tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainerData.prototype._embeddedViews;\n}\n\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n/**\n * @record\n */\nexport function TemplateData() {}\n\n\nfunction TemplateData_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateData.prototype._projectedViews;\n}\n\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.Provider.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ProviderData() {}\n\n\nfunction ProviderData_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderData.prototype.instance;\n}\n\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function PureExpressionData() {}\n\n\nfunction PureExpressionData_tsickle_Closure_declarations() {\n/** @type {?} */\nPureExpressionData.prototype.value;\n}\n\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * @record\n */\nexport function RootData() {}\n\n\nfunction RootData_tsickle_Closure_declarations() {\n/** @type {?} */\nRootData.prototype.injector;\n/** @type {?} */\nRootData.prototype.ngModule;\n/** @type {?} */\nRootData.prototype.projectableNodes;\n/** @type {?} */\nRootData.prototype.selectorOrNode;\n/** @type {?} */\nRootData.prototype.renderer;\n/** @type {?} */\nRootData.prototype.rendererFactory;\n/** @type {?} */\nRootData.prototype.errorHandler;\n/** @type {?} */\nRootData.prototype.sanitizer;\n}\n\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\nfunction DebugContext_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.view = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.nodeIndex = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.component = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.providerTokens = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.references = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.componentRenderElement = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.renderNode = function() {};\n\n/**\n * @abstract\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nDebugContext.prototype.logError = function(console, values) {};\n}\n\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n/**\n * @record\n */\nexport function ProviderOverride() {}\n\n\nfunction ProviderOverride_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderOverride.prototype.token;\n/** @type {?} */\nProviderOverride.prototype.flags;\n/** @type {?} */\nProviderOverride.prototype.value;\n/** @type {?} */\nProviderOverride.prototype.deps;\n}\n\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  clearProviderOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const /** @type {?} */ Services: Services = {\n  setCurrentNode: /** @type {?} */(( undefined)),\n  createRootView: /** @type {?} */(( undefined)),\n  createEmbeddedView: /** @type {?} */(( undefined)),\n  createComponentView: /** @type {?} */(( undefined)),\n  createNgModuleRef: /** @type {?} */(( undefined)),\n  overrideProvider: /** @type {?} */(( undefined)),\n  clearProviderOverrides: /** @type {?} */(( undefined)),\n  checkAndUpdateView: /** @type {?} */(( undefined)),\n  checkNoChangesView: /** @type {?} */(( undefined)),\n  destroyView: /** @type {?} */(( undefined)),\n  resolveDep: /** @type {?} */(( undefined)),\n  createDebugContext: /** @type {?} */(( undefined)),\n  handleEvent: /** @type {?} */(( undefined)),\n  updateDirectives: /** @type {?} */(( undefined)),\n  updateRenderer: /** @type {?} */(( undefined)),\n  dirtyParentQueries: /** @type {?} */(( undefined)),\n};\n"]}