{"version":3,"sources":["../../../../../packages/core/src/view/view.ts"],"names":[],"mappings":"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","file":"view.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: ViewUpdateFn,\n    updateRenderer?: ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewRootNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef|null = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef|null = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent: NodeDef|null = currentParent.parent;\n      if (newParent) {\n        newParent.childFlags |= /** @type {?} */(( currentParent.childFlags));\n        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ node = nodes[i];\n    node.index = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n\n    // renderParent needs to account for ng-container!\n    let /** @type {?} */ currentRenderParent: NodeDef|null;\n    if (currentParent && currentParent.flags & NodeFlags.TypeElement &&\n        ! /** @type {?} */((currentParent.element)).name) {\n      currentRenderParent = currentParent.renderParent;\n    } else {\n      currentRenderParent = currentParent;\n    }\n    node.renderParent = currentRenderParent;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? /** @type {?} */(( currentParent.element)).publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n    }\n    validateNode(currentParent, node, nodes.length);\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element && node.element.template) {\n      viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true; /** @type {?} */(( /** @type {?} */((\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent)).element)).publicProviders =\n            Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders); /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders = /** @type {?} */(( /** @type {?} */(( currentParent)).element)).publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) { /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).publicProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true; /** @type {?} */(( /** @type {?} */((\n          // Use protoyypical inheritance to not get O(n^2) complexity...\n          currentParent)).element)).allProviders =\n              Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders);\n        } /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      }\n      if (isComponent) { /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).componentProvider = node;\n      }\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = currentParent.parent;\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n    }\n    currentParent = newParent;\n  }\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) => /** @type {?} */(( /** @type {?} */((\n      nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent: handleEvent || NOOP,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.index}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ rendererType = /** @type {?} */(( nodeDef.element)).componentRendererType;\n  let /** @type {?} */ compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, /** @type {?} */(( nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData( /** @type {?} */((view.parent)), /** @type {?} */(( /** @type {?} */(( hostDef)).parent)).index).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */ nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const /** @type {?} */ el = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        let /** @type {?} */ componentView: ViewData = /** @type {?} */(( undefined));\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const /** @type {?} */ compViewDef = resolveDefinition( /** @type {?} */(( /** @type {?} */((nodeDef.element)).componentView)));\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = /** @type {?} */(( <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: /** @type {?} */(( nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n        }));\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        if (nodeDef.flags & NodeFlags.Component) {\n          const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( nodeDef.parent)).index).componentView;\n          initView(compView, instance, instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ i = 0; i < projectedViews.length; i++) {\n          const /** @type {?} */ projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeDirective:\n      changed =\n          checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed =\n          checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeDirective:\n      changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n      break;\n  }\n  if (changed) {\n    // Update oldValues after all bindings have been updated,\n    // as a setter for a property might update other properties.\n    const /** @type {?} */ bindLen = nodeDef.bindings.length;\n    const /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n    const /** @type {?} */ oldValues = view.oldValues;\n    for (let /** @type {?} */ i = 0; i < bindLen; i++) {\n      oldValues[bindingStart + i] = values[i];\n    }\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${( /** @type {?} */((nodeDef.query))).id} not dirty`,\n        `Query ${( /** @type {?} */((nodeDef.query))).id} dirty`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) { /** @type {?} */((\n      view.renderer.destroyNode))(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) { /** @type {?} */((\n      view.renderer.destroyNode))(asTextData(view, i).renderText);\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, i).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n"]}