{"version":3,"sources":["../../../../../packages/core/src/change_detection/change_detection.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,4BAAE,EAA4B,MAAA,mCAAA,CAAA;AAMrC,OALO,EAAA,4BAAE,EAA4B,MAAA,mCAAA,CAAA;AAMrC,OALO,EAAwB,eAAA,EAAgB,MAAA,4BAAA,CAAA;AAM/C,OALO,EAAwB,eAAA,EAAgB,MAAA,4BAAA,CAAA;AAO/C,OALO,EAAA,aAAE,EAAa,MAAA,6BAAA,CAAA;AAMtB,OALO,EAAA,YAAE,EAAa,cAAA,EAAgB,YAAA,EAAc,YAAA,EAAa,MAAA,yBAAA,CAAA;AAMjE,OALO,EAAA,iBAAE,EAAiB,MAAA,uBAAA,CAAA;AAM1B,OALO,EAAA,uBAAE,EAAwB,oBAAA,EAAsB,gCAAA,EAAiC,MAAA,aAAA,CAAA;AAMxF,OALO,EAAA,4BAAE,EAA4B,MAAA,mCAAA,CAAA;AAMrC,OALO,EAAA,qBAAE,EAAqB,MAAA,mCAAA,CAAA;AAM9B,OALO,EAAA,4BAAE,EAA4B,MAAA,mCAAA,CAAA;AAMrC,OALO,EAAA,sBAAE,EAAuB,oBAAA,EAAsB,eAAA,EAAiB,cAAA,EAAgB,qBAAA,EAAuB,eAAA,EAA6B,SAAA,EAAW,eAAA,EAAgB,MAAA,4BAAA,CAAA;AAMtK,OALO,EAAA,oBAAE,EAAqB,eAAA,EAAiB,cAAA,EAAgB,qBAAA,EAAuB,eAAA,EAAgB,MAAA,4BAAA,CAAA;AAMtG,OALO,EAAA,aAAE,EAAa,MAAA,kBAAA,CAAA;AAMtB;;GAEG;AACH,MAFC,gBAAA,CAAK,UAAA,GAAsC,CAAA,IAAK,4BAAA,EAA6B,CAAE,CAAC;AAGjF;;GAEG;AACH,MADC,gBAAA,CAAK,YAAA,GAAwC,CAAA,IAAK,4BAAA,EAA6B,CAAE,CAAC;AAGnF,MAAM,CADC,MAAA,gBAAA,CAAM,sBAAA,GAAyB,IAAI,eAAA,CAAgB,YAAC,CAAY,CAAC;AAGxE,MAAM,CADC,MAAA,gBAAA,CAAM,sBAAA,GAAyB,IAAI,eAAA,CAAgB,UAAC,CAAU,CAAC","file":"change_detection.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, ValueUnwrapper, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFn, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst /** @type {?} */ keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst /** @type {?} */ iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n"]}