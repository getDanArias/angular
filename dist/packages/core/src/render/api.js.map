{"version":3,"sources":["../../../../../packages/core/src/render/api.ts"],"names":[],"mappings":"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","file":"api.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: any) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\nfunction RenderDebugInfo_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.component = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.providerTokens = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.references = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.source = function() {};\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nexport function DirectRenderer() {}\n\n\nfunction DirectRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectRenderer.prototype.remove;\n/** @type {?} */\nDirectRenderer.prototype.appendChild;\n/** @type {?} */\nDirectRenderer.prototype.insertBefore;\n/** @type {?} */\nDirectRenderer.prototype.nextSibling;\n/** @type {?} */\nDirectRenderer.prototype.parentElement;\n}\n\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nfunction Renderer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.selectRootElement = function(selectorOrNode, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createElement = function(parentElement, name, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\nRenderer.prototype.createViewRoot = function(hostElement) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createTemplateAnchor = function(parentElement, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createText = function(parentElement, value, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nRenderer.prototype.projectNodes = function(parentElement, nodes) {};\n\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nRenderer.prototype.attachViewAfter = function(node, viewRootNodes) {};\n\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\nRenderer.prototype.detachView = function(viewRootNodes) {};\n\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\nRenderer.prototype.destroyView = function(hostElement, viewAllNodes) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nRenderer.prototype.listen = function(renderElement, name, callback) {};\n\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nRenderer.prototype.listenGlobal = function(target, name, callback) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nRenderer.prototype.setElementProperty = function(renderElement, propertyName, propertyValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nRenderer.prototype.setElementAttribute = function(renderElement, attributeName, attributeValue) {};\n\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nRenderer.prototype.setBindingDebugInfo = function(renderElement, propertyName, propertyValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nRenderer.prototype.setElementClass = function(renderElement, className, isAdd) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nRenderer.prototype.setElementStyle = function(renderElement, styleName, styleValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\nRenderer.prototype.invokeElementMethod = function(renderElement, methodName, args) {};\n\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nRenderer.prototype.setText = function(renderNode, text) {};\n\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nRenderer.prototype.animate = function(element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {};\n}\n\n\nexport const /** @type {?} */ Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\nfunction RootRenderer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nRootRenderer.prototype.renderComponent = function(componentType) {};\n}\n\n/**\n * \\@experimental\n * @record\n */\nexport function RendererType2() {}\n\n\nfunction RendererType2_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererType2.prototype.id;\n/** @type {?} */\nRendererType2.prototype.encapsulation;\n/** @type {?} */\nRendererType2.prototype.styles;\n/** @type {?} */\nRendererType2.prototype.data;\n}\n\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class RendererFactory2 {\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  abstract begin?(): void;\n  abstract end?(): void;\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\nfunction RendererFactory2_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\nRendererFactory2.prototype.createRenderer = function(hostElement, type) {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.begin = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.end = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.whenRenderingDone = function() {};\n}\n\nexport type RendererStyleFlags2 = number;\nexport let RendererStyleFlags2: any = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer2 {\n  /**\n   * This field can be used to store arbitrary data on this renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  abstract destroy(): void;\n  abstract createElement(name: string, namespace?: string|null): any;\n  abstract createComment(value: string): any;\n  abstract createText(value: string): any;\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n */\ndestroyNode: ((node: any) => void)|null;\n  abstract appendChild(parent: any, newChild: any): void;\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  abstract removeChild(parent: any, oldChild: any): void;\n  abstract selectRootElement(selectorOrNode: string|any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract nextSibling(node: any): any;\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  abstract addClass(el: any, name: string): void;\n  abstract removeClass(el: any, name: string): void;\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n  abstract setProperty(el: any, name: string, value: any): void;\n  abstract setValue(node: any, value: string): void;\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n}\n\nfunction Renderer2_tsickle_Closure_declarations() {\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?}\n */\nRenderer2.prototype.destroyNode;\n\n/**\n * This field can be used to store arbitrary data on this renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @abstract\n * @return {?}\n */\nRenderer2.prototype.data = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderer2.prototype.destroy = function() {};\n\n/**\n * @abstract\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.createElement = function(name, namespace) {};\n\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.createComment = function(value) {};\n\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.createText = function(value) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nRenderer2.prototype.appendChild = function(parent, newChild) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\nRenderer2.prototype.insertBefore = function(parent, newChild, refChild) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nRenderer2.prototype.removeChild = function(parent, oldChild) {};\n\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @return {?}\n */\nRenderer2.prototype.selectRootElement = function(selectorOrNode) {};\n\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nRenderer2.prototype.parentNode = function(node) {};\n\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nRenderer2.prototype.nextSibling = function(node) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.setAttribute = function(el, name, value, namespace) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.removeAttribute = function(el, name, namespace) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nRenderer2.prototype.addClass = function(el, name) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nRenderer2.prototype.removeClass = function(el, name) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?=} flags\n * @return {?}\n */\nRenderer2.prototype.setStyle = function(el, style, value, flags) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?=} flags\n * @return {?}\n */\nRenderer2.prototype.removeStyle = function(el, style, flags) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.setProperty = function(el, name, value) {};\n\n/**\n * @abstract\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.setValue = function(node, value) {};\n\n/**\n * @abstract\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nRenderer2.prototype.listen = function(target, eventName, callback) {};\n}\n\n"]}