{"version":3,"sources":["../../../../../../packages/platform-webworker/src/web_workers/shared/serializer.ts"],"names":[],"mappings":"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","file":"serializer.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, RenderComponentType, RendererType2, Type, Éµstringify as stringify} from '@angular/core';\nimport {RenderStore} from './render_store';\n\n\n/**\n * @experimental WebWorker support in Angular is currently experimental.\n */\nexport const enum SerializerTypes {\n  // RendererType2\n  RENDERER_TYPE_2,\n  // Primitive types\n  PRIMITIVE,\n  // An object stored in a RenderStore\n  RENDER_STORE_OBJECT,\n}\n/**\n * Any type that does not need to be serialized (string, number, boolean)\n * \n * \\@experimental WebWorker support in Angular is currently experimental.\n * @deprecated in v4. Use SerializerTypes.PRIMITIVE instead\n */\nexport const /** @type {?} */ PRIMITIVE = SerializerTypes.PRIMITIVE;\nexport class LocationType {\n/**\n * @param {?} href\n * @param {?} protocol\n * @param {?} host\n * @param {?} hostname\n * @param {?} port\n * @param {?} pathname\n * @param {?} search\n * @param {?} hash\n * @param {?} origin\n */\nconstructor(\npublic href: string,\npublic protocol: string,\npublic host: string,\npublic hostname: string,\npublic port: string,\npublic pathname: string|null,\npublic search: string,\npublic hash: string,\npublic origin: string) {}\n}\n\nfunction LocationType_tsickle_Closure_declarations() {\n/** @type {?} */\nLocationType.prototype.href;\n/** @type {?} */\nLocationType.prototype.protocol;\n/** @type {?} */\nLocationType.prototype.host;\n/** @type {?} */\nLocationType.prototype.hostname;\n/** @type {?} */\nLocationType.prototype.port;\n/** @type {?} */\nLocationType.prototype.pathname;\n/** @type {?} */\nLocationType.prototype.search;\n/** @type {?} */\nLocationType.prototype.hash;\n/** @type {?} */\nLocationType.prototype.origin;\n}\n\nexport class Serializer {\n/**\n * @param {?} _renderStore\n */\nconstructor(private _renderStore: RenderStore) {}\n/**\n * @param {?} obj\n * @param {?=} type\n * @return {?}\n */\nserialize(obj: any, type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE): Object {\n    if (obj == null || type === SerializerTypes.PRIMITIVE) {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map(v => this.serialize(v, type));\n    }\n    if (type === SerializerTypes.RENDER_STORE_OBJECT) {\n      return /** @type {?} */(( this._renderStore.serialize(obj)));\n    }\n    if (type === RenderComponentType) {\n      return this._serializeRenderComponentType(obj);\n    }\n    if (type === SerializerTypes.RENDERER_TYPE_2) {\n      return this._serializeRendererType2(obj);\n    }\n    if (type === LocationType) {\n      return this._serializeLocation(obj);\n    }\n    throw new Error(`No serializer for type ${stringify(type)}`);\n  }\n/**\n * @param {?} map\n * @param {?=} type\n * @param {?=} data\n * @return {?}\n */\ndeserialize(map: any, type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE, data?: any):\n      any {\n    if (map == null || type === SerializerTypes.PRIMITIVE) {\n      return map;\n    }\n    if (Array.isArray(map)) {\n      return map.map(val => this.deserialize(val, type, data));\n    }\n    if (type === SerializerTypes.RENDER_STORE_OBJECT) {\n      return this._renderStore.deserialize(map);\n    }\n    if (type === RenderComponentType) {\n      return this._deserializeRenderComponentType(map);\n    }\n    if (type === SerializerTypes.RENDERER_TYPE_2) {\n      return this._deserializeRendererType2(map);\n    }\n    if (type === LocationType) {\n      return this._deserializeLocation(map);\n    }\n    throw new Error(`No deserializer for type ${stringify(type)}`);\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\n\nprivate _serializeLocation(loc: LocationType): Object {\n    return {\n      'href': loc.href,\n      'protocol': loc.protocol,\n      'host': loc.host,\n      'hostname': loc.hostname,\n      'port': loc.port,\n      'pathname': loc.pathname,\n      'search': loc.search,\n      'hash': loc.hash,\n      'origin': loc.origin,\n    };\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\n\nprivate _deserializeLocation(loc: {[key: string]: any}): LocationType {\n    return new LocationType(\n        loc['href'], loc['protocol'], loc['host'], loc['hostname'], loc['port'], loc['pathname'],\n        loc['search'], loc['hash'], loc['origin']);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _serializeRenderComponentType(type: RenderComponentType): Object {\n    return {\n      'id': type.id,\n      'templateUrl': type.templateUrl,\n      'slotCount': type.slotCount,\n      'encapsulation': this.serialize(type.encapsulation),\n      'styles': this.serialize(type.styles),\n    };\n  }\n/**\n * @param {?} props\n * @return {?}\n */\n\nprivate _deserializeRenderComponentType(props: {[key: string]: any}): RenderComponentType {\n    return new RenderComponentType(\n        props['id'], props['templateUrl'], props['slotCount'],\n        this.deserialize(props['encapsulation']), this.deserialize(props['styles']), {});\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _serializeRendererType2(type: RendererType2): {[key: string]: any} {\n    return {\n      'id': type.id,\n      'encapsulation': this.serialize(type.encapsulation),\n      'styles': this.serialize(type.styles),\n      'data': this.serialize(type.data),\n    };\n  }\n/**\n * @param {?} props\n * @return {?}\n */\n\nprivate _deserializeRendererType2(props: {[key: string]: any}): RendererType2 {\n    return {\n      id: props['id'],\n      encapsulation: props['encapsulation'],\n      styles: this.deserialize(props['styles']),\n      data: this.deserialize(props['data'])\n    };\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: RenderStore, },\n];\n}\n\nfunction Serializer_tsickle_Closure_declarations() {\n/** @type {?} */\nSerializer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSerializer.ctorParameters;\n/** @type {?} */\nSerializer.prototype._renderStore;\n}\n\n"]}