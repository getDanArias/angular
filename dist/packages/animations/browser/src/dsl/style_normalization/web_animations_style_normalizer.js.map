{"version":3,"sources":["../../../../../../../packages/animations/browser/src/dsl/style_normalization/web_animations_style_normalizer.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AACH,OALO,EAAA,mBAAE,EAAmB,MAAA,YAAA,CAAA;AAO5B,OALO,EAAA,wBAAE,EAAwB,MAAA,8BAAA,CAAA;AAMjC,MAJC,mCAAyC,SAAQ,wBAAA;IAKlD;;;;OAIG;IACH,qBATG,CAAqB,YAAc,EAAQ,MAAe;QAUzD,MAAM,CATC,mBAAA,CAAoB,YAAC,CAAY,CAAC;IAU3C,CAAC;IACH;;;;;;OAMG;IACH,mBAfG,CAgBG,oBAfsB,EAAQ,kBAAoB,EAAQ,KAAe,EAgBzE,MAfe;QAgBjB,IAAI,gBAAgB,CAfhB,IAAA,GAAe,EAAA,CAAG;QAgBtB,MAAM,gBAAgB,CAfhB,MAAA,GAAS,KAAA,CAAM,QAAC,EAAQ,CAAE,IAAC,EAAI,CAAE;QAiBvC,EAAE,CAAC,CAAC,oBAfC,CAAoB,kBAAC,CAAkB,IAAI,KAAA,KAAU,CAAA,IAAK,KAAA,KAAU,GAAA,CAAI,CAAC,CAAA;YAgB5E,EAAE,CAAC,CAAC,OAfO,KAAA,KAAU,QAAA,CAAS,CAAC,CAAA;gBAgB7B,IAAI,GAfG,IAAA,CAAK;YAgBd,CAAC;YAfC,IAAA,CAAK,CAAA;gBAgBL,MAAM,gBAAgB,CAfhB,iBAAA,GAAoB,KAAA,CAAM,KAAC,CAAK,wBAAC,CAAwB,CAAC;gBAgBhE,EAAE,CAAC,CAAC,iBAfC,IAAoB,iBAAA,CAAkB,CAAC,CAAC,CAAC,MAAC,IAAS,CAAA,CAAE,CAAC,CAAA;oBAgBzD,MAAM,CAfC,IAAC,CAAI,uCAAC,oBAAuC,IAAoB,KAAI,EAAK,CAAE,CAAC;gBAgBtF,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAfC,MAAA,GAAS,IAAA,CAAK;IAgBvB,CAAC;CAdF;AAiBD,MAAM,gBAAgB,CAfhB,oBAAA,GAAuB,cAAA,CAgBzB,gUAAgU;KAC3T,KAfC,CAAK,GAAC,CAAG,CAAC,CAAC;AAgBrB;;;GAGG;AACH,wBAlBwB,IAAa;IAmBnC,MAAM,gBAAgB,CAlBhB,GAAA,GAAgC,EAAA,CAAG;IAmBzC,IAAI,CAlBC,OAAC,CAAO,GAAC,IAAM,GAAA,CAAI,GAAC,CAAG,GAAG,IAAA,CAAK,CAAC;IAmBrC,MAAM,CAlBC,GAAA,CAAI;AAmBb,CAAC","file":"web_animations_style_normalizer.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {dashCaseToCamelCase} from '../../util';\n\nimport {AnimationStyleNormalizer} from './animation_style_normalizer';\nexport class WebAnimationsStyleNormalizer extends AnimationStyleNormalizer {\n/**\n * @param {?} propertyName\n * @param {?} errors\n * @return {?}\n */\nnormalizePropertyName(propertyName: string, errors: string[]): string {\n    return dashCaseToCamelCase(propertyName);\n  }\n/**\n * @param {?} userProvidedProperty\n * @param {?} normalizedProperty\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nnormalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string {\n    let /** @type {?} */ unit: string = '';\n    const /** @type {?} */ strVal = value.toString().trim();\n\n    if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n      if (typeof value === 'number') {\n        unit = 'px';\n      } else {\n        const /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n          errors.push(`Please provide a CSS unit value for ${userProvidedProperty}:${value}`);\n        }\n      }\n    }\n    return strVal + unit;\n  }\n}\n\nconst /** @type {?} */ DIMENSIONAL_PROP_MAP = makeBooleanMap(\n    'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n        .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys: string[]): {[key: string]: boolean} {\n  const /** @type {?} */ map: {[key: string]: boolean} = {};\n  keys.forEach(key => map[key] = true);\n  return map;\n}\n"]}