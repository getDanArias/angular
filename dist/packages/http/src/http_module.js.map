{"version":3,"sources":["../../../../packages/http/src/http_module.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH;;;;;GAKG;AACH,OALO,EAAA,QAAE,EAAQ,MAAA,eAAA,CAAA;AAOjB,OALO,EAAA,YAAE,EAAY,MAAA,0BAAA,CAAA;AAMrB,OALO,EAAA,UAAE,EAAU,MAAA,wBAAA,CAAA;AAMnB,OALO,EAAA,YAAE,EAAa,aAAA,EAAc,MAAA,0BAAA,CAAA;AAMpC,OALO,EAAA,kBAAE,EAAmB,UAAA,EAAW,MAAA,wBAAA,CAAA;AAMvC,OALO,EAAA,kBAAE,EAAmB,cAAA,EAAe,MAAA,wBAAA,CAAA;AAM3C,OALO,EAAA,mBAAE,EAAoB,eAAA,EAAgB,MAAA,yBAAA,CAAA;AAM7C,OALO,EAAA,IAAE,EAAK,KAAA,EAAM,MAAA,QAAA,CAAA;AAMpB,OALO,EAAA,YAAE,EAAY,MAAA,cAAA,CAAA;AAMrB;;GAEG;AACH,MANC;IAOC,MAAM,CANC,IAAI,kBAAA,EAAmB,CAAE;AAOlC,CAAC;AACD;;;;GAIG;AACH,MAVC,sBAA2B,UAAY,EAAY,cAAgB;IAWlE,MAAM,CAVC,IAAI,IAAA,CAAK,UAAC,EAAW,cAAA,CAAe,CAAC;AAW9C,CAAC;AACD;;;;GAIG;AACH,MAdC,uBAA4B,YAAc,EAAc,cAAgB;IAevE,MAAM,CAdC,IAAI,KAAA,CAAM,YAAC,EAAa,cAAA,CAAe,CAAC;AAejD,CAAC;AACD;;;;GAIG;AACH,MAXC;;AACM,qBAAA,GAA+C;IAYtD,EAXE,IAAA,EAAM,QAAA,EAHN,IAAA,EAAA,CAAA;gBAeA,SAAS,EAdE;oBAeT,kEAAkE;oBAClE,wDAAwD;oBACxD,EAAC,OAdC,EAAQ,IAAA,EAAM,UAAA,EAAY,WAAA,EAAa,IAAA,EAAM,CAAA,UAAE,EAAW,cAAA,CAAe,EAAC;oBAS9E,UAAA;oBAOE,EAAC,OAdC,EAAQ,cAAA,EAAgB,QAAA,EAAU,kBAAA,EAAmB;oBAevD,EAAC,OAdC,EAAQ,eAAA,EAAiB,QAAA,EAAU,mBAAA,EAAoB;oBAezD,UAAU;oBACV,EAAC,OAdC,EAAQ,YAAA,EAAc,UAAA,EAAY,gCAAA,EAAiC;iBAetE;aACF,EAXC,EAAG;CAgBF,CAfD;AAYF,kBAIa;AAdN,yBAAA,GAA4F,MAAM,EAYxG,CAXC;AAcF;IACA,gBATc;IAUd,UAAU,CAAC,UATO,CAAA;IAUlB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;AAC1B,CAAC;AAED;;;;GAIG;AACH,MApBC;;AACM,sBAAA,GAA+C;IAqBtD,EApBE,IAAA,EAAM,QAAA,EATN,IAAA,EAAA,CAAA;gBA8BA,SAAS,EA7BE;oBA8BT,kEAAkE;oBAClE,wDAAwD;oBACxD,EAAC,OA7BC,EAAQ,KAAA,EAAO,UAAA,EAAY,YAAA,EAAc,IAAA,EAAM,CAAA,YAAE,EAAa,cAAA,CAAe,EAAC;oBA8BhF,YAAY;oBACZ,EAAC,OA7BC,EAAQ,cAAA,EAAgB,QAAA,EAAU,kBAAA,EAAmB;oBA8BvD,EAAC,OA7BC,EAAQ,eAAA,EAAiB,QAAA,EAAU,mBAAA,EAAoB;oBA8BzD,EAAC,OA7BC,EAAQ,YAAA,EAAc,QAAA,EAAU,aAAA,EAAc;iBA8BjD;aACF,EApBC,EAAG;CAqBJ,CApBC;AAqBF,kBAAkB;AAnBX,0BAAA,GAA4F,MAAM,EAqBxG,CApBC;AAuBF;IACA,gBAAgB;IAChB,WAAW,CAAC,UAAU,CAAC;IACvB;;;OAGG;IACH,WAAW,CAAC,cAAc,CAAC;AAC3B,CAAC","file":"http_module.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\nimport {NgModule} from '@angular/core';\n\nimport {BrowserJsonp} from './backends/browser_jsonp';\nimport {BrowserXhr} from './backends/browser_xhr';\nimport {JSONPBackend, JSONPBackend_} from './backends/jsonp_backend';\nimport {CookieXSRFStrategy, XHRBackend} from './backends/xhr_backend';\nimport {BaseRequestOptions, RequestOptions} from './base_request_options';\nimport {BaseResponseOptions, ResponseOptions} from './base_response_options';\nimport {Http, Jsonp} from './http';\nimport {XSRFStrategy} from './interfaces';\n/**\n * @return {?}\n */\nexport function _createDefaultCookieXSRFStrategy() {\n  return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n  return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function jsonpFactory(jsonpBackend: JSONPBackend, requestOptions: RequestOptions): Jsonp {\n  return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n * \n * \\@experimental\n */\nexport class HttpModule {\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n    BrowserXhr,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    XHRBackend,\n    {provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction HttpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttpModule.ctorParameters;\n}\n\n/**\n * The module that includes jsonp's providers\n * \n * \\@experimental\n */\nexport class JsonpModule {\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions]},\n    BrowserJsonp,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    {provide: JSONPBackend, useClass: JSONPBackend_},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction JsonpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonpModule.ctorParameters;\n}\n\n"]}