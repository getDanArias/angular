{"version":3,"sources":["../../../../../packages/forms/src/directives/select_multiple_control_value_accessor.ts"],"names":[],"mappings":"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","file":"select_multiple_control_value_accessor.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Host, Input, OnDestroy, Optional, Renderer2, StaticProvider, forwardRef, ÉµlooseIdentical as looseIdentical} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR: StaticProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id: string, value: any): string {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n/**\n * Mock interface for HTML Options\n * @record\n */\nfunction HTMLOption() {}\n\n\nfunction HTMLOption_tsickle_Closure_declarations() {\n/** @type {?} */\nHTMLOption.prototype.value;\n/** @type {?} */\nHTMLOption.prototype.selected;\n}\n\n\n/** Mock interface for HTML Options */\ninterface HTMLOption {\n  value: string;\n  selected: boolean;\n}\n/**\n * Mock interface for HTMLCollection\n * @abstract\n */\nabstract class HTMLCollection {\n  length: number;\n  abstract item(_: number): HTMLOption;\n}\n\nfunction HTMLCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nHTMLCollection.prototype.length;\n\n/**\n * @abstract\n * @param {?} _\n * @return {?}\n */\nHTMLCollection.prototype.item = function(_) {};\n}\n\n/**\n * The accessor for writing a value and listening to changes on a select element.\n * \n *  ### Caveat: Options selection\n * \n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n * \n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n * \n * #### Syntax\n * \n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n * \n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n * \n * \\@stable\n */\nexport class SelectMultipleControlValueAccessor implements ControlValueAccessor {\n  value: any;\n/**\n * \\@internal\n */\n_optionMap: Map<string, NgSelectMultipleOption> = new Map<string, NgSelectMultipleOption>();\n/**\n * \\@internal\n */\n_idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} fn\n * @return {?}\n */\nset compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\nprivate _compareWith: (o1: any, o2: any) => boolean = looseIdentical;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.value = value;\n    let /** @type {?} */ optionSelectedStateSetter: (opt: NgSelectMultipleOption, o: any) => void;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const /** @type {?} */ ids = value.map((v) => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(ids.indexOf(o.toString()) > -1); };\n    } else {\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(false); };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void {\n    this.onChange = (_: any) => {\n      const /** @type {?} */ selected: Array<any> = [];\n      if (_.hasOwnProperty('selectedOptions')) {\n        const /** @type {?} */ options: HTMLCollection = _.selectedOptions;\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: any = options.item(i);\n          const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade on IE\n      else {\n        const /** @type {?} */ options: HTMLCollection = /** @type {?} */(( <HTMLCollection>_.options));\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: HTMLOption = options.item(i);\n          if (opt.selected) {\n            const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_registerOption(value: NgSelectMultipleOption): string {\n    const /** @type {?} */ id: string = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_getOptionId(value: any): string|null {\n    for (const /** @type {?} */ id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith( /** @type {?} */((this._optionMap.get(id)))._value, value)) return id;\n    }\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} valueString\n * @return {?}\n */\n_getOptionValue(valueString: string): any {\n    const /** @type {?} */ id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? /** @type {?} */(( this._optionMap.get(id)))._value : valueString;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{\n  selector:\n      'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n  host: {'(change)': 'onChange($event.target)', '(blur)': 'onTouched()'},\n  providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"compareWith\": [{ type: Input },],\n};\n}\n\nfunction SelectMultipleControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectMultipleControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectMultipleControlValueAccessor.ctorParameters;\n/** @type {?} */\nSelectMultipleControlValueAccessor.propDecorators;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.value;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._optionMap;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._idCounter;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onChange;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._compareWith;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._renderer;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n * \n * ### Example\n * \n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nexport class NgSelectMultipleOption implements OnDestroy {\n  id: string;\n/**\n * \\@internal\n */\n_value: any;\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _select\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _renderer: Renderer2,\nprivate _select: SelectMultipleControlValueAccessor) {\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset ngValue(value: any) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_setElementValue(value: string): void {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n/**\n * \\@internal\n * @param {?} selected\n * @return {?}\n */\n_setSelected(selected: boolean) {\n    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngValue\": [{ type: Input, args: ['ngValue', ] },],\n\"value\": [{ type: Input, args: ['value', ] },],\n};\n}\n\nfunction NgSelectMultipleOption_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSelectMultipleOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSelectMultipleOption.ctorParameters;\n/** @type {?} */\nNgSelectMultipleOption.propDecorators;\n/** @type {?} */\nNgSelectMultipleOption.prototype.id;\n/**\n * \\@internal\n * @type {?}\n */\nNgSelectMultipleOption.prototype._value;\n/** @type {?} */\nNgSelectMultipleOption.prototype._element;\n/** @type {?} */\nNgSelectMultipleOption.prototype._renderer;\n/** @type {?} */\nNgSelectMultipleOption.prototype._select;\n}\n\n"]}