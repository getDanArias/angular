{"version":3,"sources":["../../../../../packages/forms/src/directives/range_value_accessor.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,SAAE,EAAU,UAAA,EAAY,SAAA,EAA2B,UAAA,EAAW,MAAA,eAAA,CAAA;AAOrE,OALO,EAAuB,iBAAA,EAAkB,MAAA,0BAAA,CAAA;AAOhD,MAAM,CALC,MAAA,gBAAA,CAAM,oBAAA,GAAuC;IAMlD,OAAO,EALE,iBAAA;IAMT,WAAW,EALE,UAAA,CAAW,MAAM,kBAAA,CAAmB;IAMjD,KAAK,EALE,IAAA;CAMR,CALC;AAMF;;;;;;;;GAQG;AACH,MAHC;IAMD;;;OAGG;IACH,YAGsB,SAAW,EAAmB,WAAa;QAA3C,cAAA,GAAA,SAAA,CAAW;QAAmB,gBAAA,GAAA,WAAA,CAAa;QAT/D,aAAQ,GAMG,CAAA,CAAI,OAAQ,CAAA,CAAG;QAL1B,cAAS,GAMG,QAAM,CAAA,CAAG;IAEsD,CAAA;IAD7E;;;OAGG;IACH,UAVG,CASU,KAAO;QAEhB,IAAI,CADC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,OAAA,EAAS,UAAA,CAAW,KAAC,CAAK,CAAC,CAAC;IAEzF,CAAC;IACH;;;OAGG;IACH,gBAbG,CASgB,EAAwB;QAKvC,IAAI,CAJC,QAAC,GAAU,CAAA,KAAE,OAAW,EAAA,CAAG,KAAC,IAAQ,EAAA,GAAK,IAAA,GAAO,UAAA,CAAW,KAAC,CAAK,CAAC,CAAC,CAAC,CAAA,CAAE;IAK7E,CAAC;IACH;;;OAGG;IACH,iBAhBG,CASiB,EAAU,IAAc,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CAAC,CAAA;IAQjE;;;OAGG;IACH,gBAnBG,CASgB,UAAY;QAG7B,IAAA,CAFO,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,UAAA,EAAY,UAAA,CAAW,CAAC;IAWrF,CAAC;;AAlBI,6BAAA,GAA+C;IAoBtD,EAnBE,IAAA,EAAM,SAAA,EArBN,IAAA,EAAA,CAAA;gBAyCA,QAAQ,EACJ,8FAA8F;gBAClG,IAAI,EAxCE;oBAyCJ,UAAU,EAxCE,+BAAA;oBAyCZ,SAAS,EAxCE,+BAAA;oBAyCX,QAAQ,EAxCE,aAAA;iBAyCX;gBACD,SAAS,EAxCE,CAAA,oBAAE,CAAoB;aAyClC,EAnBC,EAAG;CAoBJ,CAnBC;AAoBF,kBAAkB;AAlBX,iCAAA,GAA4F,MAAM;IAoBzG,EAAC,IAnBC,EAAK,SAAA,GAAU;IAoBjB,EAAC,IAnBC,EAAK,UAAA,GAAW;CAoBjB,CAnBC;AAsBF;IACA,gBAAgB;IAChB,kBAAkB,CAAC,UAAU,CAAC;IAC9B;;;OAGG;IACH,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACtC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC;IACvC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC;IACvC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;AACzC,CAAC","file":"range_value_accessor.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Renderer2, StaticProvider, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ RANGE_VALUE_ACCESSOR: StaticProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nexport class RangeValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: number|null) => void): void {\n    this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()'\n  },\n  providers: [RANGE_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction RangeValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeValueAccessor.ctorParameters;\n/** @type {?} */\nRangeValueAccessor.prototype.onChange;\n/** @type {?} */\nRangeValueAccessor.prototype.onTouched;\n/** @type {?} */\nRangeValueAccessor.prototype._renderer;\n/** @type {?} */\nRangeValueAccessor.prototype._elementRef;\n}\n\n"]}