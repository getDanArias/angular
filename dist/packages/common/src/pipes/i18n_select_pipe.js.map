{"version":3,"sources":["../../../../../packages/common/src/pipes/i18n_select_pipe.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,IAAE,EAAmB,MAAA,eAAA,CAAA;AAM5B,OALO,EAAA,wBAAE,EAAwB,MAAA,+BAAA,CAAA;AAMjC;;;;;;;;;;;;;;;;GAgBG;AACH,MAHC;IAID;;;;OAIG;IACH,SARG,CAAS,KAAoB,EAAU,OAAgC;QAStE,EAAE,CAAA,CAAA,KARG,IAAQ,IAAA,CAAK;YAAC,MAAA,CAAO,EAAA,CAAG;QAU7B,EAAE,CAAC,CAAC,OARO,OAAA,KAAY,QAAA,IAAY,OAAO,KAAA,KAAU,QAAA,CAAS,CAAC,CAAA;YAS5D,MARM,wBAAA,CAAyB,cAAC,EAAe,OAAA,CAAQ,CAAC;QAS1D,CAAC;QAED,EAAE,CAAC,CAAC,OARC,CAAO,cAAC,CAAc,KAAC,CAAK,CAAC,CAAC,CAAA;YASnC,MAAA,CARS,OAAA,CAAQ,KAAC,CAAK,CAAC;QASxB,CAAC;QAED,EAAE,CAAC,CAAC,OARC,CAAO,cAAC,CAAc,OAAC,CAAO,CAAC,CAAC,CAAA;YASnC,MAAM,CARC,OAAA,CAAQ,OAAC,CAAO,CAAC;QAS1B,CAAC;QAJH,MAAA,CAFS,EAAA,CAAG;IASZ,CAAC;;AAPI,yBAAA,GAA+C;IAStD,EARE,IAAA,EAAM,IAAA,EApBN,IAAA,EAAA,CAAA,EAAK,IAAC,EAAK,YAAA,EAAc,IAAA,EAAM,IAAA,EAAK,EAAA,EAAA;CA6BrC,CARC;AASF,kBAAkB;AAPX,6BAAA,GAA4F,MAAM,EASxG,CARC;AAWF;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;AAC9B,CAAC","file":"i18n_select_pipe.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Generic selector that displays the string that matches the current value.\n * \\@howToUse `expression | i18nSelect:mapping`\n * \\@description \n * \n *  Where `mapping` is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *  If none of the keys of the mapping match the value of the `expression`, then the content\n *  of the `other` key is returned when present, otherwise an empty string is returned.\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n * \n *  \\@experimental\n */\nexport class I18nSelectPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} mapping\n * @return {?}\n */\ntransform(value: string|null|undefined, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Pipe, args: [{name: 'i18nSelect', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction I18nSelectPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nSelectPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nSelectPipe.ctorParameters;\n}\n\n"]}