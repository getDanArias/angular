{"version":3,"sources":["../../../../../../packages/common/src/directives/ng_style.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,SAAE,EAAmB,UAAA,EAAY,KAAA,EAAwC,eAAA,EAAiB,QAAA,EAAS,MAAA,eAAA,CAAA;AAM1G;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH;IAGA;;;;OAIG;IACH,iBANc,QAAU,EAAyB,KAAO,EAAoB,SAAW;QAAzE,aAAA,GAAA,QAAA,CAAU;QAAyB,UAAA,GAAA,KAAA,CAAO;QAAoB,cAAA,GAAA,SAAA,CAAW;IAAU,CAAA;IAcjG,sBAXM,4BAAA;QAON;;;WAGG;aACH,UAXc,CAA0B;YAYpC,IAAI,CAXC,QAAC,GAAU,CAAA,CAAE;YAYlB,EAAE,CAAA,CAAA,CAXG,IAAC,CAAI,OAAC,IAAU,CAAA,CAAE,CAAC,CAAA;gBAYxB,IAAA,CAXO,OAAC,GAAS,IAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,CAAC,CAAC,CAAC,MAAC,EAAM,CAAE;YAYhD,CAAC;QACH,CAAC;;;OAAA;IACH;;OAEG;IACH,2BAbG,GAaH;QACI,EAAE,CAAC,CAAC,IAbC,CAAI,OAAC,CAAO,CAAC,CAAA;YAchB,IAAI,gBAAW,CAbT,OAAA,GAAU,IAAA,CAAK,OAAC,CAAO,IAAC,CAAI,IAAC,CAAI,QAAC,CAAQ,CAAC;YAcjD,EAAE,CAAC,CAAC,OAbC,CAAO,CAAC,CAAA;gBAcX,IAAI,CAbC,aAAC,CAAa,OAAC,CAAO,CAAC;YAc9B,CAAC;QACH,CAAC;IACH,CAAC;IACH;;;OAGG;IAfO,+BAAA,GAiBV,UAjBwB,OAA+C;QAiBvE,iBAIG;QAHC,OAAO,CAjBC,kBAAC,CAAkB,UAAC,MAAC,IAAU,OAAA,KAAA,CAAK,SAAC,CAAS,MAAC,CAAM,GAAC,EAAI,IAAA,CAAK,EAAhC,CAAgC,CAAC,CAAC;QAkBzE,OAAO,CAjBC,gBAAC,CAAgB,UAAC,MAAC,IAAU,OAAA,KAAA,CAAK,SAAC,CAAS,MAAC,CAAM,GAAC,EAAI,MAAA,CAAO,YAAC,CAAY,EAA/C,CAA+C,CAAC,CAAC;QAkBtF,OAAO,CAjBC,kBAAC,CAAkB,UAAC,MAAC,IAAU,OAAA,KAAA,CAAK,SAAC,CAAS,MAAC,CAAM,GAAC,EAAI,MAAA,CAAO,YAAC,CAAY,EAA/C,CAA+C,CAAC,CAAC;IAkB1F,CAAC;IACH;;;;OAIG;IApBO,2BAAA,GAsBV,UAtBoB,WAAa,EAAQ,KAA2B;QAC1D,IAAA,2BAAqC,EAArC,YAAE,EAAK,YAAA,CAA+B;QAuB5C,KAAK,GAtBG,KAAA,IAAS,IAAA,IAAQ,IAAA,GAAO,KAAA,KAAI,GAAK,IAAO,GAAI,KAAA,CAAM;QAwB1D,IAAI,CAtBC,SAAC,CAAS,eAAC,CAAe,IAAC,CAAI,KAAC,CAAK,aAAC,EAAc,IAAA,EAAK,gBAAA,CAAA,CAAC,KAAS,CAAA,CAAO,CAAC;IAuBlF,CAAC;IAaH,cAlCC;AAkCD,CAnEA,AAiCC;;AAAM,kBAAA,GAA+C;IAuBtD,EAtBE,IAAA,EAAM,SAAA,EAtCN,IAAA,EAAA,CAAA,EAAU,QAAC,EAAS,WAAA,EAAY,EAAA,EAAA;CA6DjC,CAtBC;AAuBF,kBAAkB;AArBX,sBAAA,GAA4F,cAAM,OAAA;IAuBzG,EAAC,IAtBC,EAAK,eAAA,GAAgB;IAuBvB,EAAC,IAtBC,EAAK,UAAA,GAAW;IAuBlB,EAAC,IAtBC,EAAK,QAAA,GAAS;CAuBf,EA1BwG,CA0BxG,CAtBC;AACK,sBAAA,GAAoE;IAuB3E,SAAS,EAtBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAvChB,EAAA;CA8DH,CAtBC;AAyBF;IACA,gBAAgB;IAChB,OAAO,CAAC,UAAU,CAAC;IACnB;;;OAGG;IACH,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC3B,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;IAC1B,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC3B,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;IACxB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC;AAC5B,CAAC","file":"ng_style.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Update an HTML element styles.\n * \n * \\@howToUse \n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n * \n * \\@stable\n */\nexport class NgStyle implements DoCheck {\nprivate _ngStyle: {[key: string]: string};\nprivate _differ: KeyValueDiffer<string, string|number>;\n/**\n * @param {?} _differs\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _differs: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset ngStyle(v: {[key: string]: string}) {\n    this._ngStyle = v;\n    if (!this._differ && v) {\n      this._differ = this._differs.find(v).create();\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\n\nprivate _applyChanges(changes: KeyValueChanges<string, string|number>): void {\n    changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n    changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n  }\n/**\n * @param {?} nameAndUnit\n * @param {?} value\n * @return {?}\n */\n\nprivate _setStyle(nameAndUnit: string, value: string|number|null|undefined): void {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value != null && unit ? `${value}${unit}` : value;\n\n    this._renderer.setElementStyle(this._ngEl.nativeElement, name, /** @type {?} */(( value as string)));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngStyle]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngStyle\": [{ type: Input },],\n};\n}\n\nfunction NgStyle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgStyle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgStyle.ctorParameters;\n/** @type {?} */\nNgStyle.propDecorators;\n/** @type {?} */\nNgStyle.prototype._ngStyle;\n/** @type {?} */\nNgStyle.prototype._differ;\n/** @type {?} */\nNgStyle.prototype._differs;\n/** @type {?} */\nNgStyle.prototype._ngEl;\n/** @type {?} */\nNgStyle.prototype._renderer;\n}\n\n"]}