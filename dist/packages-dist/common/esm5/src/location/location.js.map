{"version":3,"sources":["../../../../../../packages/common/src/location/location.ts"],"names":[],"mappings":"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","file":"location.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable} from '@angular/core';\n\nimport {LocationStrategy} from './location_strategy';\n/**\n * \\@experimental\n * @record\n */\nexport function PopStateEvent() {}\n\n\nfunction PopStateEvent_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nPopStateEvent.prototype.pop;\n/** @type {?|undefined} */\nPopStateEvent.prototype.type;\n/** @type {?|undefined} */\nPopStateEvent.prototype.url;\n}\n\n\n/** @experimental */\nexport interface PopStateEvent {\n  pop?: boolean;\n  type?: string;\n  url?: string;\n}\n/**\n * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n * \\@description \n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n * \n * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n * \n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n * \n * ### Example\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \\@stable\n */\nexport class Location {\n/**\n * \\@internal\n */\n_subject: EventEmitter<any> = new EventEmitter();\n/**\n * \\@internal\n */\n_baseHref: string;\n/**\n * \\@internal\n */\n_platformStrategy: LocationStrategy;\n/**\n * @param {?} platformStrategy\n */\nconstructor(platformStrategy: LocationStrategy) {\n    this._platformStrategy = platformStrategy;\n    const /** @type {?} */ browserBaseHref = this._platformStrategy.getBaseHref();\n    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n    this._platformStrategy.onPopState((ev) => {\n      this._subject.emit({\n        'url': this.path(true),\n        'pop': true,\n        'type': ev.type,\n      });\n    });\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    return this.normalize(this._platformStrategy.path(includeHash));\n  }\n/**\n * Normalizes the given path and compares to the current normalized path.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nisCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n  }\n/**\n * Given a string representing a URL, returns the normalized URL path without leading or\n * trailing slashes.\n * @param {?} url\n * @return {?}\n */\nnormalize(url: string): string {\n    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n  }\n/**\n * Given a string representing a URL, returns the platform-specific external URL path.\n * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n * @param {?} url\n * @return {?}\n */\nprepareExternalUrl(url: string): string {\n    if (url && url[0] !== '/') {\n      url = '/' + url;\n    }\n    return this._platformStrategy.prepareExternalUrl(url);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and pushes a\n * new item onto the platform's history.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\ngo(path: string, query: string = ''): void {\n    this._platformStrategy.pushState(null, '', path, query);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and replaces\n * the top item on the platform's history stack.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nreplaceState(path: string, query: string = ''): void {\n    this._platformStrategy.replaceState(null, '', path, query);\n  }\n/**\n * Navigates forward in the platform's history.\n * @return {?}\n */\nforward(): void { this._platformStrategy.forward(); }\n/**\n * Navigates back in the platform's history.\n * @return {?}\n */\nback(): void { this._platformStrategy.back(); }\n/**\n * Subscribe to the platform's `popState` events.\n * @param {?} onNext\n * @param {?=} onThrow\n * @param {?=} onReturn\n * @return {?}\n */\nsubscribe(\n      onNext: (value: PopStateEvent) => void, onThrow?: ((exception: any) => void)|null,\n      onReturn?: (() => void)|null): Object {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n/**\n * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n * is.\n * @param {?} params\n * @return {?}\n */\n\npublic static normalizeQueryParams(params: string): string {\n    return params && params[0] !== '?' ? '?' + params : params;\n  }\n/**\n * Given 2 parts of a url, join them with a slash if needed.\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\n\npublic static joinWithSlash(start: string, end: string): string {\n    if (start.length == 0) {\n      return end;\n    }\n    if (end.length == 0) {\n      return start;\n    }\n    let /** @type {?} */ slashes = 0;\n    if (start.endsWith('/')) {\n      slashes++;\n    }\n    if (end.startsWith('/')) {\n      slashes++;\n    }\n    if (slashes == 2) {\n      return start + end.substring(1);\n    }\n    if (slashes == 1) {\n      return start + end;\n    }\n    return start + '/' + end;\n  }\n/**\n * If url has a trailing slash, remove it, otherwise return url as is. This\n * method looks for the first occurence of either #, ?, or the end of the\n * line as `/` characters after any of these should not be replaced.\n * @param {?} url\n * @return {?}\n */\n\npublic static stripTrailingSlash(url: string): string {\n    const /** @type {?} */ match = url.match(/#|\\?|$/);\n    const /** @type {?} */ pathEndIdx = match && match.index || url.length;\n    const /** @type {?} */ droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: LocationStrategy, },\n];\n}\n\nfunction Location_tsickle_Closure_declarations() {\n/** @type {?} */\nLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocation.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._subject;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._baseHref;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._platformStrategy;\n}\n\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref: string, url: string): string {\n  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url: string): string {\n  return url.replace(/\\/index.html$/, '');\n}\n"]}