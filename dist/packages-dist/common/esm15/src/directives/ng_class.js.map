{"version":3,"sources":["../../../../../packages/common/src/directives/ng_class.ts"],"names":[],"mappings":"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","file":"ng_class.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, Input, IterableChanges, IterableDiffer, IterableDiffers, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer, ɵisListLikeIterable as isListLikeIterable, ɵstringify as stringify} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n * \n * \\@howToUse \n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n * \n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n * \n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n * \n * \\@stable\n */\nexport class NgClass implements DoCheck {\nprivate _iterableDiffer: IterableDiffer<string>|null;\nprivate _keyValueDiffer: KeyValueDiffer<string, any>|null;\nprivate _initialClasses: string[] = [];\nprivate _rawClass: string[]|Set<string>|{[klass: string]: any};\n/**\n * @param {?} _iterableDiffers\n * @param {?} _keyValueDiffers\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _iterableDiffers: IterableDiffers,\nprivate _keyValueDiffers: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset klass(v: string) {\n    this._applyInitialClasses(true);\n    this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n    this._applyInitialClasses(false);\n    this._applyClasses(this._rawClass, false);\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset ngClass(v: string|string[]|Set<string>|{[klass: string]: any}) {\n    this._cleanupClasses(this._rawClass);\n\n    this._iterableDiffer = null;\n    this._keyValueDiffer = null;\n\n    this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\n    if (this._rawClass) {\n      if (isListLikeIterable(this._rawClass)) {\n        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n      } else {\n        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._iterableDiffer) {\n      const /** @type {?} */ iterableChanges = this._iterableDiffer.diff( /** @type {?} */((this._rawClass as string[])));\n      if (iterableChanges) {\n        this._applyIterableChanges(iterableChanges);\n      }\n    } else if (this._keyValueDiffer) {\n      const /** @type {?} */ keyValueChanges = this._keyValueDiffer.diff( /** @type {?} */((this._rawClass as{[k: string]: any})));\n      if (keyValueChanges) {\n        this._applyKeyValueChanges(keyValueChanges);\n      }\n    }\n  }\n/**\n * @param {?} rawClassVal\n * @return {?}\n */\n\nprivate _cleanupClasses(rawClassVal: string[]|{[klass: string]: any}): void {\n    this._applyClasses(rawClassVal, true);\n    this._applyInitialClasses(false);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\n\nprivate _applyKeyValueChanges(changes: KeyValueChanges<string, any>): void {\n    changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachRemovedItem((record) => {\n      if (record.previousValue) {\n        this._toggleClass(record.key, false);\n      }\n    });\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\n\nprivate _applyIterableChanges(changes: IterableChanges<string>): void {\n    changes.forEachAddedItem((record) => {\n      if (typeof record.item === 'string') {\n        this._toggleClass(record.item, true);\n      } else {\n        throw new Error(\n            `NgClass can only toggle CSS classes expressed as strings, got ${stringify(record.item)}`);\n      }\n    });\n\n    changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n  }\n/**\n * @param {?} isCleanup\n * @return {?}\n */\n\nprivate _applyInitialClasses(isCleanup: boolean) {\n    this._initialClasses.forEach(klass => this._toggleClass(klass, !isCleanup));\n  }\n/**\n * @param {?} rawClassVal\n * @param {?} isCleanup\n * @return {?}\n */\n\nprivate _applyClasses(\n      rawClassVal: string[]|Set<string>|{[klass: string]: any}, isCleanup: boolean) {\n    if (rawClassVal) {\n      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n        ( /** @type {?} */((<any>rawClassVal))).forEach((klass: string) => this._toggleClass(klass, !isCleanup));\n      } else {\n        Object.keys(rawClassVal).forEach(klass => {\n          if (rawClassVal[klass] != null) this._toggleClass(klass, !isCleanup);\n        });\n      }\n    }\n  }\n/**\n * @param {?} klass\n * @param {?} enabled\n * @return {?}\n */\n\nprivate _toggleClass(klass: string, enabled: any): void {\n    klass = klass.trim();\n    if (klass) {\n      klass.split(/\\s+/g).forEach(\n          klass => { this._renderer.setElementClass(this._ngEl.nativeElement, klass, !!enabled); });\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngClass]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: IterableDiffers, },\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"klass\": [{ type: Input, args: ['class', ] },],\n\"ngClass\": [{ type: Input },],\n};\n}\n\nfunction NgClass_tsickle_Closure_declarations() {\n/** @type {?} */\nNgClass.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgClass.ctorParameters;\n/** @type {?} */\nNgClass.propDecorators;\n/** @type {?} */\nNgClass.prototype._iterableDiffer;\n/** @type {?} */\nNgClass.prototype._keyValueDiffer;\n/** @type {?} */\nNgClass.prototype._initialClasses;\n/** @type {?} */\nNgClass.prototype._rawClass;\n/** @type {?} */\nNgClass.prototype._iterableDiffers;\n/** @type {?} */\nNgClass.prototype._keyValueDiffers;\n/** @type {?} */\nNgClass.prototype._ngEl;\n/** @type {?} */\nNgClass.prototype._renderer;\n}\n\n"]}