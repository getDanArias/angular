{"version":3,"sources":["../../../../../packages/common/src/directives/ng_component_outlet.ts"],"names":[],"mappings":"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","file":"ng_component_outlet.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactoryResolver, ComponentRef, Directive, Injector, Input, NgModuleFactory, NgModuleRef, OnChanges, OnDestroy, SimpleChanges, StaticProvider, Type, ViewContainerRef} from '@angular/core';\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n * \n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n * \n * ### Fine tune control\n * \n * You can control the component creation process by using the following optional attributes:\n * \n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n * \n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n * \n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n * \n * ### Syntax\n * \n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n * \n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n * \n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n * ## Example\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n * \n * A more complete example with additional options:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n * \n * \\@experimental\n */\nexport class NgComponentOutlet implements OnChanges, OnDestroy {\n   ngComponentOutlet: Type<any>;\n   ngComponentOutletInjector: Injector;\n   ngComponentOutletContent: any[][];\n   ngComponentOutletNgModuleFactory: NgModuleFactory<any>;\nprivate _componentRef: ComponentRef<any>|null = null;\nprivate _moduleRef: NgModuleRef<any>|null = null;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._viewContainerRef.clear();\n    this._componentRef = null;\n\n    if (this.ngComponentOutlet) {\n      const /** @type {?} */ elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n\n      if (changes['ngComponentOutletNgModuleFactory']) {\n        if (this._moduleRef) this._moduleRef.destroy();\n\n        if (this.ngComponentOutletNgModuleFactory) {\n          const /** @type {?} */ parentModule = elInjector.get(NgModuleRef);\n          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n        } else {\n          this._moduleRef = null;\n        }\n      }\n\n      const /** @type {?} */ componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                                                         elInjector.get(ComponentFactoryResolver);\n\n      const /** @type {?} */ componentFactory =\n          componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n\n      this._componentRef = this._viewContainerRef.createComponent(\n          componentFactory, this._viewContainerRef.length, elInjector,\n          this.ngComponentOutletContent);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._moduleRef) this._moduleRef.destroy();\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[ngComponentOutlet]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"ngComponentOutlet\": [{ type: Input },],\n\"ngComponentOutletInjector\": [{ type: Input },],\n\"ngComponentOutletContent\": [{ type: Input },],\n\"ngComponentOutletNgModuleFactory\": [{ type: Input },],\n};\n}\n\nfunction NgComponentOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentOutlet.ctorParameters;\n/** @type {?} */\nNgComponentOutlet.propDecorators;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutlet;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletInjector;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletContent;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletNgModuleFactory;\n/** @type {?} */\nNgComponentOutlet.prototype._componentRef;\n/** @type {?} */\nNgComponentOutlet.prototype._moduleRef;\n/** @type {?} */\nNgComponentOutlet.prototype._viewContainerRef;\n}\n\n"]}