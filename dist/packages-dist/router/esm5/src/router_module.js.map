{"version":3,"sources":["../../../../../packages/router/src/router_module.ts"],"names":[],"mappings":"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","file":"router_module.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation} from '@angular/common';\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Compiler, ComponentRef, Inject, Injectable, InjectionToken, Injector, ModuleWithProviders, NgModule, NgModuleFactoryLoader, NgProbeToken, Optional, Provider, SkipSelf, SystemJsNgModuleLoader} from '@angular/core';\nimport {ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {Subject} from 'rxjs/Subject';\nimport {of } from 'rxjs/observable/of';\n\nimport {Route, Routes} from './config';\nimport {RouterLink, RouterLinkWithHref} from './directives/router_link';\nimport {RouterLinkActive} from './directives/router_link_active';\nimport {RouterOutlet} from './directives/router_outlet';\nimport {RouteReuseStrategy} from './route_reuse_strategy';\nimport {ErrorHandler, Router} from './router';\nimport {ROUTES} from './router_config_loader';\nimport {ChildrenOutletContexts} from './router_outlet_context';\nimport {NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader} from './router_preloader';\nimport {ActivatedRoute} from './router_state';\nimport {UrlHandlingStrategy} from './url_handling_strategy';\nimport {DefaultUrlSerializer, UrlSerializer} from './url_tree';\nimport {flatten} from './utils/collection';\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nconst /** @type {?} */ ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nexport const /** @type {?} */ ROUTER_CONFIGURATION = new InjectionToken<ExtraOptions>('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nexport const /** @type {?} */ ROUTER_FORROOT_GUARD = new InjectionToken<void>('ROUTER_FORROOT_GUARD');\n\nexport const /** @type {?} */ ROUTER_PROVIDERS: Provider[] = [\n  Location,\n  {provide: UrlSerializer, useClass: DefaultUrlSerializer},\n  {\n    provide: Router,\n    useFactory: setupRouter,\n    deps: [\n      ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n      NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n      [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n    ]\n  },\n  ChildrenOutletContexts,\n  {provide: ActivatedRoute, useFactory: rootRoute, deps: [Router]},\n  {provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader},\n  RouterPreloader,\n  NoPreloading,\n  PreloadAllModules,\n  {provide: ROUTER_CONFIGURATION, useValue: {enableTracing: false}},\n];\n/**\n * @return {?}\n */\nexport function routerNgProbeToken() {\n  return new NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n * \n * \\@howToUse \n * \n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n * \n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n * \n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n * \n * When registered at the root, the module should be used as follows\n * \n * ```\n * \\@NgModule({ \n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n * \n * For submodules and lazy loaded submodules the module should be used as follows:\n * \n * ```\n * \\@NgModule({ \n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n * \n * \\@description \n * \n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n * \n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n * \n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n * \n * \\@stable\n */\nexport class RouterModule {\n/**\n * @param {?} guard\n * @param {?} router\n */\nconstructor(  guard: any,  router: Router) {}\n/**\n * Creates a module with all the router providers and directives. It also optionally sets up an\n * application listener to perform an initial navigation.\n * \n * Options:\n * * `enableTracing` makes the router log all its internal events to the console.\n * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n * API.\n * * `initialNavigation` disables the initial navigation.\n * * `errorHandler` provides a custom error handler.\n * @param {?} routes\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders {\n    return {\n      ngModule: RouterModule,\n      providers: [\n        ROUTER_PROVIDERS,\n        provideRoutes(routes),\n        {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        },\n        {provide: ROUTER_CONFIGURATION, useValue: config ? config : {}},\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n          ]\n        },\n        {\n          provide: PreloadingStrategy,\n          useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                                                             NoPreloading\n        },\n        {provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken},\n        provideRouterInitializer(),\n      ],\n    };\n  }\n/**\n * Creates a module with all the router directives and a provider registering routes.\n * @param {?} routes\n * @return {?}\n */\nstatic forChild(routes: Routes): ModuleWithProviders {\n    return {ngModule: RouterModule, providers: [provideRoutes(routes)]};\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD, ] }, ]},\n{type: Router, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction RouterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterModule.ctorParameters;\n}\n\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nexport function provideLocationStrategy(\n    platformLocationStrategy: PlatformLocation, baseHref: string, options: ExtraOptions = {}) {\n  return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n                           new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nexport function provideForRootGuard(router: Router): any {\n  if (router) {\n    throw new Error(\n        `RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n * \n * \\@howToUse \n * \n * ```\n * \\@NgModule({ \n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n * \n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nexport function provideRoutes(routes: Routes): any {\n  return [\n    {provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes},\n    {provide: ROUTES, multi: true, useValue: routes},\n  ];\n}\n\n/**\n * @whatItDoes Represents an option to configure when the initial navigation is performed.\n *\n * @description\n * * 'enabled' - the initial navigation starts before the root component is created.\n * The bootstrap is blocked until the initial navigation is complete.\n * * 'disabled' - the initial navigation is not performed. The location listener is set up before\n * the root component gets created.\n * * 'legacy_enabled'- the initial navigation starts after the root component has been created.\n * The bootstrap is not blocked until the initial navigation is complete. @deprecated\n * * 'legacy_disabled'- the initial navigation is not performed. The location listener is set up\n * after @deprecated\n * the root component gets created.\n * * `true` - same as 'legacy_enabled'. @deprecated since v4\n * * `false` - same as 'legacy_disabled'. @deprecated since v4\n *\n * The 'enabled' option should be used for applications unless there is a reason to have\n * more control over when the router starts its initial navigation due to some complex\n * initialization logic. In this case, 'disabled' should be used.\n *\n * The 'legacy_enabled' and 'legacy_disabled' should not be used for new applications.\n *\n * @experimental\n */\nexport type InitialNavigation =\n    true | false | 'enabled' | 'disabled' | 'legacy_enabled' | 'legacy_disabled';\n/**\n * \\@whatItDoes Represents options to configure the router.\n * \n * \\@stable\n * @record\n */\nexport function ExtraOptions() {}\n\n\nfunction ExtraOptions_tsickle_Closure_declarations() {\n/**\n * Makes the router log all its internal events to the console.\n * @type {?|undefined}\n */\nExtraOptions.prototype.enableTracing;\n/**\n * Enables the location strategy that uses the URL fragment instead of the history API.\n * @type {?|undefined}\n */\nExtraOptions.prototype.useHash;\n/**\n * Disables the initial navigation.\n * @type {?|undefined}\n */\nExtraOptions.prototype.initialNavigation;\n/**\n * A custom error handler.\n * @type {?|undefined}\n */\nExtraOptions.prototype.errorHandler;\n/**\n * Configures a preloading strategy. See {\\@link PreloadAllModules}.\n * @type {?|undefined}\n */\nExtraOptions.prototype.preloadingStrategy;\n}\n\n\n/**\n * @whatItDoes Represents options to configure the router.\n *\n * @stable\n */\nexport interface ExtraOptions {\n  /**\n   * Makes the router log all its internal events to the console.\n   */\n  enableTracing?: boolean;\n\n  /**\n   * Enables the location strategy that uses the URL fragment instead of the history API.\n   */\n  useHash?: boolean;\n\n  /**\n   * Disables the initial navigation.\n   */\n  initialNavigation?: InitialNavigation;\n\n  /**\n   * A custom error handler.\n   */\n  errorHandler?: ErrorHandler;\n\n  /**\n   * Configures a preloading strategy. See {@link PreloadAllModules}.\n   */\n  preloadingStrategy?: any;\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nexport function setupRouter(\n    ref: ApplicationRef, urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts,\n    location: Location, injector: Injector, loader: NgModuleFactoryLoader, compiler: Compiler,\n    config: Route[][], opts: ExtraOptions = {}, urlHandlingStrategy?: UrlHandlingStrategy,\n    routeReuseStrategy?: RouteReuseStrategy) {\n  const /** @type {?} */ router = new Router(\n      null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  if (opts.errorHandler) {\n    router.errorHandler = opts.errorHandler;\n  }\n\n  if (opts.enableTracing) {\n    const /** @type {?} */ dom = getDOM();\n    router.events.subscribe(e => {\n      dom.logGroup(`Router Event: ${(( /** @type {?} */((<any>e.constructor)))).name}`);\n      dom.log(e.toString());\n      dom.log(e);\n      dom.logGroupEnd();\n    });\n  }\n\n  return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nexport function rootRoute(router: Router): ActivatedRoute {\n  return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n * \n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n * \n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nexport class RouterInitializer {\nprivate initNavigation: boolean = false;\nprivate resultOfPreactivationDone = new Subject<void>();\n/**\n * @param {?} injector\n */\nconstructor(private injector: Injector) {}\n/**\n * @return {?}\n */\nappInitializer(): Promise<any> {\n    const /** @type {?} */ p: Promise<any> = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n    return p.then(() => {\n      let /** @type {?} */ resolve: Function = /** @type {?} */(( null));\n      const /** @type {?} */ res = new Promise(r => resolve = r);\n      const /** @type {?} */ router = this.injector.get(Router);\n      const /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n\n      if (this.isLegacyDisabled(opts) || this.isLegacyEnabled(opts)) {\n        resolve(true);\n\n      } else if (opts.initialNavigation === 'disabled') {\n        router.setUpLocationChangeListener();\n        resolve(true);\n\n      } else if (opts.initialNavigation === 'enabled') {\n        router.hooks.afterPreactivation = () => {\n          // only the initial navigation should be delayed\n          if (!this.initNavigation) {\n            this.initNavigation = true;\n            resolve(true);\n            return this.resultOfPreactivationDone;\n\n            // subsequent navigations should not be delayed\n          } else {\n            return /** @type {?} */(( of (null) as any));\n          }\n        };\n        router.initialNavigation();\n\n      } else {\n        throw new Error(`Invalid initialNavigation options: '${opts.initialNavigation}'`);\n      }\n\n      return res;\n    });\n  }\n/**\n * @param {?} bootstrappedComponentRef\n * @return {?}\n */\nbootstrapListener(bootstrappedComponentRef: ComponentRef<any>): void {\n    const /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n    const /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n    const /** @type {?} */ router = this.injector.get(Router);\n    const /** @type {?} */ ref = this.injector.get(ApplicationRef);\n\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n\n    if (this.isLegacyEnabled(opts)) {\n      router.initialNavigation();\n    } else if (this.isLegacyDisabled(opts)) {\n      router.setUpLocationChangeListener();\n    }\n\n    preloader.setUpPreloading();\n    router.resetRootComponentType(ref.componentTypes[0]);\n    this.resultOfPreactivationDone.next( /** @type {?} */((null)));\n    this.resultOfPreactivationDone.complete();\n  }\n/**\n * @param {?} opts\n * @return {?}\n */\n\nprivate isLegacyEnabled(opts: ExtraOptions): boolean {\n    return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n        opts.initialNavigation === undefined;\n  }\n/**\n * @param {?} opts\n * @return {?}\n */\n\nprivate isLegacyDisabled(opts: ExtraOptions): boolean {\n    return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction RouterInitializer_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterInitializer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterInitializer.ctorParameters;\n/** @type {?} */\nRouterInitializer.prototype.initNavigation;\n/** @type {?} */\nRouterInitializer.prototype.resultOfPreactivationDone;\n/** @type {?} */\nRouterInitializer.prototype.injector;\n}\n\n/**\n * @param {?} r\n * @return {?}\n */\nexport function getAppInitializer(r: RouterInitializer) {\n  return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nexport function getBootstrapListener(r: RouterInitializer) {\n  return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ ROUTER_INITIALIZER =\n    new InjectionToken<(compRef: ComponentRef<any>) => void>('Router Initializer');\n/**\n * @return {?}\n */\nexport function provideRouterInitializer() {\n  return [\n    RouterInitializer,\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: getAppInitializer,\n      deps: [RouterInitializer]\n    },\n    {provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer]},\n    {provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER},\n  ];\n}\n"]}