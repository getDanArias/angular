{"version":3,"sources":["../../../../../../packages/router/src/utils/collection.ts"],"names":[],"mappings":"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","file":"collection.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModuleFactory, ɵisObservable as isObservable, ɵisPromise as isPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {of } from 'rxjs/observable/of';\nimport {concatAll} from 'rxjs/operator/concatAll';\nimport {every} from 'rxjs/operator/every';\nimport * as l from 'rxjs/operator/last';\nimport {map} from 'rxjs/operator/map';\nimport {mergeAll} from 'rxjs/operator/mergeAll';\nimport {PRIMARY_OUTLET} from '../shared';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function shallowEqualArrays(a: any[], b: any[]): boolean {\n  if (a.length !== b.length) return false;\n  for (let /** @type {?} */ i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function shallowEqual(a: {[x: string]: any}, b: {[x: string]: any}): boolean {\n  const /** @type {?} */ k1 = Object.keys(a);\n  const /** @type {?} */ k2 = Object.keys(b);\n  if (k1.length != k2.length) {\n    return false;\n  }\n  let /** @type {?} */ key: string;\n  for (let /** @type {?} */ i = 0; i < k1.length; i++) {\n    key = k1[i];\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nexport function flatten<T>(arr: T[][]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nexport function last<T>(a: T[]): T|null {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n * @param {?} bools\n * @return {?}\n */\nexport function and(bools: boolean[]): boolean {\n  return !bools.some(v => !v);\n}\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nexport function forEach<K, V>(map: {[key: string]: V}, callback: (v: V, k: string) => void): void {\n  for (const /** @type {?} */ prop in map) {\n    if (map.hasOwnProperty(prop)) {\n      callback(map[prop], prop);\n    }\n  }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function waitForMap<A, B>(\n    obj: {[k: string]: A}, fn: (k: string, a: A) => Observable<B>): Observable<{[k: string]: B}> {\n  if (Object.keys(obj).length === 0) {\n    return of ({});\n  }\n\n  const /** @type {?} */ waitHead: Observable<B>[] = [];\n  const /** @type {?} */ waitTail: Observable<B>[] = [];\n  const /** @type {?} */ res: {[k: string]: B} = {};\n\n  forEach(obj, (a: A, k: string) => {\n    const /** @type {?} */ mapped = map.call(fn(k, a), (r: B) => res[k] = r);\n    if (k === PRIMARY_OUTLET) {\n      waitHead.push(mapped);\n    } else {\n      waitTail.push(mapped);\n    }\n  });\n\n  const /** @type {?} */ concat$ = concatAll.call(of (...waitHead, ...waitTail));\n  const /** @type {?} */ last$ = l.last.call(concat$);\n  return map.call(last$, () => res);\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nexport function andObservables(observables: Observable<Observable<any>>): Observable<boolean> {\n  const /** @type {?} */ merged$ = mergeAll.call(observables);\n  return every.call(merged$, (result: any) => result === true);\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nexport function wrapIntoObservable<T>(value: T | NgModuleFactory<T>| Promise<T>| Observable<T>):\n    Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return fromPromise(Promise.resolve(value));\n  }\n\n  return of ( /** @type {?} */((value as T)));\n}\n"]}