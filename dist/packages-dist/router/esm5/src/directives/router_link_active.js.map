{"version":3,"sources":["../../../../../../packages/router/src/directives/router_link_active.ts"],"names":[],"mappings":"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","file":"router_link_active.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentInit, ChangeDetectorRef, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer2, SimpleChanges} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {NavigationEnd} from '../events';\nimport {Router} from '../router';\nimport {RouterLink, RouterLinkWithHref} from './router_link';\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n * \n * \\@howToUse \n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n * \n * \\@description \n * \n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n * \n * Consider the following example:\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n * \n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n * \n * You can set more than one class, as follows:\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n * \n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n * \n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n * \n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n * \n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n * \n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n * \n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class RouterLinkActive implements OnChanges,\n    OnDestroy, AfterContentInit {\n   links: QueryList<RouterLink>;\n  \n  linksWithHrefs: QueryList<RouterLinkWithHref>;\nprivate classes: string[] = [];\nprivate subscription: Subscription;\nprivate active: boolean = false;\n\n   routerLinkActiveOptions: {exact: boolean} = {exact: false};\n/**\n * @param {?} router\n * @param {?} element\n * @param {?} renderer\n * @param {?} cdr\n */\nconstructor(\nprivate router: Router,\nprivate element: ElementRef,\nprivate renderer: Renderer2,\nprivate cdr: ChangeDetectorRef) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nget isActive(): boolean { return this.active; }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this.links.changes.subscribe(_ => this.update());\n    this.linksWithHrefs.changes.subscribe(_ => this.update());\n    this.update();\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nset routerLinkActive(data: string[]|string) {\n    const /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n    this.classes = classes.filter(c => !!c);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void { this.update(); }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.subscription.unsubscribe(); }\n/**\n * @return {?}\n */\n\nprivate update(): void {\n    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;\n    const /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n\n    // react only when status has changed to prevent unnecessary dom updates\n    if (this.active !== hasActiveLinks) {\n      this.classes.forEach((c) => {\n        if (hasActiveLinks) {\n          this.renderer.addClass(this.element.nativeElement, c);\n        } else {\n          this.renderer.removeClass(this.element.nativeElement, c);\n        }\n      });\n      Promise.resolve(hasActiveLinks).then(active => this.active = active);\n    }\n  }\n/**\n * @param {?} router\n * @return {?}\n */\n\nprivate isLinkActive(router: Router): (link: (RouterLink|RouterLinkWithHref)) => boolean {\n    return (link: RouterLink | RouterLinkWithHref) =>\n               router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n  }\n/**\n * @return {?}\n */\n\nprivate hasActiveLinks(): boolean {\n    return this.links.some(this.isLinkActive(this.router)) ||\n        this.linksWithHrefs.some(this.isLinkActive(this.router));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{\n  selector: '[routerLinkActive]',\n  exportAs: 'routerLinkActive',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Router, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"links\": [{ type: ContentChildren, args: [RouterLink, {descendants: true}, ] },],\n\"linksWithHrefs\": [{ type: ContentChildren, args: [RouterLinkWithHref, {descendants: true}, ] },],\n\"routerLinkActiveOptions\": [{ type: Input },],\n\"routerLinkActive\": [{ type: Input },],\n};\n}\n\nfunction RouterLinkActive_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterLinkActive.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterLinkActive.ctorParameters;\n/** @type {?} */\nRouterLinkActive.propDecorators;\n/** @type {?} */\nRouterLinkActive.prototype.links;\n/** @type {?} */\nRouterLinkActive.prototype.linksWithHrefs;\n/** @type {?} */\nRouterLinkActive.prototype.classes;\n/** @type {?} */\nRouterLinkActive.prototype.subscription;\n/** @type {?} */\nRouterLinkActive.prototype.active;\n/** @type {?} */\nRouterLinkActive.prototype.routerLinkActiveOptions;\n/** @type {?} */\nRouterLinkActive.prototype.router;\n/** @type {?} */\nRouterLinkActive.prototype.element;\n/** @type {?} */\nRouterLinkActive.prototype.renderer;\n/** @type {?} */\nRouterLinkActive.prototype.cdr;\n}\n\n"]}