{"version":3,"sources":["../../../../../../packages/router/src/directives/router_outlet.ts"],"names":[],"mappings":"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","file":"router_outlet.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, Directive, EventEmitter, Injector, OnDestroy, OnInit, Output, ViewContainerRef} from '@angular/core';\n\nimport {ChildrenOutletContexts} from '../router_outlet_context';\nimport {ActivatedRoute} from '../router_state';\nimport {PRIMARY_OUTLET} from '../shared';\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n * \n * \\@howToUse \n * \n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n * \n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n * \n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class RouterOutlet implements OnDestroy, OnInit {\nprivate activated: ComponentRef<any>|null = null;\nprivate _activatedRoute: ActivatedRoute|null = null;\nprivate name: string;\n\n   activateEvents = new EventEmitter<any>();\n   deactivateEvents = new EventEmitter<any>();\n/**\n * @param {?} parentContexts\n * @param {?} location\n * @param {?} resolver\n * @param {?} name\n * @param {?} changeDetector\n */\nconstructor(\nprivate parentContexts: ChildrenOutletContexts,\nprivate location: ViewContainerRef,\nprivate resolver: ComponentFactoryResolver,  name: string,\nprivate changeDetector: ChangeDetectorRef) {\n    this.name = name || PRIMARY_OUTLET;\n    parentContexts.onChildOutletCreated(this.name, this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.parentContexts.onChildOutletDestroyed(this.name); }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    if (!this.activated) {\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const /** @type {?} */ context = this.parentContexts.getContext(this.name);\n      if (context && context.route) {\n        if (context.attachRef) {\n          // `attachRef` is populated when there is an existing component to mount\n          this.attach(context.attachRef, context.route);\n        } else {\n          // otherwise the component defined in the configuration is created\n          this.activateWith(context.route, context.resolver || null);\n        }\n      }\n    }\n  }\n/**\n * @deprecated since v4 *\n * @return {?}\n */\nget locationInjector(): Injector { return this.location.injector; }\n/**\n * @deprecated since v4 *\n * @return {?}\n */\nget locationFactoryResolver(): ComponentFactoryResolver { return this.resolver; }\n/**\n * @return {?}\n */\nget isActivated(): boolean { return !!this.activated; }\n/**\n * @return {?}\n */\nget component(): Object {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return this.activated.instance;\n  }\n/**\n * @return {?}\n */\nget activatedRoute(): ActivatedRoute {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return /** @type {?} */(( this._activatedRoute as ActivatedRoute));\n  }\n/**\n * @return {?}\n */\nget activatedRouteData() {\n    if (this._activatedRoute) {\n      return this._activatedRoute.snapshot.data;\n    }\n    return {};\n  }\n/**\n * Called when the `RouteReuseStrategy` instructs to detach the subtree\n * @return {?}\n */\ndetach(): ComponentRef<any> {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    this.location.detach();\n    const /** @type {?} */ cmp = this.activated;\n    this.activated = null;\n    this._activatedRoute = null;\n    return cmp;\n  }\n/**\n * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n * @param {?} ref\n * @param {?} activatedRoute\n * @return {?}\n */\nattach(ref: ComponentRef<any>, activatedRoute: ActivatedRoute) {\n    this.activated = ref;\n    this._activatedRoute = activatedRoute;\n    this.location.insert(ref.hostView);\n  }\n/**\n * @return {?}\n */\ndeactivate(): void {\n    if (this.activated) {\n      const /** @type {?} */ c = this.component;\n      this.activated.destroy();\n      this.activated = null;\n      this._activatedRoute = null;\n      this.deactivateEvents.emit(c);\n    }\n  }\n/**\n * @param {?} activatedRoute\n * @param {?} resolver\n * @return {?}\n */\nactivateWith(activatedRoute: ActivatedRoute, resolver: ComponentFactoryResolver|null) {\n    if (this.isActivated) {\n      throw new Error('Cannot activate an already activated outlet');\n    }\n    this._activatedRoute = activatedRoute;\n    const /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n    const /** @type {?} */ component = /** @type {?} */(( <any> /** @type {?} */((snapshot._routeConfig)).component));\n    resolver = resolver || this.resolver;\n    const /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n    const /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n    const /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n    this.activated = this.location.createComponent(factory, this.location.length, injector);\n    // Calling `markForCheck` to make sure we will run the change detection when the\n    // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n    this.changeDetector.markForCheck();\n    this.activateEvents.emit(this.activated.instance);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: 'router-outlet', exportAs: 'outlet'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ChildrenOutletContexts, },\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: undefined, decorators: [{ type: Attribute, args: ['name', ] }, ]},\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"activateEvents\": [{ type: Output, args: ['activate', ] },],\n\"deactivateEvents\": [{ type: Output, args: ['deactivate', ] },],\n};\n}\n\nfunction RouterOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterOutlet.ctorParameters;\n/** @type {?} */\nRouterOutlet.propDecorators;\n/** @type {?} */\nRouterOutlet.prototype.activated;\n/** @type {?} */\nRouterOutlet.prototype._activatedRoute;\n/** @type {?} */\nRouterOutlet.prototype.name;\n/** @type {?} */\nRouterOutlet.prototype.activateEvents;\n/** @type {?} */\nRouterOutlet.prototype.deactivateEvents;\n/** @type {?} */\nRouterOutlet.prototype.parentContexts;\n/** @type {?} */\nRouterOutlet.prototype.location;\n/** @type {?} */\nRouterOutlet.prototype.resolver;\n/** @type {?} */\nRouterOutlet.prototype.changeDetector;\n}\n\nclass OutletInjector implements Injector {\n/**\n * @param {?} route\n * @param {?} childContexts\n * @param {?} parent\n */\nconstructor(\nprivate route: ActivatedRoute,\nprivate childContexts: ChildrenOutletContexts,\nprivate parent: Injector) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any): any {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n\n    return this.parent.get(token, notFoundValue);\n  }\n}\n\nfunction OutletInjector_tsickle_Closure_declarations() {\n/** @type {?} */\nOutletInjector.prototype.route;\n/** @type {?} */\nOutletInjector.prototype.childContexts;\n/** @type {?} */\nOutletInjector.prototype.parent;\n}\n\n"]}