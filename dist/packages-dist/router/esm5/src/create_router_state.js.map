{"version":3,"sources":["../../../../../packages/router/src/create_router_state.ts"],"names":[],"mappings":"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","file":"create_router_state.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nimport {DetachedRouteHandleInternal, RouteReuseStrategy} from './route_reuse_strategy';\nimport {ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot} from './router_state';\nimport {TreeNode} from './utils/tree';\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nexport function createRouterState(\n    routeReuseStrategy: RouteReuseStrategy, curr: RouterStateSnapshot,\n    prevState: RouterState): RouterState {\n  const /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(\n    routeReuseStrategy: RouteReuseStrategy, curr: TreeNode<ActivatedRouteSnapshot>,\n    prevState?: TreeNode<ActivatedRoute>): TreeNode<ActivatedRoute> {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    const /** @type {?} */ value = prevState.value;\n    value._futureSnapshot = curr.value;\n    const /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode<ActivatedRoute>(value, children);\n\n    // retrieve an activated route that is used to be displayed, but is not currently displayed\n  } else if (routeReuseStrategy.retrieve(curr.value)) {\n    const /** @type {?} */ tree: TreeNode<ActivatedRoute> =\n        ( /** @type {?} */((<DetachedRouteHandleInternal>routeReuseStrategy.retrieve(curr.value)))).route;\n    setFutureSnapshotsOfActivatedRoutes(curr, tree);\n    return tree;\n\n  } else {\n    const /** @type {?} */ value = createActivatedRoute(curr.value);\n    const /** @type {?} */ children = curr.children.map(c => createNode(routeReuseStrategy, c));\n    return new TreeNode<ActivatedRoute>(value, children);\n  }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(\n    curr: TreeNode<ActivatedRouteSnapshot>, result: TreeNode<ActivatedRoute>): void {\n  if (curr.value.routeConfig !== result.value.routeConfig) {\n    throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n  }\n  if (curr.children.length !== result.children.length) {\n    throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n  }\n  result.value._futureSnapshot = curr.value;\n  for (let /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n    setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n  }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(\n    routeReuseStrategy: RouteReuseStrategy, curr: TreeNode<ActivatedRouteSnapshot>,\n    prevState: TreeNode<ActivatedRoute>) {\n  return curr.children.map(child => {\n    for (const /** @type {?} */ p of prevState.children) {\n      if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n        return createNode(routeReuseStrategy, child, p);\n      }\n    }\n    return createNode(routeReuseStrategy, child);\n  });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c: ActivatedRouteSnapshot) {\n  return new ActivatedRoute(\n      new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams),\n      new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}"]}