{"version":3,"sources":["../../../../../packages/router/src/pre_activation.ts"],"names":[],"mappings":"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","file":"pre_activation.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {from} from 'rxjs/observable/from';\nimport {of } from 'rxjs/observable/of';\nimport {concatMap} from 'rxjs/operator/concatMap';\nimport {every} from 'rxjs/operator/every';\nimport {first} from 'rxjs/operator/first';\nimport {last} from 'rxjs/operator/last';\nimport {map} from 'rxjs/operator/map';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {reduce} from 'rxjs/operator/reduce';\n\nimport {LoadedRouterConfig, ResolveData, RunGuardsAndResolvers} from './config';\nimport {ChildActivationStart, RouteEvent} from './events';\nimport {ChildrenOutletContexts, OutletContext} from './router_outlet_context';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, equalParamsAndUrlSegments, inheritedParamsDataResolve} from './router_state';\nimport {andObservables, forEach, shallowEqual, wrapIntoObservable} from './utils/collection';\nimport {TreeNode, nodeChildrenAsMap} from './utils/tree';\nclass CanActivate {\n/**\n * @param {?} path\n */\nconstructor(public path: ActivatedRouteSnapshot[]) {}\n/**\n * @return {?}\n */\nget route(): ActivatedRouteSnapshot { return this.path[this.path.length - 1]; }\n}\n\nfunction CanActivate_tsickle_Closure_declarations() {\n/** @type {?} */\nCanActivate.prototype.path;\n}\n\nclass CanDeactivate {\n/**\n * @param {?} component\n * @param {?} route\n */\nconstructor(public component: Object|null,\npublic route: ActivatedRouteSnapshot) {}\n}\n\nfunction CanDeactivate_tsickle_Closure_declarations() {\n/** @type {?} */\nCanDeactivate.prototype.component;\n/** @type {?} */\nCanDeactivate.prototype.route;\n}\n\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nexport class PreActivation {\nprivate canActivateChecks: CanActivate[] = [];\nprivate canDeactivateChecks: CanDeactivate[] = [];\n/**\n * @param {?} future\n * @param {?} curr\n * @param {?} moduleInjector\n * @param {?=} forwardEvent\n */\nconstructor(\nprivate future: RouterStateSnapshot,\nprivate curr: RouterStateSnapshot,\nprivate moduleInjector: Injector,\nprivate forwardEvent?: (evt: RouteEvent) => void) {}\n/**\n * @param {?} parentContexts\n * @return {?}\n */\ninitalize(parentContexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ futureRoot = this.future._root;\n    const /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n    this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n  }\n/**\n * @return {?}\n */\ncheckGuards(): Observable<boolean> {\n    if (!this.isDeactivating() && !this.isActivating()) {\n      return of (true);\n    }\n    const /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n    return mergeMap.call(\n        canDeactivate$,\n        (canDeactivate: boolean) => canDeactivate ? this.runCanActivateChecks() : of (false));\n  }\n/**\n * @return {?}\n */\nresolveData(): Observable<any> {\n    if (!this.isActivating()) return of (null);\n    const /** @type {?} */ checks$ = from(this.canActivateChecks);\n    const /** @type {?} */ runningChecks$ =\n        concatMap.call(checks$, (check: CanActivate) => this.runResolve(check.route));\n    return reduce.call(runningChecks$, (_: any, __: any) => _);\n  }\n/**\n * @return {?}\n */\nisDeactivating(): boolean { return this.canDeactivateChecks.length !== 0; }\n/**\n * @return {?}\n */\nisActivating(): boolean { return this.canActivateChecks.length !== 0; }\n/**\n * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n * proper state to run `checkGuards()` method.\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} contexts\n * @param {?} futurePath\n * @return {?}\n */\n\nprivate setupChildRouteGuards(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>|null,\n      contexts: ChildrenOutletContexts|null, futurePath: ActivatedRouteSnapshot[]): void {\n    const /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n\n    // Process the children of the future route\n    futureNode.children.forEach(c => {\n      this.setupRouteGuards(\n          c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n      delete prevChildren[c.value.outlet];\n    });\n\n    // Process any children left from the current route (not active for the future route)\n    forEach(\n        prevChildren, (v: TreeNode<ActivatedRouteSnapshot>, k: string) =>\n                          this.deactivateRouteAndItsChildren(v, /** @type {?} */(( contexts)).getContext(k)));\n  }\n/**\n * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n * proper state to run `checkGuards()` method.\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} parentContexts\n * @param {?} futurePath\n * @return {?}\n */\n\nprivate setupRouteGuards(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>,\n      parentContexts: ChildrenOutletContexts|null, futurePath: ActivatedRouteSnapshot[]): void {\n    const /** @type {?} */ future = futureNode.value;\n    const /** @type {?} */ curr = currNode ? currNode.value : null;\n    const /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n\n    // reusing the node\n    if (curr && future._routeConfig === curr._routeConfig) {\n      const /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(\n          curr, future, /** @type {?} */(( future._routeConfig)).runGuardsAndResolvers);\n      if (shouldRunGuardsAndResolvers) {\n        this.canActivateChecks.push(new CanActivate(futurePath));\n      } else {\n        // we need to set the data\n        future.data = curr.data;\n        future._resolvedData = curr._resolvedData;\n      }\n\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.setupChildRouteGuards(\n            futureNode, currNode, context ? context.children : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n      }\n\n      if (shouldRunGuardsAndResolvers) {\n        const /** @type {?} */ outlet = /** @type {?} */(( /** @type {?} */(( context)).outlet));\n        this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n      }\n    } else {\n      if (curr) {\n        this.deactivateRouteAndItsChildren(currNode, context);\n      }\n\n      this.canActivateChecks.push(new CanActivate(futurePath));\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n      }\n    }\n  }\n/**\n * @param {?} curr\n * @param {?} future\n * @param {?} mode\n * @return {?}\n */\n\nprivate shouldRunGuardsAndResolvers(\n      curr: ActivatedRouteSnapshot, future: ActivatedRouteSnapshot,\n      mode: RunGuardsAndResolvers|undefined): boolean {\n    switch (mode) {\n      case 'always':\n        return true;\n\n      case 'paramsOrQueryParamsChange':\n        return !equalParamsAndUrlSegments(curr, future) ||\n            !shallowEqual(curr.queryParams, future.queryParams);\n\n      case 'paramsChange':\n      default:\n        return !equalParamsAndUrlSegments(curr, future);\n    }\n  }\n/**\n * @param {?} route\n * @param {?} context\n * @return {?}\n */\n\nprivate deactivateRouteAndItsChildren(\n      route: TreeNode<ActivatedRouteSnapshot>, context: OutletContext|null): void {\n    const /** @type {?} */ children = nodeChildrenAsMap(route);\n    const /** @type {?} */ r = route.value;\n\n    forEach(children, (node: TreeNode<ActivatedRouteSnapshot>, childName: string) => {\n      if (!r.component) {\n        this.deactivateRouteAndItsChildren(node, context);\n      } else if (context) {\n        this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n      } else {\n        this.deactivateRouteAndItsChildren(node, null);\n      }\n    });\n\n    if (!r.component) {\n      this.canDeactivateChecks.push(new CanDeactivate(null, r));\n    } else if (context && context.outlet && context.outlet.isActivated) {\n      this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    } else {\n      this.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n  }\n/**\n * @return {?}\n */\n\nprivate runCanDeactivateChecks(): Observable<boolean> {\n    const /** @type {?} */ checks$ = from(this.canDeactivateChecks);\n    const /** @type {?} */ runningChecks$ = mergeMap.call(\n        checks$, (check: CanDeactivate) => this.runCanDeactivate(check.component, check.route));\n    return every.call(runningChecks$, (result: boolean) => result === true);\n  }\n/**\n * @return {?}\n */\n\nprivate runCanActivateChecks(): Observable<boolean> {\n    const /** @type {?} */ checks$ = from(this.canActivateChecks);\n    const /** @type {?} */ runningChecks$ = concatMap.call(\n        checks$, (check: CanActivate) => andObservables(from([\n                   this.fireChildActivationStart(check.path), this.runCanActivateChild(check.path),\n                   this.runCanActivate(check.route)\n                 ])));\n    return every.call(runningChecks$, (result: boolean) => result === true);\n    // this.fireChildActivationStart(check.path),\n  }\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n * @param {?} path\n * @return {?}\n */\n\nprivate fireChildActivationStart(path: ActivatedRouteSnapshot[]): Observable<boolean> {\n    if (!this.forwardEvent) return of (true);\n    const /** @type {?} */ childActivations = path.slice(0, path.length - 1).reverse().filter(_ => _ !== null);\n\n    return andObservables(map.call(from(childActivations), (snapshot: ActivatedRouteSnapshot) => {\n      if (this.forwardEvent && snapshot._routeConfig) {\n        this.forwardEvent(new ChildActivationStart(snapshot._routeConfig));\n      }\n      return of (true);\n    }));\n  }\n/**\n * @param {?} future\n * @return {?}\n */\n\nprivate runCanActivate(future: ActivatedRouteSnapshot): Observable<boolean> {\n    const /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0) return of (true);\n    const /** @type {?} */ obs = map.call(from(canActivate), (c: any) => {\n      const /** @type {?} */ guard = this.getToken(c, future);\n      let /** @type {?} */ observable: Observable<boolean>;\n      if (guard.canActivate) {\n        observable = wrapIntoObservable(guard.canActivate(future, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(future, this.future));\n      }\n      return first.call(observable);\n    });\n    return andObservables(obs);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\n\nprivate runCanActivateChild(path: ActivatedRouteSnapshot[]): Observable<boolean> {\n    const /** @type {?} */ future = path[path.length - 1];\n\n    const /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n                                       .reverse()\n                                       .map(p => this.extractCanActivateChild(p))\n                                       .filter(_ => _ !== null);\n\n    return andObservables(map.call(from(canActivateChildGuards), (d: any) => {\n      const /** @type {?} */ obs = map.call(from(d.guards), (c: any) => {\n        const /** @type {?} */ guard = this.getToken(c, d.node);\n        let /** @type {?} */ observable: Observable<boolean>;\n        if (guard.canActivateChild) {\n          observable = wrapIntoObservable(guard.canActivateChild(future, this.future));\n        } else {\n          observable = wrapIntoObservable(guard(future, this.future));\n        }\n        return first.call(observable);\n      });\n      return andObservables(obs);\n    }));\n  }\n/**\n * @param {?} p\n * @return {?}\n */\n\nprivate extractCanActivateChild(p: ActivatedRouteSnapshot):\n      {node: ActivatedRouteSnapshot, guards: any[]}|null {\n    const /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0) return null;\n    return {node: p, guards: canActivateChild};\n  }\n/**\n * @param {?} component\n * @param {?} curr\n * @return {?}\n */\n\nprivate runCanDeactivate(component: Object|null, curr: ActivatedRouteSnapshot):\n      Observable<boolean> {\n    const /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0) return of (true);\n    const /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), (c: any) => {\n      const /** @type {?} */ guard = this.getToken(c, curr);\n      let /** @type {?} */ observable: Observable<boolean>;\n      if (guard.canDeactivate) {\n        observable =\n            wrapIntoObservable(guard.canDeactivate(component, curr, this.curr, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(component, curr, this.curr, this.future));\n      }\n      return first.call(observable);\n    });\n    return every.call(canDeactivate$, (result: any) => result === true);\n  }\n/**\n * @param {?} future\n * @return {?}\n */\n\nprivate runResolve(future: ActivatedRouteSnapshot): Observable<any> {\n    const /** @type {?} */ resolve = future._resolve;\n    return map.call(this.resolveNode(resolve, future), (resolvedData: any): any => {\n      future._resolvedData = resolvedData;\n      future.data = {...future.data, ...inheritedParamsDataResolve(future).resolve};\n      return null;\n    });\n  }\n/**\n * @param {?} resolve\n * @param {?} future\n * @return {?}\n */\n\nprivate resolveNode(resolve: ResolveData, future: ActivatedRouteSnapshot): Observable<any> {\n    const /** @type {?} */ keys = Object.keys(resolve);\n    if (keys.length === 0) {\n      return of ({});\n    }\n    if (keys.length === 1) {\n      const /** @type {?} */ key = keys[0];\n      return map.call(\n          this.getResolver(resolve[key], future), (value: any) => { return {[key]: value}; });\n    }\n    const /** @type {?} */ data: {[k: string]: any} = {};\n    const /** @type {?} */ runningResolvers$ = mergeMap.call(from(keys), (key: string) => {\n      return map.call(this.getResolver(resolve[key], future), (value: any) => {\n        data[key] = value;\n        return value;\n      });\n    });\n    return map.call(last.call(runningResolvers$), () => data);\n  }\n/**\n * @param {?} injectionToken\n * @param {?} future\n * @return {?}\n */\n\nprivate getResolver(injectionToken: any, future: ActivatedRouteSnapshot): Observable<any> {\n    const /** @type {?} */ resolver = this.getToken(injectionToken, future);\n    return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                              wrapIntoObservable(resolver(future, this.future));\n  }\n/**\n * @param {?} token\n * @param {?} snapshot\n * @return {?}\n */\n\nprivate getToken(token: any, snapshot: ActivatedRouteSnapshot): any {\n    const /** @type {?} */ config = closestLoadedConfig(snapshot);\n    const /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n    return injector.get(token);\n  }\n}\n\nfunction PreActivation_tsickle_Closure_declarations() {\n/** @type {?} */\nPreActivation.prototype.canActivateChecks;\n/** @type {?} */\nPreActivation.prototype.canDeactivateChecks;\n/** @type {?} */\nPreActivation.prototype.future;\n/** @type {?} */\nPreActivation.prototype.curr;\n/** @type {?} */\nPreActivation.prototype.moduleInjector;\n/** @type {?} */\nPreActivation.prototype.forwardEvent;\n}\n\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig|null {\n  if (!snapshot) return null;\n\n  for (let /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n    const /** @type {?} */ route = s._routeConfig;\n    if (route && route._loadedConfig) return route._loadedConfig;\n  }\n\n  return null;\n}\n"]}