{"version":3,"file":"router-upgrade.umd.js","sources":["../../../../packages/router/upgrade/src/upgrade.ts","../../../../packages/router/upgrade/public_api.ts","../../../../packages/router/upgrade/index.ts"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_BOOTSTRAP_LISTENER, ComponentRef, InjectionToken} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UpgradeModule} from '@angular/upgrade/static';\n/**\n * \\@whatItDoes Creates an initializer that in addition to setting up the Angular\n * router sets up the ngRoute integration.\n * \n * \\@howToUse \n * \n * ```\n * \\@NgModule({ \n *  imports: [\n *   RouterModule.forRoot(SOME_ROUTES),\n *   UpgradeModule\n * ],\n * providers: [\n *   RouterUpgradeInitializer\n * ]\n * })\n * export class AppModule {\n *   ngDoBootstrap() {}\n * }\n * ```\n * \n * \\@experimental\n */\nexport const /** @type {?} */ RouterUpgradeInitializer = {\n  provide: APP_BOOTSTRAP_LISTENER,\n  multi: true,\n  useFactory: locationSyncBootstrapListener,\n  deps: [UpgradeModule]\n};\n/**\n * \\@internal\n * @param {?} ngUpgrade\n * @return {?}\n */\nexport function locationSyncBootstrapListener(ngUpgrade: UpgradeModule) {\n  return () => { setUpLocationSync(ngUpgrade); };\n}\n/**\n * \\@whatItDoes Sets up a location synchronization.\n * \n * History.pushState does not fire onPopState, so the Angular location\n * doesn't detect it. The workaround is to attach a location change listener\n * \n * \\@experimental\n * @param {?} ngUpgrade\n * @return {?}\n */\nexport function setUpLocationSync(ngUpgrade: UpgradeModule) {\n  if (!ngUpgrade.$injector) {\n    throw new Error(`\n        RouterUpgradeInitializer can be used only after UpgradeModule.bootstrap has been called.\n        Remove RouterUpgradeInitializer and call setUpLocationSync after UpgradeModule.bootstrap.\n      `);\n  }\n\n  const /** @type {?} */ router: Router = ngUpgrade.injector.get(Router);\n  const /** @type {?} */ url = document.createElement('a');\n\n  ngUpgrade.$injector.get('$rootScope')\n      .$on('$locationChangeStart', (_: any, next: string, __: string) => {\n        url.href = next;\n        router.navigateByUrl(url.pathname + url.search + url.hash);\n      });\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport {RouterUpgradeInitializer,locationSyncBootstrapListener,setUpLocationSync} from './src/upgrade';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {RouterUpgradeInitializer,locationSyncBootstrapListener,setUpLocationSync} from './public_api';\n"],"names":["APP_BOOTSTRAP_LISTENER","UpgradeModule","Router"],"mappings":";;;;;;AAAA;;;;;;;;;;;AAaA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,AAFO,IAAM,wBAAA,GAA2B;IAGtC,OAAO,EAFEA,oCAAA;IAGT,KAAK,EAFE,IAAA;IAGP,UAAU,EAFE,6BAAA;IAGZ,IAAI,EAFE,CAAAC,qCAAE,CAAa;CAGtB,CAFC;;;;;;AAQF,uCAH8C,SAAW;IAIvD,OAHO,cAAQ,iBAAA,CAAkB,SAAC,CAAS,CAAC,EAAC,CAAE;CAIhD;;;;;;;;;;;AAWD,2BAJkC,SAAW;IAK3C,IAAI,CAJC,SAAC,CAAS,SAAC,EAAU;QAKxB,MAJM,IAAI,KAAA,CAAM,+MAOb,CAJC,CAAC;KAKN;IAED,qBAJM,MAAA,GAAiB,SAAA,CAAU,QAAC,CAAQ,GAAC,CAAGC,sBAAC,CAAM,CAAC;IAKtD,qBAJM,GAAA,GAAM,QAAA,CAAS,aAAC,CAAa,GAAC,CAAG,CAAC;IAMxC,SAAS,CAJC,SAAC,CAAS,GAAC,CAAG,YAAC,CAAY;SAKhC,GAJC,CAAG,sBAAC,EAAuB,UAAA,CAAI,EAAK,IAAM,EAAQ,EAAI;QAKtD,GAAG,CAJC,IAAC,GAAM,IAAA,CAAK;QAKhB,MAAM,CAJC,aAAC,CAAa,GAAC,CAAG,QAAC,GAAU,GAAA,CAAI,MAAC,GAAQ,GAAA,CAAI,IAAC,CAAI,CAAC;KAK5D,CAJC,CAAC;CAKR;;AC/ED;;;;;;;;;;;;;;;;AAkBA,AAAuG;0EAE7B;;ACpB1E;;;;;;GAOG,AAEH,AAAsG;;;;;;;;"}