{"version":3,"sources":["../../../../packages/router/src/router_config_loader.ts"],"names":[],"mappings":"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","file":"router_config_loader.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, InjectionToken, Injector, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {of } from 'rxjs/observable/of';\nimport {map} from 'rxjs/operator/map';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {LoadChildren, LoadedRouterConfig, Route} from './config';\nimport {flatten, wrapIntoObservable} from './utils/collection';\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nexport const /** @type {?} */ ROUTES = new InjectionToken<Route[][]>('ROUTES');\nexport class RouterConfigLoader {\n/**\n * @param {?} loader\n * @param {?} compiler\n * @param {?=} onLoadStartListener\n * @param {?=} onLoadEndListener\n */\nconstructor(\nprivate loader: NgModuleFactoryLoader,\nprivate compiler: Compiler,\nprivate onLoadStartListener?: (r: Route) => void,\nprivate onLoadEndListener?: (r: Route) => void) {}\n/**\n * @param {?} parentInjector\n * @param {?} route\n * @return {?}\n */\nload(parentInjector: Injector, route: Route): Observable<LoadedRouterConfig> {\n    if (this.onLoadStartListener) {\n      this.onLoadStartListener(route);\n    }\n\n    const /** @type {?} */ moduleFactory$ = this.loadModuleFactory( /** @type {?} */((route.loadChildren)));\n\n    return map.call(moduleFactory$, (factory: NgModuleFactory<any>) => {\n      if (this.onLoadEndListener) {\n        this.onLoadEndListener(route);\n      }\n\n      const /** @type {?} */ module = factory.create(parentInjector);\n\n      return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n    });\n  }\n/**\n * @param {?} loadChildren\n * @return {?}\n */\n\nprivate loadModuleFactory(loadChildren: LoadChildren): Observable<NgModuleFactory<any>> {\n    if (typeof loadChildren === 'string') {\n      return fromPromise(this.loader.load(loadChildren));\n    } else {\n      return mergeMap.call(wrapIntoObservable(loadChildren()), (t: any) => {\n        if (t instanceof NgModuleFactory) {\n          return of (t);\n        } else {\n          return fromPromise(this.compiler.compileModuleAsync(t));\n        }\n      });\n    }\n  }\n}\n\nfunction RouterConfigLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterConfigLoader.prototype.loader;\n/** @type {?} */\nRouterConfigLoader.prototype.compiler;\n/** @type {?} */\nRouterConfigLoader.prototype.onLoadStartListener;\n/** @type {?} */\nRouterConfigLoader.prototype.onLoadEndListener;\n}\n\n"]}