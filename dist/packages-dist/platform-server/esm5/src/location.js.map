{"version":3,"sources":["../../../../../packages/platform-server/src/location.ts"],"names":[],"mappings":"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","file":"location.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeEvent, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DOCUMENT, ÉµgetDOM as getDOM} from '@angular/platform-browser';\nimport {Subject} from 'rxjs/Subject';\nimport * as url from 'url';\nimport {INITIAL_CONFIG, PlatformConfig} from './tokens';\n/**\n * @param {?} urlStr\n * @return {?}\n */\nfunction parseUrl(urlStr: string): {pathname: string, search: string, hash: string} {\n  const /** @type {?} */ parsedUrl = url.parse(urlStr);\n  return {\n    pathname: parsedUrl.pathname || '',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || '',\n  };\n}\n/**\n * Server-side implementation of URL state. Implements `pathname`, `search`, and `hash`\n * but not the state stack.\n */\nexport class ServerPlatformLocation implements PlatformLocation {\nprivate _path: string = '/';\nprivate _search: string = '';\nprivate _hash: string = '';\nprivate _hashUpdate = new Subject<LocationChangeEvent>();\n/**\n * @param {?} _doc\n * @param {?} _config\n */\nconstructor(\nprivate _doc: any,   _config: any) {\n    const /** @type {?} */ config = /** @type {?} */(( _config as PlatformConfig | null));\n    if (!!config && !!config.url) {\n      const /** @type {?} */ parsedUrl = parseUrl(config.url);\n      this._path = parsedUrl.pathname;\n      this._search = parsedUrl.search;\n      this._hash = parsedUrl.hash;\n    }\n  }\n/**\n * @return {?}\n */\ngetBaseHrefFromDOM(): string { return /** @type {?} */(( getDOM().getBaseHref(this._doc))); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener): void { this._hashUpdate.subscribe(fn); }\n/**\n * @return {?}\n */\nget pathname(): string { return this._path; }\n/**\n * @return {?}\n */\nget search(): string { return this._search; }\n/**\n * @return {?}\n */\nget hash(): string { return this._hash; }\n/**\n * @return {?}\n */\nget url(): string { return `${this.pathname}${this.search}${this.hash}`; }\n/**\n * @param {?} value\n * @param {?} oldUrl\n * @return {?}\n */\n\nprivate setHash(value: string, oldUrl: string) {\n    if (this._hash === value) {\n      // Don't fire events if the hash has not changed.\n      return;\n    }\n    this._hash = value;\n    const /** @type {?} */ newUrl = this.url;\n    scheduleMicroTask(\n        () => this._hashUpdate.next( /** @type {?} */(({ type: 'hashchange', oldUrl, newUrl } as LocationChangeEvent))));\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} newUrl\n * @return {?}\n */\nreplaceState(state: any, title: string, newUrl: string): void {\n    const /** @type {?} */ oldUrl = this.url;\n    const /** @type {?} */ parsedUrl = parseUrl(newUrl);\n    this._path = parsedUrl.pathname;\n    this._search = parsedUrl.search;\n    this.setHash(parsedUrl.hash, oldUrl);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} newUrl\n * @return {?}\n */\npushState(state: any, title: string, newUrl: string): void {\n    this.replaceState(state, title, newUrl);\n  }\n/**\n * @return {?}\n */\nforward(): void { throw new Error('Not implemented'); }\n/**\n * @return {?}\n */\nback(): void { throw new Error('Not implemented'); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [INITIAL_CONFIG, ] }, ]},\n];\n}\n\nfunction ServerPlatformLocation_tsickle_Closure_declarations() {\n/** @type {?} */\nServerPlatformLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerPlatformLocation.ctorParameters;\n/** @type {?} */\nServerPlatformLocation.prototype._path;\n/** @type {?} */\nServerPlatformLocation.prototype._search;\n/** @type {?} */\nServerPlatformLocation.prototype._hash;\n/** @type {?} */\nServerPlatformLocation.prototype._hashUpdate;\n/** @type {?} */\nServerPlatformLocation.prototype._doc;\n}\n\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n"]}