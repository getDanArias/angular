{"version":3,"sources":["../../../../packages/platform-server/src/server.ts"],"names":[],"mappings":"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","file":"server.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵAnimationEngine} from '@angular/animations/browser';\nimport {PlatformLocation, ɵPLATFORM_SERVER_ID as PLATFORM_SERVER_ID} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {platformCoreDynamic} from '@angular/compiler';\nimport {Injectable, InjectionToken, Injector, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, Provider, RendererFactory2, RootRenderer, StaticProvider, Testability, createPlatformFactory, isDevMode, platformCore, ɵALLOW_MULTIPLE_PLATFORMS as ALLOW_MULTIPLE_PLATFORMS} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {BrowserModule, DOCUMENT, ɵSharedStylesHost as SharedStylesHost, ɵTRANSITION_ID, ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {NoopAnimationsModule, ɵAnimationRendererFactory} from '@angular/platform-browser/animations';\n\nimport {SERVER_HTTP_PROVIDERS} from './http';\nimport {ServerPlatformLocation} from './location';\nimport {Parse5DomAdapter, parseDocument} from './parse5_adapter';\nimport {PlatformState} from './platform_state';\nimport {ServerRendererFactory2} from './server_renderer';\nimport {ServerStylesHost} from './styles_host';\nimport {INITIAL_CONFIG, PlatformConfig} from './tokens';\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nexport const /** @type {?} */ INTERNAL_SERVER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: DOCUMENT, useFactory: _document, deps: [Injector]},\n  {provide: PLATFORM_ID, useValue: PLATFORM_SERVER_ID},\n  {provide: PLATFORM_INITIALIZER, useFactory: initParse5Adapter, multi: true, deps: [Injector]}, {\n    provide: PlatformLocation,\n    useClass: ServerPlatformLocation,\n    deps: [DOCUMENT, [Optional, INITIAL_CONFIG]]\n  },\n  {provide: PlatformState, deps: [DOCUMENT]},\n  // Add special provider that allows multiple instances of platformServer* to be created.\n  {provide: ALLOW_MULTIPLE_PLATFORMS, useValue: true}\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initParse5Adapter(injector: Injector) {\n  return () => { Parse5DomAdapter.makeCurrent(); };\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nexport function instantiateServerRendererFactory(\n    renderer: RendererFactory2, engine: ɵAnimationEngine, zone: NgZone) {\n  return new ɵAnimationRendererFactory(renderer, engine, zone);\n}\n\nexport const /** @type {?} */ SERVER_RENDER_PROVIDERS: Provider[] = [\n  ServerRendererFactory2,\n  {\n    provide: RendererFactory2,\n    useFactory: instantiateServerRendererFactory,\n    deps: [ServerRendererFactory2, ɵAnimationEngine, NgZone]\n  },\n  ServerStylesHost,\n  {provide: SharedStylesHost, useExisting: ServerStylesHost},\n];\n/**\n * The ng module for the server.\n * \n * \\@experimental\n */\nexport class ServerModule {\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  exports: [BrowserModule],\n  imports: [HttpModule, HttpClientModule, NoopAnimationsModule],\n  providers: [\n    SERVER_RENDER_PROVIDERS,\n    SERVER_HTTP_PROVIDERS,\n    {provide: Testability, useValue: null},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction ServerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nServerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerModule.ctorParameters;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction _document(injector: Injector) {\n  let /** @type {?} */ config: PlatformConfig|null = injector.get(INITIAL_CONFIG, null);\n  if (config && config.document) {\n    return parseDocument(config.document);\n  } else {\n    return getDOM().createHtmlDocument();\n  }\n}\n/**\n * \\@experimental\n */\nexport const /** @type {?} */ platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n/**\n * The server platform that supports the runtime compiler.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n"]}