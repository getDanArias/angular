{"version":3,"sources":["../../../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,cAAE,EAAc,MAAA,mBAAA,CAAA;AAMvB,OALO,EAAA,OAAE,IAAU,MAAA,EAAO,MAAA,eAAA,CAAA;AAM1B;;;;;;GAMG;AACH;IAJ0C,gDAAA;IAM1C;QAAA,YACI,iBAHM,SAQP;QAJC,KAAI,CAHC,MAAC,GAAQ,CAAA,CAAM,MAAC,CAAA,CAAM,CAAC,cAAC,CAAc;QAI3C,EAAE,CAAC,CAAC,KAHC,CAAI,MAAC,IAAS,IAAA,CAAK,CAAC,CAAA;YAIvB,MAHM,IAAI,KAAA,CAAM,uEAAC,CAAuE,CAAC;QAI3F,CAAC;;IACH,CAAC;IACH;;;OAGG;IACH,kCANG,GAMH,UANM,GAAK;QAOP,EAAE,CAAC,CAAC,IANC,CAAI,MAAC,CAAM,cAAC,CAAc,GAAC,CAAG,CAAC,CAAC,CAAA;YAOnC,MAAM,CANC,OAAA,CAAQ,OAAC,CAAO,IAAC,CAAI,MAAC,CAAM,GAAC,CAAG,CAAC,CAAC;QAO3C,CAAC;QANC,IAAA,CAAK,CAAA;YAOL,MAAM,CAAiB,CANF,OAAC,CAAO,MAAC,CAO1B,yDAAyD,GANG,GAAA,CAAI,CAAA,CAAC;QAOvE,CAAC;IACH,CAAC;IACH,2BANC;AAMD,CArBA,AAeC,CAnByC,cAAA,GAmBzC;;AAQD;IACA,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,MAAM,CAAC;AACtC,CAAC","file":"resource_loader_cache.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {Éµglobal as global} from '@angular/core';\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n * \n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n */\nexport class CachedResourceLoader extends ResourceLoader {\nprivate _cache: {[url: string]: string};\nconstructor() {\n    super();\n    this._cache = ( /** @type {?} */((<any>global))).$templateCache;\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nget(url: string): Promise<string> {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return /** @type {?} */(( <Promise<any>>Promise.reject(\n          'CachedResourceLoader: Did not find cached template for ' + url)));\n    }\n  }\n}\n\nfunction CachedResourceLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nCachedResourceLoader.prototype._cache;\n}\n\n"]}