{"version":3,"sources":["../../../../../packages/platform-browser/src/browser.ts"],"names":[],"mappings":"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","file":"browser.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, PlatformLocation, ÉµPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ErrorHandler, ModuleWithProviders, NgModule, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, RootRenderer, Sanitizer, SkipSelf, StaticProvider, Testability, createPlatformFactory, platformCore} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {Meta} from './browser/meta';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {Title} from './browser/title';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const /** @type {?} */ INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n/**\n * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * \\@experimental\n */\nexport const /** @type {?} */ BROWSER_SANITIZATION_PROVIDERS: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n/**\n * \\@stable\n */\nexport const /** @type {?} */ platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nexport function _document(): any {\n  return document;\n}\n/**\n * The ng module for the browser.\n * \n * \\@stable\n */\nexport class BrowserModule {\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: BrowserModule) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n/**\n * Configures a browser-based application to transition from a server-rendered app, if\n * one is present on the page. The specified parameters must include an application id,\n * which must match between the client and server applications.\n * \n * \\@experimental\n * @param {?} params\n * @return {?}\n */\nstatic withServerTransition(params: {appId: string}): ModuleWithProviders {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  providers: [\n    BROWSER_SANITIZATION_PROVIDERS,\n    {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n    {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n    DomRendererFactory2,\n    {provide: RendererFactory2, useExisting: DomRendererFactory2},\n    {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n    DomSharedStylesHost,\n    Testability,\n    EventManager,\n    ELEMENT_PROBE_PROVIDERS,\n    Meta,\n    Title,\n  ],\n  exports: [CommonModule, ApplicationModule]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction BrowserModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserModule.ctorParameters;\n}\n\n"]}