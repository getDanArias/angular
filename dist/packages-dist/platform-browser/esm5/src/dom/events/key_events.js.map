{"version":3,"sources":["../../../../../../../packages/platform-browser/src/dom/events/key_events.ts"],"names":[],"mappings":"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","file":"key_events.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\nconst /** @type {?} */ MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst /** @type {?} */ MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n/**\n * \\@experimental\n */\nexport class KeyEventsPlugin extends EventManagerPlugin {\n/**\n * @param {?} doc\n */\nconstructor( doc: any) { super(doc); }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return KeyEventsPlugin.parseEventName(eventName) != null; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const /** @type {?} */ parsedEvent = /** @type {?} */(( KeyEventsPlugin.parseEventName(eventName)));\n\n    const /** @type {?} */ outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\nstatic parseEventName(eventName: string): {[key: string]: string}|null {\n    const /** @type {?} */ parts: string[] = eventName.toLowerCase().split('.');\n\n    const /** @type {?} */ domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const /** @type {?} */ key = KeyEventsPlugin._normalizeKey( /** @type {?} */((parts.pop())));\n\n    let /** @type {?} */ fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const /** @type {?} */ index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    const /** @type {?} */ result: {[k: string]: string} = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nstatic getEventFullKey(event: KeyboardEvent): string {\n    let /** @type {?} */ fullKey = '';\n    let /** @type {?} */ key = getDOM().getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n/**\n * @param {?} fullKey\n * @param {?} handler\n * @param {?} zone\n * @return {?}\n */\nstatic eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n/**\n * \\@internal\n * @param {?} keyName\n * @return {?}\n */\nstatic _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction KeyEventsPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyEventsPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nKeyEventsPlugin.ctorParameters;\n}\n\n"]}