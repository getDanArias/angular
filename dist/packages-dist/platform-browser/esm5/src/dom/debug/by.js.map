{"version":3,"sources":["../../../../../../../packages/platform-browser/src/dom/debug/by.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAWH,OALO,EAAA,MAAE,EAAM,MAAA,uBAAA,CAAA;AAMf;;;;GAIG;AACH;IAAA;IAsCA,CALC;IAhCD;;;;;;;OAOG;IAFM,MAAA,GAGT,cAH0C,MAAA,CAAO,UAAA,YAAE,IAAgB,OAAA,IAAA,EAAA,CAAA,CAAK,CAAC,CAAA;IAIzE;;;;;;;;OAQG;IAHM,MAAA,GAIT,UAJa,QAAU;QAKnB,MAAM,CAJC,UAAA,YAAE;YAKP,MAAM,CAJC,YAAA,CAAa,aAAC,IAAgB,IAAA;gBAKjC,MAAM,EAJC,CAAE,cAAC,CAAc,YAAC,CAAY,aAAC,EAAc,QAAA,CAAS;gBAK7D,KAAK,CAJC;QAKZ,CAAC,CAJC;IAKJ,CAAC;IACH;;;;;;;;OAQG;IAJM,YAAA,GAKT,UALmB,IAAe;QAM9B,MAAM,CALC,UAAA,YAAE,IAAa,gBAAA,CAAA,OAAA,CAAA,CAAG,YAAA,CAAa,cAAC,CAAA,CAAA,CAAgB,OAAC,CAAO,IAAC,CAAI,KAAK,CAAA,CAAE,EAArD,CAAqD,CAAC;IAM9E,CAAC;IACH,SALC;AAKD,CAtCA,AAiCC,IAAA","file":"by.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement, Predicate, Type} from '@angular/core';\nimport {getDOM} from '../../dom/dom_adapter';\n/**\n * Predicates for use with {\\@link DebugElement}'s query functions.\n * \n * \\@experimental All debugging apis are currently experimental.\n */\nexport class By {\n/**\n * Match all elements.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n * @return {?}\n */\nstatic all(): Predicate<DebugElement> { return (debugElement) => true; }\n/**\n * Match elements by the given CSS selector.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n * @param {?} selector\n * @return {?}\n */\nstatic css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          getDOM().elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n/**\n * Match elements that have the given directive present.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n * @param {?} type\n * @return {?}\n */\nstatic directive(type: Type<any>): Predicate<DebugElement> {\n    return (debugElement) => /** @type {?} */(( debugElement.providerTokens)).indexOf(type) !== -1;\n  }\n}\n"]}