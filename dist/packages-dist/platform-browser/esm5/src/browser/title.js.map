{"version":3,"sources":["../../../../../../packages/platform-browser/src/browser/title.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,MAAE,EAAO,UAAA,EAAW,MAAA,eAAA,CAAA;AAO3B,OALO,EAAA,MAAE,EAAM,MAAA,oBAAA,CAAA;AAMf,OALO,EAAA,QAAE,EAAQ,MAAA,mBAAA,CAAA;AAMjB;;;;;;;;;GASG;AACH;IACA;;OAEG;IACH,eALwC,IAAM;QAAN,SAAA,GAAA,IAAA,CAAM;IAAK,CAAA;IAOnD;;;OAGG;IACH,wBAPG,GAOH,cAPuB,MAAA,CAAO,MAAA,EAAO,CAAE,QAAC,CAAQ,IAAC,CAAI,IAAC,CAAI,CAAC,CAAC,CAAA;IAQ5D;;;;OAIG;IACH,wBAPG,GAOH,UAPW,QAAU,IAAU,MAAA,EAAO,CAAE,QAAC,CAAQ,IAAC,CAAI,IAAC,EAAK,QAAA,CAAS,CAAC,CAAC,CAAA;IAevE,YAdC;AAcD,CAxBA,AAUC;;AAAM,gBAAA,GAA+C;IAQtD,EAPE,IAAA,EAAM,UAAA,EAdN;CAsBD,CAPC;AAQF,kBAAkB;AANX,oBAAA,GAA4F,cAAM,OAAA;IAQzG,EAAC,IAPC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAhBvB,IAAA,EAAA,CAAA,QAAO,EAAA,EAAA,EAAA,EAAA;CAwBtB,EATwG,CASxG,CAPC;AAUF;IACA,gBAAgB;IAChB,KAAK,CAAC,UAAU,CAAC;IACjB;;;OAGG;IACH,KAAK,CAAC,cAAc,CAAC;IACrB,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AACrB,CAAC","file":"title.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n/**\n * A service that can be used to get and set the title of a current HTML document.\n * \n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n * \n * \\@experimental\n */\nexport class Title {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {}\n/**\n * Get the title of the current HTML document.\n * @return {?}\n */\ngetTitle(): string { return getDOM().getTitle(this._doc); }\n/**\n * Set the title of the current HTML document.\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(newTitle: string) { getDOM().setTitle(this._doc, newTitle); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction Title_tsickle_Closure_declarations() {\n/** @type {?} */\nTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTitle.ctorParameters;\n/** @type {?} */\nTitle.prototype._doc;\n}\n\n"]}