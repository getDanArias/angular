{"version":3,"sources":["../../../../../../../packages/platform-webworker/src/web_workers/ui/event_dispatcher.ts"],"names":[],"mappings":"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","file":"event_dispatcher.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {EventEmitter} from '@angular/core';\nimport {Serializer, SerializerTypes} from '../shared/serializer';\n\nimport {serializeEventWithTarget, serializeGenericEvent, serializeKeyboardEvent, serializeMouseEvent, serializeTransitionEvent} from './event_serializer';\nexport class EventDispatcher {\n/**\n * @param {?} _sink\n * @param {?} _serializer\n */\nconstructor(private _sink: EventEmitter<any>,\nprivate _serializer: Serializer) {}\n/**\n * @param {?} player\n * @param {?} phaseName\n * @param {?} element\n * @return {?}\n */\ndispatchAnimationEvent(player: any, phaseName: string, element: any): boolean {\n    this._sink.emit({\n      'element': this._serializer.serialize(element, SerializerTypes.RENDER_STORE_OBJECT),\n      'animationPlayer': this._serializer.serialize(player, SerializerTypes.RENDER_STORE_OBJECT),\n      'phaseName': phaseName,\n    });\n    return true;\n  }\n/**\n * @param {?} element\n * @param {?} eventTarget\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\ndispatchRenderEvent(element: any, eventTarget: string, eventName: string, event: any): boolean {\n    let /** @type {?} */ serializedEvent: any;\n    // TODO (jteplitz602): support custom events #3350\n    switch (event.type) {\n      case 'click':\n      case 'mouseup':\n      case 'mousedown':\n      case 'dblclick':\n      case 'contextmenu':\n      case 'mouseenter':\n      case 'mouseleave':\n      case 'mousemove':\n      case 'mouseout':\n      case 'mouseover':\n      case 'show':\n        serializedEvent = serializeMouseEvent(event);\n        break;\n      case 'keydown':\n      case 'keypress':\n      case 'keyup':\n        serializedEvent = serializeKeyboardEvent(event);\n        break;\n      case 'input':\n      case 'change':\n      case 'blur':\n        serializedEvent = serializeEventWithTarget(event);\n        break;\n      case 'abort':\n      case 'afterprint':\n      case 'beforeprint':\n      case 'cached':\n      case 'canplay':\n      case 'canplaythrough':\n      case 'chargingchange':\n      case 'chargingtimechange':\n      case 'close':\n      case 'dischargingtimechange':\n      case 'DOMContentLoaded':\n      case 'downloading':\n      case 'durationchange':\n      case 'emptied':\n      case 'ended':\n      case 'error':\n      case 'fullscreenchange':\n      case 'fullscreenerror':\n      case 'invalid':\n      case 'languagechange':\n      case 'levelfchange':\n      case 'loadeddata':\n      case 'loadedmetadata':\n      case 'obsolete':\n      case 'offline':\n      case 'online':\n      case 'open':\n      case 'orientatoinchange':\n      case 'pause':\n      case 'pointerlockchange':\n      case 'pointerlockerror':\n      case 'play':\n      case 'playing':\n      case 'ratechange':\n      case 'readystatechange':\n      case 'reset':\n      case 'scroll':\n      case 'seeked':\n      case 'seeking':\n      case 'stalled':\n      case 'submit':\n      case 'success':\n      case 'suspend':\n      case 'timeupdate':\n      case 'updateready':\n      case 'visibilitychange':\n      case 'volumechange':\n      case 'waiting':\n        serializedEvent = serializeGenericEvent(event);\n        break;\n      case 'transitionend':\n        serializedEvent = serializeTransitionEvent(event);\n        break;\n      default:\n        throw new Error(eventName + ' not supported on WebWorkers');\n    }\n\n    this._sink.emit({\n      'element': this._serializer.serialize(element, SerializerTypes.RENDER_STORE_OBJECT),\n      'eventName': eventName,\n      'eventTarget': eventTarget,\n      'event': serializedEvent,\n    });\n\n    // TODO(kegluneq): Eventually, we want the user to indicate from the UI side whether the event\n    // should be canceled, but for now just call `preventDefault` on the original DOM event.\n    return false;\n  }\n}\n\nfunction EventDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nEventDispatcher.prototype._sink;\n/** @type {?} */\nEventDispatcher.prototype._serializer;\n}\n\n"]}