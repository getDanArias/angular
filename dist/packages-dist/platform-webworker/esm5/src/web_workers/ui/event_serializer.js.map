{"version":3,"sources":["../../../../../../../packages/platform-webworker/src/web_workers/ui/event_serializer.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH;;;;;;GAMG;AACH,IALC,gBAAA,CAAK,sBAAA,GAAyB;IAM7B,QAAQ,EALE,QAAA,EAAU,SAAA,EAAW,SAAA,EAAW,SAAA,EAAW,WAAA,EAAa,WAAA,EAAa,SAAA;IAM/E,SAAS,EALE,QAAA,EAAU,SAAA,EAAW,SAAA,EAAW,UAAA;CAM5C,CALC;AAOF,IAAM,gBAAgB,CALhB,yBAAA,GAA4B;IAMhC,QAAQ,EALE,UAAA,EAAY,MAAA,EAAQ,SAAA,EAAW,aAAA,EAAe,KAAA,EAAO,SAAA,EAAW,UAAA,EAAY,SAAA;IAMtF,QAAQ,EALE,UAAA,EAAY,OAAA;CAMvB,CALC;AAOF,IAAM,gBAAgB,CALhB,2BAAA,GAA8B,CAAA,cAAE,EAAe,aAAA,EAAe,eAAA,CAAgB,CAAC;AAOrF,IAAM,gBAAgB,CALhB,gBAAA,GAAmB,CAAA,MAAE,EAAO,SAAA,EAAW,YAAA,CAAa,CAAC;AAO3D,IAAM,gBAAgB,CALhB,gBAAA,GAAmB,IAAI,GAAA,CAMzB,CAAC,OALC,EAAQ,QAAA,EAAU,QAAA,EAAU,QAAA,EAAU,IAAA,EAAM,OAAA,EAAS,UAAA,EAAY,OAAA,EAAS,UAAA,CAAW,CAAC,CAAC;AAM7F;;;GAGG;AACH,MARC,gCAAqC,CAAG;IASvC,MAAM,CARC,cAAA,CAAe,CAAC,EAAE,gBAAA,CAAiB,CAAC;AAS7C,CAAC;AACD;;;GAGG;AACH,MATC,mCAAwC,CAAG;IAU1C,IAAM,gBAAgB,CAThB,eAAA,GAAkB,cAAA,CAAe,CAAC,EAAE,gBAAA,CAAiB,CAAC;IAU5D,MAAM,CATC,SAAA,CAAU,CAAC,EAAE,eAAA,CAAgB,CAAC;AAUvC,CAAC;AACD;;;GAGG;AACH,MAZC,8BAAmC,CAAG;IAarC,MAAM,CAZC,cAAA,CAAe,CAAC,EAAE,sBAAA,CAAuB,CAAC;AAanD,CAAC;AACD;;;GAGG;AACH,MAfC,iCAAsC,CAAG;IAgBxC,IAAM,gBAAgB,CAfhB,eAAA,GAAkB,cAAA,CAAe,CAAC,EAAE,yBAAA,CAA0B,CAAC;IAgBrE,MAAM,CAfC,SAAA,CAAU,CAAC,EAAE,eAAA,CAAgB,CAAC;AAgBvC,CAAC;AACD;;;GAGG;AACH,MAlBC,mCAAwC,CAAG;IAmB1C,IAAM,gBAAgB,CAlBhB,eAAA,GAAkB,cAAA,CAAe,CAAC,EAAE,2BAAA,CAA4B,CAAC;IAmBvE,MAAM,CAlBC,SAAA,CAAU,CAAC,EAAE,eAAA,CAAgB,CAAC;AAmBvC,CAAC;AACD;;;;GAIG;AACH,mBArBmB,CAAG,EAAO,eAAqC;IAsBhE,EAAE,CAAC,CAAC,gBArBC,CAAgB,GAAC,CAAG,CAAC,CAAa,CAAC,CAAC,MAAC,CAAA,CAAM,CAAC,OAAC,CAAO,WAAC,EAAW,CAAE,CAAC,CAAC,CAAA;QAsBvE,IAAM,gBAAgB,CArBhB,MAAA,GAAO,CAAoB,CAAC,CAAC,MAAC,CAAA,CAAM;QAsB1C,eAAe,CArBC,QAAC,CAAQ,GAAG,EAAA,OAAE,EAAQ,MAAA,CAAO,KAAC,EAAK,CAAC;QAsBpD,EAAE,CAAC,CAAC,MArBC,CAAM,KAAC,CAAK,CAAC,CAAA;YAsBhB,eAAe,CArBC,QAAC,CAAQ,CAAC,OAAC,CAAO,GAAG,MAAA,CAAO,KAAC,CAAK;QAsBpD,CAAC;IACH,CAAC;IACD,MAAM,CArBC,eAAA,CAAgB;AAsBzB,CAAC;AACD;;;;GAIG;AACH,wBAzBwB,CAAG,EAAK,UAAmB;IA0BjD,IAAM,gBAAgB,CAzBhB,UAAA,GAAiC,EAAA,CAAG;IA0B1C,GAAG,CAAC,CAAC,IAzBC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,UAAA,CAAW,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QA0B1C,IAAM,gBAAgB,CAzBhB,IAAA,GAAO,UAAA,CAAW,CAAC,CAAC,CAAC;QA0B3B,UAAU,CAzBC,IAAC,CAAI,GAAG,CAAA,CAAE,IAAC,CAAI,CAAC;IA0B7B,CAAC;IACD,MAAM,CAzBC,UAAA,CAAW;AA0BpB,CAAC","file":"event_serializer.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst /** @type {?} */ MOUSE_EVENT_PROPERTIES = [\n  'altKey', 'button', 'clientX', 'clientY', 'metaKey', 'movementX', 'movementY', 'offsetX',\n  'offsetY', 'region', 'screenX', 'screenY', 'shiftKey'\n];\n\nconst /** @type {?} */ KEYBOARD_EVENT_PROPERTIES = [\n  'altkey', 'charCode', 'code', 'ctrlKey', 'isComposing', 'key', 'keyCode', 'location', 'metaKey',\n  'repeat', 'shiftKey', 'which'\n];\n\nconst /** @type {?} */ TRANSITION_EVENT_PROPERTIES = ['propertyName', 'elapsedTime', 'pseudoElement'];\n\nconst /** @type {?} */ EVENT_PROPERTIES = ['type', 'bubbles', 'cancelable'];\n\nconst /** @type {?} */ NODES_WITH_VALUE = new Set(\n    ['input', 'select', 'option', 'button', 'li', 'meter', 'progress', 'param', 'textarea']);\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeGenericEvent(e: Event): {[key: string]: any} {\n  return serializeEvent(e, EVENT_PROPERTIES);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeEventWithTarget(e: Event): {[key: string]: any} {\n  const /** @type {?} */ serializedEvent = serializeEvent(e, EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeMouseEvent(e: MouseEvent): {[key: string]: any} {\n  return serializeEvent(e, MOUSE_EVENT_PROPERTIES);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeKeyboardEvent(e: KeyboardEvent): {[key: string]: any} {\n  const /** @type {?} */ serializedEvent = serializeEvent(e, KEYBOARD_EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeTransitionEvent(e: TransitionEvent): {[key: string]: any} {\n  const /** @type {?} */ serializedEvent = serializeEvent(e, TRANSITION_EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n/**\n * @param {?} e\n * @param {?} serializedEvent\n * @return {?}\n */\nfunction addTarget(e: Event, serializedEvent: {[key: string]: any}): {[key: string]: any} {\n  if (NODES_WITH_VALUE.has(( /** @type {?} */((<HTMLElement>e.target))).tagName.toLowerCase())) {\n    const /** @type {?} */ target = /** @type {?} */(( <HTMLInputElement>e.target));\n    serializedEvent['target'] = {'value': target.value};\n    if (target.files) {\n      serializedEvent['target']['files'] = target.files;\n    }\n  }\n  return serializedEvent;\n}\n/**\n * @param {?} e\n * @param {?} properties\n * @return {?}\n */\nfunction serializeEvent(e: any, properties: string[]): {[key: string]: any} {\n  const /** @type {?} */ serialized: {[k: string]: any} = {};\n  for (let /** @type {?} */ i = 0; i < properties.length; i++) {\n    const /** @type {?} */ prop = properties[i];\n    serialized[prop] = e[prop];\n  }\n  return serialized;\n}\n"]}