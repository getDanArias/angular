{"version":3,"sources":["../../../../../../../packages/platform-webworker/src/web_workers/shared/client_message_broker.ts"],"names":[],"mappings":"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","file":"client_message_broker.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable, Type, Éµstringify as stringify} from '@angular/core';\nimport {MessageBus} from './message_bus';\nimport {Serializer, SerializerTypes} from './serializer';\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n * @abstract\n */\nexport abstract class ClientMessageBrokerFactory {\n  /**\n   * Initializes the given channel and attaches a new {@link ClientMessageBroker} to it.\n   */\n  abstract createMessageBroker(channel: string, runInZone?: boolean): ClientMessageBroker;\n}\n\nfunction ClientMessageBrokerFactory_tsickle_Closure_declarations() {\n\n/**\n * Initializes the given channel and attaches a new {\\@link ClientMessageBroker} to it.\n * @abstract\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\nClientMessageBrokerFactory.prototype.createMessageBroker = function(channel, runInZone) {};\n}\n\nexport class ClientMessageBrokerFactory_ extends ClientMessageBrokerFactory {\n/**\n * \\@internal\n */\n_serializer: Serializer;\n/**\n * @param {?} _messageBus\n * @param {?} _serializer\n */\nconstructor(private _messageBus: MessageBus, _serializer: Serializer) {\n    super();\n    this._serializer = _serializer;\n  }\n/**\n * Initializes the given channel and attaches a new {\\@link ClientMessageBroker} to it.\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ncreateMessageBroker(channel: string, runInZone: boolean = true): ClientMessageBroker {\n    this._messageBus.initChannel(channel, runInZone);\n    return new ClientMessageBroker_(this._messageBus, this._serializer, channel);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: MessageBus, },\n{type: Serializer, },\n];\n}\n\nfunction ClientMessageBrokerFactory__tsickle_Closure_declarations() {\n/** @type {?} */\nClientMessageBrokerFactory_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClientMessageBrokerFactory_.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nClientMessageBrokerFactory_.prototype._serializer;\n/** @type {?} */\nClientMessageBrokerFactory_.prototype._messageBus;\n}\n\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n * @abstract\n */\nexport abstract class ClientMessageBroker {\n  abstract runOnService(args: UiArguments, returnType: Type<any>|SerializerTypes|null):\n      Promise<any>|null;\n}\n\nfunction ClientMessageBroker_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} args\n * @param {?} returnType\n * @return {?}\n */\nClientMessageBroker.prototype.runOnService = function(args, returnType) {};\n}\n\n/**\n * @record\n */\nfunction PromiseCompleter() {}\n\n\nfunction PromiseCompleter_tsickle_Closure_declarations() {\n/** @type {?} */\nPromiseCompleter.prototype.resolve;\n/** @type {?} */\nPromiseCompleter.prototype.reject;\n}\n\n\ninterface PromiseCompleter {\n  resolve: (result: any) => void;\n  reject: (err: any) => void;\n}\nexport class ClientMessageBroker_ extends ClientMessageBroker {\nprivate _pending = new Map<string, PromiseCompleter>();\nprivate _sink: EventEmitter<any>;\n/**\n * \\@internal\n */\n\npublic _serializer: Serializer;\n/**\n * @param {?} messageBus\n * @param {?} _serializer\n * @param {?} channel\n */\nconstructor(messageBus: MessageBus, _serializer: Serializer,\npublic channel: any) {\n    super();\n    this._sink = messageBus.to(channel);\n    this._serializer = _serializer;\n    const /** @type {?} */ source = messageBus.from(channel);\n\n    source.subscribe({next: (message: ResponseMessageData) => this._handleMessage(message)});\n  }\n/**\n * @param {?} name\n * @return {?}\n */\n\nprivate _generateMessageId(name: string): string {\n    const /** @type {?} */ time: string = stringify(new Date().getTime());\n    let /** @type {?} */ iteration: number = 0;\n    let /** @type {?} */ id: string = name + time + stringify(iteration);\n    while (this._pending.has(id)) {\n      id = `${name}${time}${iteration}`;\n      iteration++;\n    }\n    return id;\n  }\n/**\n * @param {?} args\n * @param {?} returnType\n * @return {?}\n */\nrunOnService(args: UiArguments, returnType: Type<any>|SerializerTypes): Promise<any>|null {\n    const /** @type {?} */ fnArgs: any[] = [];\n    if (args.args) {\n      args.args.forEach(argument => {\n        if (argument.type != null) {\n          fnArgs.push(this._serializer.serialize(argument.value, argument.type));\n        } else {\n          fnArgs.push(argument.value);\n        }\n      });\n    }\n\n    let /** @type {?} */ promise: Promise<any>|null;\n    let /** @type {?} */ id: string|null = null;\n    if (returnType != null) {\n      let /** @type {?} */ completer: PromiseCompleter = /** @type {?} */(( undefined));\n      promise = new Promise((resolve, reject) => { completer = {resolve, reject}; });\n      id = this._generateMessageId(args.method);\n      this._pending.set(id, completer);\n\n      promise.catch((err) => {\n        if (console && console.error) {\n          // tslint:disable-next-line:no-console\n          console.error(err);\n        }\n\n        completer.reject(err);\n      });\n\n      promise = promise.then(\n          (v: any) => this._serializer ? this._serializer.deserialize(v, returnType) : v);\n    } else {\n      promise = null;\n    }\n\n    const /** @type {?} */ message: RequestMessageData = {\n      'method': args.method,\n      'args': fnArgs,\n    };\n    if (id != null) {\n      message['id'] = id;\n    }\n    this._sink.emit(message);\n\n    return promise;\n  }\n/**\n * @param {?} message\n * @return {?}\n */\n\nprivate _handleMessage(message: ResponseMessageData): void {\n    if (message.type === 'result' || message.type === 'error') {\n      const /** @type {?} */ id = /** @type {?} */(( message.id));\n      if (this._pending.has(id)) {\n        if (message.type === 'result') { /** @type {?} */((\n          this._pending.get(id))).resolve(message.value);\n        } else { /** @type {?} */((\n          this._pending.get(id))).reject(message.value);\n        }\n        this._pending.delete(id);\n      }\n    }\n  }\n}\n\nfunction ClientMessageBroker__tsickle_Closure_declarations() {\n/** @type {?} */\nClientMessageBroker_.prototype._pending;\n/** @type {?} */\nClientMessageBroker_.prototype._sink;\n/**\n * \\@internal\n * @type {?}\n */\nClientMessageBroker_.prototype._serializer;\n/** @type {?} */\nClientMessageBroker_.prototype.channel;\n}\n\n/**\n * @record\n */\nfunction RequestMessageData() {}\n\n\nfunction RequestMessageData_tsickle_Closure_declarations() {\n/** @type {?} */\nRequestMessageData.prototype.method;\n/** @type {?|undefined} */\nRequestMessageData.prototype.args;\n/** @type {?|undefined} */\nRequestMessageData.prototype.id;\n}\n\n\ninterface RequestMessageData {\n  method: string;\n  args?: any[];\n  id?: string;\n}\n/**\n * @record\n */\nfunction ResponseMessageData() {}\n\n\nfunction ResponseMessageData_tsickle_Closure_declarations() {\n/** @type {?} */\nResponseMessageData.prototype.type;\n/** @type {?|undefined} */\nResponseMessageData.prototype.value;\n/** @type {?|undefined} */\nResponseMessageData.prototype.id;\n}\n\n\ninterface ResponseMessageData {\n  type: 'result'|'error';\n  value?: any;\n  id?: string;\n}\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n */\nexport class FnArg {\n/**\n * @param {?} value\n * @param {?=} type\n */\nconstructor(\npublic value: any,\npublic type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE) {}\n}\n\nfunction FnArg_tsickle_Closure_declarations() {\n/** @type {?} */\nFnArg.prototype.value;\n/** @type {?} */\nFnArg.prototype.type;\n}\n\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n */\nexport class UiArguments {\n/**\n * @param {?} method\n * @param {?=} args\n */\nconstructor(public method: string,\npublic args?: FnArg[]) {}\n}\n\nfunction UiArguments_tsickle_Closure_declarations() {\n/** @type {?} */\nUiArguments.prototype.method;\n/** @type {?} */\nUiArguments.prototype.args;\n}\n\n"]}