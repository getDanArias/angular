{"version":3,"sources":["../../../../../packages/platform-webworker/src/worker_render.ts"],"names":[],"mappings":"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","file":"worker_render.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, ɵPLATFORM_WORKER_UI_ID as PLATFORM_WORKER_UI_ID} from '@angular/common';\nimport {ErrorHandler, Injectable, InjectionToken, Injector, NgZone, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, RootRenderer, StaticProvider, Testability, createPlatformFactory, isDevMode, platformCore, ɵAPP_ID_RANDOM_PROVIDER as APP_ID_RANDOM_PROVIDER} from '@angular/core';\nimport {DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HammerGestureConfig, ɵBROWSER_SANITIZATION_PROVIDERS as BROWSER_SANITIZATION_PROVIDERS, ɵBrowserDomAdapter as BrowserDomAdapter, ɵBrowserGetTestability as BrowserGetTestability, ɵDomEventsPlugin as DomEventsPlugin, ɵDomRendererFactory2 as DomRendererFactory2, ɵDomSharedStylesHost as DomSharedStylesHost, ɵHammerGesturesPlugin as HammerGesturesPlugin, ɵKeyEventsPlugin as KeyEventsPlugin, ɵSharedStylesHost as SharedStylesHost, ɵgetDOM as getDOM} from '@angular/platform-browser';\n\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {MessageBasedRenderer2} from './web_workers/ui/renderer';\n/**\n * Wrapper class that exposes the Worker\n * and underlying {\\@link MessageBus} for lower level message passing.\n * \n * \\@experimental WebWorker support is currently experimental.\n */\nexport class WebWorkerInstance {\npublic worker: Worker;\npublic bus: MessageBus;\n/**\n * \\@internal\n * @param {?} worker\n * @param {?} bus\n * @return {?}\n */\n\npublic init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction WebWorkerInstance_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerInstance.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebWorkerInstance.ctorParameters;\n/** @type {?} */\nWebWorkerInstance.prototype.worker;\n/** @type {?} */\nWebWorkerInstance.prototype.bus;\n}\n\n/**\n * \\@experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_SCRIPT = new InjectionToken<string>('WebWorkerScript');\n/**\n * A multi-provider used to automatically call the `start()` method after the service is\n * created.\n * \n * \\@experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_UI_STARTABLE_MESSAGING_SERVICE =\n    new InjectionToken<({start: () => void})[]>('WorkerRenderStartableMsgService');\n\nexport const /** @type {?} */ _WORKER_UI_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: NgZone, useFactory: createNgZone, deps: []},\n  {\n    provide: MessageBasedRenderer2,\n    deps: [ServiceMessageBrokerFactory, MessageBus, Serializer, RenderStore, RendererFactory2]\n  },\n  {provide: WORKER_UI_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer2, multi: true},\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ErrorHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n  // #5298\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    deps: [DOCUMENT, NgZone],\n    multi: true\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, deps: [DOCUMENT], multi: true},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG],\n    multi: true\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: DomRendererFactory2, deps: [EventManager, DomSharedStylesHost]},\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {\n    provide: ServiceMessageBrokerFactory,\n    useClass: ServiceMessageBrokerFactory_,\n    deps: [MessageBus, Serializer]\n  },\n  {\n    provide: ClientMessageBrokerFactory,\n    useClass: ClientMessageBrokerFactory_,\n    deps: [MessageBus, Serializer]\n  },\n  {provide: Serializer, deps: [RenderStore]},\n  {provide: ON_WEB_WORKER, useValue: false},\n  {provide: RenderStore, deps: []},\n  {provide: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, deps: [NgZone]},\n  {provide: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  {provide: WebWorkerInstance, deps: []},\n  {\n    provide: PLATFORM_INITIALIZER,\n    useFactory: initWebWorkerRenderPlatform,\n    multi: true,\n    deps: [Injector]\n  },\n  {provide: PLATFORM_ID, useValue: PLATFORM_WORKER_UI_ID},\n  {provide: MessageBus, useFactory: messageBusFactory, deps: [WebWorkerInstance]},\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initializeGenericWorkerRenderer(injector: Injector) {\n  const /** @type {?} */ bus = injector.get(MessageBus);\n  const /** @type {?} */ zone = injector.get(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  const /** @type {?} */ services = injector.get(WORKER_UI_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc: any) => { svc.start(); }); });\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nfunction messageBusFactory(instance: WebWorkerInstance): MessageBus {\n  return instance.bus;\n}\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initWebWorkerRenderPlatform(injector: Injector): () => void {\n  return () => {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n    let /** @type {?} */ scriptUri: string;\n    try {\n      scriptUri = injector.get(WORKER_SCRIPT);\n    } catch ( /** @type {?} */e) {\n      throw new Error(\n          'You must provide your WebWorker\\'s initialization script with the WORKER_SCRIPT token');\n    }\n\n    const /** @type {?} */ instance = injector.get(WebWorkerInstance);\n    spawnWebWorker(scriptUri, instance);\n\n    initializeGenericWorkerRenderer(injector);\n  };\n}\n/**\n * \\@experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ platformWorkerUi =\n    createPlatformFactory(platformCore, 'workerUi', _WORKER_UI_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction _exceptionHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nfunction _document(): any {\n  return document;\n}\n/**\n * @return {?}\n */\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: isDevMode()});\n}\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n * @param {?} uri\n * @param {?} instance\n * @return {?}\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  const /** @type {?} */ webWorker: Worker = new Worker(uri);\n  const /** @type {?} */ sink = new PostMessageBusSink(webWorker);\n  const /** @type {?} */ source = new PostMessageBusSource(webWorker);\n  const /** @type {?} */ bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n"]}