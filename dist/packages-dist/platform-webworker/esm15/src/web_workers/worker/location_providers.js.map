{"version":3,"sources":["../../../../../../packages/platform-webworker/src/web_workers/worker/location_providers.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,oBAAE,EAAqB,gBAAA,EAAiB,MAAA,iBAAA,CAAA;AAM/C,OALO,EAAA,eAAE,EAAgC,MAAA,EAAO,MAAA,eAAA,CAAA;AAOhD,OALO,EAAA,yBAAE,EAAyB,MAAA,qBAAA,CAAA;AAMlC;;;;;GAKG;AACH,MAHC,CAAM,MAAA,gBAAA,CAAM,6BAAA,GAAgC;IAI3C,EAAC,OAHC,EAAQ,gBAAA,EAAkB,QAAA,EAAU,yBAAA,EAA0B,EAAE;QAIhE,OAAO,EAHE,eAAA;QAIT,UAAU,EAHE,gBAAA;QAIZ,KAAK,EAHE,IAAA;QAIP,IAAI,EAHE,CAAA,gBAAE,EAAiB,MAAA,CAAO;KAIjC;IACD,EAAC,OAHC,EAAQ,oBAAA,EAAsB,UAAA,EAAY,mBAAA,EAAqB,IAAA,EAAM,CAAA,gBAAE,CAAgB,EAAC;CAI3F,CAHC;AAIF;;;GAGG;AACH,MANC,8BAAmC,gBAAkB;IAOpD,MAAM,CANC,gBAAA,CAAiB,WAAC,CAAW;AAOtC,CAAC;AACD;;;;GAIG;AACH,MAVC,2BAAgC,gBAAkB,EAA2B,IAAM;IAYlF,MAAM,CAVC,MAAM,IAAA,CAAK,UAAC,CAAU,MAAM,gBAAA,CAAiB,IAAC,EAAI,CAAE,CAAC;AAW9D,CAAC","file":"location_providers.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LOCATION_INITIALIZED, PlatformLocation} from '@angular/common';\nimport {APP_INITIALIZER, InjectionToken, NgZone} from '@angular/core';\n\nimport {WebWorkerPlatformLocation} from './platform_location';\n/**\n * The {\\@link PlatformLocation} providers that should be added when the {\\@link Location} is used in\n * a worker context.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ WORKER_APP_LOCATION_PROVIDERS = [\n  {provide: PlatformLocation, useClass: WebWorkerPlatformLocation}, {\n    provide: APP_INITIALIZER,\n    useFactory: appInitFnFactory,\n    multi: true,\n    deps: [PlatformLocation, NgZone]\n  },\n  {provide: LOCATION_INITIALIZED, useFactory: locationInitialized, deps: [PlatformLocation]}\n];\n/**\n * @param {?} platformLocation\n * @return {?}\n */\nexport function locationInitialized(platformLocation: WebWorkerPlatformLocation) {\n  return platformLocation.initialized;\n}\n/**\n * @param {?} platformLocation\n * @param {?} zone\n * @return {?}\n */\nexport function appInitFnFactory(platformLocation: WebWorkerPlatformLocation, zone: NgZone): () =>\n    Promise<boolean> {\n  return () => zone.runGuarded(() => platformLocation.init());\n}\n"]}