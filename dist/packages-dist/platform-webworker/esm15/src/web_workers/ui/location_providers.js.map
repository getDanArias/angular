{"version":3,"sources":["../../../../../../packages/platform-webworker/src/web_workers/ui/location_providers.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,QAAE,EAAQ,MAAA,iBAAA,CAAA;AAMjB,OALO,EAAA,QAAE,EAAS,MAAA,EAAQ,oBAAA,EAAqC,MAAA,eAAA,CAAA;AAM/D,OALO,EAAA,wBAAE,IAA2B,uBAAA,EAAwB,MAAA,2BAAA,CAAA;AAO5D,OALO,EAAA,UAAE,EAAU,MAAA,uBAAA,CAAA;AAMnB,OALO,EAAA,UAAE,EAAU,MAAA,sBAAA,CAAA;AAMnB,OALO,EAAA,2BAAE,EAA2B,MAAA,kCAAA,CAAA;AAOpC,OALO,EAAA,4BAAE,EAA4B,MAAA,qBAAA,CAAA;AAMrC;;;;GAIG;AACH,MAFC,CAAM,MAAA,gBAAA,CAAM,4BAAA,GAA6B,CAAoB;IAG5D,EAAC,OAFC,EAAQ,4BAAA,EAA8B,IAAA,EAAM,CAAA,2BAAE;YAG9C,uBAAuB,EAFE,UAAA,EAAY,UAAA,CAAW,EAAC;IAGnD,EAAC,OAFC,EAAQ,uBAAA,EAAyB,IAAA,EAAM,CAAA,QAAE,CAAQ,EAAC;IAGpD,EAAC,OAFC,EAAQ,oBAAA,EAAsB,UAAA,EAAY,cAAA,EAAgB,KAAA,EAAO,IAAA,EAAM,IAAA,EAAM,CAAA,QAAE,CAAQ,EAAC;CAG1F,CAAC,CAFD;AAGF;;;GAGG;AACH,wBALwB,QAAU;IAMhC,MAAM,CALC;QAML,MAAM,gBAAgB,CALhB,IAAA,GAAO,QAAA,CAAS,GAAC,CAAG,MAAC,CAAM,CAAC;QAOlC,IAAI,CALC,UAAC,CAAU,MAAM,QAAA,CAAS,GAAC,CAAG,4BAAC,CAA4B,CAAC,KAAC,EAAK,CAAE,CAAC;IAM5E,CAAC,CALC;AAMJ,CAAC","file":"location_providers.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Injector, NgZone, PLATFORM_INITIALIZER, StaticProvider} from '@angular/core';\nimport {ÉµBrowserPlatformLocation as BrowserPlatformLocation} from '@angular/platform-browser';\n\nimport {MessageBus} from '../shared/message_bus';\nimport {Serializer} from '../shared/serializer';\nimport {ServiceMessageBrokerFactory} from '../shared/service_message_broker';\n\nimport {MessageBasedPlatformLocation} from './platform_location';\n/**\n * A list of {\\@link Provider}s. To use the router in a Worker enabled application you must\n * include these providers when setting up the render thread.\n * \\@experimental\n */\nexport const /** @type {?} */ WORKER_UI_LOCATION_PROVIDERS = /** @type {?} */(( <StaticProvider[]>[\n  {provide: MessageBasedPlatformLocation, deps: [ServiceMessageBrokerFactory,\n    BrowserPlatformLocation, MessageBus, Serializer]},\n  {provide: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: PLATFORM_INITIALIZER, useFactory: initUiLocation, multi: true, deps: [Injector]}\n]));\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initUiLocation(injector: Injector): () => void {\n  return () => {\n    const /** @type {?} */ zone = injector.get(NgZone);\n\n    zone.runGuarded(() => injector.get(MessageBasedPlatformLocation).start());\n  };\n}\n"]}