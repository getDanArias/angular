{"version":3,"sources":["../../../../../../../packages/animations/browser/testing/src/mock_animation_driver.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH;;;;;;GAMG;AACH,OALO,EAAA,UAAE,EAA4B,mBAAA,EAAgC,MAAA,qBAAA,CAAA;AAQrE,OALO,EAAA,eAAE,EAAgB,WAAA,EAAa,cAAA,EAAe,MAAA,yBAAA,CAAA;AAMrD,OALO,EAAA,8BAAE,EAA8B,MAAA,gBAAA,CAAA;AAMvC;;GAEG;AACH;IAAA;IAmDA,CA9BC;IAnBD;;;;OAIG;IACH,4CARG,GAQH,UARiB,OAAS,EAAK,QAAU;QASrC,MAAM,CARC,cAAA,CAAe,OAAC,EAAQ,QAAA,CAAS,CAAC;IAS3C,CAAC;IACH;;;;OAIG;IACH,6CAZG,GAYH,UAZkB,IAAM,EAAK,IAAM,IAAgB,MAAA,CAAO,eAAA,CAAgB,IAAC,EAAK,IAAA,CAAK,CAAC,CAAC,CAAA;IAavF;;;;;OAKG;IACH,mCAjBG,GAiBH,UAjBQ,OAAS,EAAK,QAAU,EAAQ,KAAO;QAkB3C,MAAM,CAjBC,WAAA,CAAY,OAAC,EAAQ,QAAA,EAAU,KAAA,CAAM,CAAC;IAkB/C,CAAC;IACH;;;;;OAKG;IACH,0CAtBG,GAsBH,UAtBe,OAAS,EAAK,IAAM,EAAQ,YAAe;QAuBtD,MAAM,CAtBC,YAAA,IAAgB,EAAA,CAAG;IAuB5B,CAAC;IACH;;;;;;;;OAQG;IACH,qCA9BG,GA8BH,UACM,OA9BS,EAAK,SAA4C,EAAG,QAAU,EAAQ,KAAO,EA+BtF,MA9BQ,EAAQ,eAAyB;QAAzB,gCAAA,EAAA,oBAAyB;QA+B3C,IAAM,gBAAgB,CA9BhB,MAAA,GA+BF,IA9BI,mBAAA,CAAoB,OAAC,EAAQ,SAAA,EAAW,QAAA,EAAU,KAAA,EAAO,MAAA,EAAQ,eAAA,CAAgB,CAAC;QA+B1F,mBAAmB,CA9BC,GAAC,CAAG,IAAC,CAAI,gBAAA,CAAA,CAAiB,MAAC,CAAA,CAAM,CAAC;QA+BtD,MAAM,CA9BC,MAAA,CAAO;IA+BhB,CAAC;IACH,0BA9BC;AA8BD,CAnDA,AAqBC;;AAxBQ,uBAAA,GAAyB,EAAA,CAAG;AAwDrC;IACA,gBAAgB;IAChB,mBAAmB,CAAC,GAAG,CAAC;AACxB,CAAC;AAED;;GAEG;AACH;IAnCyC,+CAAA;IAyCzC;;;;;;;OAOG;IACH,6BAzCa,OAAS,EAAY,SAA4C,EACjE,QAAU,EAAe,KAAO,EAAe,MAAQ,EACvD,eAAqB;QAuClC,YAOI,iBA7CM,SAyDP;QA5DU,aAAA,GAAA,OAAA,CAAS;QAAY,eAAA,GAAA,SAAA,CAA4C;QACjE,cAAA,GAAA,QAAA,CAAU;QAAe,WAAA,GAAA,KAAA,CAAO;QAAe,YAAA,GAAA,MAAA,CAAQ;QACvD,qBAAA,GAAA,eAAA,CAAqB;QATxB,gBAAA,GAAa,KAAA,CAAM;QACnB,eAAA,GAAY,KAAA,CAAM;QACnB,oBAAA,GAAmD,EAAA,CAAG;QACrD,gBAAA,GAA4B,EAAA,CAAG;QAChC,qBAAA,GAA8B,EAAA,CAAG;QAqDtC,EAAE,CAAC,CAAC,8BA7CC,CAA8B,QAAC,EAAS,KAAA,CAAM,CAAC,CAAC,CAAA;YA8CnD,eAAe,CA7CC,OAAC,CAAO,UAAA,MAAC;gBA8CvB,EAAE,CAAC,CAAC,MA7CC,YAAiB,mBAAA,CAAoB,CAAC,CAAA;oBA8CzC,IAAM,gBAAgB,CA7ChB,QAAA,GAAS,MAAA,CAAO,eAAC,CAAe;oBA8CtC,MAAM,CA7CC,IAAC,CAAI,QAAC,CAAM,CAAC,OAAC,CAAO,UAAA,IAAC,IAAO,OAAA,KAAA,CAAK,cAAC,CAAc,IAAC,CAAI,GAAG,QAAA,CAAO,IAAC,CAAI,EAAxC,CAAwC,CAAC,CAAC;gBA8ChF,CAAC;YACH,CAAC,CA7CC,CAAC;QA8CL,CAAC;QAED,KAAI,CA7CC,SAAC,GAAW,KAAA,GAAQ,QAAA,CAAS;;IA8CpC,CAAC;IACH;;;OAGG;IACH,oCA/CG,GA+CH,UA/CS,EAAU,IAAO,IAAA,CAAK,UAAC,CAAU,IAAC,CAAI,EAAC,CAAE,CAAC,CAAC,CAAA;IAgDpD;;OAEG;IACH,kCAhDG,GAgDH;QACI,iBAhDM,IAAC,WAAI,CAAE;QAiDb,IAAI,CAhDC,UAAC,CAAU,OAAC,CAAO,UAAA,EAAC,IAAK,OAAA,EAAA,EAAG,EAAH,CAAG,CAAE,CAAC;QAiDpC,IAAI,CAhDC,UAAC,GAAY,EAAA,CAAG;IAiDvB,CAAC;IACH;;OAEG;IACH,oCAlDG,GAkDH;QACI,iBAlDM,MAAC,WAAM,CAAE;QAmDf,IAAI,CAlDC,UAAC,GAAY,IAAA,CAAK;IAmDzB,CAAC;IACH;;OAEG;IACH,qCApDG,GAoDH;QACI,iBApDM,OAAC,WAAO,CAAE;QAqDhB,IAAI,CApDC,UAAC,GAAY,IAAA,CAAK;IAqDzB,CAAC;IACH;;OAEG;IACH,8CArDG,GAqDH,cArDqB,CAAA;IAsDrB;;OAEG;IACH,kCAvDG,GAuDH;QACI,iBAvDM,IAAC,WAAI,CAAE;QAwDb,IAAI,CAvDC,SAAC,GAAW,IAAA,CAAK;IAwDxB,CAAC;IACH;;OAEG;IACH,wCAzDG,GAyDH,cAzDiB,MAAA,CAAO,IAAA,CAAK,SAAC,CAAS,CAAC,CAAA;IA0DxC;;OAEG;IACH,2CA3DG,GA2DH;QAAA,iBAqBG;QApBC,IAAM,gBAAgB,CA3DhB,QAAA,GAAuB,EAAA,CAAG;QA6DhC,MAAM,CA3DC,IAAC,CAAI,IAAC,CAAI,cAAC,CAAc,CAAC,OAAC,CAAO,UAAA,IAAC;YA4DxC,QAAQ,CA3DC,IAAC,CAAI,GAAG,KAAA,CAAK,cAAC,CAAc,IAAC,CAAI,CAAC;QA4D7C,CAAC,CA3DC,CAAC;QA6DH,EAAE,CAAC,CAAC,IA3DC,CAAI,UAAC,EAAU,CAAE,CAAC,CAAA;YA4DrB,2DAA2D;YAC3D,uDAAuD;YACvD,uDAAuD;YACvD,IAAI,CA3DC,SAAC,CAAS,OAAC,CAAO,UAAA,EAAC;gBA4DtB,MAAM,CA3DC,IAAC,CAAI,EAAC,CAAE,CAAC,OAAC,CAAO,UAAA,IAAC;oBA4DvB,EAAE,CAAC,CAAC,IA3DC,IAAO,QAAA,CAAS,CAAC,CAAA;wBA4DpB,QAAQ,CA3DC,IAAC,CAAI,GAAG,KAAA,CAAK,UAAC,GAAY,EAAA,CAAG,IAAC,CAAI,GAAG,UAAA,CAAW;oBA4D3D,CAAC;gBACH,CAAC,CA3DC,CAAC;YA4DL,CAAC,CA3DC,CAAC;QA4DL,CAAC;QAED,IAAI,CA3DC,eAAC,GAAiB,QAAA,CAAS;IA4DlC,CAAC;IACH,0BA3DC;AA2DD,CArGA,AA0CC,CA7EwC,mBAAA,GA6ExC;;AA6DD;IACA,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,UAAU,CAAC;IACzC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;IACxC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,cAAc,CAAC;IAC7C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,UAAU,CAAC;IACzC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,eAAe,CAAC;IAC9C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;IACxC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACvC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC;IACpC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC;IACrC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,eAAe,CAAC;AAC9C,CAAC","file":"mock_animation_driver.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationPlayer, NoopAnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../../src/render/animation_driver';\nimport {containsElement, invokeQuery, matchesElement} from '../../src/render/shared';\nimport {allowPreviousPlayerStylesMerge} from '../../src/util';\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class MockAnimationDriver implements AnimationDriver {\n  static log: AnimationPlayer[] = [];\n/**\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nmatchesElement(element: any, selector: string): boolean {\n    return matchesElement(element, selector);\n  }\n/**\n * @param {?} elm1\n * @param {?} elm2\n * @return {?}\n */\ncontainsElement(elm1: any, elm2: any): boolean { return containsElement(elm1, elm2); }\n/**\n * @param {?} element\n * @param {?} selector\n * @param {?} multi\n * @return {?}\n */\nquery(element: any, selector: string, multi: boolean): any[] {\n    return invokeQuery(element, selector, multi);\n  }\n/**\n * @param {?} element\n * @param {?} prop\n * @param {?=} defaultValue\n * @return {?}\n */\ncomputeStyle(element: any, prop: string, defaultValue?: string): string {\n    return defaultValue || '';\n  }\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nanimate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing: string, previousPlayers: any[] = []): MockAnimationPlayer {\n    const /** @type {?} */ player =\n        new MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers);\n    MockAnimationDriver.log.push( /** @type {?} */((<AnimationPlayer>player)));\n    return player;\n  }\n}\n\nfunction MockAnimationDriver_tsickle_Closure_declarations() {\n/** @type {?} */\nMockAnimationDriver.log;\n}\n\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class MockAnimationPlayer extends NoopAnimationPlayer {\nprivate __finished = false;\nprivate __started = false;\npublic previousStyles: {[key: string]: string | number} = {};\nprivate _onInitFns: (() => any)[] = [];\npublic currentSnapshot: ɵStyleData = {};\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?} previousPlayers\n */\nconstructor(\npublic element: any,\npublic keyframes: {[key: string]: string | number}[],\npublic duration: number,\npublic delay: number,\npublic easing: string,\npublic previousPlayers: any[]) {\n    super();\n\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousPlayers.forEach(player => {\n        if (player instanceof MockAnimationPlayer) {\n          const /** @type {?} */ styles = player.currentSnapshot;\n          Object.keys(styles).forEach(prop => this.previousStyles[prop] = styles[prop]);\n        }\n      });\n    }\n\n    this.totalTime = delay + duration;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonInit(fn: () => any) { this._onInitFns.push(fn); }\n/**\n * @return {?}\n */\ninit() {\n    super.init();\n    this._onInitFns.forEach(fn => fn());\n    this._onInitFns = [];\n  }\n/**\n * @return {?}\n */\nfinish(): void {\n    super.finish();\n    this.__finished = true;\n  }\n/**\n * @return {?}\n */\ndestroy(): void {\n    super.destroy();\n    this.__finished = true;\n  }\n/**\n * @return {?}\n */\ntriggerMicrotask() {}\n/**\n * @return {?}\n */\nplay(): void {\n    super.play();\n    this.__started = true;\n  }\n/**\n * @return {?}\n */\nhasStarted() { return this.__started; }\n/**\n * @return {?}\n */\nbeforeDestroy() {\n    const /** @type {?} */ captures: ɵStyleData = {};\n\n    Object.keys(this.previousStyles).forEach(prop => {\n      captures[prop] = this.previousStyles[prop];\n    });\n\n    if (this.hasStarted()) {\n      // when assembling the captured styles, it's important that\n      // we build the keyframe styles in the following order:\n      // {other styles within keyframes, ... previousStyles }\n      this.keyframes.forEach(kf => {\n        Object.keys(kf).forEach(prop => {\n          if (prop != 'offset') {\n            captures[prop] = this.__finished ? kf[prop] : AUTO_STYLE;\n          }\n        });\n      });\n    }\n\n    this.currentSnapshot = captures;\n  }\n}\n\nfunction MockAnimationPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nMockAnimationPlayer.prototype.__finished;\n/** @type {?} */\nMockAnimationPlayer.prototype.__started;\n/** @type {?} */\nMockAnimationPlayer.prototype.previousStyles;\n/** @type {?} */\nMockAnimationPlayer.prototype._onInitFns;\n/** @type {?} */\nMockAnimationPlayer.prototype.currentSnapshot;\n/** @type {?} */\nMockAnimationPlayer.prototype.element;\n/** @type {?} */\nMockAnimationPlayer.prototype.keyframes;\n/** @type {?} */\nMockAnimationPlayer.prototype.duration;\n/** @type {?} */\nMockAnimationPlayer.prototype.delay;\n/** @type {?} */\nMockAnimationPlayer.prototype.easing;\n/** @type {?} */\nMockAnimationPlayer.prototype.previousPlayers;\n}\n\n"]}