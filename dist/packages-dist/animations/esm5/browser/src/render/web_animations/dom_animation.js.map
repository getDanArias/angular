{"version":3,"sources":["../../../../../../../../packages/animations/browser/src/render/web_animations/dom_animation.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH;;;;;;;GAOG;AAbH,AAcA;;;GAXG,CAWH,MAAM,2BAA0B,CAAC;AAGjC;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC;IAC7B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC;IAChC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC;IAChC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC;IACnC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACxC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC;AACrC,CAAC","file":"dom_animation.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\nexport function DOMAnimation() {}\n\n\nfunction DOMAnimation_tsickle_Closure_declarations() {\n/** @type {?} */\nDOMAnimation.prototype.cancel;\n/** @type {?} */\nDOMAnimation.prototype.play;\n/** @type {?} */\nDOMAnimation.prototype.pause;\n/** @type {?} */\nDOMAnimation.prototype.finish;\n/** @type {?} */\nDOMAnimation.prototype.onfinish;\n/** @type {?} */\nDOMAnimation.prototype.position;\n/** @type {?} */\nDOMAnimation.prototype.currentTime;\n/** @type {?} */\nDOMAnimation.prototype.addEventListener;\n/** @type {?} */\nDOMAnimation.prototype.dispatchEvent;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface DOMAnimation {\n  cancel(): void;\n  play(): void;\n  pause(): void;\n  finish(): void;\n  onfinish: Function;\n  position: number;\n  currentTime: number;\n  addEventListener(eventName: string, handler: (event: any) => any): any;\n  dispatchEvent(eventName: string): any;\n}\n"]}