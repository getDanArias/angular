{"version":3,"sources":["../../../../../../../packages/animations/browser/src/dsl/animation_transition_expr.ts"],"names":[],"mappings":"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","file":"animation_transition_expr.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const /** @type {?} */ ANY_STATE = '*';\nexport declare type TransitionMatcherFn = (fromState: any, toState: any) => boolean;\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nexport function parseTransitionExpr(\n    transitionValue: string | TransitionMatcherFn, errors: string[]): TransitionMatcherFn[] {\n  const /** @type {?} */ expressions: TransitionMatcherFn[] = [];\n  if (typeof transitionValue == 'string') {\n    ( /** @type {?} */((<string>transitionValue)))\n        .split(/\\s*,\\s*/)\n        .forEach(str => parseInnerTransitionStr(str, expressions, errors));\n  } else {\n    expressions.push( /** @type {?} */((<TransitionMatcherFn>transitionValue)));\n  }\n  return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(\n    eventStr: string, expressions: TransitionMatcherFn[], errors: string[]) {\n  if (eventStr[0] == ':') {\n    const /** @type {?} */ result = parseAnimationAlias(eventStr, errors);\n    if (typeof result == 'function') {\n      expressions.push(result);\n      return;\n    }\n    eventStr = /** @type {?} */(( result as string));\n  }\n\n  const /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n  if (match == null || match.length < 4) {\n    errors.push(`The provided transition expression \"${eventStr}\" is not supported`);\n    return expressions;\n  }\n\n  const /** @type {?} */ fromState = match[1];\n  const /** @type {?} */ separator = match[2];\n  const /** @type {?} */ toState = match[3];\n  expressions.push(makeLambdaFromStates(fromState, toState));\n\n  const /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n  if (separator[0] == '<' && !isFullAnyStateExpr) {\n    expressions.push(makeLambdaFromStates(toState, fromState));\n  }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias: string, errors: string[]): string|TransitionMatcherFn {\n  switch (alias) {\n    case ':enter':\n      return 'void => *';\n    case ':leave':\n      return '* => void';\n    case ':increment':\n      return (fromState: any, toState: any): boolean => parseFloat(toState) > parseFloat(fromState);\n    case ':decrement':\n      return (fromState: any, toState: any): boolean => parseFloat(toState) < parseFloat(fromState);\n    default:\n      errors.push(`The transition alias value \"${alias}\" is not supported`);\n      return '* => *';\n  }\n}\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs: string, rhs: string): TransitionMatcherFn {\n  return (fromState: any, toState: any): boolean => {\n    let /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n    let /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n\n    if (!lhsMatch && typeof fromState === 'boolean') {\n      lhsMatch = fromState ? lhs === 'true' : lhs === 'false';\n    }\n    if (!rhsMatch && typeof toState === 'boolean') {\n      rhsMatch = toState ? rhs === 'true' : rhs === 'false';\n    }\n\n    return lhsMatch && rhsMatch;\n  };\n}\n"]}