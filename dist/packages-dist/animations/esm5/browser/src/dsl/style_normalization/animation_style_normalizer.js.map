{"version":3,"sources":["../../../../../../../../packages/animations/browser/src/dsl/style_normalization/animation_style_normalizer.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH;;;GAGG;AACH;IAAA;IAKA,CACC;IADD,+BACC;AADD,CALA,AAMC,IAAA;;AACD;IAEA;;;;;OAKG;IACH,wBAAwB,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAS,YAAY,EAAE,MAAM,IAAG,CAAC,CAAC;IAE7F;;;;;;;OAOG;IACH,wBAAwB,CAAC,SAAS,CAAC,mBAAmB,GAAG,UAAS,oBAAoB,EAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,IAAG,CAAC,CAAC;AAC9H,CAAC;AAED;;GAEG;AACH;IAAA;IAmBA,CA/BC;IAaD;;;;OAIG;IACH,4DAzBG,GAyBH,UAzBwB,YAAc,EAAQ,MAAe,IAAa,MAAA,CAAO,YAAA,CAAa,CAAC,CAAA;IA0B/F;;;;;;OAMG;IACH,0DA/BG,GA+BH,UACM,oBA/BsB,EAAQ,kBAAoB,EAAQ,KAAe,EAgCzE,MA/Be;QAgCjB,MAAM,CAAiB,CA/BX,KAAC,CAAA,CAAK;IAgCpB,CAAC;IACH,mCA/BC;AA+BD,CAnBA,AAZC,IAAA","file":"animation_style_normalizer.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nexport abstract class AnimationStyleNormalizer {\n  abstract normalizePropertyName(propertyName: string, errors: string[]): string;\n  abstract normalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string;\n}\n\nfunction AnimationStyleNormalizer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} propertyName\n * @param {?} errors\n * @return {?}\n */\nAnimationStyleNormalizer.prototype.normalizePropertyName = function(propertyName, errors) {};\n\n/**\n * @abstract\n * @param {?} userProvidedProperty\n * @param {?} normalizedProperty\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nAnimationStyleNormalizer.prototype.normalizeStyleValue = function(userProvidedProperty, normalizedProperty, value, errors) {};\n}\n\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class NoopAnimationStyleNormalizer {\n/**\n * @param {?} propertyName\n * @param {?} errors\n * @return {?}\n */\nnormalizePropertyName(propertyName: string, errors: string[]): string { return propertyName; }\n/**\n * @param {?} userProvidedProperty\n * @param {?} normalizedProperty\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nnormalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string {\n    return /** @type {?} */(( <any>value));\n  }\n}\n"]}