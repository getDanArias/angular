{"version":3,"sources":["../../../../packages/animations/src/animation_event.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BG;AArCH,AAsCA;;;GAnCG,CAmCH,MAAM,6BAA4B,CAAC;AAGnC;IACA,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC;IACnC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;IACjC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC;IACnC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC;IACnC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;IACjC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,CAAC","file":"animation_event.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * An instance of this class is returned as an event parameter when an animation\n * callback is captured for an animation either during the start or done phase.\n * \n * ```typescript\n * \\@Component({ \n *   host: {\n *     '[\\@myAnimationTrigger]': 'someExpression',\n *     '(\\@myAnimationTrigger.start)': 'captureStartEvent($event)',\n *     '(\\@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n *   },\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *        // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   someExpression: any = false;\n *   captureStartEvent(event: AnimationEvent) {\n *     // the toState, fromState and totalTime data is accessible from the event variable\n *   }\n * \n *   captureDoneEvent(event: AnimationEvent) {\n *     // the toState, fromState and totalTime data is accessible from the event variable\n *   }\n * }\n * ```\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationEvent() {}\n\n\nfunction AnimationEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationEvent.prototype.fromState;\n/** @type {?} */\nAnimationEvent.prototype.toState;\n/** @type {?} */\nAnimationEvent.prototype.totalTime;\n/** @type {?} */\nAnimationEvent.prototype.phaseName;\n/** @type {?} */\nAnimationEvent.prototype.element;\n/** @type {?} */\nAnimationEvent.prototype.triggerName;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An instance of this class is returned as an event parameter when an animation\n * callback is captured for an animation either during the start or done phase.\n *\n * ```typescript\n * @Component({\n *   host: {\n *     '[@myAnimationTrigger]': 'someExpression',\n *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n *   },\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *        // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   someExpression: any = false;\n *   captureStartEvent(event: AnimationEvent) {\n *     // the toState, fromState and totalTime data is accessible from the event variable\n *   }\n *\n *   captureDoneEvent(event: AnimationEvent) {\n *     // the toState, fromState and totalTime data is accessible from the event variable\n *   }\n * }\n * ```\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationEvent {\n  fromState: string;\n  toState: string;\n  totalTime: number;\n  phaseName: string;\n  element: any;\n  triggerName: string;\n}\n"]}