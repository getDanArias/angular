{"version":3,"sources":["../../../../../../packages/animations/browser/src/dsl/element_instruction_map.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAUH,MAJC;IAID;QAHU,SAAA,GAAO,IAAI,GAAA,EAAwC,CAAG;IAuChE,CAhBC;IAlBD;;;OAGG;IACH,OAPG,CAAO,OAAS;QAQf,IAAI,gBAAgB,CAPhB,YAAA,GAAe,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,OAAC,CAAO,CAAC;QAQ1C,EAAE,CAAC,CAAC,YAPC,CAAY,CAAC,CAAA;YAQhB,IAAI,CAPC,IAAC,CAAI,MAAC,CAAM,OAAC,CAAO,CAAC;QAQ5B,CAAC;QAPC,IAAA,CAAK,CAAA;YAQL,YAAY,GAPG,EAAA,CAAG;QAQpB,CAAC;QACD,MAAM,CAPC,YAAA,CAAa;IAQtB,CAAC;IACH;;;;OAIG;IACH,MAXG,CAAM,OAAS,EAAK,YAA2C;QAY9D,IAAI,gBAAgB,CAXhB,oBAAA,GAAuB,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,OAAC,CAAO,CAAC;QAYlD,EAAE,CAAC,CAAC,CAXC,oBAAC,CAAoB,CAAC,CAAA;YAYzB,IAAI,CAXC,IAAC,CAAI,GAAC,CAAG,OAAC,EAAQ,oBAAA,GAAuB,EAAA,CAAG,CAAC;QAYpD,CAAC;QACD,oBAAoB,CAXC,IAAC,CAAI,GAAC,YAAG,CAAY,CAAC;IAY7C,CAAC;IACH;;;OAGG;IACH,GAdG,CAAG,OAAS,IAAgB,MAAA,CAAO,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,OAAC,CAAO,CAAC,CAAC,CAAA;IAe9D;;OAEG;IACH,KAhBG,KAAS,IAAA,CAAK,IAAC,CAAI,KAAC,EAAK,CAAE,CAAC,CAAA;CAC9B;AAkBD;IACA,gBAAgB;IAChB,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC;AACrC,CAAC","file":"element_instruction_map.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\nexport class ElementInstructionMap {\nprivate _map = new Map<any, AnimationTimelineInstruction[]>();\n/**\n * @param {?} element\n * @return {?}\n */\nconsume(element: any): AnimationTimelineInstruction[] {\n    let /** @type {?} */ instructions = this._map.get(element);\n    if (instructions) {\n      this._map.delete(element);\n    } else {\n      instructions = [];\n    }\n    return instructions;\n  }\n/**\n * @param {?} element\n * @param {?} instructions\n * @return {?}\n */\nappend(element: any, instructions: AnimationTimelineInstruction[]) {\n    let /** @type {?} */ existingInstructions = this._map.get(element);\n    if (!existingInstructions) {\n      this._map.set(element, existingInstructions = []);\n    }\n    existingInstructions.push(...instructions);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nhas(element: any): boolean { return this._map.has(element); }\n/**\n * @return {?}\n */\nclear() { this._map.clear(); }\n}\n\nfunction ElementInstructionMap_tsickle_Closure_declarations() {\n/** @type {?} */\nElementInstructionMap.prototype._map;\n}\n\n"]}