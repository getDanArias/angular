{"version":3,"sources":["../../../../../../packages/animations/browser/src/render/transition_animation_engine.ts"],"names":[],"mappings":"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","file":"transition_animation_engine.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationOptions, AnimationPlayer, NoopAnimationPlayer, ɵAnimationGroupPlayer as AnimationGroupPlayer, ɵPRE_STYLE as PRE_STYLE, ɵStyleData} from '@angular/animations';\n\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {AnimationTransitionFactory} from '../dsl/animation_transition_factory';\nimport {AnimationTransitionInstruction} from '../dsl/animation_transition_instruction';\nimport {AnimationTrigger} from '../dsl/animation_trigger';\nimport {ElementInstructionMap} from '../dsl/element_instruction_map';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\nimport {ENTER_CLASSNAME, LEAVE_CLASSNAME, NG_ANIMATING_CLASSNAME, NG_ANIMATING_SELECTOR, NG_TRIGGER_CLASSNAME, NG_TRIGGER_SELECTOR, copyObj, eraseStyles, setStyles} from '../util';\n\nimport {AnimationDriver} from './animation_driver';\nimport {getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer} from './shared';\n\nconst /** @type {?} */ QUEUED_CLASSNAME = 'ng-animate-queued';\nconst /** @type {?} */ QUEUED_SELECTOR = '.ng-animate-queued';\nconst /** @type {?} */ DISABLED_CLASSNAME = 'ng-animate-disabled';\nconst /** @type {?} */ DISABLED_SELECTOR = '.ng-animate-disabled';\n\nconst /** @type {?} */ EMPTY_PLAYER_ARRAY: TransitionAnimationPlayer[] = [];\nconst /** @type {?} */ NULL_REMOVAL_STATE: ElementAnimationState = {\n  namespaceId: '',\n  setForRemoval: null,\n  hasAnimation: false,\n  removedBeforeQueried: false\n};\nconst /** @type {?} */ NULL_REMOVED_QUERIED_STATE: ElementAnimationState = {\n  namespaceId: '',\n  setForRemoval: null,\n  hasAnimation: false,\n  removedBeforeQueried: true\n};\n/**\n * @record\n */\nfunction TriggerListener() {}\n\n\nfunction TriggerListener_tsickle_Closure_declarations() {\n/** @type {?} */\nTriggerListener.prototype.name;\n/** @type {?} */\nTriggerListener.prototype.phase;\n/** @type {?} */\nTriggerListener.prototype.callback;\n}\n\n\ninterface TriggerListener {\n  name: string;\n  phase: string;\n  callback: (event: any) => any;\n}\n/**\n * @record\n */\nexport function QueueInstruction() {}\n\n\nfunction QueueInstruction_tsickle_Closure_declarations() {\n/** @type {?} */\nQueueInstruction.prototype.element;\n/** @type {?} */\nQueueInstruction.prototype.triggerName;\n/** @type {?} */\nQueueInstruction.prototype.fromState;\n/** @type {?} */\nQueueInstruction.prototype.toState;\n/** @type {?} */\nQueueInstruction.prototype.transition;\n/** @type {?} */\nQueueInstruction.prototype.player;\n/** @type {?} */\nQueueInstruction.prototype.isFallbackTransition;\n}\n\n\nexport interface QueueInstruction {\n  element: any;\n  triggerName: string;\n  fromState: StateValue;\n  toState: StateValue;\n  transition: AnimationTransitionFactory;\n  player: TransitionAnimationPlayer;\n  isFallbackTransition: boolean;\n}\n\nexport const /** @type {?} */ REMOVAL_FLAG = '__ng_removed';\n/**\n * @record\n */\nexport function ElementAnimationState() {}\n\n\nfunction ElementAnimationState_tsickle_Closure_declarations() {\n/** @type {?} */\nElementAnimationState.prototype.setForRemoval;\n/** @type {?} */\nElementAnimationState.prototype.hasAnimation;\n/** @type {?} */\nElementAnimationState.prototype.namespaceId;\n/** @type {?} */\nElementAnimationState.prototype.removedBeforeQueried;\n}\n\n\nexport interface ElementAnimationState {\n  setForRemoval: any;\n  hasAnimation: boolean;\n  namespaceId: string;\n  removedBeforeQueried: boolean;\n}\nexport class StateValue {\npublic value: string;\npublic options: AnimationOptions;\n/**\n * @return {?}\n */\nget params(): {[key: string]: any} { return /** @type {?} */(( this.options.params as{[key: string]: any})); }\n/**\n * @param {?} input\n */\nconstructor(input: any) {\n    const /** @type {?} */ isObj = input && input.hasOwnProperty('value');\n    const /** @type {?} */ value = isObj ? input['value'] : input;\n    this.value = normalizeTriggerValue(value);\n    if (isObj) {\n      const /** @type {?} */ options = copyObj( /** @type {?} */((input as any)));\n      delete options['value'];\n      this.options = /** @type {?} */(( options as AnimationOptions));\n    } else {\n      this.options = {};\n    }\n    if (!this.options.params) {\n      this.options.params = {};\n    }\n  }\n/**\n * @param {?} options\n * @return {?}\n */\nabsorbOptions(options: AnimationOptions) {\n    const /** @type {?} */ newParams = options.params;\n    if (newParams) {\n      const /** @type {?} */ oldParams = /** @type {?} */(( this.options.params));\n      Object.keys(newParams).forEach(prop => {\n        if (oldParams[prop] == null) {\n          oldParams[prop] = newParams[prop];\n        }\n      });\n    }\n  }\n}\n\nfunction StateValue_tsickle_Closure_declarations() {\n/** @type {?} */\nStateValue.prototype.value;\n/** @type {?} */\nStateValue.prototype.options;\n}\n\n\nexport const /** @type {?} */ VOID_VALUE = 'void';\nexport const /** @type {?} */ DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nexport const /** @type {?} */ DELETED_STATE_VALUE = new StateValue('DELETED');\nexport class AnimationTransitionNamespace {\npublic players: TransitionAnimationPlayer[] = [];\nprivate _triggers: {[triggerName: string]: AnimationTrigger} = {};\nprivate _queue: QueueInstruction[] = [];\nprivate _elementListeners = new Map<any, TriggerListener[]>();\nprivate _hostClassName: string;\n/**\n * @param {?} id\n * @param {?} hostElement\n * @param {?} _engine\n */\nconstructor(\npublic id: string,\npublic hostElement: any,\nprivate _engine: TransitionAnimationEngine) {\n    this._hostClassName = 'ng-tns-' + id;\n    addClass(hostElement, this._hostClassName);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} phase\n * @param {?} callback\n * @return {?}\n */\nlisten(element: any, name: string, phase: string, callback: (event: any) => boolean): () => any {\n    if (!this._triggers.hasOwnProperty(name)) {\n      throw new Error(\n          `Unable to listen on the animation trigger event \"${phase}\" because the animation trigger \"${name}\" doesn\\'t exist!`);\n    }\n\n    if (phase == null || phase.length == 0) {\n      throw new Error(\n          `Unable to listen on the animation trigger \"${name}\" because the provided event is undefined!`);\n    }\n\n    if (!isTriggerEventValid(phase)) {\n      throw new Error(\n          `The provided animation trigger event \"${phase}\" for the animation trigger \"${name}\" is not supported!`);\n    }\n\n    const /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n    const /** @type {?} */ data = {name, phase, callback};\n    listeners.push(data);\n\n    const /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n    if (!triggersWithStates.hasOwnProperty(name)) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n      triggersWithStates[name] = null;\n    }\n\n    return () => {\n      // the event listener is removed AFTER the flush has occurred such\n      // that leave animations callbacks can fire (otherwise if the node\n      // is removed in between then the listeners would be deregistered)\n      this._engine.afterFlush(() => {\n        const /** @type {?} */ index = listeners.indexOf(data);\n        if (index >= 0) {\n          listeners.splice(index, 1);\n        }\n\n        if (!this._triggers[name]) {\n          delete triggersWithStates[name];\n        }\n      });\n    };\n  }\n/**\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nregister(name: string, ast: AnimationTrigger): boolean {\n    if (this._triggers[name]) {\n      // throw\n      return false;\n    } else {\n      this._triggers[name] = ast;\n      return true;\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\n\nprivate _getTrigger(name: string) {\n    const /** @type {?} */ trigger = this._triggers[name];\n    if (!trigger) {\n      throw new Error(`The provided animation trigger \"${name}\" has not been registered!`);\n    }\n    return trigger;\n  }\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} value\n * @param {?=} defaultToFallback\n * @return {?}\n */\ntrigger(element: any, triggerName: string, value: any, defaultToFallback: boolean = true):\n      TransitionAnimationPlayer|undefined {\n    const /** @type {?} */ trigger = this._getTrigger(triggerName);\n    const /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n\n    let /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n    if (!triggersWithStates) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n      this._engine.statesByElement.set(element, triggersWithStates = {});\n    }\n\n    let /** @type {?} */ fromState = triggersWithStates[triggerName];\n    const /** @type {?} */ toState = new StateValue(value);\n\n    const /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n    if (!isObj && fromState) {\n      toState.absorbOptions(fromState.options);\n    }\n\n    triggersWithStates[triggerName] = toState;\n\n    if (!fromState) {\n      fromState = DEFAULT_STATE_VALUE;\n    } else if (fromState === DELETED_STATE_VALUE) {\n      return player;\n    }\n\n    const /** @type {?} */ isRemoval = toState.value === VOID_VALUE;\n\n    // normally this isn't reached by here, however, if an object expression\n    // is passed in then it may be a new object each time. Comparing the value\n    // is important since that will stay the same despite there being a new object.\n    // The removal arc here is special cased because the same element is triggered\n    // twice in the event that it contains animations on the outer/inner portions\n    // of the host container\n    if (!isRemoval && fromState.value === toState.value) {\n      // this means that despite the value not changing, some inner params\n      // have changed which means that the animation final styles need to be applied\n      if (!objEquals(fromState.params, toState.params)) {\n        const /** @type {?} */ errors: any[] = [];\n        const /** @type {?} */ fromStyles = trigger.matchStyles(fromState.value, fromState.params, errors);\n        const /** @type {?} */ toStyles = trigger.matchStyles(toState.value, toState.params, errors);\n        if (errors.length) {\n          this._engine.reportError(errors);\n        } else {\n          this._engine.afterFlush(() => {\n            eraseStyles(element, fromStyles);\n            setStyles(element, toStyles);\n          });\n        }\n      }\n      return;\n    }\n\n    const /** @type {?} */ playersOnElement: TransitionAnimationPlayer[] =\n        getOrSetAsInMap(this._engine.playersByElement, element, []);\n    playersOnElement.forEach(player => {\n      // only remove the player if it is queued on the EXACT same trigger/namespace\n      // we only also deal with queued players here because if the animation has\n      // started then we want to keep the player alive until the flush happens\n      // (which is where the previousPlayers are passed into the new palyer)\n      if (player.namespaceId == this.id && player.triggerName == triggerName && player.queued) {\n        player.destroy();\n      }\n    });\n\n    let /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n    let /** @type {?} */ isFallbackTransition = false;\n    if (!transition) {\n      if (!defaultToFallback) return;\n      transition = trigger.fallbackTransition;\n      isFallbackTransition = true;\n    }\n\n    this._engine.totalQueuedPlayers++;\n    this._queue.push(\n        {element, triggerName, transition, fromState, toState, player, isFallbackTransition});\n\n    if (!isFallbackTransition) {\n      addClass(element, QUEUED_CLASSNAME);\n      player.onStart(() => { removeClass(element, QUEUED_CLASSNAME); });\n    }\n\n    player.onDone(() => {\n      let /** @type {?} */ index = this.players.indexOf(player);\n      if (index >= 0) {\n        this.players.splice(index, 1);\n      }\n\n      const /** @type {?} */ players = this._engine.playersByElement.get(element);\n      if (players) {\n        let /** @type {?} */ index = players.indexOf(player);\n        if (index >= 0) {\n          players.splice(index, 1);\n        }\n      }\n    });\n\n    this.players.push(player);\n    playersOnElement.push(player);\n\n    return player;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nderegister(name: string) {\n    delete this._triggers[name];\n\n    this._engine.statesByElement.forEach((stateMap, element) => { delete stateMap[name]; });\n\n    this._elementListeners.forEach((listeners, element) => {\n      this._elementListeners.set(\n          element, listeners.filter(entry => { return entry.name != name; }));\n    });\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nclearElementCache(element: any) {\n    this._engine.statesByElement.delete(element);\n    this._elementListeners.delete(element);\n    const /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n    if (elementPlayers) {\n      elementPlayers.forEach(player => player.destroy());\n      this._engine.playersByElement.delete(element);\n    }\n  }\n/**\n * @param {?} rootElement\n * @param {?} context\n * @param {?=} animate\n * @return {?}\n */\n\nprivate _destroyInnerNodes(rootElement: any, context: any, animate: boolean = false) {\n    this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true).forEach(elm => {\n      if (animate && containsClass(elm, this._hostClassName)) {\n        const /** @type {?} */ innerNs = this._engine.namespacesByHostElement.get(elm);\n\n        // special case for a host element with animations on the same element\n        if (innerNs) {\n          innerNs.removeNode(elm, context, true);\n        }\n\n        this.removeNode(elm, context, true);\n      } else {\n        this.clearElementCache(elm);\n      }\n    });\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @param {?=} doNotRecurse\n * @return {?}\n */\nremoveNode(element: any, context: any, doNotRecurse?: boolean): void {\n    const /** @type {?} */ engine = this._engine;\n\n    if (!doNotRecurse && element.childElementCount) {\n      this._destroyInnerNodes(element, context, true);\n    }\n\n    const /** @type {?} */ triggerStates = engine.statesByElement.get(element);\n    if (triggerStates) {\n      const /** @type {?} */ players: TransitionAnimationPlayer[] = [];\n      Object.keys(triggerStates).forEach(triggerName => {\n        // this check is here in the event that an element is removed\n        // twice (both on the host level and the component level)\n        if (this._triggers[triggerName]) {\n          const /** @type {?} */ player = this.trigger(element, triggerName, VOID_VALUE, false);\n          if (player) {\n            players.push(player);\n          }\n        }\n      });\n\n      if (players.length) {\n        engine.markElementAsRemoved(this.id, element, true, context);\n        optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));\n        return;\n      }\n    }\n\n    // find the player that is animating and make sure that the\n    // removal is delayed until that player has completed\n    let /** @type {?} */ containsPotentialParentTransition = false;\n    if (engine.totalAnimations) {\n      const /** @type {?} */ currentPlayers =\n          engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n\n      // when this `if statement` does not continue forward it means that\n      // a previous animation query has selected the current element and\n      // is animating it. In this situation want to continue fowards and\n      // allow the element to be queued up for animation later.\n      if (currentPlayers && currentPlayers.length) {\n        containsPotentialParentTransition = true;\n      } else {\n        let /** @type {?} */ parent = element;\n        while (parent = parent.parentNode) {\n          const /** @type {?} */ triggers = engine.statesByElement.get(parent);\n          if (triggers) {\n            containsPotentialParentTransition = true;\n            break;\n          }\n        }\n      }\n    }\n\n    // at this stage we know that the element will either get removed\n    // during flush or will be picked up by a parent query. Either way\n    // we need to fire the listeners for this element when it DOES get\n    // removed (once the query parent animation is done or after flush)\n    const /** @type {?} */ listeners = this._elementListeners.get(element);\n    if (listeners) {\n      const /** @type {?} */ visitedTriggers = new Set<string>();\n      listeners.forEach(listener => {\n        const /** @type {?} */ triggerName = listener.name;\n        if (visitedTriggers.has(triggerName)) return;\n        visitedTriggers.add(triggerName);\n\n        const /** @type {?} */ trigger = this._triggers[triggerName];\n        const /** @type {?} */ transition = trigger.fallbackTransition;\n        const /** @type {?} */ elementStates = /** @type {?} */(( engine.statesByElement.get(element)));\n        const /** @type {?} */ fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n        const /** @type {?} */ toState = new StateValue(VOID_VALUE);\n        const /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({\n          element,\n          triggerName,\n          transition,\n          fromState,\n          toState,\n          player,\n          isFallbackTransition: true\n        });\n      });\n    }\n\n    // whether or not a parent has an animation we need to delay the deferral of the leave\n    // operation until we have more information (which we do after flush() has been called)\n    if (containsPotentialParentTransition) {\n      engine.markElementAsRemoved(this.id, element, false, context);\n    } else {\n      // we do this after the flush has occurred such\n      // that the callbacks can be fired\n      engine.afterFlush(() => this.clearElementCache(element));\n      engine.destroyInnerAnimations(element);\n      engine._onRemovalComplete(element, context);\n    }\n  }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\ninsertNode(element: any, parent: any): void { addClass(element, this._hostClassName); }\n/**\n * @param {?} microtaskId\n * @return {?}\n */\ndrainQueuedTransitions(microtaskId: number): QueueInstruction[] {\n    const /** @type {?} */ instructions: QueueInstruction[] = [];\n    this._queue.forEach(entry => {\n      const /** @type {?} */ player = entry.player;\n      if (player.destroyed) return;\n\n      const /** @type {?} */ element = entry.element;\n      const /** @type {?} */ listeners = this._elementListeners.get(element);\n      if (listeners) {\n        listeners.forEach((listener: TriggerListener) => {\n          if (listener.name == entry.triggerName) {\n            const /** @type {?} */ baseEvent = makeAnimationEvent(\n                element, entry.triggerName, entry.fromState.value, entry.toState.value);\n            ( /** @type {?} */((baseEvent as any)))['_data'] = microtaskId;\n            listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n          }\n        });\n      }\n\n      if (player.markedForDestroy) {\n        this._engine.afterFlush(() => {\n          // now we can destroy the element properly since the event listeners have\n          // been bound to the player\n          player.destroy();\n        });\n      } else {\n        instructions.push(entry);\n      }\n    });\n\n    this._queue = [];\n\n    return instructions.sort((a, b) => {\n      // if depCount == 0 them move to front\n      // otherwise if a contains b then move back\n      const /** @type {?} */ d0 = a.transition.ast.depCount;\n      const /** @type {?} */ d1 = b.transition.ast.depCount;\n      if (d0 == 0 || d1 == 0) {\n        return d0 - d1;\n      }\n      return this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n    });\n  }\n/**\n * @param {?} context\n * @return {?}\n */\ndestroy(context: any) {\n    this.players.forEach(p => p.destroy());\n    this._destroyInnerNodes(this.hostElement, context);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nelementContainsData(element: any): boolean {\n    let /** @type {?} */ containsData = false;\n    if (this._elementListeners.has(element)) containsData = true;\n    containsData =\n        (this._queue.find(entry => entry.element === element) ? true : false) || containsData;\n    return containsData;\n  }\n}\n\nfunction AnimationTransitionNamespace_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionNamespace.prototype.players;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._triggers;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._queue;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._elementListeners;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._hostClassName;\n/** @type {?} */\nAnimationTransitionNamespace.prototype.id;\n/** @type {?} */\nAnimationTransitionNamespace.prototype.hostElement;\n/** @type {?} */\nAnimationTransitionNamespace.prototype._engine;\n}\n\n/**\n * @record\n */\nexport function QueuedTransition() {}\n\n\nfunction QueuedTransition_tsickle_Closure_declarations() {\n/** @type {?} */\nQueuedTransition.prototype.element;\n/** @type {?} */\nQueuedTransition.prototype.instruction;\n/** @type {?} */\nQueuedTransition.prototype.player;\n}\n\n\nexport interface QueuedTransition {\n  element: any;\n  instruction: AnimationTransitionInstruction;\n  player: TransitionAnimationPlayer;\n}\nexport class TransitionAnimationEngine {\npublic players: TransitionAnimationPlayer[] = [];\npublic newHostElements = new Map<any, AnimationTransitionNamespace>();\npublic playersByElement = new Map<any, TransitionAnimationPlayer[]>();\npublic playersByQueriedElement = new Map<any, TransitionAnimationPlayer[]>();\npublic statesByElement = new Map<any, {[triggerName: string]: StateValue}>();\npublic disabledNodes = new Set<any>();\npublic totalAnimations = 0;\npublic totalQueuedPlayers = 0;\nprivate _namespaceLookup: {[id: string]: AnimationTransitionNamespace} = {};\nprivate _namespaceList: AnimationTransitionNamespace[] = [];\nprivate _flushFns: (() => any)[] = [];\nprivate _whenQuietFns: (() => any)[] = [];\npublic namespacesByHostElement = new Map<any, AnimationTransitionNamespace>();\npublic collectedEnterElements: any[] = [];\npublic collectedLeaveElements: any[] = [];\npublic onRemovalComplete = (element: any, context: any) => {};\n/**\n * \\@internal\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\n_onRemovalComplete(element: any, context: any) { this.onRemovalComplete(element, context); }\n/**\n * @param {?} driver\n * @param {?} _normalizer\n */\nconstructor(public driver: AnimationDriver,\nprivate _normalizer: AnimationStyleNormalizer) {}\n/**\n * @return {?}\n */\nget queuedPlayers(): TransitionAnimationPlayer[] {\n    const /** @type {?} */ players: TransitionAnimationPlayer[] = [];\n    this._namespaceList.forEach(ns => {\n      ns.players.forEach(player => {\n        if (player.queued) {\n          players.push(player);\n        }\n      });\n    });\n    return players;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} hostElement\n * @return {?}\n */\ncreateNamespace(namespaceId: string, hostElement: any) {\n    const /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n    if (hostElement.parentNode) {\n      this._balanceNamespaceList(ns, hostElement);\n    } else {\n      // defer this later until flush during when the host element has\n      // been inserted so that we know exactly where to place it in\n      // the namespace list\n      this.newHostElements.set(hostElement, ns);\n\n      // given that this host element is apart of the animation code, it\n      // may or may not be inserted by a parent node that is an of an\n      // animation renderer type. If this happens then we can still have\n      // access to this item when we query for :enter nodes. If the parent\n      // is a renderer then the set data-structure will normalize the entry\n      this.collectEnterElement(hostElement);\n    }\n    return this._namespaceLookup[namespaceId] = ns;\n  }\n/**\n * @param {?} ns\n * @param {?} hostElement\n * @return {?}\n */\n\nprivate _balanceNamespaceList(ns: AnimationTransitionNamespace, hostElement: any) {\n    const /** @type {?} */ limit = this._namespaceList.length - 1;\n    if (limit >= 0) {\n      let /** @type {?} */ found = false;\n      for (let /** @type {?} */ i = limit; i >= 0; i--) {\n        const /** @type {?} */ nextNamespace = this._namespaceList[i];\n        if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n          this._namespaceList.splice(i + 1, 0, ns);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        this._namespaceList.splice(0, 0, ns);\n      }\n    } else {\n      this._namespaceList.push(ns);\n    }\n\n    this.namespacesByHostElement.set(hostElement, ns);\n    return ns;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} hostElement\n * @return {?}\n */\nregister(namespaceId: string, hostElement: any) {\n    let /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n    if (!ns) {\n      ns = this.createNamespace(namespaceId, hostElement);\n    }\n    return ns;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} name\n * @param {?} trigger\n * @return {?}\n */\nregisterTrigger(namespaceId: string, name: string, trigger: AnimationTrigger) {\n    let /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n    if (ns && ns.register(name, trigger)) {\n      this.totalAnimations++;\n    }\n  }\n/**\n * @param {?} namespaceId\n * @param {?} context\n * @return {?}\n */\ndestroy(namespaceId: string, context: any) {\n    if (!namespaceId) return;\n\n    const /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n\n    this.afterFlush(() => {\n      this.namespacesByHostElement.delete(ns.hostElement);\n      delete this._namespaceLookup[namespaceId];\n      const /** @type {?} */ index = this._namespaceList.indexOf(ns);\n      if (index >= 0) {\n        this._namespaceList.splice(index, 1);\n      }\n    });\n\n    this.afterFlushAnimationsDone(() => ns.destroy(context));\n  }\n/**\n * @param {?} id\n * @return {?}\n */\n\nprivate _fetchNamespace(id: string) { return this._namespaceLookup[id]; }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\ntrigger(namespaceId: string, element: any, name: string, value: any): boolean {\n    if (isElementNode(element)) {\n      this._fetchNamespace(namespaceId).trigger(element, name, value);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} parent\n * @param {?} insertBefore\n * @return {?}\n */\ninsertNode(namespaceId: string, element: any, parent: any, insertBefore: boolean): void {\n    if (!isElementNode(element)) return;\n\n    // special case for when an element is removed and reinserted (move operation)\n    // when this occurs we do not want to use the element for deletion later\n    const /** @type {?} */ details = /** @type {?} */(( element[REMOVAL_FLAG] as ElementAnimationState));\n    if (details && details.setForRemoval) {\n      details.setForRemoval = false;\n    }\n\n    // in the event that the namespaceId is blank then the caller\n    // code does not contain any animation code in it, but it is\n    // just being called so that the node is marked as being inserted\n    if (namespaceId) {\n      this._fetchNamespace(namespaceId).insertNode(element, parent);\n    }\n\n    // only *directives and host elements are inserted before\n    if (insertBefore) {\n      this.collectEnterElement(element);\n    }\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ncollectEnterElement(element: any) { this.collectedEnterElements.push(element); }\n/**\n * @param {?} element\n * @param {?} value\n * @return {?}\n */\nmarkElementAsDisabled(element: any, value: boolean) {\n    if (value) {\n      if (!this.disabledNodes.has(element)) {\n        this.disabledNodes.add(element);\n        addClass(element, DISABLED_CLASSNAME);\n      }\n    } else if (this.disabledNodes.has(element)) {\n      this.disabledNodes.delete(element);\n      removeClass(element, DISABLED_CLASSNAME);\n    }\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} context\n * @param {?=} doNotRecurse\n * @return {?}\n */\nremoveNode(namespaceId: string, element: any, context: any, doNotRecurse?: boolean): void {\n    if (!isElementNode(element)) {\n      this._onRemovalComplete(element, context);\n      return;\n    }\n\n    const /** @type {?} */ ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n    if (ns) {\n      ns.removeNode(element, context, doNotRecurse);\n    } else {\n      this.markElementAsRemoved(namespaceId, element, false, context);\n    }\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?=} hasAnimation\n * @param {?=} context\n * @return {?}\n */\nmarkElementAsRemoved(namespaceId: string, element: any, hasAnimation?: boolean, context?: any) {\n    this.collectedLeaveElements.push(element);\n    element[REMOVAL_FLAG] = {\n      namespaceId,\n      setForRemoval: context, hasAnimation,\n      removedBeforeQueried: false\n    };\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @param {?} name\n * @param {?} phase\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      namespaceId: string, element: any, name: string, phase: string,\n      callback: (event: any) => boolean): () => any {\n    if (isElementNode(element)) {\n      return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n    }\n    return () => {};\n  }\n/**\n * @param {?} entry\n * @param {?} subTimelines\n * @return {?}\n */\n\nprivate _buildInstruction(entry: QueueInstruction, subTimelines: ElementInstructionMap) {\n    return entry.transition.build(\n        this.driver, entry.element, entry.fromState.value, entry.toState.value,\n        entry.fromState.options, entry.toState.options, subTimelines);\n  }\n/**\n * @param {?} containerElement\n * @return {?}\n */\ndestroyInnerAnimations(containerElement: any) {\n    let /** @type {?} */ elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n    elements.forEach(element => {\n      const /** @type {?} */ players = this.playersByElement.get(element);\n      if (players) {\n        players.forEach(player => {\n          // special case for when an element is set for destruction, but hasn't started.\n          // in this situation we want to delay the destruction until the flush occurs\n          // so that any event listeners attached to the player are triggered.\n          if (player.queued) {\n            player.markedForDestroy = true;\n          } else {\n            player.destroy();\n          }\n        });\n      }\n      const /** @type {?} */ stateMap = this.statesByElement.get(element);\n      if (stateMap) {\n        Object.keys(stateMap).forEach(triggerName => stateMap[triggerName] = DELETED_STATE_VALUE);\n      }\n    });\n\n    if (this.playersByQueriedElement.size == 0) return;\n\n    elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n    if (elements.length) {\n      elements.forEach(element => {\n        const /** @type {?} */ players = this.playersByQueriedElement.get(element);\n        if (players) {\n          players.forEach(player => player.finish());\n        }\n      });\n    }\n  }\n/**\n * @return {?}\n */\nwhenRenderingDone(): Promise<any> {\n    return new Promise(resolve => {\n      if (this.players.length) {\n        return optimizeGroupPlayer(this.players).onDone(() => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprocessLeaveNode(element: any) {\n    const /** @type {?} */ details = /** @type {?} */(( element[REMOVAL_FLAG] as ElementAnimationState));\n    if (details && details.setForRemoval) {\n      // this will prevent it from removing it twice\n      element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n      if (details.namespaceId) {\n        this.destroyInnerAnimations(element);\n        const /** @type {?} */ ns = this._fetchNamespace(details.namespaceId);\n        if (ns) {\n          ns.clearElementCache(element);\n        }\n      }\n      this._onRemovalComplete(element, details.setForRemoval);\n    }\n\n    if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n      this.markElementAsDisabled(element, false);\n    }\n\n    this.driver.query(element, DISABLED_SELECTOR, true).forEach(node => {\n      this.markElementAsDisabled(element, false);\n    });\n  }\n/**\n * @param {?=} microtaskId\n * @return {?}\n */\nflush(microtaskId: number = -1) {\n    let /** @type {?} */ players: AnimationPlayer[] = [];\n    if (this.newHostElements.size) {\n      this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));\n      this.newHostElements.clear();\n    }\n\n    if (this._namespaceList.length &&\n        (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n      const /** @type {?} */ cleanupFns: Function[] = [];\n      try {\n        players = this._flushAnimations(cleanupFns, microtaskId);\n      } finally {\n        for (let /** @type {?} */ i = 0; i < cleanupFns.length; i++) {\n          cleanupFns[i]();\n        }\n      }\n    } else {\n      for (let /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n        const /** @type {?} */ element = this.collectedLeaveElements[i];\n        this.processLeaveNode(element);\n      }\n    }\n\n    this.totalQueuedPlayers = 0;\n    this.collectedEnterElements.length = 0;\n    this.collectedLeaveElements.length = 0;\n    this._flushFns.forEach(fn => fn());\n    this._flushFns = [];\n\n    if (this._whenQuietFns.length) {\n      // we move these over to a variable so that\n      // if any new callbacks are registered in another\n      // flush they do not populate the existing set\n      const /** @type {?} */ quietFns = this._whenQuietFns;\n      this._whenQuietFns = [];\n\n      if (players.length) {\n        optimizeGroupPlayer(players).onDone(() => { quietFns.forEach(fn => fn()); });\n      } else {\n        quietFns.forEach(fn => fn());\n      }\n    }\n  }\n/**\n * @param {?} errors\n * @return {?}\n */\nreportError(errors: string[]) {\n    throw new Error(\n        `Unable to process animations due to the following failed trigger transitions\\n ${errors.join(\"\\n\")}`);\n  }\n/**\n * @param {?} cleanupFns\n * @param {?} microtaskId\n * @return {?}\n */\n\nprivate _flushAnimations(cleanupFns: Function[], microtaskId: number):\n      TransitionAnimationPlayer[] {\n    const /** @type {?} */ subTimelines = new ElementInstructionMap();\n    const /** @type {?} */ skippedPlayers: TransitionAnimationPlayer[] = [];\n    const /** @type {?} */ skippedPlayersMap = new Map<any, AnimationPlayer[]>();\n    const /** @type {?} */ queuedInstructions: QueuedTransition[] = [];\n    const /** @type {?} */ queriedElements = new Map<any, TransitionAnimationPlayer[]>();\n    const /** @type {?} */ allPreStyleElements = new Map<any, Set<string>>();\n    const /** @type {?} */ allPostStyleElements = new Map<any, Set<string>>();\n\n    const /** @type {?} */ disabledElementsSet = new Set<any>();\n    this.disabledNodes.forEach(node => {\n      const /** @type {?} */ nodesThatAreDisabled = this.driver.query(node, QUEUED_SELECTOR, true);\n      for (let /** @type {?} */ i = 0; i < nodesThatAreDisabled.length; i++) {\n        disabledElementsSet.add(nodesThatAreDisabled[i]);\n      }\n    });\n\n    const /** @type {?} */ bodyNode = getBodyNode();\n    const /** @type {?} */ allEnterNodes: any[] = this.collectedEnterElements.length ?\n        this.collectedEnterElements.filter(createIsRootFilterFn(this.collectedEnterElements)) :\n        [];\n\n    // this must occur before the instructions are built below such that\n    // the :enter queries match the elements (since the timeline queries\n    // are fired during instruction building).\n    for (let /** @type {?} */ i = 0; i < allEnterNodes.length; i++) {\n      addClass(allEnterNodes[i], ENTER_CLASSNAME);\n    }\n\n    const /** @type {?} */ allLeaveNodes: any[] = [];\n    const /** @type {?} */ leaveNodesWithoutAnimations: any[] = [];\n    for (let /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n      const /** @type {?} */ element = this.collectedLeaveElements[i];\n      const /** @type {?} */ details = /** @type {?} */(( element[REMOVAL_FLAG] as ElementAnimationState));\n      if (details && details.setForRemoval) {\n        addClass(element, LEAVE_CLASSNAME);\n        allLeaveNodes.push(element);\n        if (!details.hasAnimation) {\n          leaveNodesWithoutAnimations.push(element);\n        }\n      }\n    }\n\n    cleanupFns.push(() => {\n      allEnterNodes.forEach(element => removeClass(element, ENTER_CLASSNAME));\n      allLeaveNodes.forEach(element => {\n        removeClass(element, LEAVE_CLASSNAME);\n        this.processLeaveNode(element);\n      });\n    });\n\n    const /** @type {?} */ allPlayers: TransitionAnimationPlayer[] = [];\n    const /** @type {?} */ erroneousTransitions: AnimationTransitionInstruction[] = [];\n    for (let /** @type {?} */ i = this._namespaceList.length - 1; i >= 0; i--) {\n      const /** @type {?} */ ns = this._namespaceList[i];\n      ns.drainQueuedTransitions(microtaskId).forEach(entry => {\n        const /** @type {?} */ player = entry.player;\n        allPlayers.push(player);\n\n        const /** @type {?} */ element = entry.element;\n        if (!bodyNode || !this.driver.containsElement(bodyNode, element)) {\n          player.destroy();\n          return;\n        }\n\n        const /** @type {?} */ instruction = /** @type {?} */(( this._buildInstruction(entry, subTimelines)));\n        if (instruction.errors && instruction.errors.length) {\n          erroneousTransitions.push(instruction);\n          return;\n        }\n\n        // if a unmatched transition is queued to go then it SHOULD NOT render\n        // an animation and cancel the previously running animations.\n        if (entry.isFallbackTransition) {\n          player.onStart(() => eraseStyles(element, instruction.fromStyles));\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          skippedPlayers.push(player);\n          return;\n        }\n\n        // this means that if a parent animation uses this animation as a sub trigger\n        // then it will instruct the timeline builder to not add a player delay, but\n        // instead stretch the first keyframe gap up until the animation starts. The\n        // reason this is important is to prevent extra initialization styles from being\n        // required by the user in the animation.\n        instruction.timelines.forEach(tl => tl.stretchStartingKeyframe = true);\n\n        subTimelines.append(element, instruction.timelines);\n\n        const /** @type {?} */ tuple = {instruction, player, element};\n\n        queuedInstructions.push(tuple);\n\n        instruction.queriedElements.forEach(\n            element => getOrSetAsInMap(queriedElements, element, []).push(player));\n\n        instruction.preStyleProps.forEach((stringMap, element) => {\n          const /** @type {?} */ props = Object.keys(stringMap);\n          if (props.length) {\n            let /** @type {?} */ setVal: Set<string> = /** @type {?} */(( allPreStyleElements.get(element)));\n            if (!setVal) {\n              allPreStyleElements.set(element, setVal = new Set<string>());\n            }\n            props.forEach(prop => setVal.add(prop));\n          }\n        });\n\n        instruction.postStyleProps.forEach((stringMap, element) => {\n          const /** @type {?} */ props = Object.keys(stringMap);\n          let /** @type {?} */ setVal: Set<string> = /** @type {?} */(( allPostStyleElements.get(element)));\n          if (!setVal) {\n            allPostStyleElements.set(element, setVal = new Set<string>());\n          }\n          props.forEach(prop => setVal.add(prop));\n        });\n      });\n    }\n\n    if (erroneousTransitions.length) {\n      const /** @type {?} */ errors: string[] = [];\n      erroneousTransitions.forEach(instruction => {\n        errors.push(`@${instruction.triggerName} has failed due to:\\n`); /** @type {?} */((\n        instruction.errors)).forEach(error => errors.push(`- ${error}\\n`));\n      });\n\n      allPlayers.forEach(player => player.destroy());\n      this.reportError(errors);\n    }\n\n    // these can only be detected here since we have a map of all the elements\n    // that have animations attached to them...\n    const /** @type {?} */ enterNodesWithoutAnimations: any[] = [];\n    for (let /** @type {?} */ i = 0; i < allEnterNodes.length; i++) {\n      const /** @type {?} */ element = allEnterNodes[i];\n      if (!subTimelines.has(element)) {\n        enterNodesWithoutAnimations.push(element);\n      }\n    }\n\n    const /** @type {?} */ allPreviousPlayersMap = new Map<any, TransitionAnimationPlayer[]>();\n    let /** @type {?} */ sortedParentElements: any[] = [];\n    queuedInstructions.forEach(entry => {\n      const /** @type {?} */ element = entry.element;\n      if (subTimelines.has(element)) {\n        sortedParentElements.unshift(element);\n        this._beforeAnimationBuild(\n            entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n      }\n    });\n\n    skippedPlayers.forEach(player => {\n      const /** @type {?} */ element = player.element;\n      const /** @type {?} */ previousPlayers =\n          this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n      previousPlayers.forEach(\n          prevPlayer => { getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer); });\n    });\n\n    allPreviousPlayersMap.forEach(players => players.forEach(player => player.destroy()));\n\n    // PRE STAGE: fill the ! styles\n    const /** @type {?} */ preStylesMap = allPreStyleElements.size ?\n        cloakAndComputeStyles(\n            this.driver, enterNodesWithoutAnimations, allPreStyleElements, PRE_STYLE) :\n        new Map<any, ɵStyleData>();\n\n    // POST STAGE: fill the * styles\n    const /** @type {?} */ postStylesMap = cloakAndComputeStyles(\n        this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n\n    const /** @type {?} */ rootPlayers: TransitionAnimationPlayer[] = [];\n    const /** @type {?} */ subPlayers: TransitionAnimationPlayer[] = [];\n    queuedInstructions.forEach(entry => {\n      const {element, player, instruction} = entry;\n      // this means that it was never consumed by a parent animation which\n      // means that it is independent and therefore should be set for animation\n      if (subTimelines.has(element)) {\n        if (disabledElementsSet.has(element)) {\n          skippedPlayers.push(player);\n          return;\n        }\n\n        const /** @type {?} */ innerPlayer = this._buildAnimation(\n            player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap,\n            postStylesMap);\n        player.setRealPlayer(innerPlayer);\n\n        let /** @type {?} */ parentHasPriority: any = null;\n        for (let /** @type {?} */ i = 0; i < sortedParentElements.length; i++) {\n          const /** @type {?} */ parent = sortedParentElements[i];\n          if (parent === element) break;\n          if (this.driver.containsElement(parent, element)) {\n            parentHasPriority = parent;\n            break;\n          }\n        }\n\n        if (parentHasPriority) {\n          const /** @type {?} */ parentPlayers = this.playersByElement.get(parentHasPriority);\n          if (parentPlayers && parentPlayers.length) {\n            player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n          }\n          skippedPlayers.push(player);\n        } else {\n          rootPlayers.push(player);\n        }\n      } else {\n        eraseStyles(element, instruction.fromStyles);\n        player.onDestroy(() => setStyles(element, instruction.toStyles));\n        subPlayers.push(player);\n      }\n    });\n\n    subPlayers.forEach(player => {\n      const /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n      if (playersForElement && playersForElement.length) {\n        const /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n        player.setRealPlayer(innerPlayer);\n      }\n    });\n\n    // the reason why we don't actually play the animation is\n    // because all that a skipped player is designed to do is to\n    // fire the start/done transition callback events\n    skippedPlayers.forEach(player => {\n      if (player.parentPlayer) {\n        player.parentPlayer.onDestroy(() => player.destroy());\n      } else {\n        player.destroy();\n      }\n    });\n\n    // run through all of the queued removals and see if they\n    // were picked up by a query. If not then perform the removal\n    // operation right away unless a parent animation is ongoing.\n    for (let /** @type {?} */ i = 0; i < allLeaveNodes.length; i++) {\n      const /** @type {?} */ element = allLeaveNodes[i];\n      const /** @type {?} */ details = /** @type {?} */(( element[REMOVAL_FLAG] as ElementAnimationState));\n      removeClass(element, LEAVE_CLASSNAME);\n\n      // this means the element has a removal animation that is being\n      // taken care of and therefore the inner elements will hang around\n      // until that animation is over (or the parent queried animation)\n      if (details && details.hasAnimation) continue;\n\n      let /** @type {?} */ players: AnimationPlayer[] = [];\n\n      // if this element is queried or if it contains queried children\n      // then we want for the element not to be removed from the page\n      // until the queried animations have finished\n      if (queriedElements.size) {\n        let /** @type {?} */ queriedPlayerResults = queriedElements.get(element);\n        if (queriedPlayerResults && queriedPlayerResults.length) {\n          players.push(...queriedPlayerResults);\n        }\n\n        let /** @type {?} */ queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n        for (let /** @type {?} */ j = 0; j < queriedInnerElements.length; j++) {\n          let /** @type {?} */ queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n          if (queriedPlayers && queriedPlayers.length) {\n            players.push(...queriedPlayers);\n          }\n        }\n      }\n      if (players.length) {\n        removeNodesAfterAnimationDone(this, element, players);\n      } else {\n        this.processLeaveNode(element);\n      }\n    }\n\n    // this is required so the cleanup method doesn't remove them\n    allLeaveNodes.length = 0;\n\n    rootPlayers.forEach(player => {\n      this.players.push(player);\n      player.onDone(() => {\n        player.destroy();\n\n        const /** @type {?} */ index = this.players.indexOf(player);\n        this.players.splice(index, 1);\n      });\n      player.play();\n    });\n\n    return rootPlayers;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} element\n * @return {?}\n */\nelementContainsData(namespaceId: string, element: any) {\n    let /** @type {?} */ containsData = false;\n    const /** @type {?} */ details = /** @type {?} */(( element[REMOVAL_FLAG] as ElementAnimationState));\n    if (details && details.setForRemoval) containsData = true;\n    if (this.playersByElement.has(element)) containsData = true;\n    if (this.playersByQueriedElement.has(element)) containsData = true;\n    if (this.statesByElement.has(element)) containsData = true;\n    return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nafterFlush(callback: () => any) { this._flushFns.push(callback); }\n/**\n * @param {?} callback\n * @return {?}\n */\nafterFlushAnimationsDone(callback: () => any) { this._whenQuietFns.push(callback); }\n/**\n * @param {?} element\n * @param {?} isQueriedElement\n * @param {?=} namespaceId\n * @param {?=} triggerName\n * @param {?=} toStateValue\n * @return {?}\n */\n\nprivate _getPreviousPlayers(\n      element: string, isQueriedElement: boolean, namespaceId?: string, triggerName?: string,\n      toStateValue?: any): TransitionAnimationPlayer[] {\n    let /** @type {?} */ players: TransitionAnimationPlayer[] = [];\n    if (isQueriedElement) {\n      const /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n      if (queriedElementPlayers) {\n        players = queriedElementPlayers;\n      }\n    } else {\n      const /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n      if (elementPlayers) {\n        const /** @type {?} */ isRemovalAnimation = !toStateValue || toStateValue == VOID_VALUE;\n        elementPlayers.forEach(player => {\n          if (player.queued) return;\n          if (!isRemovalAnimation && player.triggerName != triggerName) return;\n          players.push(player);\n        });\n      }\n    }\n    if (namespaceId || triggerName) {\n      players = players.filter(player => {\n        if (namespaceId && namespaceId != player.namespaceId) return false;\n        if (triggerName && triggerName != player.triggerName) return false;\n        return true;\n      });\n    }\n    return players;\n  }\n/**\n * @param {?} namespaceId\n * @param {?} instruction\n * @param {?} allPreviousPlayersMap\n * @return {?}\n */\n\nprivate _beforeAnimationBuild(\n      namespaceId: string, instruction: AnimationTransitionInstruction,\n      allPreviousPlayersMap: Map<any, TransitionAnimationPlayer[]>) {\n    // it's important to do this step before destroying the players\n    // so that the onDone callback below won't fire before this\n    eraseStyles(instruction.element, instruction.fromStyles);\n\n    const /** @type {?} */ triggerName = instruction.triggerName;\n    const /** @type {?} */ rootElement = instruction.element;\n\n    // when a removal animation occurs, ALL previous players are collected\n    // and destroyed (even if they are outside of the current namespace)\n    const /** @type {?} */ targetNameSpaceId: string|undefined =\n        instruction.isRemovalTransition ? undefined : namespaceId;\n    const /** @type {?} */ targetTriggerName: string|undefined =\n        instruction.isRemovalTransition ? undefined : triggerName;\n\n    instruction.timelines.map(timelineInstruction => {\n      const /** @type {?} */ element = timelineInstruction.element;\n      const /** @type {?} */ isQueriedElement = element !== rootElement;\n      const /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n      const /** @type {?} */ previousPlayers = this._getPreviousPlayers(\n          element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n      previousPlayers.forEach(player => {\n        const /** @type {?} */ realPlayer = /** @type {?} */(( player.getRealPlayer() as any));\n        if (realPlayer.beforeDestroy) {\n          realPlayer.beforeDestroy();\n        }\n        players.push(player);\n      });\n    });\n  }\n/**\n * @param {?} namespaceId\n * @param {?} instruction\n * @param {?} allPreviousPlayersMap\n * @param {?} skippedPlayersMap\n * @param {?} preStylesMap\n * @param {?} postStylesMap\n * @return {?}\n */\n\nprivate _buildAnimation(\n      namespaceId: string, instruction: AnimationTransitionInstruction,\n      allPreviousPlayersMap: Map<any, TransitionAnimationPlayer[]>,\n      skippedPlayersMap: Map<any, AnimationPlayer[]>, preStylesMap: Map<any, ɵStyleData>,\n      postStylesMap: Map<any, ɵStyleData>): AnimationPlayer {\n    const /** @type {?} */ triggerName = instruction.triggerName;\n    const /** @type {?} */ rootElement = instruction.element;\n\n    // we first run this so that the previous animation player\n    // data can be passed into the successive animation players\n    const /** @type {?} */ allQueriedPlayers: TransitionAnimationPlayer[] = [];\n    const /** @type {?} */ allConsumedElements = new Set<any>();\n    const /** @type {?} */ allSubElements = new Set<any>();\n    const /** @type {?} */ allNewPlayers = instruction.timelines.map(timelineInstruction => {\n      const /** @type {?} */ element = timelineInstruction.element;\n      allConsumedElements.add(element);\n\n      // FIXME (matsko): make sure to-be-removed animations are removed properly\n      const /** @type {?} */ details = element[REMOVAL_FLAG];\n      if (details && details.removedBeforeQueried) return new NoopAnimationPlayer();\n\n      const /** @type {?} */ isQueriedElement = element !== rootElement;\n      const /** @type {?} */ previousPlayers =\n          flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY)\n                                  .map(p => p.getRealPlayer()))\n              .filter(p => {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                const /** @type {?} */ pp = /** @type {?} */(( p as any));\n                return pp.element ? pp.element === element : false;\n              });\n\n      const /** @type {?} */ preStyles = preStylesMap.get(element);\n      const /** @type {?} */ postStyles = postStylesMap.get(element);\n      const /** @type {?} */ keyframes = normalizeKeyframes(\n          this.driver, this._normalizer, element, timelineInstruction.keyframes, preStyles,\n          postStyles);\n      const /** @type {?} */ player = this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n\n      // this means that this particular player belongs to a sub trigger. It is\n      // important that we match this player up with the corresponding (@trigger.listener)\n      if (timelineInstruction.subTimeline && skippedPlayersMap) {\n        allSubElements.add(element);\n      }\n\n      if (isQueriedElement) {\n        const /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n        wrappedPlayer.setRealPlayer(player);\n        allQueriedPlayers.push(wrappedPlayer);\n      }\n\n      return player;\n    });\n\n    allQueriedPlayers.forEach(player => {\n      getOrSetAsInMap(this.playersByQueriedElement, player.element, []).push(player);\n      player.onDone(() => deleteOrUnsetInMap(this.playersByQueriedElement, player.element, player));\n    });\n\n    allConsumedElements.forEach(element => addClass(element, NG_ANIMATING_CLASSNAME));\n    const /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n    player.onDestroy(() => {\n      allConsumedElements.forEach(element => removeClass(element, NG_ANIMATING_CLASSNAME));\n      setStyles(rootElement, instruction.toStyles);\n    });\n\n    // this basically makes all of the callbacks for sub element animations\n    // be dependent on the upper players for when they finish\n    allSubElements.forEach(\n        element => { getOrSetAsInMap(skippedPlayersMap, element, []).push(player); });\n\n    return player;\n  }\n/**\n * @param {?} instruction\n * @param {?} keyframes\n * @param {?} previousPlayers\n * @return {?}\n */\n\nprivate _buildPlayer(\n      instruction: AnimationTimelineInstruction, keyframes: ɵStyleData[],\n      previousPlayers: AnimationPlayer[]): AnimationPlayer {\n    if (keyframes.length > 0) {\n      return this.driver.animate(\n          instruction.element, keyframes, instruction.duration, instruction.delay,\n          instruction.easing, previousPlayers);\n    }\n\n    // special case for when an empty transition|definition is provided\n    // ... there is no point in rendering an empty animation\n    return new NoopAnimationPlayer();\n  }\n}\n\nfunction TransitionAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nTransitionAnimationEngine.prototype.players;\n/** @type {?} */\nTransitionAnimationEngine.prototype.newHostElements;\n/** @type {?} */\nTransitionAnimationEngine.prototype.playersByElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.playersByQueriedElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.statesByElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.disabledNodes;\n/** @type {?} */\nTransitionAnimationEngine.prototype.totalAnimations;\n/** @type {?} */\nTransitionAnimationEngine.prototype.totalQueuedPlayers;\n/** @type {?} */\nTransitionAnimationEngine.prototype._namespaceLookup;\n/** @type {?} */\nTransitionAnimationEngine.prototype._namespaceList;\n/** @type {?} */\nTransitionAnimationEngine.prototype._flushFns;\n/** @type {?} */\nTransitionAnimationEngine.prototype._whenQuietFns;\n/** @type {?} */\nTransitionAnimationEngine.prototype.namespacesByHostElement;\n/** @type {?} */\nTransitionAnimationEngine.prototype.collectedEnterElements;\n/** @type {?} */\nTransitionAnimationEngine.prototype.collectedLeaveElements;\n/** @type {?} */\nTransitionAnimationEngine.prototype.onRemovalComplete;\n/** @type {?} */\nTransitionAnimationEngine.prototype.driver;\n/** @type {?} */\nTransitionAnimationEngine.prototype._normalizer;\n}\n\nexport class TransitionAnimationPlayer implements AnimationPlayer {\nprivate _player: AnimationPlayer = new NoopAnimationPlayer();\nprivate _containsRealPlayer = false;\nprivate _queuedCallbacks: {[name: string]: (() => any)[]} = {};\nprivate _destroyed = false;\npublic parentPlayer: AnimationPlayer;\npublic markedForDestroy: boolean = false;\n/**\n * @param {?} namespaceId\n * @param {?} triggerName\n * @param {?} element\n */\nconstructor(public namespaceId: string,\npublic triggerName: string,\npublic element: any) {}\n/**\n * @return {?}\n */\nget queued() { return this._containsRealPlayer == false; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @param {?} player\n * @return {?}\n */\nsetRealPlayer(player: AnimationPlayer) {\n    if (this._containsRealPlayer) return;\n\n    this._player = player;\n    Object.keys(this._queuedCallbacks).forEach(phase => {\n      this._queuedCallbacks[phase].forEach(\n          callback => listenOnPlayer(player, phase, undefined, callback));\n    });\n    this._queuedCallbacks = {};\n    this._containsRealPlayer = true;\n  }\n/**\n * @return {?}\n */\ngetRealPlayer() { return this._player; }\n/**\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\n\nprivate _queueEvent(name: string, callback: (event: any) => any): void {\n    getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDone(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('done', fn);\n    }\n    this._player.onDone(fn);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonStart(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('start', fn);\n    }\n    this._player.onStart(fn);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonDestroy(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('destroy', fn);\n    }\n    this._player.onDestroy(fn);\n  }\n/**\n * @return {?}\n */\ninit(): void { this._player.init(); }\n/**\n * @return {?}\n */\nhasStarted(): boolean { return this.queued ? false : this._player.hasStarted(); }\n/**\n * @return {?}\n */\nplay(): void { !this.queued && this._player.play(); }\n/**\n * @return {?}\n */\npause(): void { !this.queued && this._player.pause(); }\n/**\n * @return {?}\n */\nrestart(): void { !this.queued && this._player.restart(); }\n/**\n * @return {?}\n */\nfinish(): void { this._player.finish(); }\n/**\n * @return {?}\n */\ndestroy(): void {\n    this._destroyed = true;\n    this._player.destroy();\n  }\n/**\n * @return {?}\n */\nreset(): void { !this.queued && this._player.reset(); }\n/**\n * @param {?} p\n * @return {?}\n */\nsetPosition(p: any): void {\n    if (!this.queued) {\n      this._player.setPosition(p);\n    }\n  }\n/**\n * @return {?}\n */\ngetPosition(): number { return this.queued ? 0 : this._player.getPosition(); }\n/**\n * @return {?}\n */\nget totalTime(): number { return this._player.totalTime; }\n}\n\nfunction TransitionAnimationPlayer_tsickle_Closure_declarations() {\n/** @type {?} */\nTransitionAnimationPlayer.prototype._player;\n/** @type {?} */\nTransitionAnimationPlayer.prototype._containsRealPlayer;\n/** @type {?} */\nTransitionAnimationPlayer.prototype._queuedCallbacks;\n/** @type {?} */\nTransitionAnimationPlayer.prototype._destroyed;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.parentPlayer;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.markedForDestroy;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.namespaceId;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.triggerName;\n/** @type {?} */\nTransitionAnimationPlayer.prototype.element;\n}\n\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map: Map<any, any[]>| {[key: string]: any}, key: any, value: any) {\n  let /** @type {?} */ currentValues: any[]|null|undefined;\n  if (map instanceof Map) {\n    currentValues = map.get(key);\n    if (currentValues) {\n      if (currentValues.length) {\n        const /** @type {?} */ index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n      if (currentValues.length == 0) {\n        map.delete(key);\n      }\n    }\n  } else {\n    currentValues = map[key];\n    if (currentValues) {\n      if (currentValues.length) {\n        const /** @type {?} */ index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n      if (currentValues.length == 0) {\n        delete map[key];\n      }\n    }\n  }\n  return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value: any): string {\n  switch (typeof value) {\n    case 'boolean':\n      return value ? '1' : '0';\n    default:\n      return value != null ? value.toString() : null;\n  }\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node: any) {\n  return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName: string): boolean {\n  return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element: any, value?: string) {\n  const /** @type {?} */ oldValue = element.style.display;\n  element.style.display = value != null ? value : 'none';\n  return oldValue;\n}\n/**\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(\n    driver: AnimationDriver, elements: any[], elementPropsMap: Map<any, Set<string>>,\n    defaultStyle: string): Map<any, ɵStyleData> {\n  const /** @type {?} */ cloakVals = elements.map(element => cloakElement(element));\n  const /** @type {?} */ valuesMap = new Map<any, ɵStyleData>();\n\n  elementPropsMap.forEach((props: Set<string>, element: any) => {\n    const /** @type {?} */ styles: ɵStyleData = {};\n    props.forEach(prop => {\n      const /** @type {?} */ value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n\n      // there is no easy way to detect this because a sub element could be removed\n      // by a parent animation element being detached.\n      if (!value || value.length == 0) {\n        element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n      }\n    });\n    valuesMap.set(element, styles);\n  });\n\n  elements.forEach((element, i) => cloakElement(element, cloakVals[i]));\n  return valuesMap;\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction createIsRootFilterFn(nodes: any): (node: any) => boolean {\n  const /** @type {?} */ nodeSet = new Set(nodes);\n  const /** @type {?} */ knownRootContainer = new Set();\n  let /** @type {?} */ isRoot: (node: any) => boolean;\n  isRoot = node => {\n    if (!node) return true;\n    if (nodeSet.has(node.parentNode)) return false;\n    if (knownRootContainer.has(node.parentNode)) return true;\n    if (isRoot(node.parentNode)) {\n      knownRootContainer.add(node);\n      return true;\n    }\n    return false;\n  };\n  return isRoot;\n}\n\nconst /** @type {?} */ CLASSES_CACHE_KEY = '$$classes';\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction containsClass(element: any, className: string): boolean {\n  if (element.classList) {\n    return element.classList.contains(className);\n  } else {\n    const /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n    return classes && classes[className];\n  }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction addClass(element: any, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    let /** @type {?} */ classes: {[className: string]: boolean} = element[CLASSES_CACHE_KEY];\n    if (!classes) {\n      classes = element[CLASSES_CACHE_KEY] = {};\n    }\n    classes[className] = true;\n  }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction removeClass(element: any, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    let /** @type {?} */ classes: {[className: string]: boolean} = element[CLASSES_CACHE_KEY];\n    if (classes) {\n      delete classes[className];\n    }\n  }\n}\n/**\n * @return {?}\n */\nfunction getBodyNode(): any|null {\n  if (typeof document != 'undefined') {\n    return document.body;\n  }\n  return null;\n}\n/**\n * @param {?} engine\n * @param {?} element\n * @param {?} players\n * @return {?}\n */\nfunction removeNodesAfterAnimationDone(\n    engine: TransitionAnimationEngine, element: any, players: AnimationPlayer[]) {\n  optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));\n}\n/**\n * @param {?} players\n * @return {?}\n */\nfunction flattenGroupPlayers(players: AnimationPlayer[]): AnimationPlayer[] {\n  const /** @type {?} */ finalPlayers: AnimationPlayer[] = [];\n  _flattenGroupPlayersRecur(players, finalPlayers);\n  return finalPlayers;\n}\n/**\n * @param {?} players\n * @param {?} finalPlayers\n * @return {?}\n */\nfunction _flattenGroupPlayersRecur(players: AnimationPlayer[], finalPlayers: AnimationPlayer[]) {\n  for (let /** @type {?} */ i = 0; i < players.length; i++) {\n    const /** @type {?} */ player = players[i];\n    if (player instanceof AnimationGroupPlayer) {\n      _flattenGroupPlayersRecur(player.players, finalPlayers);\n    } else {\n      finalPlayers.push( /** @type {?} */((player as AnimationPlayer)));\n    }\n  }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction objEquals(a: {[key: string]: any}, b: {[key: string]: any}): boolean {\n  const /** @type {?} */ k1 = Object.keys(a);\n  const /** @type {?} */ k2 = Object.keys(b);\n  if (k1.length != k2.length) return false;\n  for (let /** @type {?} */ i = 0; i < k1.length; i++) {\n    const /** @type {?} */ prop = k1[i];\n    if (!b.hasOwnProperty(prop) || a[prop] !== b[prop]) return false;\n  }\n  return true;\n}\n"]}