{"version":3,"sources":["../../../../../../packages/animations/browser/src/render/timeline_animation_engine.ts"],"names":[],"mappings":"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","file":"timeline_animation_engine.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationMetadata, AnimationOptions, AnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {Ast} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {buildAnimationTimelines} from '../dsl/animation_timeline_builder';\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {ElementInstructionMap} from '../dsl/element_instruction_map';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\n\nimport {AnimationDriver} from './animation_driver';\nimport {getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer} from './shared';\n\nconst /** @type {?} */ EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nexport class TimelineAnimationEngine {\nprivate _animations: {[id: string]: Ast} = {};\nprivate _playersById: {[id: string]: AnimationPlayer} = {};\npublic players: AnimationPlayer[] = [];\n/**\n * @param {?} _driver\n * @param {?} _normalizer\n */\nconstructor(private _driver: AnimationDriver,\nprivate _normalizer: AnimationStyleNormalizer) {}\n/**\n * @param {?} id\n * @param {?} metadata\n * @return {?}\n */\nregister(id: string, metadata: AnimationMetadata|AnimationMetadata[]) {\n    const /** @type {?} */ errors: any[] = [];\n    const /** @type {?} */ ast = buildAnimationAst(metadata, errors);\n    if (errors.length) {\n      throw new Error(\n          `Unable to build the animation due to the following errors: ${errors.join(\"\\n\")}`);\n    } else {\n      this._animations[id] = ast;\n    }\n  }\n/**\n * @param {?} i\n * @param {?} preStyles\n * @param {?=} postStyles\n * @return {?}\n */\n\nprivate _buildPlayer(\n      i: AnimationTimelineInstruction, preStyles: ɵStyleData,\n      postStyles?: ɵStyleData): AnimationPlayer {\n    const /** @type {?} */ element = i.element;\n    const /** @type {?} */ keyframes = normalizeKeyframes(\n        this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n    return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, []);\n  }\n/**\n * @param {?} id\n * @param {?} element\n * @param {?=} options\n * @return {?}\n */\ncreate(id: string, element: any, options: AnimationOptions = {}): AnimationPlayer {\n    const /** @type {?} */ errors: any[] = [];\n    const /** @type {?} */ ast = this._animations[id];\n    let /** @type {?} */ instructions: AnimationTimelineInstruction[];\n\n    const /** @type {?} */ autoStylesMap = new Map<any, ɵStyleData>();\n\n    if (ast) {\n      instructions = buildAnimationTimelines(\n          this._driver, element, ast, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n      instructions.forEach(inst => {\n        const /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n        inst.postStyleProps.forEach(prop => styles[prop] = null);\n      });\n    } else {\n      errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n      instructions = [];\n    }\n\n    if (errors.length) {\n      throw new Error(\n          `Unable to create the animation due to the following errors: ${errors.join(\"\\n\")}`);\n    }\n\n    autoStylesMap.forEach((styles, element) => {\n      Object.keys(styles).forEach(\n          prop => { styles[prop] = this._driver.computeStyle(element, prop, AUTO_STYLE); });\n    });\n\n    const /** @type {?} */ players = instructions.map(i => {\n      const /** @type {?} */ styles = autoStylesMap.get(i.element);\n      return this._buildPlayer(i, {}, styles);\n    });\n    const /** @type {?} */ player = optimizeGroupPlayer(players);\n    this._playersById[id] = player;\n    player.onDestroy(() => this.destroy(id));\n\n    this.players.push(player);\n    return player;\n  }\n/**\n * @param {?} id\n * @return {?}\n */\ndestroy(id: string) {\n    const /** @type {?} */ player = this._getPlayer(id);\n    player.destroy();\n    delete this._playersById[id];\n    const /** @type {?} */ index = this.players.indexOf(player);\n    if (index >= 0) {\n      this.players.splice(index, 1);\n    }\n  }\n/**\n * @param {?} id\n * @return {?}\n */\n\nprivate _getPlayer(id: string): AnimationPlayer {\n    const /** @type {?} */ player = this._playersById[id];\n    if (!player) {\n      throw new Error(`Unable to find the timeline player referenced by ${id}`);\n    }\n    return player;\n  }\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(id: string, element: string, eventName: string, callback: (event: any) => any):\n      () => void {\n    // triggerName, fromState, toState are all ignored for timeline animations\n    const /** @type {?} */ baseEvent = makeAnimationEvent(element, '', '', '');\n    listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n    return () => {};\n  }\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\ncommand(id: string, element: any, command: string, args: any[]): void {\n    if (command == 'register') {\n      this.register(id, /** @type {?} */(( args[0] as AnimationMetadata | AnimationMetadata[])));\n      return;\n    }\n\n    if (command == 'create') {\n      const /** @type {?} */ options = /** @type {?} */(( (args[0] || {}) as AnimationOptions));\n      this.create(id, element, options);\n      return;\n    }\n\n    const /** @type {?} */ player = this._getPlayer(id);\n    switch (command) {\n      case 'play':\n        player.play();\n        break;\n      case 'pause':\n        player.pause();\n        break;\n      case 'reset':\n        player.reset();\n        break;\n      case 'restart':\n        player.restart();\n        break;\n      case 'finish':\n        player.finish();\n        break;\n      case 'init':\n        player.init();\n        break;\n      case 'setPosition':\n        player.setPosition(parseFloat( /** @type {?} */((args[0] as string))));\n        break;\n      case 'destroy':\n        this.destroy(id);\n        break;\n    }\n  }\n}\n\nfunction TimelineAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineAnimationEngine.prototype._animations;\n/** @type {?} */\nTimelineAnimationEngine.prototype._playersById;\n/** @type {?} */\nTimelineAnimationEngine.prototype.players;\n/** @type {?} */\nTimelineAnimationEngine.prototype._driver;\n/** @type {?} */\nTimelineAnimationEngine.prototype._normalizer;\n}\n\n"]}