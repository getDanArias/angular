{"version":3,"sources":["../../../../../packages/core/src/linker/component_factory_resolver.ts"],"names":[],"mappings":"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","file":"component_factory_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n\n/**\n * @abstract\n * @template T\n * @param {?} component\n * @return {?}\n */\nComponentFactoryResolver.prototype.resolveComponentFactory = function(component) {};\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n * @param {?} _ngModule\n */\nconstructor(\n      factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver,\nprivate _ngModule: NgModuleRef<any>) {\n    for (let /** @type {?} */ i = 0; i < factories.length; i++) {\n      const /** @type {?} */ factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._ngModule;\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n/**\n * @param {?} factory\n * @param {?} ngModule\n */\nconstructor(private factory: ComponentFactory<C>,\nprivate ngModule: NgModuleRef<any>) { super(); }\n/**\n * @return {?}\n */\nget selector() { return this.factory.selector; }\n/**\n * @return {?}\n */\nget componentType() { return this.factory.componentType; }\n/**\n * @return {?}\n */\nget ngContentSelectors() { return this.factory.ngContentSelectors; }\n/**\n * @return {?}\n */\nget inputs() { return this.factory.inputs; }\n/**\n * @return {?}\n */\nget outputs() { return this.factory.outputs; }\n/**\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.factory;\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.ngModule;\n}\n\n"]}