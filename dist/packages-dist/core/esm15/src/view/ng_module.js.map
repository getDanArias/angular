{"version":3,"sources":["../../../../../packages/core/src/view/ng_module.ts"],"names":[],"mappings":"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","file":"ng_module.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {NgModuleRef} from '../linker/ng_module_factory';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\nconst /** @type {?} */ NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const /** @type {?} */ providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers\n  };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data: NgModuleData) {\n  const /** @type {?} */ def = data._def;\n  const /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    providers[i] = provDef.flags & NodeFlags.LazyProvider ? NOT_CREATED :\n                                                            _createProviderInstance(data, provDef);\n  }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  if (depDef.flags & DepFlags.SkipSelf) {\n    return data._parent.get(depDef.token, notFoundValue);\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n  switch (tokenKey) {\n    case InjectorRefTokenKey:\n    case NgModuleRefTokenKey:\n      return data;\n  }\n  const /** @type {?} */ providerDef = data._def.providersByKey[tokenKey];\n  if (providerDef) {\n    let /** @type {?} */ providerInstance = data._providers[providerDef.index];\n    if (providerInstance === NOT_CREATED) {\n      providerInstance = data._providers[providerDef.index] =\n          _createProviderInstance(data, providerDef);\n    }\n    return providerInstance;\n  }\n  return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let /** @type {?} */ injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]));\n      break;\n    case 2:\n      injectable =\n          new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveNgModuleDep(ngModule, deps[0]));\n      break;\n    case 2:\n      injectable =\n          factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const /** @type {?} */ def = ngModule._def;\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const /** @type {?} */ instance = ngModule._providers[i];\n      if (instance && instance !== NOT_CREATED) {\n        instance.ngOnDestroy();\n      }\n    }\n  }\n}\n"]}