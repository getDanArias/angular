{"version":3,"sources":["../../../../../packages/core/src/profile/wtf_impl.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,MAAE,EAAM,MAAA,SAAA,CAAA;AAMf;;;;;GAKG;AACH,MAAM,yBAAwB,CAAC;AAG/B;IACA;;MAEE;AACF,CAAC;AASD;;GAEG;AACH,iBAAgB,CAAC;AAGjB;IACA,gBAAgB;IAChB,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC;AACpB,CAAC;AAMD;;GAEG;AACH,mBAAkB,CAAC;AAGnB;IACA,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;IACvB,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC;IAC3B,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;AAC7B,CAAC;AASD;;GAEG;AACH,MAAM,oBAAmB,CAAC;AAG1B;AACA,CAAC;AAID;;GAEG;AACH,oBAAmB,CAAC;AAGpB;IACA,gBAAgB;IAChB,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;AAC7B,CAAC;AAMD;;GAEG;AACH,MAAM,oBAAmB,CAAC;AAG1B;IACA;;MAEE;AACF,CAAC;AAKD,IAAI,gBAAgB,CAhFhB,KAAO,CAAM;AAiFjB,IAAI,gBAAgB,CAhFhB,MAAQ,CAAO;AAiFnB;;GAEG;AACH,MAlFC;IAmFC,MAAM,gBAAgB,CAlFhB,GAAA,GAAW,CAAA,CAAA,MAAW,CAAA,CAAI,iBAAA,CAAA,CAAmB,KAAC,CAAK,CAAC;IAmF1D,EAAE,CAAC,CAAC,GAlFC,CAAG,CAAC,CAAA;QAmFP,KAAK,GAlFG,GAAA,CAAI,OAAC,CAAO,CAAC;QAmFrB,EAAE,CAAC,CAAC,KAlFC,CAAK,CAAC,CAAA;YAmFT,MAAM,GAlFG,KAAA,CAAM,QAAC,CAAQ,CAAC;YAmFzB,MAAM,CAlFC,IAAA,CAAK;QAmFd,CAAC;IACH,CAAC;IACD,MAAM,CAlFC,KAAA,CAAM;AAmFf,CAAC;AACD;;;;GAIG;AACH,MAtFC,sBAA2B,SAAW,EAAQ,QAAa,IAAA;IAuF1D,MAAM,CAtFC,MAAA,CAAO,WAAC,CAAW,SAAC,EAAU,KAAA,CAAM,CAAC;AAuF9C,CAAC;AAID;;;;;GAKG;AACH,MA5FC,gBAAuB,KAAQ,EAAO,WAAc;IA6FnD,KAAK,CA5FC,UAAC,CAAU,KAAC,EAAM,WAAA,CAAY,CAAC;IA6FrC,MAAM,CA5FC,WAAA,CAAY;AA6FrB,CAAC;AACD;;;;GAIG;AACH,MAhGC,yBAA8B,SAAW,EAAQ,MAAQ;IAiGxD,MAAM,CAhGC,KAAA,CAAM,cAAC,CAAc,SAAC,EAAU,MAAA,CAAO,CAAC;AAiGjD,CAAC;AACD;;;GAGG;AACH,MAnGC,uBAA4B,KAAO;IAoGlC,KAAK,CAnGC,YAAC,CAAY,KAAC,CAAK,CAAC;AAoG5B,CAAC","file":"wtf_impl.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n/**\n * A scope function for the Web Tracing Framework (WTF).\n * \n * \\@experimental\n * @record\n */\nexport function WtfScopeFn() {}\n\n\nfunction WtfScopeFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(arg0?: any, arg1?: any): any;\n*/\n}\n\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n/**\n * @record\n */\nfunction WTF() {}\n\n\nfunction WTF_tsickle_Closure_declarations() {\n/** @type {?} */\nWTF.prototype.trace;\n}\n\n\ninterface WTF {\n  trace: Trace;\n}\n/**\n * @record\n */\nfunction Trace() {}\n\n\nfunction Trace_tsickle_Closure_declarations() {\n/** @type {?} */\nTrace.prototype.events;\n/** @type {?} */\nTrace.prototype.leaveScope;\n/** @type {?} */\nTrace.prototype.beginTimeRange;\n/** @type {?} */\nTrace.prototype.endTimeRange;\n}\n\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n/**\n * @record\n */\nexport function Range() {}\n\n\nfunction Range_tsickle_Closure_declarations() {\n}\n\n\nexport interface Range {}\n/**\n * @record\n */\nfunction Events() {}\n\n\nfunction Events_tsickle_Closure_declarations() {\n/** @type {?} */\nEvents.prototype.createScope;\n}\n\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n/**\n * @record\n */\nexport function Scope() {}\n\n\nfunction Scope_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(...args: any[] __* TODO #9100 __): any;\n*/\n}\n\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n"]}