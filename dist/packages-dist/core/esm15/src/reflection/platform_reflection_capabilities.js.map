{"version":3,"sources":["../../../../../packages/core/src/reflection/platform_reflection_capabilities.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAYH;;GAEG;AACH,MAAM,6CAA4C,CAAC;AAGnD;IACA,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAC7D,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,OAAO,CAAC;IACjD,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC1D;;;OAGG;IACH,8BAA8B,CAAC,SAAS,CAAC,UAAU,CAAC;IACpD;;;OAGG;IACH,8BAA8B,CAAC,SAAS,CAAC,WAAW,CAAC;IACrD;;;OAGG;IACH,8BAA8B,CAAC,SAAS,CAAC,YAAY,CAAC;IACtD,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,MAAM,CAAC;IAChD,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,MAAM,CAAC;IAChD,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,MAAM,CAAC;IAChD,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,SAAS,CAAC;IACnD,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,WAAW,CAAC;IACrD,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,iBAAiB,CAAC;IAC3D,gBAAgB;IAChB,8BAA8B,CAAC,SAAS,CAAC,WAAW,CAAC;AACrD,CAAC","file":"platform_reflection_capabilities.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * @record\n */\nexport function PlatformReflectionCapabilities() {}\n\n\nfunction PlatformReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.isReflectionEnabled;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.factory;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.hasLifecycleHook;\n/**\n * Return a list of annotations/types for constructor parameters\n * @type {?}\n */\nPlatformReflectionCapabilities.prototype.parameters;\n/**\n * Return a list of annotations declared on the class\n * @type {?}\n */\nPlatformReflectionCapabilities.prototype.annotations;\n/**\n * Return a object literal which describes the annotations on Class fields/properties.\n * @type {?}\n */\nPlatformReflectionCapabilities.prototype.propMetadata;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.getter;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.setter;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.method;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.importUri;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resourceUri;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resolveIdentifier;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resolveEnum;\n}\n\n\nexport interface PlatformReflectionCapabilities {\n  isReflectionEnabled(): boolean;\n  factory(type: Type<any>): Function;\n  hasLifecycleHook(type: any, lcProperty: string): boolean;\n\n  /**\n   * Return a list of annotations/types for constructor parameters\n   */\n  parameters(type: Type<any>): any[][];\n\n  /**\n   * Return a list of annotations declared on the class\n   */\n  annotations(type: Type<any>): any[];\n\n  /**\n   * Return a object literal which describes the annotations on Class fields/properties.\n   */\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]};\n  getter(name: string): GetterFn;\n  setter(name: string): SetterFn;\n  method(name: string): MethodFn;\n  importUri(type: Type<any>): string;\n  resourceUri(type: Type<any>): string;\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any;\n  resolveEnum(enumIdentifier: any, name: string): any;\n}\n"]}