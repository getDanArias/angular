{"version":3,"sources":["../../../../../packages/core/src/change_detection/change_detection_util.ts"],"names":[],"mappings":"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","file":"change_detection_util.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a: any, b: any): boolean {\n  const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n * \n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n * \n * Example:\n * \n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport class WrappedValue {\n/**\n * @param {?} wrapped\n */\nconstructor(public wrapped: any) {}\n/**\n * @param {?} value\n * @return {?}\n */\nstatic wrap(value: any): WrappedValue { return new WrappedValue(value); }\n}\n\nfunction WrappedValue_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedValue.prototype.wrapped;\n}\n\n/**\n * Helper class for unwrapping WrappedValue s\n */\nexport class ValueUnwrapper {\npublic hasWrappedValue = false;\n/**\n * @param {?} value\n * @return {?}\n */\nunwrap(value: any): any {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n/**\n * @return {?}\n */\nreset() { this.hasWrappedValue = false; }\n}\n\nfunction ValueUnwrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nValueUnwrapper.prototype.hasWrappedValue;\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport class SimpleChange {\n/**\n * @param {?} previousValue\n * @param {?} currentValue\n * @param {?} firstChange\n */\nconstructor(public previousValue: any,\npublic currentValue: any,\npublic firstChange: boolean) {}\n/**\n * Check whether the new value is the first value assigned.\n * @return {?}\n */\nisFirstChange(): boolean { return this.firstChange; }\n}\n\nfunction SimpleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleChange.prototype.previousValue;\n/** @type {?} */\nSimpleChange.prototype.currentValue;\n/** @type {?} */\nSimpleChange.prototype.firstChange;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n"]}