{"version":3,"sources":["../../../../packages/core/src/errors.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAYH,MAAM,CALC,MAAA,gBAAA,CAAM,UAAA,GAAa,QAAA,CAAS;AAMnC,MAAM,CALC,MAAA,gBAAA,CAAM,oBAAA,GAAuB,iBAAA,CAAkB;AAMtD,MAAM,CALC,MAAA,gBAAA,CAAM,mBAAA,GAAsB,gBAAA,CAAiB;AAMpD,MAAM,CALC,MAAA,gBAAA,CAAM,oBAAA,GAAuB,iBAAA,CAAkB;AAMtD,MAAM,CALC,MAAA,gBAAA,CAAM,YAAA,GAAe,eAAA,CAAgB;AAM5C;;;GAGG;AACH,MAPC,kBAAuB,KAAO;IAQ7B,MAAM,CAPC,CAAA,CAAA,KAAU,CAAA,CAAI,CAAC,UAAC,CAAU,CAAC;AAQpC,CAAC;AACD;;;GAGG;AACH,MAVC,0BAA+B,KAAO;IAWrC,MAAM,CAVC,CAAA,CAAA,KAAU,CAAA,CAAI,CAAC,mBAAC,CAAmB,CAAC;AAW7C,CAAC;AACD;;;GAGG;AACH,MAbC,2BAAgC,KAAO;IActC,MAAM,CAbC,CAAA,CAAA,KAAU,CAAA,CAAI,CAAC,oBAAC,CAAoB,CAAC;AAc9C,CAAC;AACD;;;GAGG;AACH,MAhBC,yBAA8B,KAAO;IAiBpC,MAAM,CAhBC,CAAA,CAAA,KAAU,CAAA,CAAI,CAAC,YAAC,CAAY,IAAI,kBAAA,CAAmB;AAiB5D,CAAC;AACD;;;;GAIG;AACH,4BAnB4B,OAAS,EAAS,GAAA,MAAe;IAoB3D,CAAkB,CAnBZ,OAAC,CAAO,KAAC,CAAA,CAAK,CAAC,GAAC,MAAG,CAAM,CAAC;AAoBlC,CAAC","file":"errors.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view';\n\nexport const /** @type {?} */ ERROR_TYPE = 'ngType';\nexport const /** @type {?} */ ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport const /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error: Error): Function {\n  return ( /** @type {?} */((error as any)))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error: Error): DebugContext {\n  return ( /** @type {?} */((error as any)))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error: Error): Error {\n  return ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return ( /** @type {?} */((error as any)))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  ( /** @type {?} */((<any>console.error)))(...values);\n}"]}