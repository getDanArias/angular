{"version":3,"file":"core-testing.umd.js","sources":["../../../../packages/core/testing/src/async.ts","../../../../packages/core/testing/src/component_fixture.ts","../../../../packages/core/testing/src/fake_async.ts","../../../../packages/core/testing/src/async_test_completer.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/core/testing/src/test_compiler.ts","../../../../packages/core/testing/src/test_bed.ts","../../../../packages/core/testing/src/before_each.ts","../../../../packages/core/testing/src/private_export_testing.ts","../../../../packages/core/testing/src/testing.ts","../../../../packages/core/testing/public_api.ts","../../../../packages/core/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var global: any;\n\nconst _global = <any>(typeof window === 'undefined' ? global : window);\n\n/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n *\n * @stable\n */\nexport function async(fn: Function): (done: any) => any {\n  // If we're running using the Jasmine test framework, adapt to call the 'done'\n  // function when asynchronous activity is finished.\n  if (_global.jasmine) {\n    // Not using an arrow function to preserve context passed from call site\n    return function(done: any) {\n      if (!done) {\n        // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n        // fake it here and assume sync.\n        done = function() {};\n        done.fail = function(e: any) { throw e; };\n      }\n      runInTestZone(fn, this, done, (err: any) => {\n        if (typeof err === 'string') {\n          return done.fail(new Error(<string>err));\n        } else {\n          done.fail(err);\n        }\n      });\n    };\n  }\n  // Otherwise, return a promise which will resolve when asynchronous activity\n  // is finished. This will be correctly consumed by the Mocha framework with\n  // it('...', async(myFn)); or can be used in a custom framework.\n  // Not using an arrow function to preserve context passed from call site\n  return function() {\n    return new Promise<void>((finishCallback, failCallback) => {\n      runInTestZone(fn, this, finishCallback, failCallback);\n    });\n  };\n}\n\nfunction runInTestZone(\n    fn: Function, context: any, finishCallback: Function, failCallback: Function) {\n  const currentZone = Zone.current;\n  const AsyncTestZoneSpec = (Zone as any)['AsyncTestZoneSpec'];\n  if (AsyncTestZoneSpec === undefined) {\n    throw new Error(\n        'AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n        'Please make sure that your environment includes zone.js/dist/async-test.js');\n  }\n  const ProxyZoneSpec = (Zone as any)['ProxyZoneSpec'] as {\n    get(): {setDelegate(spec: ZoneSpec): void; getDelegate(): ZoneSpec;};\n    assertPresent: () => void;\n  };\n  if (ProxyZoneSpec === undefined) {\n    throw new Error(\n        'ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n        'Please make sure that your environment includes zone.js/dist/proxy.js');\n  }\n  const proxyZoneSpec = ProxyZoneSpec.get();\n  ProxyZoneSpec.assertPresent();\n  // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n  // If we do it in ProxyZone then we will get to infinite recursion.\n  const proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n  const previousDelegate = proxyZoneSpec.getDelegate();\n  proxyZone.parent.run(() => {\n    const testZoneSpec: ZoneSpec = new AsyncTestZoneSpec(\n        () => {\n          // Need to restore the original zone.\n          currentZone.run(() => {\n            if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n              // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n              proxyZoneSpec.setDelegate(previousDelegate);\n            }\n            finishCallback();\n          });\n        },\n        (error: any) => {\n          // Need to restore the original zone.\n          currentZone.run(() => {\n            if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n              // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n              proxyZoneSpec.setDelegate(previousDelegate);\n            }\n            failCallback(error);\n          });\n        },\n        'test');\n    proxyZoneSpec.setDelegate(testZoneSpec);\n  });\n  return Zone.current.runGuarded(fn, context);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, ComponentRef, DebugElement, ElementRef, NgZone, RendererFactory2, getDebugNode} from '@angular/core';\n\n\n/**\n * Fixture for debugging and testing a component.\n *\n * @stable\n */\nexport class ComponentFixture<T> {\n  /**\n   * The DebugElement associated with the root element of this component.\n   */\n  debugElement: DebugElement;\n\n  /**\n   * The instance of the root component class.\n   */\n  componentInstance: T;\n\n  /**\n   * The native element at the root of the component.\n   */\n  nativeElement: any;\n\n  /**\n   * The ElementRef for the element at the root of the component.\n   */\n  elementRef: ElementRef;\n\n  /**\n   * The ChangeDetectorRef for the component\n   */\n  changeDetectorRef: ChangeDetectorRef;\n\n  private _renderer: RendererFactory2|null|undefined;\n  private _isStable: boolean = true;\n  private _isDestroyed: boolean = false;\n  private _resolve: ((result: any) => void)|null = null;\n  private _promise: Promise<any>|null = null;\n  private _onUnstableSubscription: any /** TODO #9100 */ = null;\n  private _onStableSubscription: any /** TODO #9100 */ = null;\n  private _onMicrotaskEmptySubscription: any /** TODO #9100 */ = null;\n  private _onErrorSubscription: any /** TODO #9100 */ = null;\n\n  constructor(\n      public componentRef: ComponentRef<T>, public ngZone: NgZone|null,\n      private _autoDetect: boolean) {\n    this.changeDetectorRef = componentRef.changeDetectorRef;\n    this.elementRef = componentRef.location;\n    this.debugElement = <DebugElement>getDebugNode(this.elementRef.nativeElement);\n    this.componentInstance = componentRef.instance;\n    this.nativeElement = this.elementRef.nativeElement;\n    this.componentRef = componentRef;\n    this.ngZone = ngZone;\n\n    if (ngZone) {\n      this._onUnstableSubscription =\n          ngZone.onUnstable.subscribe({next: () => { this._isStable = false; }});\n      this._onMicrotaskEmptySubscription = ngZone.onMicrotaskEmpty.subscribe({\n        next: () => {\n          if (this._autoDetect) {\n            // Do a change detection run with checkNoChanges set to true to check\n            // there are no changes on the second run.\n            this.detectChanges(true);\n          }\n        }\n      });\n      this._onStableSubscription = ngZone.onStable.subscribe({\n        next: () => {\n          this._isStable = true;\n          // Check whether there is a pending whenStable() completer to resolve.\n          if (this._promise !== null) {\n            // If so check whether there are no pending macrotasks before resolving.\n            // Do this check in the next tick so that ngZone gets a chance to update the state of\n            // pending macrotasks.\n            scheduleMicroTask(() => {\n              if (!ngZone.hasPendingMacrotasks) {\n                if (this._promise !== null) {\n                  this._resolve !(true);\n                  this._resolve = null;\n                  this._promise = null;\n                }\n              }\n            });\n          }\n        }\n      });\n\n      this._onErrorSubscription =\n          ngZone.onError.subscribe({next: (error: any) => { throw error; }});\n    }\n  }\n\n  private _tick(checkNoChanges: boolean) {\n    this.changeDetectorRef.detectChanges();\n    if (checkNoChanges) {\n      this.checkNoChanges();\n    }\n  }\n\n  /**\n   * Trigger a change detection cycle for the component.\n   */\n  detectChanges(checkNoChanges: boolean = true): void {\n    if (this.ngZone != null) {\n      // Run the change detection inside the NgZone so that any async tasks as part of the change\n      // detection are captured by the zone and can be waited for in isStable.\n      this.ngZone.run(() => { this._tick(checkNoChanges); });\n    } else {\n      // Running without zone. Just do the change detection.\n      this._tick(checkNoChanges);\n    }\n  }\n\n  /**\n   * Do a change detection run to make sure there were no changes.\n   */\n  checkNoChanges(): void { this.changeDetectorRef.checkNoChanges(); }\n\n  /**\n   * Set whether the fixture should autodetect changes.\n   *\n   * Also runs detectChanges once so that any existing change is detected.\n   */\n  autoDetectChanges(autoDetect: boolean = true) {\n    if (this.ngZone == null) {\n      throw new Error('Cannot call autoDetectChanges when ComponentFixtureNoNgZone is set');\n    }\n    this._autoDetect = autoDetect;\n    this.detectChanges();\n  }\n\n  /**\n   * Return whether the fixture is currently stable or has async tasks that have not been completed\n   * yet.\n   */\n  isStable(): boolean { return this._isStable && !this.ngZone !.hasPendingMacrotasks; }\n\n  /**\n   * Get a promise that resolves when the fixture is stable.\n   *\n   * This can be used to resume testing after events have triggered asynchronous activity or\n   * asynchronous change detection.\n   */\n  whenStable(): Promise<any> {\n    if (this.isStable()) {\n      return Promise.resolve(false);\n    } else if (this._promise !== null) {\n      return this._promise;\n    } else {\n      this._promise = new Promise(res => { this._resolve = res; });\n      return this._promise;\n    }\n  }\n\n\n  private _getRenderer() {\n    if (this._renderer === undefined) {\n      this._renderer = this.componentRef.injector.get(RendererFactory2, null);\n    }\n    return this._renderer as RendererFactory2 | null;\n  }\n\n  /**\n    * Get a promise that resolves when the ui state is stable following animations.\n    */\n  whenRenderingDone(): Promise<any> {\n    const renderer = this._getRenderer();\n    if (renderer && renderer.whenRenderingDone) {\n      return renderer.whenRenderingDone();\n    }\n    return this.whenStable();\n  }\n\n  /**\n   * Trigger component destruction.\n   */\n  destroy(): void {\n    if (!this._isDestroyed) {\n      this.componentRef.destroy();\n      if (this._onUnstableSubscription != null) {\n        this._onUnstableSubscription.unsubscribe();\n        this._onUnstableSubscription = null;\n      }\n      if (this._onStableSubscription != null) {\n        this._onStableSubscription.unsubscribe();\n        this._onStableSubscription = null;\n      }\n      if (this._onMicrotaskEmptySubscription != null) {\n        this._onMicrotaskEmptySubscription.unsubscribe();\n        this._onMicrotaskEmptySubscription = null;\n      }\n      if (this._onErrorSubscription != null) {\n        this._onErrorSubscription.unsubscribe();\n        this._onErrorSubscription = null;\n      }\n      this._isDestroyed = true;\n    }\n  }\n}\n\nfunction scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst FakeAsyncTestZoneSpec = (Zone as any)['FakeAsyncTestZoneSpec'];\ntype ProxyZoneSpec = {\n  setDelegate(delegateSpec: ZoneSpec): void; getDelegate(): ZoneSpec; resetDelegate(): void;\n};\nconst ProxyZoneSpec: {get(): ProxyZoneSpec; assertPresent: () => ProxyZoneSpec} =\n    (Zone as any)['ProxyZoneSpec'];\n\nlet _fakeAsyncTestZoneSpec: any = null;\n\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * @experimental\n */\nexport function resetFakeAsyncZone() {\n  _fakeAsyncTestZoneSpec = null;\n  ProxyZoneSpec.assertPresent().resetDelegate();\n}\n\nlet _inFakeAsyncCall = false;\n\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * If there are any pending timers at the end of the function, an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * ## Example\n *\n * {@example testing/ts/fake_async.ts region='basic'}\n *\n * @param fn\n * @returns The function wrapped to be executed in the fakeAsync zone\n *\n * @experimental\n */\nexport function fakeAsync(fn: Function): (...args: any[]) => any {\n  // Not using an arrow function to preserve context passed from call site\n  return function(...args: any[]) {\n    const proxyZoneSpec = ProxyZoneSpec.assertPresent();\n    if (_inFakeAsyncCall) {\n      throw new Error('fakeAsync() calls can not be nested');\n    }\n    _inFakeAsyncCall = true;\n    try {\n      if (!_fakeAsyncTestZoneSpec) {\n        if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n          throw new Error('fakeAsync() calls can not be nested');\n        }\n\n        _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n      }\n\n      let res: any;\n      const lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n      proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n      try {\n        res = fn.apply(this, args);\n        flushMicrotasks();\n      } finally {\n        proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n      }\n\n      if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n        throw new Error(\n            `${_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length} ` +\n            `periodic timer(s) still in the queue.`);\n      }\n\n      if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n        throw new Error(\n            `${_fakeAsyncTestZoneSpec.pendingTimers.length} timer(s) still in the queue.`);\n      }\n      return res;\n    } finally {\n      _inFakeAsyncCall = false;\n      resetFakeAsyncZone();\n    }\n  };\n}\n\nfunction _getFakeAsyncZoneSpec(): any {\n  if (_fakeAsyncTestZoneSpec == null) {\n    throw new Error('The code should be running in the fakeAsync zone to call this function');\n  }\n  return _fakeAsyncTestZoneSpec;\n}\n\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer callback\n * has been executed.\n *\n * ## Example\n *\n * {@example testing/ts/fake_async.ts region='basic'}\n *\n * @experimental\n */\nexport function tick(millis: number = 0): void {\n  _getFakeAsyncZoneSpec().tick(millis);\n}\n\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * @param maxTurns\n * @returns The simulated time elapsed, in millis.\n *\n * @experimental\n */\nexport function flush(maxTurns?: number): number {\n  return _getFakeAsyncZoneSpec().flush(maxTurns);\n}\n\n/**\n * Discard all remaining periodic tasks.\n *\n * @experimental\n */\nexport function discardPeriodicTasks(): void {\n  const zoneSpec = _getFakeAsyncZoneSpec();\n  const pendingTimers = zoneSpec.pendingPeriodicTimers;\n  zoneSpec.pendingPeriodicTimers.length = 0;\n}\n\n/**\n * Flush any pending microtasks.\n *\n * @experimental\n */\nexport function flushMicrotasks(): void {\n  _getFakeAsyncZoneSpec().flushMicrotasks();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n */\nexport class AsyncTestCompleter {\n  private _resolve: (result: any) => void;\n  private _reject: (err: any) => void;\n  private _promise: Promise<any> = new Promise((res, rej) => {\n    this._resolve = res;\n    this._reject = rej;\n  });\n  done(value?: any) { this._resolve(value); }\n\n  fail(error?: any, stackTrace?: string) { this._reject(error); }\n\n  get promise(): Promise<any> { return this._promise; }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, CompilerOptions, Component, ComponentFactory, Directive, Injector, NgModule, Pipe, Type} from '@angular/core';\n\nimport {MetadataOverride} from './metadata_override';\n\nfunction unimplemented(): any {\n  throw Error('unimplemented');\n}\n\n/**\n * Special interface to the compiler only used by testing\n *\n * @experimental\n */\nexport class TestingCompiler extends Compiler {\n  get injector(): Injector { throw unimplemented(); }\n  overrideModule(module: Type<any>, overrides: MetadataOverride<NgModule>): void {\n    throw unimplemented();\n  }\n  overrideDirective(directive: Type<any>, overrides: MetadataOverride<Directive>): void {\n    throw unimplemented();\n  }\n  overrideComponent(component: Type<any>, overrides: MetadataOverride<Component>): void {\n    throw unimplemented();\n  }\n  overridePipe(directive: Type<any>, overrides: MetadataOverride<Pipe>): void {\n    throw unimplemented();\n  }\n  /**\n   * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n   * so that it can use the code generated by AOT.\n   */\n  loadAotSummaries(summaries: () => any[]) { throw unimplemented(); };\n\n  /**\n   * Gets the component factory for the given component.\n   * This assumes that the component has been compiled before calling this call using\n   * `compileModuleAndAllComponents*`.\n   */\n  getComponentFactory<T>(component: Type<T>): ComponentFactory<T> { throw unimplemented(); }\n}\n\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nexport abstract class TestingCompilerFactory {\n  abstract createTestingCompiler(options?: CompilerOptions[]): TestingCompiler;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationInitStatus, CompilerOptions, Component, Directive, InjectionToken, Injector, ModuleWithComponentFactories, NgModule, NgModuleFactory, NgModuleRef, NgZone, Optional, Pipe, PlatformRef, Provider, SchemaMetadata, SkipSelf, Type, ɵDepFlags as DepFlags, ɵERROR_COMPONENT_TYPE, ɵNodeFlags as NodeFlags, ɵclearProviderOverrides as clearProviderOverrides, ɵoverrideProvider as overrideProvider, ɵstringify as stringify} from '@angular/core';\n\nimport {AsyncTestCompleter} from './async_test_completer';\nimport {ComponentFixture} from './component_fixture';\nimport {MetadataOverride} from './metadata_override';\nimport {TestingCompiler, TestingCompilerFactory} from './test_compiler';\n\nconst UNDEFINED = new Object();\n\n/**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * @experimental\n */\nexport class TestComponentRenderer {\n  insertRootElement(rootElementId: string) {}\n}\n\nlet _nextRootElementId = 0;\n\n/**\n * @experimental\n */\nexport const ComponentFixtureAutoDetect =\n    new InjectionToken<boolean[]>('ComponentFixtureAutoDetect');\n\n/**\n * @experimental\n */\nexport const ComponentFixtureNoNgZone = new InjectionToken<boolean[]>('ComponentFixtureNoNgZone');\n\n/**\n * @experimental\n */\nexport type TestModuleMetadata = {\n  providers?: any[],\n  declarations?: any[],\n  imports?: any[],\n  schemas?: Array<SchemaMetadata|any[]>,\n};\n\n/**\n * @whatItDoes Configures and initializes environment for unit testing and provides methods for\n * creating components and services in unit tests.\n * @description\n *\n * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n *\n * @stable\n */\nexport class TestBed implements Injector {\n  /**\n   * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n   * angular module. These are common to every test in the suite.\n   *\n   * This may only be called once, to set up the common providers for the current test\n   * suite on the current platform. If you absolutely need to change the providers,\n   * first use `resetTestEnvironment`.\n   *\n   * Test modules and platforms for individual platforms are available from\n   * '@angular/<platform_name>/testing'.\n   *\n   * @experimental\n   */\n  static initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef, aotSummaries?: () => any[]): TestBed {\n    const testBed = getTestBed();\n    testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n    return testBed;\n  }\n\n  /**\n   * Reset the providers for the test injector.\n   *\n   * @experimental\n   */\n  static resetTestEnvironment() { getTestBed().resetTestEnvironment(); }\n\n  static resetTestingModule(): typeof TestBed {\n    getTestBed().resetTestingModule();\n    return TestBed;\n  }\n\n  /**\n   * Allows overriding default compiler providers and settings\n   * which are defined in test_injector.js\n   */\n  static configureCompiler(config: {providers?: any[]; useJit?: boolean;}): typeof TestBed {\n    getTestBed().configureCompiler(config);\n    return TestBed;\n  }\n\n  /**\n   * Allows overriding default providers, directives, pipes, modules of the test injector,\n   * which are defined in test_injector.js\n   */\n  static configureTestingModule(moduleDef: TestModuleMetadata): typeof TestBed {\n    getTestBed().configureTestingModule(moduleDef);\n    return TestBed;\n  }\n\n  /**\n   * Compile components with a `templateUrl` for the test's NgModule.\n   * It is necessary to call this function\n   * as fetching urls is asynchronous.\n   */\n  static compileComponents(): Promise<any> { return getTestBed().compileComponents(); }\n\n  static overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): typeof TestBed {\n    getTestBed().overrideModule(ngModule, override);\n    return TestBed;\n  }\n\n  static overrideComponent(component: Type<any>, override: MetadataOverride<Component>):\n      typeof TestBed {\n    getTestBed().overrideComponent(component, override);\n    return TestBed;\n  }\n\n  static overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>):\n      typeof TestBed {\n    getTestBed().overrideDirective(directive, override);\n    return TestBed;\n  }\n\n  static overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): typeof TestBed {\n    getTestBed().overridePipe(pipe, override);\n    return TestBed;\n  }\n\n  static overrideTemplate(component: Type<any>, template: string): typeof TestBed {\n    getTestBed().overrideComponent(component, {set: {template, templateUrl: null !}});\n    return TestBed;\n  }\n\n\n  /**\n   * Overwrites all providers for the given token with the given provider definition.\n   */\n  static overrideProvider(token: any, provider: {\n    useFactory: Function,\n    deps: any[],\n  }): void;\n  static overrideProvider(token: any, provider: {useValue: any;}): void;\n  static overrideProvider(token: any, provider: {\n    useFactory?: Function,\n    useValue?: any,\n    deps?: any[],\n  }): typeof TestBed {\n    getTestBed().overrideProvider(token, provider as any);\n    return TestBed;\n  }\n\n  static get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND) {\n    return getTestBed().get(token, notFoundValue);\n  }\n\n  static createComponent<T>(component: Type<T>): ComponentFixture<T> {\n    return getTestBed().createComponent(component);\n  }\n\n  private _instantiated: boolean = false;\n\n  private _compiler: TestingCompiler = null !;\n  private _moduleRef: NgModuleRef<any> = null !;\n  private _moduleFactory: NgModuleFactory<any> = null !;\n\n  private _compilerOptions: CompilerOptions[] = [];\n\n  private _moduleOverrides: [Type<any>, MetadataOverride<NgModule>][] = [];\n  private _componentOverrides: [Type<any>, MetadataOverride<Component>][] = [];\n  private _directiveOverrides: [Type<any>, MetadataOverride<Directive>][] = [];\n  private _pipeOverrides: [Type<any>, MetadataOverride<Pipe>][] = [];\n\n  private _providers: Provider[] = [];\n  private _declarations: Array<Type<any>|any[]|any> = [];\n  private _imports: Array<Type<any>|any[]|any> = [];\n  private _schemas: Array<SchemaMetadata|any[]> = [];\n  private _activeFixtures: ComponentFixture<any>[] = [];\n\n  private _aotSummaries: () => any[] = () => [];\n\n  platform: PlatformRef = null !;\n\n  ngModule: Type<any>|Type<any>[] = null !;\n\n  /**\n   * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n   * angular module. These are common to every test in the suite.\n   *\n   * This may only be called once, to set up the common providers for the current test\n   * suite on the current platform. If you absolutely need to change the providers,\n   * first use `resetTestEnvironment`.\n   *\n   * Test modules and platforms for individual platforms are available from\n   * '@angular/<platform_name>/testing'.\n   *\n   * @experimental\n   */\n  initTestEnvironment(\n      ngModule: Type<any>|Type<any>[], platform: PlatformRef, aotSummaries?: () => any[]) {\n    if (this.platform || this.ngModule) {\n      throw new Error('Cannot set base providers because it has already been called');\n    }\n    this.platform = platform;\n    this.ngModule = ngModule;\n    if (aotSummaries) {\n      this._aotSummaries = aotSummaries;\n    }\n  }\n\n  /**\n   * Reset the providers for the test injector.\n   *\n   * @experimental\n   */\n  resetTestEnvironment() {\n    this.resetTestingModule();\n    this.platform = null !;\n    this.ngModule = null !;\n    this._aotSummaries = () => [];\n  }\n\n  resetTestingModule() {\n    clearProviderOverrides();\n    this._compiler = null !;\n    this._moduleOverrides = [];\n    this._componentOverrides = [];\n    this._directiveOverrides = [];\n    this._pipeOverrides = [];\n\n    this._moduleRef = null !;\n    this._moduleFactory = null !;\n    this._compilerOptions = [];\n    this._providers = [];\n    this._declarations = [];\n    this._imports = [];\n    this._schemas = [];\n    this._instantiated = false;\n    this._activeFixtures.forEach((fixture) => {\n      try {\n        fixture.destroy();\n      } catch (e) {\n        console.error('Error during cleanup of component', fixture.componentInstance);\n      }\n    });\n    this._activeFixtures = [];\n  }\n\n  configureCompiler(config: {providers?: any[], useJit?: boolean}) {\n    this._assertNotInstantiated('TestBed.configureCompiler', 'configure the compiler');\n    this._compilerOptions.push(config);\n  }\n\n  configureTestingModule(moduleDef: TestModuleMetadata) {\n    this._assertNotInstantiated('TestBed.configureTestingModule', 'configure the test module');\n    if (moduleDef.providers) {\n      this._providers.push(...moduleDef.providers);\n    }\n    if (moduleDef.declarations) {\n      this._declarations.push(...moduleDef.declarations);\n    }\n    if (moduleDef.imports) {\n      this._imports.push(...moduleDef.imports);\n    }\n    if (moduleDef.schemas) {\n      this._schemas.push(...moduleDef.schemas);\n    }\n  }\n\n  compileComponents(): Promise<any> {\n    if (this._moduleFactory || this._instantiated) {\n      return Promise.resolve(null);\n    }\n\n    const moduleType = this._createCompilerAndModule();\n    return this._compiler.compileModuleAndAllComponentsAsync(moduleType)\n        .then((moduleAndComponentFactories) => {\n          this._moduleFactory = moduleAndComponentFactories.ngModuleFactory;\n        });\n  }\n\n  private _initIfNeeded() {\n    if (this._instantiated) {\n      return;\n    }\n    if (!this._moduleFactory) {\n      try {\n        const moduleType = this._createCompilerAndModule();\n        this._moduleFactory =\n            this._compiler.compileModuleAndAllComponentsSync(moduleType).ngModuleFactory;\n      } catch (e) {\n        if (getComponentType(e)) {\n          throw new Error(\n              `This test module uses the component ${stringify(getComponentType(e))} which is using a \"templateUrl\" or \"styleUrls\", but they were never compiled. ` +\n              `Please call \"TestBed.compileComponents\" before your test.`);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const ngZone = new NgZone({enableLongStackTrace: true});\n    const ngZoneInjector =\n        Injector.create([{provide: NgZone, useValue: ngZone}], this.platform.injector);\n    this._moduleRef = this._moduleFactory.create(ngZoneInjector);\n    // ApplicationInitStatus.runInitializers() is marked @internal to core. So casting to any\n    // before accessing it.\n    (this._moduleRef.injector.get(ApplicationInitStatus) as any).runInitializers();\n    this._instantiated = true;\n  }\n\n  private _createCompilerAndModule(): Type<any> {\n    const providers = this._providers.concat([{provide: TestBed, useValue: this}]);\n    const declarations = this._declarations;\n    const imports = [this.ngModule, this._imports];\n    const schemas = this._schemas;\n\n    \n    class DynamicTestModule {\n    static decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{providers, declarations, imports, schemas}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\n    const compilerFactory: TestingCompilerFactory =\n        this.platform.injector.get(TestingCompilerFactory);\n    this._compiler =\n        compilerFactory.createTestingCompiler(this._compilerOptions.concat([{useDebug: true}]));\n    this._compiler.loadAotSummaries(this._aotSummaries);\n    this._moduleOverrides.forEach((entry) => this._compiler.overrideModule(entry[0], entry[1]));\n    this._componentOverrides.forEach(\n        (entry) => this._compiler.overrideComponent(entry[0], entry[1]));\n    this._directiveOverrides.forEach(\n        (entry) => this._compiler.overrideDirective(entry[0], entry[1]));\n    this._pipeOverrides.forEach((entry) => this._compiler.overridePipe(entry[0], entry[1]));\n    return DynamicTestModule;\n  }\n\n  private _assertNotInstantiated(methodName: string, methodDescription: string) {\n    if (this._instantiated) {\n      throw new Error(\n          `Cannot ${methodDescription} when the test module has already been instantiated. ` +\n          `Make sure you are not using \\`inject\\` before \\`${methodName}\\`.`);\n    }\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND) {\n    this._initIfNeeded();\n    if (token === TestBed) {\n      return this;\n    }\n    // Tests can inject things from the ng module and from the compiler,\n    // but the ng module can't inject things from the compiler and vice versa.\n    const result = this._moduleRef.injector.get(token, UNDEFINED);\n    return result === UNDEFINED ? this._compiler.injector.get(token, notFoundValue) : result;\n  }\n\n  execute(tokens: any[], fn: Function, context?: any): any {\n    this._initIfNeeded();\n    const params = tokens.map(t => this.get(t));\n    return fn.apply(context, params);\n  }\n\n  overrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): void {\n    this._assertNotInstantiated('overrideModule', 'override module metadata');\n    this._moduleOverrides.push([ngModule, override]);\n  }\n\n  overrideComponent(component: Type<any>, override: MetadataOverride<Component>): void {\n    this._assertNotInstantiated('overrideComponent', 'override component metadata');\n    this._componentOverrides.push([component, override]);\n  }\n\n  overrideDirective(directive: Type<any>, override: MetadataOverride<Directive>): void {\n    this._assertNotInstantiated('overrideDirective', 'override directive metadata');\n    this._directiveOverrides.push([directive, override]);\n  }\n\n  overridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): void {\n    this._assertNotInstantiated('overridePipe', 'override pipe metadata');\n    this._pipeOverrides.push([pipe, override]);\n  }\n\n  /**\n   * Overwrites all providers for the given token with the given provider definition.\n   */\n  overrideProvider(token: any, provider: {\n    useFactory: Function,\n    deps: any[],\n  }): void;\n  overrideProvider(token: any, provider: {useValue: any;}): void;\n  overrideProvider(token: any, provider: {\n    useFactory?: Function,\n    useValue?: any,\n    deps?: any[],\n  }): void {\n    let flags: NodeFlags = 0;\n    let value: any;\n    if (provider.useFactory) {\n      flags |= NodeFlags.TypeFactoryProvider;\n      value = provider.useFactory;\n    } else {\n      flags |= NodeFlags.TypeValueProvider;\n      value = provider.useValue;\n    }\n    const deps = (provider.deps || []).map((dep) => {\n      let depFlags: DepFlags = DepFlags.None;\n      let depToken: any;\n      if (Array.isArray(dep)) {\n        dep.forEach((entry: any) => {\n          if (entry instanceof Optional) {\n            depFlags |= DepFlags.Optional;\n          } else if (entry instanceof SkipSelf) {\n            depFlags |= DepFlags.SkipSelf;\n          } else {\n            depToken = entry;\n          }\n        });\n      } else {\n        depToken = dep;\n      }\n      return [depFlags, depToken];\n    });\n    overrideProvider({token, flags, deps, value});\n  }\n\n  createComponent<T>(component: Type<T>): ComponentFixture<T> {\n    this._initIfNeeded();\n    const componentFactory = this._compiler.getComponentFactory(component);\n\n    if (!componentFactory) {\n      throw new Error(\n          `Cannot create the component ${stringify(component)} as it was not imported into the testing module!`);\n    }\n\n    const noNgZone = this.get(ComponentFixtureNoNgZone, false);\n    const autoDetect: boolean = this.get(ComponentFixtureAutoDetect, false);\n    const ngZone: NgZone = noNgZone ? null : this.get(NgZone, null);\n    const testComponentRenderer: TestComponentRenderer = this.get(TestComponentRenderer);\n    const rootElId = `root${_nextRootElementId++}`;\n    testComponentRenderer.insertRootElement(rootElId);\n\n    const initComponent = () => {\n      const componentRef =\n          componentFactory.create(Injector.NULL, [], `#${rootElId}`, this._moduleRef);\n      return new ComponentFixture<T>(componentRef, ngZone, autoDetect);\n    };\n\n    const fixture = !ngZone ? initComponent() : ngZone.run(initComponent);\n    this._activeFixtures.push(fixture);\n    return fixture;\n  }\n}\n\nlet _testBed: TestBed = null !;\n\n/**\n * @experimental\n */\nexport function getTestBed() {\n  return _testBed = _testBed || new TestBed();\n}\n\n/**\n * Allows injecting dependencies in `beforeEach()` and `it()`.\n *\n * Example:\n *\n * ```\n * beforeEach(inject([Dependency, AClass], (dep, object) => {\n *   // some code that uses `dep` and `object`\n *   // ...\n * }));\n *\n * it('...', inject([AClass], (object) => {\n *   object.doSomething();\n *   expect(...);\n * })\n * ```\n *\n * Notes:\n * - inject is currently a function because of some Traceur limitation the syntax should\n * eventually\n *   becomes `it('...', @Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n *\n * @stable\n */\nexport function inject(tokens: any[], fn: Function): () => any {\n  const testBed = getTestBed();\n  if (tokens.indexOf(AsyncTestCompleter) >= 0) {\n    // Not using an arrow function to preserve context passed from call site\n    return function() {\n      // Return an async test method that returns a Promise if AsyncTestCompleter is one of\n      // the injected tokens.\n      return testBed.compileComponents().then(() => {\n        const completer: AsyncTestCompleter = testBed.get(AsyncTestCompleter);\n        testBed.execute(tokens, fn, this);\n        return completer.promise;\n      });\n    };\n  } else {\n    // Not using an arrow function to preserve context passed from call site\n    return function() { return testBed.execute(tokens, fn, this); };\n  }\n}\n\n/**\n * @experimental\n */\nexport class InjectSetupWrapper {\n  constructor(private _moduleDef: () => TestModuleMetadata) {}\n\n  private _addModule() {\n    const moduleDef = this._moduleDef();\n    if (moduleDef) {\n      getTestBed().configureTestingModule(moduleDef);\n    }\n  }\n\n  inject(tokens: any[], fn: Function): () => any {\n    const self = this;\n    // Not using an arrow function to preserve context passed from call site\n    return function() {\n      self._addModule();\n      return inject(tokens, fn).call(this);\n    };\n  }\n}\n\n/**\n * @experimental\n */\nexport function withModule(moduleDef: TestModuleMetadata): InjectSetupWrapper;\nexport function withModule(moduleDef: TestModuleMetadata, fn: Function): () => any;\nexport function withModule(moduleDef: TestModuleMetadata, fn?: Function | null): (() => any)|\n    InjectSetupWrapper {\n  if (fn) {\n    // Not using an arrow function to preserve context passed from call site\n    return function() {\n      const testBed = getTestBed();\n      if (moduleDef) {\n        testBed.configureTestingModule(moduleDef);\n      }\n      return fn.apply(this);\n    };\n  }\n  return new InjectSetupWrapper(() => moduleDef);\n}\n\nfunction getComponentType(error: Error): Function {\n  return (error as any)[ɵERROR_COMPONENT_TYPE];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Public Test Library for unit testing Angular applications. Assumes that you are running\n * with Jasmine, Mocha, or a similar framework which exports a beforeEach function and\n * allows tests to be asynchronous by either returning a promise or using a 'done' parameter.\n */\n\nimport {resetFakeAsyncZone} from './fake_async';\nimport {TestBed} from './test_bed';\n\ndeclare var global: any;\n\nconst _global = <any>(typeof window === 'undefined' ? global : window);\n\n// Reset the test providers and the fake async zone before each test.\nif (_global.beforeEach) {\n  _global.beforeEach(() => {\n    TestBed.resetTestingModule();\n    resetFakeAsyncZone();\n  });\n}\n\n// TODO(juliemr): remove this, only used because we need to export something to have compilation\n// work.\nexport const __core_private_testing_placeholder__ = '';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {TestingCompiler as ɵTestingCompiler, TestingCompilerFactory as ɵTestingCompilerFactory} from './test_compiler';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core/testing package.\n */\n\nexport * from './async';\nexport * from './component_fixture';\nexport * from './fake_async';\nexport * from './test_bed';\nexport * from './before_each';\nexport * from './metadata_override';\nexport * from './private_export_testing';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["getDebugNode","RendererFactory2","tslib_1.__extends","Compiler","InjectionToken","Injector","clearProviderOverrides","stringify","NgZone","ApplicationInitStatus","NgModule","Optional","SkipSelf","overrideProvider","ɵERROR_COMPONENT_TYPE","_global"],"mappings":"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"}