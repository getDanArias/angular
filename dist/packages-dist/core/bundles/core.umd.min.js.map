{"version":3,"sources":["/Users/jasonaden/Projects/angular/dist/packages-dist/core/bundles/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","__extends","d","b","__","constructor","extendStatics","Object","create","TypeDecorator","makeDecorator","name","props","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","call","annotationInstance","cls","annotations","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","toString","annotationCls","args","_i","arguments","length","values","apply","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","_a","bind","concat","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","ContentChildrenDecorator","ContentChildDecorator","ViewChildrenDecorator","ViewChildDecorator","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","DirectiveDecorator","ComponentDecorator","SimpleChanges","OnChanges","OnInit","DoCheck","OnDestroy","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","ModuleWithProviders","SchemaMetadata","InjectDecorator","OptionalDecorator","InjectableDecorator","SelfDecorator","SkipSelfDecorator","HostDecorator","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","res","newLineIndex","indexOf","substring","ForwardRefFn","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","obj","undefined","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","Optional","SkipSelf","Self","Inject","formatError","text","charAt","substr","context","parts","JSON","replace","NEW_LINE","getClosureSafeProperty","objWithPropertyToExtract","GET_PROPERTY_NAME","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","reversed","slice","reverse","tokenStrs","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","first","cyclicDependencyError","instantiationError","originalException","originalStack","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","parentCtor","ResolvedReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","isArray","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","ValueProvider","ExistingProvider","FactoryProvider","TypeProvider","ClassProvider","isPromise","then","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","WtfScopeFn","detectWTF","wtf","trace","events","createScope$1","flags","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","source","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","GetTestability","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","assertPlatform","requiredToken","destroyPlatform","destroy","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","remove","list","el","splice","DirectRenderer","RendererType2","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","reduce","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","Predicate","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","IterableDiffer","IterableChanges","IterableChangeRecord","CollectionChangeRecord","TrackByFn","TrackByFunction","IterableDifferFactory","getTypeNameForDebugging","KeyValueDiffer","KeyValueChanges","KeyValueChangeRecord","KeyValueDifferFactory","PipeTransform","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","ViewDefinition","asTextData","view","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","wrapped","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","state","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","nodeIndex","eventName","event","nodeDef","startView","componentView","handleEvent","root","declaredViewContainer","parentView","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","template","outputIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","bindView","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","depDefs","moduleDef","providersByKey","initNgModule","_def","provDef","NOT_CREATED$1","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","prevView","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","createProviderInstance","NOT_CREATED","_createProviderInstance","createPipeInstance","allowPrivateServices","createClass","createDirectiveInstance","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","cdView","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","binding_1","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","constants","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","valueStr","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","newParent","currentRenderParent","validateNode","isPrivateService","isComponent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentFlags","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","bindingStart","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","RendererFactory2","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","applyProviderOverridesToElement","elIndex","elementIndicesWithOverwrittenProviders","hasOverrrides","applyProviderOverrides","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","AnimationMetadata$$1","AnimationTriggerMetadata$$1","AnimationStateMetadata$$1","AnimationTransitionMetadata$$1","AnimationKeyframesSequenceMetadata$$1","AnimationStyleMetadata$$1","AnimationAnimateMetadata$$1","AnimationSequenceMetadata$$1","AnimationGroupMetadata$$1","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","AnimationTransitionEvent","setPrototypeOf","__proto__","__assign","assign","s","n","OpaqueToken","_desc","_super","desc","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","c","changeDetection","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","ViewMetadata","opts","templateUrl","styleUrls","animations","interpolation","Version","full","split","enumerable","configurable","VERSION","Injectable","Host","__window","window","__self","WorkerGlobalScope","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","NG_TOKEN_PATH","_records","tokenPath","ERROR_COMPONENT_TYPE","deprecatedParameter","_console","_findOriginalError","_findContext","errorLogger","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","Function","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","parentAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","displayName","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","_donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getNgContentSelectors","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","Subject","NgZone","enableLongStackTrace","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findBindings","using","exactMatch","findProviders","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","onDestroy","listener","bootstrapModuleFactory","moduleFactory","_bootstrapModuleFactoryWithZone","ngZoneInjector","moduleRef","exceptionHandler","initStatus","donePromise","_moduleDoBootstrap","bootstrapModule","compilerOptions","_bootstrapModuleWithZone","compilerFactory","compiler","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","ApplicationRef_","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","_stable","tick","isCurrentlyStable","observer","stableSub","unstableSub","_isStable","merge","share","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","componentRef","listeners","_tickScope","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","DashCase","Renderer2","NgModuleFactoryLoader","_dirty","_results","_emitter","filter","find","toArray","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","offlineMode","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","providerTokens","attributes","classes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","results","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","ValueUnwrapper","hasWrappedValue","unwrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","cdRefOrTrackBy","trackByFn","DefaultIterableDiffer","trackByIdentity","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","previous","additions","moves","removals","identityChanges","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","cd","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","begin","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","_ngModuleDefFactory","AUTO_STYLE$$1","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵERROR_COMPONENT_TYPE","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵViewMetadata","ɵReflectionCapabilities","ɵDirectRenderer","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearProviderOverrides","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵViewDefinition","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","AnimationMetadata","AnimationTriggerMetadata","AnimationStateMetadata","AnimationTransitionMetadata","AnimationKeyframesSequenceMetadata","AnimationStyleMetadata","AnimationAnimateMetadata","AnimationSequenceMetadata","AnimationGroupMetadata","trigger","group","sequence","keyframes","transition","ɵz","ɵba","ɵbe","ɵbb","ɵbd","ɵbc","ɵbf","ɵy","ɵm","ɵn","ɵo","ɵg","ɵf","ɵh","ɵi","ɵj","ɵk","ɵl","ɵb","ɵc","ɵd","ɵe","ɵp","ɵr","ɵq","ɵu","ɵs","ɵt","ɵa","ɵv","ɵw"],"mappings":"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","file":"/Users/jasonaden/Projects/angular/dist/packages-dist/core/bundles/core.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.3-14502f5b34\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n *\n * ```typescript\n * var t = new OpaqueToken(\"value\");\n *\n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n *\n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n *\n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n *\n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nvar OpaqueToken = (function () {\n    /**\n     * @param {?} _desc\n     */\n    function OpaqueToken(_desc) {\n        this._desc = _desc;\n    }\n    /**\n     * @return {?}\n     */\n    OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n    return OpaqueToken;\n}());\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function (_super) {\n    __extends(InjectionToken, _super);\n    /**\n     * @param {?} desc\n     */\n    function InjectionToken(desc) {\n        return _super.call(this, desc) || this;\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}(OpaqueToken));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\nfunction TypeDecorator() { }\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                ((cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.toString = function () { return \"@\" + name; };\n    ((DecoratorFactory)).annotationCls = DecoratorFactory;\n    return (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = ((ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        ((ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                ((cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.toString = function () { return \"@\" + name; };\n    ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = ((PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                ((constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.toString = function () { return \"@\" + name; };\n    ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\nfunction ContentChildrenDecorator() { }\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\nfunction ContentChildDecorator() { }\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\nfunction ViewChildrenDecorator() { }\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\nfunction ViewChildDecorator() { }\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ChangeDetectionStrategy = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar ChangeDetectorStatus = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction DirectiveDecorator() { }\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction ComponentDecorator() { }\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A `changes` object whose keys are property names and\n * values are instances of {\\@link SimpleChange}. See {\\@link OnChanges}\n * \\@stable\n * @record\n */\nfunction SimpleChanges() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n *\n * \\@description\n * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n * and content children are checked if at least one of them has changed.\n * The `changes` parameter contains the changed properties.\n *\n * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction OnChanges() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n * initialized.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n *\n * \\@description\n * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n * first time, and before any of its children have been checked. It is invoked only once when the\n * directive is instantiated.\n *\n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction OnInit() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n *\n * \\@description\n * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n * algorithm. The default change detection algorithm looks for differences by comparing\n * bound-property values by reference across change detection runs.\n *\n * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n * detector detects changes.\n *\n * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n * for collections.\n *\n * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction DoCheck() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n *\n * \\@description\n * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n * instance is destroyed.\n *\n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction OnDestroy() { }\n/**\n *\n * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n * initialized.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterContentInit() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterContentChecked() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n * initialized.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterViewInit() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterViewChecked() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\nfunction SchemaMetadata() { }\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ViewEncapsulation = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/**\n * Metadata properties available for configuring Views.\n *\n * For details on the `\\@Component` annotation, see {\\@link Component}.\n *\n * ### Example\n *\n * ```\n * \\@Component({\n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n *\n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n *\n * @deprecated Use Component instead.\n *\n * {\\@link Component}\n */\nvar ViewMetadata = (function () {\n    /**\n     * @param {?=} opts\n     */\n    function ViewMetadata(opts) {\n        if (opts === void 0) { opts = {}; }\n        this.templateUrl = opts.templateUrl;\n        this.template = opts.template;\n        this.styleUrls = opts.styleUrls;\n        this.styles = opts.styles;\n        this.encapsulation = opts.encapsulation;\n        this.animations = opts.animations;\n        this.interpolation = opts.interpolation;\n    }\n    return ViewMetadata;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = (function () {\n    /**\n     * @param {?} full\n     */\n    function Version(full) {\n        this.full = full;\n    }\n    Object.defineProperty(Version.prototype, \"major\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.')[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"minor\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.')[1]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"patch\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.').slice(2).join('.'); },\n        enumerable: true,\n        configurable: true\n    });\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-beta.3-14502f5b34');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction InjectDecorator() { }\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction OptionalDecorator() { }\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction InjectableDecorator() { }\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction SelfDecorator() { }\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction SkipSelfDecorator() { }\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction HostDecorator() { }\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    ((Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\nfunction ForwardRefFn() { }\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    ((forwardRefFn)).__forward_ref__ = forwardRef;\n    ((forwardRefFn)).toString = function () { return stringify(this()); };\n    return (((forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return ((type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    return Injector;\n}());\nInjector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nInjector.NULL = new _NullInjector();\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = ({});\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    /**\n     * @param {?} providers\n     * @param {?=} parent\n     */\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = function () {\n        var /** @type {?} */ tokens = ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = ((provider)).useValue;\n    }\n    else if (((provider)).useFactory) {\n        fn = ((provider)).useFactory;\n    }\n    else if (((provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if (((provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef(((provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = ((fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = ((provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = ((annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (((provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef(((provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return ((error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return ((error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return ((error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    /**\n     * @param {?=} deprecatedParameter\n     */\n    function ErrorHandler(\n        /**\n         * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n         * rethrow.\n         */\n        deprecatedParameter) {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     * @param {?} token\n     * @param {?} id\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n    }\n    Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n        /**\n         * Returns a stringified token.\n         * @return {?}\n         */\n        get: function () { return stringify(this.token); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @return {?} the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    /**\n     * @param {?=} reflect\n     */\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n            return ((type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && ((type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(((type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return ((typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).propMetadata &&\n            ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).propDecorators &&\n            ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = ((typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return ((typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = function (name) { return (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return (new Function('o', 'args', functionBody));\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    /**\n     * @param {?} reflectionCapabilities\n     */\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    /**\n     * @param {?} key\n     * @param {?} optional\n     * @param {?} visibility\n     */\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\nfunction ResolvedReflectiveProvider() { }\nvar ResolvedReflectiveProvider_ = (function () {\n    /**\n     * @param {?} key\n     * @param {?} resolvedFactories\n     * @param {?} multiProvider\n     */\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    /**\n     * @param {?} factory\n     * @param {?} dependencies\n     */\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     * @param {?} _providers\n     * @param {?=} _parent\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this._parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        inj._parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this._parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_._parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    return ReflectiveInjector_;\n}());\nReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value for a token.\n * \\@howToUse\n * ```\n * const provider: ValueProvider = {provide: 'someToken', useValue: 'someValue'};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ValueProvider'}\n *\n * \\@stable\n * @record\n */\nfunction ValueProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `useClass` for a token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService, deps: []};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='StaticClassProvider'}\n *\n * Note that following two providers are not equal:\n * {\\@example core/di/ts/provider_spec.ts region='StaticClassProviderDifference'}\n *\n * \\@stable\n * @record\n */\n\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of a token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: MyClass, deps: []};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n *\n * \\@stable\n * @record\n */\n\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value of another `useExisting` token.\n * \\@howToUse\n * ```\n * const provider: ExistingProvider = {provide: 'someToken', useExisting: 'someOtherToken'};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ExistingProvider'}\n *\n * \\@stable\n * @record\n */\nfunction ExistingProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value by invoking a `useFactory`\n * function.\n * \\@howToUse\n * ```\n * function serviceFactory() { ... }\n *\n * const provider: FactoryProvider = {provide: 'someToken', useFactory: serviceFactory, deps: []};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='FactoryProvider'}\n *\n * Dependencies can also be marked as optional:\n * {\\@example core/di/ts/provider_spec.ts region='FactoryProviderOptionalDeps'}\n *\n * \\@stable\n * @record\n */\nfunction FactoryProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `Type` when `Type' is used\n * as token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: TypeProvider = MyService;\n * ```\n *\n * \\@description\n *\n * Create an instance by invoking the `new` operator and supplying additional arguments.\n * This form is a short form of `TypeProvider`;\n *\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='TypeProvider'}\n *\n * \\@stable\n * @record\n */\nfunction TypeProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `useClass` for a token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ClassProvider'}\n *\n * Note that following two providers are not equal:\n * {\\@example core/di/ts/provider_spec.ts region='ClassProviderDifference'}\n *\n * \\@stable\n * @record\n */\nfunction ClassProvider() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    /**\n     * @param {?} appInits\n     */\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this._done = false;\n        this._donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            _this._done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._done; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._donePromise; },\n        enumerable: true,\n        configurable: true\n    });\n    return ApplicationInitStatus;\n}());\nApplicationInitStatus.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nApplicationInitStatus.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    return Console;\n}());\nConsole.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nConsole.ctorParameters = function () { return []; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = (function () {\n    /**\n     * @param {?} ngModuleFactory\n     * @param {?} componentFactories\n     */\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n     * the template of the given component.\n     * This is used by the `upgrade` library to compile the appropriate transclude content\n     * in the AngularJS wrapper component.\n     *\n     * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n     * @param {?} component\n     * @return {?}\n     */\n    Compiler.prototype.getNgContentSelectors = function (component) { throw _throwError(); };\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    return Compiler;\n}());\nCompiler.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nCompiler.ctorParameters = function () { return []; };\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    ((error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    return ComponentFactoryResolver;\n}());\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nvar CodegenComponentFactoryResolver = (function () {\n    /**\n     * @param {?} factories\n     * @param {?} _parent\n     * @param {?} _ngModule\n     */\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    /**\n     * @param {?} factory\n     * @param {?} ngModule\n     */\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\nfunction WtfScopeFn() { }\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = ((_global) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope$1(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope$1 : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    /**\n     * @param {?} __0\n     */\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueue in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (((Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork(((Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && ((Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(((Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return ((((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return ((((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return ((((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\n\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    /**\n     * @param {?} _ngZone\n     */\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    Testability.prototype.whenStable = function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * @deprecated use findProviders\n     * @param {?} using\n     * @param {?} provider\n     * @param {?} exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findBindings = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    /**\n     * @param {?} using\n     * @param {?} provider\n     * @param {?} exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    return Testability;\n}());\nTestability.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTestability.ctorParameters = function () { return [\n    { type: NgZone, },\n]; };\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?} testability\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * @param {?} elem\n     * @param {?=} findInAncestors\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    return TestabilityRegistry;\n}());\nTestabilityRegistry.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTestabilityRegistry.ctorParameters = function () { return []; };\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\nfunction GetTestability() { }\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = (function () {\n    /**\n     * @param {?} name\n     * @param {?} token\n     */\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n * @abstract\n */\nvar PlatformRef = (function () {\n    function PlatformRef() {\n    }\n    return PlatformRef;\n}());\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar PlatformRef_ = (function (_super) {\n    __extends(PlatformRef_, _super);\n    /**\n     * @param {?} _injector\n     */\n    function PlatformRef_(_injector) {\n        var _this = _super.call(this) || this;\n        _this._injector = _injector;\n        _this._modules = [];\n        _this._destroyListeners = [];\n        _this._destroyed = false;\n        return _this;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    PlatformRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n        return this._bootstrapModuleFactoryWithZone(moduleFactory);\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        if (!ngZone)\n            ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { /** @type {?} */ return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n        var /** @type {?} */ appRef = (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    return PlatformRef_;\n}(PlatformRef));\nPlatformRef_.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nPlatformRef_.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n * @abstract\n */\nvar ApplicationRef = (function () {\n    function ApplicationRef() {\n    }\n    return ApplicationRef;\n}());\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar ApplicationRef_ = (function (_super) {\n    __extends(ApplicationRef_, _super);\n    /**\n     * @param {?} _zone\n     * @param {?} _console\n     * @param {?} _injector\n     * @param {?} _exceptionHandler\n     * @param {?} _componentFactoryResolver\n     * @param {?} _initStatus\n     */\n    function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = _super.call(this) || this;\n        _this._zone = _zone;\n        _this._console = _console;\n        _this._injector = _injector;\n        _this._exceptionHandler = _exceptionHandler;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._initStatus = _initStatus;\n        _this._bootstrapListeners = [];\n        _this._rootComponents = [];\n        _this._rootComponentTypes = [];\n        _this._views = [];\n        _this._runningTick = false;\n        _this._enforceNoNewChanges = false;\n        _this._stable = true;\n        _this._enforceNoNewChanges = isDevMode();\n        _this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            var /** @type {?} */ stableSub = _this._zone.onStable.subscribe(function () {\n                NgZone.assertNotInAngularZone();\n                // Check whether there are no pending macro/micro tasks in the next tick\n                // to allow for NgZone to update the state.\n                scheduleMicroTask(function () {\n                    if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                        !_this._zone.hasPendingMicrotasks) {\n                        _this._stable = true;\n                        observer.next(true);\n                    }\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        _this._isStable = rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n        return _this;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.attachView = function (viewRef) {\n        var /** @type {?} */ view = ((viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.detachView = function (viewRef) {\n        var /** @type {?} */ view = ((viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef_.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory = ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this._rootComponentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this._rootComponents.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this._rootComponents, componentRef);\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef_._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._rootComponentTypes; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._rootComponents; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"isStable\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._isStable; },\n        enumerable: true,\n        configurable: true\n    });\n    return ApplicationRef_;\n}(ApplicationRef));\n/**\n * \\@internal\n */\nApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\nApplicationRef_.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nApplicationRef_.ctorParameters = function () { return [\n    { type: NgZone, },\n    { type: Console, },\n    { type: Injector, },\n    { type: ErrorHandler, },\n    { type: ComponentFactoryResolver, },\n    { type: ApplicationInitStatus, },\n]; };\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = (function () {\n    /**\n     * @param {?} id\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     */\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nfunction DirectRenderer() { }\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\nfunction RendererType2() { }\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\nvar RendererStyleFlags2 = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ElementRef = (function () {\n    /**\n     * @param {?} nativeElement\n     */\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this._dirty = true;\n        this._results = [];\n        this._emitter = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"changes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._emitter; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = function () { return ((this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten(res);\n        this._dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = function () { this._dirty = true; };\n    Object.defineProperty(QueryList.prototype, \"dirty\", {\n        /**\n         * internal\n         * @return {?}\n         */\n        get: function () { return this._dirty; },\n        enumerable: true,\n        configurable: true\n    });\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = (function () {\n    /**\n     * @param {?} _compiler\n     * @param {?=} config\n     */\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    return SystemJsNgModuleLoader;\n}());\nSystemJsNgModuleLoader.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSystemJsNgModuleLoader.ctorParameters = function () { return [\n    { type: Compiler, },\n    { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    /**\n     * @param {?} name\n     * @param {?} callback\n     */\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    \n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"source\", {\n        /**\n         * @deprecated since v4\n         * @return {?}\n         */\n        get: function () { return 'Deprecated since v4'; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\nfunction Predicate() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    /**\n     * @param {?} wrapped\n     */\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    /**\n     * @param {?} previousValue\n     * @param {?} currentValue\n     * @param {?} firstChange\n     */\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n     * @template V\n     * @param {?=} cdRefOrTrackBy\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = function (cdRefOrTrackBy, trackByFn) {\n        return new DefaultIterableDiffer(trackByFn || (cdRefOrTrackBy));\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    /**\n     * @param {?=} trackByFn\n     */\n    function DefaultIterableDiffer(trackByFn) {\n        this._length = 0;\n        this._collection = null;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._collection; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && ((nextIt.currentIndex)) <\n                    getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            this._length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this._length = index;\n        }\n        this._truncate(record);\n        this._collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.toString = function () {\n        var /** @type {?} */ list = [];\n        this.forEachItem(function (record) { return list.push(record); });\n        var /** @type {?} */ previous = [];\n        this.forEachPreviousItem(function (record) { return previous.push(record); });\n        var /** @type {?} */ additions = [];\n        this.forEachAddedItem(function (record) { return additions.push(record); });\n        var /** @type {?} */ moves = [];\n        this.forEachMovedItem(function (record) { return moves.push(record); });\n        var /** @type {?} */ removals = [];\n        this.forEachRemovedItem(function (record) { return removals.push(record); });\n        var /** @type {?} */ identityChanges = [];\n        this.forEachIdentityChange(function (record) { return identityChanges.push(record); });\n        return 'collection: ' + list.join(', ') + '\\n' +\n            'previous: ' + previous.join(', ') + '\\n' +\n            'additions: ' + additions.join(', ') + '\\n' +\n            'moves: ' + moves.join(', ') + '\\n' +\n            'removals: ' + removals.join(', ') + '\\n' +\n            'identityChanges: ' + identityChanges.join(', ') + '\\n';\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    /**\n     * @param {?} item\n     * @param {?} trackById\n     */\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    /**\n     * @return {?}\n     */\n    IterableChangeRecord_.prototype.toString = function () {\n        return this.previousIndex === this.currentIndex ? stringify(this.item) :\n            stringify(this.item) + '[' +\n                stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n    };\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n     * @template K, V\n     * @param {?=} cd\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = function (cd) {\n        return new DefaultKeyValueDiffer();\n    };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    /**\n     * @param {?} key\n     */\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\nfunction IterableDiffer() { }\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\nfunction IterableChanges() { }\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\nfunction IterableChangeRecord() { }\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\nfunction CollectionChangeRecord() { }\n/**\n * Nolonger used.\n *\n * @deprecated v4.0.0 - Use TrackByFunction instead\n * @record\n */\nfunction TrackByFn() { }\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\nfunction TrackByFunction() { }\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\nfunction IterableDifferFactory() { }\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    /**\n     * @param {?} factories\n     */\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueDiffer() { }\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueChanges() { }\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueChangeRecord() { }\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueDifferFactory() { }\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    /**\n     * @param {?} factories\n     */\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * To create a Pipe, you must implement this interface.\n *\n * Angular invokes the `transform` method with the value of a binding\n * as the first argument, and any parameters as the second argument in list form.\n *\n * ## Syntax\n *\n * `value | pipeName[:arg0[:arg1...]]`\n *\n * ### Example ([live demo](http://plnkr.co/edit/f5oyIked9M2cKzvZNKHV?p=preview))\n *\n * The `RepeatPipe` below repeats the value as many times as indicated by the first argument:\n *\n * ```\n * import {Pipe, PipeTransform} from '\\@angular/core';\n *\n * \\@Pipe({name: 'repeat'})\n * export class RepeatPipe implements PipeTransform {\n *   transform(value: any, times: number) {\n *     return value.repeat(times);\n *   }\n * }\n * ```\n *\n * Invoking `{{ 'ok' | repeat:3 }}` in a template produces `okokok`.\n *\n * \\@stable\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ function PipeTransform() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef_, deps: [Injector] },\n    { provide: PlatformRef, useExisting: PlatformRef_ },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\nvar MissingTranslationStrategy = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    /**\n     * @param {?} appRef\n     */\n    function ApplicationModule(appRef) {\n    }\n    return ApplicationModule;\n}());\nApplicationModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    ApplicationRef_,\n                    { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                    ApplicationInitStatus,\n                    Compiler,\n                    APP_ID_RANDOM_PROVIDER,\n                    { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                    {\n                        provide: LOCALE_ID,\n                        useFactory: _localeFactory,\n                        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                    },\n                ]\n            },] },\n];\n/** @nocollapse */\nApplicationModule.ctorParameters = function () { return [\n    { type: ApplicationRef, },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SecurityContext = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n\n/**\n * @record\n */\nfunction ViewDefinition() { }\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    ((err))[ERROR_DEBUG_CONTEXT] = context;\n    ((err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.index), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).index);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.index).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.index).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (((renderParent.element)).componentRendererType && ((((renderParent.element)).componentRendererType)).encapsulation ===\n                ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).index).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = ((hostElDef)).index + 1;\n    var /** @type {?} */ endIndex = ((hostElDef)).index + ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = ((asElementData(view, nodeDef.index).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = ((null));\n    var /** @type {?} */ name = ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = ((undefined));\n        var /** @type {?} */ suffix = ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.index, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.index);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOT_CREATED$1 = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        providers[i] = provDef.flags & 4096 /* LazyProvider */ ? NOT_CREATED$1 :\n            _createProviderInstance$1(data, provDef);\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === NOT_CREATED$1) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== NOT_CREATED$1) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = ((viewIndex)) > 0 ? embeddedViews[((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return ((componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    /**\n     * @param {?} selector\n     * @param {?} componentType\n     * @param {?} viewDefFactory\n     * @param {?} _inputs\n     * @param {?} _outputs\n     * @param {?} ngContentSelectors\n     */\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = ((((viewDef.nodes[0].element)).componentProvider)).index;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    /**\n     * @param {?} _view\n     * @param {?} _viewRef\n     * @param {?} _component\n     */\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._component; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    /**\n     * @param {?} _view\n     * @param {?} _elDef\n     * @param {?} _data\n     */\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(((viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    /**\n     * @param {?} _view\n     */\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs.end) {\n            fs.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    /**\n     * @param {?} _parentView\n     * @param {?} _def\n     */\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    /**\n     * @param {?} view\n     * @param {?} elDef\n     */\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.index);\n        return ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.index).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.index).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        ((renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    /**\n     * @param {?} _moduleType\n     * @param {?} _parent\n     * @param {?} _bootstrapComponents\n     * @param {?} _def\n     */\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return def.flags & 4096 /* LazyProvider */ ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).index, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    var /** @type {?} */ injectable;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = ((providerDef)).value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.index).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.index).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (((elDef.element)).template) {\n                        return asElementData(view, elDef.index).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = (((allowPrivateServices ? ((elDef.element)).allProviders : ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.index);\n                        if (providerData.instance === NOT_CREATED) {\n                            providerData.instance = _createProviderInstance(view, providerDef_1);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = ((viewParentEl(view)));\n        view = ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.index).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).index).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.index + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ provider = asProviderData(view, index).instance;\n    if (provider === NOT_CREATED) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.index + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (((nodeDef.query)).filterId & queryIds) === ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.index) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = ((((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.index, elementDef.index + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).index).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && ((nodeDef.element)).template &&\n            (((((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            // check embedded views that were attached at the place of their template.\n            var /** @type {?} */ elementData = asElementData(view, i);\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        var /** @type {?} */ value = void 0;\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                value = asElementData(view, nodeDef.index).renderElement;\n                break;\n            case 0 /* ElementRef */:\n                value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n                break;\n            case 2 /* TemplateRef */:\n                value = asElementData(view, nodeDef.index).template;\n                break;\n            case 3 /* ViewContainerRef */:\n                value = asElementData(view, nodeDef.index).viewContainer;\n                break;\n            case 4 /* Provider */:\n                value = asProviderData(view, nodeDef.index).instance;\n                break;\n        }\n        return value;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, new Array(argCount));\n}\n/**\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nfunction textDef(ngContentIndex, constants) {\n    var /** @type {?} */ bindings = new Array(constants.length - 1);\n    for (var /** @type {?} */ i = 1; i < constants.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: constants[i]\n        };\n    }\n    var /** @type {?} */ flags = 2;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: constants[0] },\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        while (currentParent && i > currentParent.index + currentParent.childCount) {\n            var /** @type {?} */ newParent = currentParent.parent;\n            if (newParent) {\n                newParent.childFlags |= ((currentParent.childFlags));\n                newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n            }\n            currentParent = newParent;\n        }\n        var /** @type {?} */ node = nodes[i];\n        node.index = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        // renderParent needs to account for ng-container!\n        var /** @type {?} */ currentRenderParent = void 0;\n        if (currentParent && currentParent.flags & 1 /* TypeElement */ &&\n            !((currentParent.element)).name) {\n            currentRenderParent = currentParent.renderParent;\n        }\n        else {\n            currentRenderParent = currentParent;\n        }\n        node.renderParent = currentRenderParent;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element && node.element.template) {\n            viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((((\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent)).element)).publicProviders =\n                    Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders); /** @type {?} */\n                ((((currentParent)).element)).allProviders = ((((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                ((((((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((((\n                    // Use protoyypical inheritance to not get O(n^2) complexity...\n                    currentParent)).element)).allProviders =\n                        Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((((((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                ((((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (node.childCount) {\n            currentParent = node;\n        }\n    }\n    while (currentParent) {\n        var /** @type {?} */ newParent = currentParent.parent;\n        if (newParent) {\n            newParent.childFlags |= currentParent.childFlags;\n            newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { /** @type {?} */ return ((((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP,\n        handleEvent: handleEvent || NOOP,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.index + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n        if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.index + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((((hostDef)).parent)).index).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).index).componentView;\n                    initView(compView, instance, instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 16384 /* TypeDirective */:\n            changed =\n                checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            changed =\n                checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n            break;\n        case 2 /* TypeText */:\n            changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n            break;\n        case 16384 /* TypeDirective */:\n            changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            break;\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            break;\n    }\n    if (changed) {\n        // Update oldValues after all bindings have been updated,\n        // as a setter for a property might update other properties.\n        var /** @type {?} */ bindLen = nodeDef.bindings.length;\n        var /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n        var /** @type {?} */ oldValues = view.oldValues;\n        for (var /** @type {?} */ i = 0; i < bindLen; i++) {\n            oldValues[bindingStart + i] = values[i];\n        }\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.index), \"Query \" + (((nodeDef.query))).id + \" not dirty\", \"Query \" + (((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n    }\n}\nvar ViewAction = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.index);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).index);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                // Make all providers lazy, so that we don't get into trouble\n                // with ordering problems of providers on the same element\n                nodeDef.flags |= 4096 /* LazyProvider */;\n                var /** @type {?} */ provider = ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function hasOverrrides(def) {\n        return def.providers.some(function (node) {\n            return !!(node.flags & 3840 /* CatProviderNoDirective */) && providerOverrides.has(node.token);\n        });\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            // Make all providers lazy, so that we don't get into trouble\n            // with ordering problems of providers on the same element\n            provider.flags |= 4096 /* LazyProvider */;\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = ((checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n            if (!((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    ((checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     */\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = ((viewParentEl(elView)));\n                elView = ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.index).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.index;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.index;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).index);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nfunction clearProviderOverrides() {\n    initServicesIfNeeded();\n    return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    /**\n     * @param {?} moduleType\n     * @param {?} _bootstrapComponents\n     * @param {?} _ngModuleDefFactory\n     */\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ \n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Child Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element.\n *\n * When true, the `\\@.disabled` binding will prevent inner animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable inner animations (any animations running on the same\n * element will not be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE$$1 = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationTriggerMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationStateMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationTransitionMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationKeyframesSequenceMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationStyleMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationAnimateMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationSequenceMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationGroupMetadata$$1() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from \\@angular/animations.\n * @record\n */\nfunction AnimationTransitionEvent() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.TypeDecorator = TypeDecorator;\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Predicate = Predicate;\nexports.GetTestability = GetTestability;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.WtfScopeFn = WtfScopeFn;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildDecorator = ContentChildDecorator;\nexports.ContentChildren = ContentChildren;\nexports.ContentChildrenDecorator = ContentChildrenDecorator;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildDecorator = ViewChildDecorator;\nexports.ViewChildren = ViewChildren;\nexports.ViewChildrenDecorator = ViewChildrenDecorator;\nexports.Component = Component;\nexports.ComponentDecorator = ComponentDecorator;\nexports.Directive = Directive;\nexports.DirectiveDecorator = DirectiveDecorator;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.AfterContentChecked = AfterContentChecked;\nexports.AfterContentInit = AfterContentInit;\nexports.AfterViewChecked = AfterViewChecked;\nexports.AfterViewInit = AfterViewInit;\nexports.DoCheck = DoCheck;\nexports.OnChanges = OnChanges;\nexports.OnDestroy = OnDestroy;\nexports.OnInit = OnInit;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.ModuleWithProviders = ModuleWithProviders;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.SchemaMetadata = SchemaMetadata;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.ForwardRefFn = ForwardRefFn;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ValueProvider = ValueProvider;\nexports.ExistingProvider = ExistingProvider;\nexports.FactoryProvider = FactoryProvider;\nexports.TypeProvider = TypeProvider;\nexports.ClassProvider = ClassProvider;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ResolvedReflectiveProvider = ResolvedReflectiveProvider;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.OpaqueToken = OpaqueToken;\nexports.InjectDecorator = InjectDecorator;\nexports.Inject = Inject;\nexports.OptionalDecorator = OptionalDecorator;\nexports.Optional = Optional;\nexports.InjectableDecorator = InjectableDecorator;\nexports.Injectable = Injectable;\nexports.SelfDecorator = SelfDecorator;\nexports.Self = Self;\nexports.SkipSelfDecorator = SkipSelfDecorator;\nexports.SkipSelf = SkipSelf;\nexports.HostDecorator = HostDecorator;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RendererType2 = RendererType2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.CollectionChangeRecord = CollectionChangeRecord;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableChangeRecord = IterableChangeRecord;\nexports.IterableChanges = IterableChanges;\nexports.IterableDiffer = IterableDiffer;\nexports.IterableDifferFactory = IterableDifferFactory;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueChangeRecord = KeyValueChangeRecord;\nexports.KeyValueChanges = KeyValueChanges;\nexports.KeyValueDiffer = KeyValueDiffer;\nexports.KeyValueDifferFactory = KeyValueDifferFactory;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.PipeTransform = PipeTransform;\nexports.SimpleChange = SimpleChange;\nexports.SimpleChanges = SimpleChanges;\nexports.TrackByFn = TrackByFn;\nexports.TrackByFunction = TrackByFunction;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵValueUnwrapper = ValueUnwrapper;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵViewMetadata = ViewMetadata;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵDirectRenderer = DirectRenderer;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearProviderOverrides = clearProviderOverrides;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵViewDefinition = ViewDefinition;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE$$1;\nexports.AnimationMetadata = AnimationMetadata$$1;\nexports.AnimationTriggerMetadata = AnimationTriggerMetadata$$1;\nexports.AnimationStateMetadata = AnimationStateMetadata$$1;\nexports.AnimationTransitionMetadata = AnimationTransitionMetadata$$1;\nexports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata$$1;\nexports.AnimationStyleMetadata = AnimationStyleMetadata$$1;\nexports.AnimationAnimateMetadata = AnimationAnimateMetadata$$1;\nexports.AnimationSequenceMetadata = AnimationSequenceMetadata$$1;\nexports.AnimationGroupMetadata = AnimationGroupMetadata$$1;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.AnimationTransitionEvent = AnimationTransitionEvent;\nexports.ɵz = animate$1;\nexports.ɵba = group$1;\nexports.ɵbe = keyframes$1;\nexports.ɵbb = sequence$1;\nexports.ɵbd = state$1;\nexports.ɵbc = style$1;\nexports.ɵbf = transition$1;\nexports.ɵy = trigger$1;\nexports.ɵm = _iterableDiffersFactory;\nexports.ɵn = _keyValueDiffersFactory;\nexports.ɵo = _localeFactory;\nexports.ɵg = ApplicationRef_;\nexports.ɵf = PlatformRef_;\nexports.ɵh = _appIdRandomProviderFactory;\nexports.ɵi = defaultIterableDiffers;\nexports.ɵj = defaultKeyValueDiffers;\nexports.ɵk = DefaultIterableDifferFactory;\nexports.ɵl = DefaultKeyValueDifferFactory;\nexports.ɵb = StaticInjector;\nexports.ɵc = ReflectiveInjector_;\nexports.ɵd = ReflectiveDependency;\nexports.ɵe = resolveReflectiveProviders;\nexports.ɵp = wtfEnabled;\nexports.ɵr = createScope$1;\nexports.ɵq = detectWTF;\nexports.ɵu = endTimeRange;\nexports.ɵs = leave;\nexports.ɵt = startTimeRange;\nexports.ɵa = makeParamDecorator;\nexports.ɵv = _def;\nexports.ɵw = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}