{"version":3,"sources":["../../../../../../packages/core/src/reflection/reflector.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAcH,OALO,EAAA,8BAAE,EAA8B,MAAA,oCAAA,CAAA;AAOvC;;;GAGG;AACH;IACA;;OAEG;IACH,mBAPqB,sBAAwB;QAAxB,2BAAA,GAAA,sBAAA,CAAwB;IAAgC,CAAA;IAQ7E;;;OAGG;IACH,sCAVG,GAUH,UAVqB,IAAM,IAAkC,IAAA,CAAK,sBAAC,GAAwB,IAAA,CAAK,CAAC,CAAA;IAWjG;;;OAGG;IACH,2BAbG,GAaH,UAbU,IAAe,IAAc,MAAA,CAAO,IAAA,CAAK,sBAAC,CAAsB,OAAC,CAAO,IAAC,CAAI,CAAC,CAAC,CAAA;IAczF;;;OAGG;IACH,8BAhBG,GAgBH,UAhBa,UAAqB;QAiB9B,MAAM,CAhBC,IAAA,CAAK,sBAAC,CAAsB,UAAC,CAAU,UAAC,CAAU,CAAC;IAiB5D,CAAC;IACH;;;OAGG;IACH,+BAnBG,GAmBH,UAnBc,UAAqB;QAoB/B,MAAM,CAnBC,IAAA,CAAK,sBAAC,CAAsB,WAAC,CAAW,UAAC,CAAU,CAAC;IAoB7D,CAAC;IACH;;;OAGG;IACH,gCAtBG,GAsBH,UAtBe,UAAqB;QAuBhC,MAAM,CAtBC,IAAA,CAAK,sBAAC,CAAsB,YAAC,CAAY,UAAC,CAAU,CAAC;IAuB9D,CAAC;IACH;;;;OAIG;IACH,oCA1BG,GA0BH,UA1BmB,IAAM,EAAK,UAAY;QA2BtC,MAAM,CA1BC,IAAA,CAAK,sBAAC,CAAsB,gBAAC,CAAgB,IAAC,EAAK,UAAA,CAAW,CAAC;IA2BxE,CAAC;IACH;;;OAGG;IACH,0BA7BG,GA6BH,UA7BS,IAAM,IAAoB,MAAA,CAAO,IAAA,CAAK,sBAAC,CAAsB,MAAC,CAAM,IAAC,CAAI,CAAC,CAAC,CAAA;IA8BpF;;;OAGG;IACH,0BAhCG,GAgCH,UAhCS,IAAM,IAAoB,MAAA,CAAO,IAAA,CAAK,sBAAC,CAAsB,MAAC,CAAM,IAAC,CAAI,CAAC,CAAC,CAAA;IAiCpF;;;OAGG;IACH,0BAnCG,GAmCH,UAnCS,IAAM,IAAoB,MAAA,CAAO,IAAA,CAAK,sBAAC,CAAsB,MAAC,CAAM,IAAC,CAAI,CAAC,CAAC,CAAA;IAoCpF;;;OAGG;IACH,6BAtCG,GAsCH,UAtCY,IAAM,IAAe,MAAA,CAAO,IAAA,CAAK,sBAAC,CAAsB,SAAC,CAAS,IAAC,CAAI,CAAC,CAAC,CAAA;IAuCrF;;;OAGG;IACH,+BAzCG,GAyCH,UAzCc,IAAM,IAAe,MAAA,CAAO,IAAA,CAAK,sBAAC,CAAsB,WAAC,CAAW,IAAC,CAAI,CAAC,CAAC,CAAA;IA0CzF;;;;;;OAMG;IACH,qCA/CG,GA+CH,UA/CoB,IAAM,EAAQ,SAAW,EAAQ,OAAgB,EAAG,OAAS;QAgD7E,MAAM,CA/CC,IAAA,CAAK,sBAAC,CAAsB,iBAAC,CAAiB,IAAC,EAAK,SAAA,EAAW,OAAA,EAAS,OAAA,CAAQ,CAAC;IAgD1F,CAAC;IACH;;;;OAIG;IACH,+BAnDG,GAmDH,UAnDc,UAAY,EAAK,IAAM;QAoDjC,MAAM,CAnDC,IAAA,CAAK,sBAAC,CAAsB,WAAC,CAAW,UAAC,EAAW,IAAA,CAAK,CAAC;IAoDnE,CAAC;IACH,gBAnDC;AAmDD,CAvFA,AAoCC,IAAA;;AAqDD;IACA,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,sBAAsB,CAAC;AAC3C,CAAC","file":"reflector.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n/**\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction Reflector_tsickle_Closure_declarations() {\n/** @type {?} */\nReflector.prototype.reflectionCapabilities;\n}\n\n"]}