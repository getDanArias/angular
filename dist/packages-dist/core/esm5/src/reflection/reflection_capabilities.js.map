{"version":3,"sources":["../../../../../../packages/core/src/reflection/reflection_capabilities.ts"],"names":[],"mappings":"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","file":"reflection_capabilities.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @template T\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && ( /** @type {?} */((type as any)))[PARAMETERS];\n    const /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return ( /** @type {?} */((typeOrFunc as any)))[ANNOTATIONS];\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return ( /** @type {?} */((typeOrFunc as any)))[PROP_METADATA];\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return `./${stringify(type)}`; }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n"]}