{"version":3,"sources":["../../../../../../packages/core/src/linker/system_js_ng_module_factory_loader.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAGH,OALO,EAAA,UAAE,EAAW,QAAA,EAAS,MAAA,OAAA,CAAA;AAO7B,OALO,EAAA,QAAE,EAAQ,MAAA,YAAA,CAAA;AASjB,IAAM,gBAAgB,CALhB,UAAA,GAAa,GAAA,CAAI;AAOvB,IAAM,gBAAgB,CALhB,oBAAA,GAAuB,WAAA,CAAY;AAOzC;;;;;;GAMG;AACH;IAAA;IASA,CAJC;IAID,mCAJC;AAID,CATA,AAKC,IAAA;;AAMD;IACA;;;OAGG;IACH,4BAAc,CAAA,SAAA,CAAA,iBAAA,CAAA;IACd;;;OAGG;IACH,4BAA0B,CAAG,SAAA,CAAA,iBAAgB,CAAA;AAC7C,CAAC;AAGD,IAAM,gBAAgB,CAlBhB,cAAA,GAA+C;IAmBnD,iBAAS,EAlBU,EAAA;IAmBnB,iBAAE,EAlBiB,YAAA;CAmBpB,CAlBC;AAmBF;;;GAGG;AACH;IAEA;;;OAGG;IACH,gCAnBsB,SAAW,EAAU,MAAqB;QAA1C,cAAA,GAAA,SAAA,CAAW;QAoB7B,IAAI,CAnBC,OAAC,GAAS,MAAA,IAAU,cAAA,CAAe;IAoB1C,CAAC;IACH;;;OAGG;IACH,qCAtBG,GAsBH,UAtBO,IAAM;QAuBT,IAAE,gBAAA,CAtBI,WAAA,GAAc,IAAA,CAAK,SAAC,YAAoB,QAAA,CAAS;QAuBvD,MAAM,CAtBC,WAAA,GAAc,IAAA,CAAK,WAAC,CAAW,IAAC,CAAI,GAAG,IAAA,CAAK,cAAC,CAAc,IAAC,CAAI,CAAC;IAuB1E,CAAC;IACH;;;OAGG;IAxBO,+CAAA,GA0BV,UA1ByB,IAAM;QA0B/B,iBAUG;QAnCK,IAAA,2BAA6C,EAA7C,cAAE,EAAO,kBAAA,CAAqC;QA2BlD,EAAE,CAAC,CAAC,UA1BC,KAAc,SAAA,CAAU,CAAC,CAAA;YA2B5B,UAAU,GA1BG,SAAA,CAAU;QA2BzB,CAAC;QANH,MAAA,CAlBS,MAAA,CAAO,MAAC,CAAM,MAAC,CAAM;aA2BvB,IA1BC,CAAI,UAAC,MAAQ,IAAQ,OAAA,MAAA,CAAO,UAAC,CAAU,EAAlB,CAAkB,CAAC;aAmBzC,IAlBC,CAAI,UAAC,IAAM,IAAQ,OAAA,aAAA,CAAc,IAAC,EAAK,MAAA,EAAQ,UAAA,CAAW,EAAvC,CAAuC,CAAC;aAmB7D,IAlBE,CAAI,UAAC,IAAM,IAAQ,OAAA,KAAA,CAAK,SAAC,CAAS,kBAAC,CAAkB,IAAC,CAAI,EAAvC,CAAuC,CAAC,CAAC;IA2BpE,CAAC;IACH;;;OAGG;IA5BO,4CAAA,GA8BV,UA9BsB,IAAM;QACpB,IAAA,2BAA6C,EAA7C,cAAE,EAAO,kBAAA,CAAqC;QA+BlD,IAAI,gBAAgB,CA9BhB,kBAAA,GAAqB,oBAAA,CAAqB;QA+B9C,EAAE,CAAC,CAAC,UA9BC,KAAc,SAAA,CAAU,CAAC,CAAA;YA+B5B,UAAU,GA9BG,SAAA,CAAU;YA+BvB,kBAAkB,GA9BG,EAAA,CAAG;QA+B1B,CAAC;QAED,MAAM,CA9BC,MAAA,CAAO,MAAC,CAAM,IAAC,CAAI,OAAC,CAAO,iBAAC,GAAmB,MAAA,GAAS,IAAA,CAAK,OAAC,CAAO,iBAAC,CAAiB;aA+BzF,IA9BC,CAAI,UAAC,MAAQ,IAAQ,OAAA,MAAA,CAAO,UAAC,GAAY,kBAAA,CAAmB,EAAvC,CAAuC,CAAC;aA+B9D,IA9BC,CAAI,UAAC,OAAS,IAAQ,OAAA,aAAA,CAAc,OAAC,EAAQ,MAAA,EAAQ,UAAA,CAAW,EAA1C,CAA0C,CAAC,CAAC;IA+B1E,CAAC;IASH,6BAtCC;AAsCD,CA1DA,AAoBC;;AAAM,iCAAA,GAA+C;IA+BtD,EA9BE,IAAA,EAAM,UAAA,EAtCN;CAqED,CA9BC;AA+BF,kBAAkB;AA7BX,qCAAA,GAA4F,cAAM,OAAA;IA+BzG,EAAC,IA9BC,EAAK,QAAA,GAAS;IA+BhB,EAAC,IA9BC,EAAK,4BAAA,EAhEgB,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAyBsB,EAAA,EAAA;CAsE5C,EAjCwG,CAiCxG,CA9BC;AAiCF;IACA,gBAAgB;IAChB,sBAAsB,CAAC,UAAU,CAAC;IAClC;;;OAGG;IACH,sBAAsB,CAAC,cAAc,CAAC;IACtC,gBAAgB;IAChB,sBAAsB,CAAC,SAAS,CAAC,OAAO,CAAC;IACzC,gBAAgB;IAChB,sBAAsB,CAAC,SAAS,CAAC,SAAS,CAAC;AAC3C,CAAC;AAED;;;;;GAKG;AACH,uBA1DuB,KAAO,EAAK,UAAY,EAAQ,UAAY;IA2DjE,EAAE,CAAC,CAAC,CA1DC,KAAC,CAAK,CAAC,CAAA;QA2DV,MA1DM,IAAI,KAAA,CAAM,kBAAC,UAAgB,cAAU,UAAS,MAAU,CAAG,CAAC;IA2DpE,CAAC;IACD,MAAM,CA1DC,KAAA,CAAM;AA2Df,CAAC","file":"system_js_ng_module_factory_loader.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathPrefix: string;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\n\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\n\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n"]}