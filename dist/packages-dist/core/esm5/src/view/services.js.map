{"version":3,"sources":["../../../../../../packages/core/src/view/services.ts"],"names":[],"mappings":"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","file":"services.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../security';\nimport {Type} from '../type';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, DepDef, ElementData, NgModuleDefinition, NgModuleProviderDef, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.clearProviderOverrides = services.clearProviderOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    clearProviderOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    clearProviderOverrides: debugClearProviderOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */ root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null,\n      [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst /** @type {?} */ providerOverrides = new Map<any, ProviderOverride>();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n  providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  for (let /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const /** @type {?} */ elIndicesWithOverwrittenProviders: number[] = [];\n    let /** @type {?} */ lastElementDef: NodeDef|null = null;\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has( /** @type {?} */((nodeDef.provider)).token)) {\n        elIndicesWithOverwrittenProviders.push( /** @type {?} */((lastElementDef)).index);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n/**\n * @param {?} viewDef\n * @param {?} elIndex\n * @return {?}\n */\nfunction applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let /** @type {?} */ i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        // Make all providers lazy, so that we don't get into trouble\n        // with ordering problems of providers on the same element\n        nodeDef.flags |= NodeFlags.LazyProvider;\n        const /** @type {?} */ provider = /** @type {?} */(( nodeDef.provider));\n        const /** @type {?} */ override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction hasOverrrides(def: NgModuleDefinition): boolean {\n    return def.providers.some(\n        node =>\n            !!(node.flags & NodeFlags.CatProviderNoDirective) && providerOverrides.has(node.token));\n  }\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverrides(def: NgModuleDefinition) {\n    for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n      const /** @type {?} */ provider = def.providers[i];\n      // Make all providers lazy, so that we don't get into trouble\n      // with ordering problems of providers on the same element\n      provider.flags |= NodeFlags.LazyProvider;\n      const /** @type {?} */ override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number|null;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const /** @type {?} */ changed = ( /** @type {?} */((<any>checkAndUpdateNode)))(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName( /** @type {?} */((binding.nonMinifiedName)))] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = /** @type {?} */(( nodeDef.parent));\n      const /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n      if (! /** @type {?} */((elDef.element)).name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          const /** @type {?} */ value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  ( /** @type {?} */((<any>checkNoChangesNode)))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let /** @type {?} */ elDef = this.nodeDef;\n    let /** @type {?} */ elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = /** @type {?} */(( elDef.parent));\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = /** @type {?} */(( viewParentEl(elView)));\n        elView = /** @type {?} */(( elView.parent));\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n/**\n * @return {?}\n */\n\nprivate get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.index).componentView || this.view;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any { return this.elOrCompView.component; }\n/**\n * @return {?}\n */\nget context(): any { return this.elOrCompView.context; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push( /** @type {?} */((childDef.provider)).token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {\n    let /** @type {?} */ logViewDef: ViewDefinition;\n    let /** @type {?} */ logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.index;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.index;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let /** @type {?} */ currRenderNodeIndex = -1;\n    let /** @type {?} */ nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    }; /** @type {?} */((\n    logViewDef.factory))(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      ( /** @type {?} */((<any>console.error)))(...values);\n    }\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let /** @type {?} */ renderNodeIndex = -1;\n  for (let /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n    const /** @type {?} */ nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = /** @type {?} */(( view.parent));\n  }\n  if (view.parent) {\n    return asElementData(view.parent, /** @type {?} */(( viewParentEl(view))).index);\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, /** @type {?} */(( getCurrentDebugContext())));\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 implements RendererFactory2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactory2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n/**\n * @return {?}\n */\nbegin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n/**\n * @return {?}\n */\nend() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n/**\n * @return {?}\n */\nwhenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactory2.prototype.delegate;\n}\n\nclass DebugRenderer2 implements Renderer2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex( /** @type {?} */((getDebugNode(node))));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = /** @type {?} */(( getDebugNode(refChild)));\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer2.prototype.delegate;\n}\n\n"]}