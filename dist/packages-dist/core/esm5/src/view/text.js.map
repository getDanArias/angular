{"version":3,"sources":["../../../../../../packages/core/src/view/text.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAmE,UAAA,EAAW,MAAA,SAAA,CAAA;AAMrF,OALO,EAAA,gBAAE,EAAiB,qBAAA,EAAuB,sBAAA,EAAuB,MAAA,QAAA,CAAA;AAMxE;;;;GAIG;AACH,MATC,kBAAuB,cAAgB,EAAQ,SAAkB;IAUhE,IAAM,gBAAgB,CAThB,QAAA,GAAyB,IAAI,KAAA,CAAM,SAAC,CAAS,MAAC,GAAQ,CAAA,CAAE,CAAC;IAU/D,GAAG,CAAC,CAAC,IATC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,SAAA,CAAU,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QAUzC,QAAQ,CATC,CAAC,GAAG,CAAA,CAAE,GAAG;YAUhB,KAAK,sBATgB;YAUrB,IAAI,EATE,IAAA;YAUN,EAAE,EATE,IAAA;YAUJ,eAAe,EATE,IAAA;YAUjB,eAAe,EATE,IAAA;YAUjB,MAAM,EATE,SAAA,CAAU,CAAC,CAAC;SAUrB,CATC;IAUJ,CAAC;IACD,IAAM,gBAAgB,CAThB,KAAA,mBAAmB,CAAQ;IAUjC,MAAM,CATC;QAUL,sCAAsC;QACtC,KAAK,EATE,CAAA,CAAE;QAUT,MAAM,EATE,IAAA;QAUR,YAAY,EATE,IAAA;QAUd,YAAY,EATE,CAAA,CAAE;QAUhB,WAAW,EATE,CAAA,CAAE;QAUf,iBAAiB;QACjB,KAAK,OAAA;QACL,UAAU,EATE,CAAA;QAUZ,gBAAgB,EATE,CAAA;QAUlB,mBAAmB,EATE,CAAA;QAUrB,cAAc,EATE,EAAA;QAUhB,eAAe,EATE,CAAA;QAUjB,UAAU,EATE,EAAA,EAAI,cAAA,gBAAA;QAUhB,UAAU,EATE,CAAA,EAAG,QAAA,UAAA;QAUf,YAAY,EATE,gBAAA,CAAiB,QAAC,CAAQ;QAUxC,OAAO,EATE,EAAA;QAUT,OAAO,EATE,IAAA;QAUT,QAAQ,EATE,IAAA;QAUV,IAAI,EATE,EAAA,MAAE,EAAO,SAAA,CAAU,CAAC,CAAC,EAAC;QAU5B,KAAK,EATE,IAAA;QAUP,SAAS,EATE,IAAA;KAUZ,CATC;AAUJ,CAAC;AACD;;;;;GAKG;AACH,MAdC,qBAA0B,IAAM,EAAU,UAAY,EAAK,GAAK;IAe/D,IAAI,gBAAgB,CAdhB,UAAY,CAAI;IAepB,IAAM,gBAAgB,CAdhB,QAAA,GAAW,IAAA,CAAK,QAAC,CAAQ;IAe/B,UAAU,GAdG,QAAA,CAAS,UAAC,CAAU,gBAAA,CAAA,CAAA,CAAA,GAAC,CAAG,IAAC,CAAA,CAAA,CAAM,MAAC,CAAM,CAAC;IAepD,IAAM,gBAAgB,CAdhB,QAAA,GAAW,sBAAA,CAAuB,IAAC,EAAK,UAAA,EAAY,GAAA,CAAI,CAAC;IAe/D,EAAE,CAAC,CAAC,QAdC,CAAQ,CAAC,CAAA;QAeZ,QAAQ,CAdC,WAAC,CAAW,QAAC,EAAS,UAAA,CAAW,CAAC;IAe7C,CAAC;IACD,MAAM,CAdC,EAAA,UAAE,EAAW,UAAA,EAAW,CAAC;AAelC,CAAC;AACD;;;;;;;;;;;;;;GAcG;AACH,MA5BC,mCA6BG,IA5BM,EAAU,GAAK,EAAS,EAAI,EAAK,EAAI,EAAK,EAAI,EAAK,EAAI,EAAK,EAAI,EAAK,EAAI,EAAK,EAAI,EA6BxF,EA5BI,EAAK,EAAI,EAAK,EAAI;IA6BxB,IAAI,gBAAgB,CA5BhB,OAAA,GAAU,KAAA,CAAM;IA6BpB,IAAM,gBAAgB,CA5BhB,QAAA,GAAW,GAAA,CAAI,QAAC,CAAQ;IA6B9B,IAAM,gBAAgB,CA5BhB,OAAA,GAAU,QAAA,CAAS,MAAC,CAAM;IA6BhC,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA6B3E,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,IAAK,qBAAA,CAAsB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,EAAA,CAAG,CAAC;QAAC,OAAA,GAAU,IAAA,CAAK;IA8B3E,EAAE,CAAC,CAAC,OA5BC,CAAO,CAAC,CAAA;QA6BX,IAAI,gBAAgB,CA5BhB,KAAA,GAAM,CAAA,CAAE,GAAA,CAAI,IAAC,CAAA,CAAA,CAAM,MAAC,CAAM;QA6B9B,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,EAAE,CAAC,CAAC,OA5BC,GAAS,CAAA,CAAE;YAAC,KAAA,IAAS,qBAAA,CAAsB,EAAC,EAAG,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QA6BjE,IAAM,gBAAgB,CA5BhB,UAAA,GAAa,UAAA,CAAW,IAAC,EAAK,GAAA,CAAI,KAAC,CAAK,CAAC,UAAC,CAAU;QA6B1D,IAAI,CA5BC,QAAC,CAAQ,QAAC,CAAQ,UAAC,EAAW,KAAA,CAAM,CAAC;IA6B5C,CAAC;IACD,MAAM,CA5BC,OAAA,CAAQ;AA6BjB,CAAC;AACD;;;;;GAKG;AACH,MAjCC,oCAAyC,IAAM,EAAU,GAAK,EAAS,MAAY;IAkClF,IAAM,gBAAgB,CAjChB,QAAA,GAAW,GAAA,CAAI,QAAC,CAAQ;IAkC9B,IAAI,gBAAgB,CAjChB,OAAA,GAAU,KAAA,CAAM;IAkCpB,GAAG,CAAC,CAAC,IAjCC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;QAkCtC,iDAAiD;QACjD,sCAAsC;QACtC,EAAE,CAAC,CAAC,qBAjCC,CAAqB,IAAC,EAAK,GAAA,EAAK,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAkClD,OAAO,GAjCG,IAAA,CAAK;QAkCjB,CAAC;IACH,CAAC;IACD,EAAE,CAAC,CAAC,OAjCC,CAAO,CAAC,CAAA;QAkCX,IAAI,gBAAgB,CAjChB,KAAA,GAAQ,EAAA,CAAG;QAkCf,GAAG,CAAC,CAAC,IAjCC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,CAAO,MAAC,EAAO,CAAA,EAAE,EAAG,CAAA;YAkCtC,KAAK,GAjCG,KAAA,GAAQ,qBAAA,CAAsB,MAAC,CAAM,CAAC,CAAC,EAAE,QAAA,CAAS,CAAC,CAAC,CAAC,CAAC;QAkChE,CAAC;QACD,KAAK,GAjCC,CAAA,CAAE,GAAA,CAAI,IAAC,CAAA,CAAA,CAAM,MAAC,GAAQ,KAAA,CAAM;QAkClC,IAAM,gBAAgB,CAjChB,UAAA,GAAa,UAAA,CAAW,IAAC,EAAK,GAAA,CAAI,KAAC,CAAK,CAAC,UAAC,CAAU;QAkC1D,IAAI,CAjCC,QAAC,CAAQ,QAAC,CAAQ,UAAC,EAAW,KAAA,CAAM,CAAC;IAkC5C,CAAC;IACD,MAAM,CAjCC,OAAA,CAAQ;AAkCjB,CAAC;AACD;;;;GAIG;AACH,+BArC+B,KAAO,EAAK,OAAS;IAsClD,IAAM,gBAAgB,CArChB,QAAA,GAAW,KAAA,IAAS,IAAA,GAAO,KAAA,CAAM,QAAC,EAAQ,GAAI,EAAA,CAAG;IAsCvD,MAAM,CArCC,QAAA,GAAW,OAAA,CAAQ,MAAC,CAAM;AAsCnC,CAAC","file":"text.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding, getParentRenderElement} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nexport function textDef(ngContentIndex: number, constants: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(constants.length - 1);\n  for (let /** @type {?} */ i = 1; i < constants.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: constants[i]\n    };\n  }\n  const /** @type {?} */ flags = NodeFlags.TypeText;\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: constants[0]},\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let /** @type {?} */ renderNode: any;\n  const /** @type {?} */ renderer = view.renderer;\n  renderNode = renderer.createText( /** @type {?} */((def.text)).prefix);\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindings = def.bindings;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let /** @type {?} */ value = /** @type {?} */(( def.text)).prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */ value = '';\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = /** @type {?} */(( def.text)).prefix + value;\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n"]}