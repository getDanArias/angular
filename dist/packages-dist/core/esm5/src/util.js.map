{"version":3,"sources":["../../../../../packages/core/src/util.ts"],"names":[],"mappings":"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","file":"util.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst /** @type {?} */ __window = typeof window !== 'undefined' && window;\nconst /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst /** @type {?} */ __global = typeof global !== 'undefined' && global;\nconst /** @type {?} */ _global: {[name: string]: any} = __window || __global || __self;\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const /** @type {?} */ Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n"]}