{"version":3,"sources":["../../../../../packages/core/src/application_init.ts"],"names":[],"mappings":"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","file":"application_init.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nexport const /** @type {?} */ APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate resolve: Function;\nprivate reject: Function;\nprivate initialized = false;\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(\nprivate appInits: (() => any)[]) {\n    this._donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\nrunInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const /** @type {?} */ asyncInitPromises: Promise<any>[] = [];\n\n    const /** @type {?} */ complete = () => {\n      this._done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n        const /** @type {?} */ initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype.resolve;\n/** @type {?} */\nApplicationInitStatus.prototype.reject;\n/** @type {?} */\nApplicationInitStatus.prototype.initialized;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n/** @type {?} */\nApplicationInitStatus.prototype.appInits;\n}\n\n"]}