{"version":3,"sources":["../../../../../../packages/forms/src/directives/ng_control.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH;;;;;;GAMG;AAGH,OALO,EAAA,wBAAE,EAAwB,MAAA,8BAAA,CAAA;AASjC;;GAEG;AACH;IACE,MAPM,IAAI,KAAA,CAAM,eAAC,CAAe,CAAC;AAQnC,CAAC;AACD;;;;;;;;GAQG;AACH;IAPwC,qCAAA;IAOxC;QAAA,qEAOC;QAND;;WAEG;QACH,aATG,GAAgC,IAAA,CAAK;QAUtC,UAAI,GATgB,IAAA,CAAK;QAUzB,mBAAa,GAT8B,IAAA,CAAK;QAUlD;;WAEG;QACH,oBAXG,GAA8C,EAAA,CAAG;QAYpD;;WAEG;QACH,yBAbG,GAA6D,EAAA,CAAG;;IAwBnE,CAlBC;IAWD,sBAfM,gCAAA;QAYN;;WAEG;aACH,cAfsC,MAAA,CAAA,CAAoB,aAAC,EAAa,CAAA,CAAE,CAAC,CAAA;;;OAAA;IAmB3E,sBAlBM,qCAAA;QAeN;;WAEG;aACH,cAlBgD,MAAA,CAAA,CAAyB,aAAC,EAAa,CAAA,CAAE,CAAC,CAAA;;;OAAA;IAqB1F,gBAlBC;AAkBD,CAzBA,AAOC,CAduC,wBAAA,GAcvC;;AAoBD;IACA;;;OAGG;IACH,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;IAC5B,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC;IACzB,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC;IAClC;;;OAGG;IACH,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC;IACnC;;;OAGG;IACH,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAExC;;;;OAIG;IACH,SAAS,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAS,QAAQ,IAAG,CAAC,CAAC;AAC9D,CAAC","file":"ng_control.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @return {?}\n */\nfunction unimplemented(): any {\n  throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n * \n * Used internally by Angular forms.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgControl extends AbstractControlDirective {\n/**\n * \\@internal\n */\n_parent: ControlContainer|null = null;\n  name: string|null = null;\n  valueAccessor: ControlValueAccessor|null = null;\n/**\n * \\@internal\n */\n_rawValidators: Array<Validator|ValidatorFn> = [];\n/**\n * \\@internal\n */\n_rawAsyncValidators: Array<AsyncValidator|AsyncValidatorFn> = [];\n/**\n * @return {?}\n */\nget validator(): ValidatorFn|null { return /** @type {?} */(( <ValidatorFn>unimplemented())); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn|null { return /** @type {?} */(( <AsyncValidatorFn>unimplemented())); }\n\n  abstract viewToModelUpdate(newValue: any): void;\n}\n\nfunction NgControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._parent;\n/** @type {?} */\nNgControl.prototype.name;\n/** @type {?} */\nNgControl.prototype.valueAccessor;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawValidators;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawAsyncValidators;\n\n/**\n * @abstract\n * @param {?} newValue\n * @return {?}\n */\nNgControl.prototype.viewToModelUpdate = function(newValue) {};\n}\n\n"]}