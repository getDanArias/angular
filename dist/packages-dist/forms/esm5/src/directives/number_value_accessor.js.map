{"version":3,"sources":["../../../../../../packages/forms/src/directives/number_value_accessor.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,SAAE,EAAU,UAAA,EAAY,SAAA,EAAW,UAAA,EAAW,MAAA,eAAA,CAAA;AAOrD,OALO,EAAuB,iBAAA,EAAkB,MAAA,0BAAA,CAAA;AAOhD,MAAM,CALC,IAAA,gBAAA,CAAM,qBAAA,GAA6B;IAMxC,OAAO,EALE,iBAAA;IAMT,WAAW,EALE,UAAA,CAAW,cAAM,OAAA,mBAAA,EAAA,CAAA,CAAoB;IAMlD,KAAK,EALE,IAAA;CAMR,CALC;AAMF;;;;;;;;GAQG;AACH;IAGA;;;OAGG;IACH,6BAGsB,SAAW,EAAmB,WAAa;QAA3C,cAAA,GAAA,SAAA,CAAW;QAAmB,gBAAA,GAAA,WAAA,CAAa;QAT/D,aAAQ,GAMG,UAAA,CAAI,IAAQ,CAAA,CAAG;QAL1B,cAAS,GAMG,cAAM,CAAA,CAAG;IAEsD,CAAA;IAD7E;;;OAGG;IACH,wCAVG,GAUH,UADa,KAAO;QAEhB,oFAS4C;QAR5C,IASM,gBAAU,CAVV,eAAA,GAAkB,KAAA,IAAS,IAAA,GAAO,EAAA,GAAK,KAAA,CAAM;QAWnD,IAAA,CAVK,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,OAAA,EAAS,eAAA,CAAgB,CAAC;IAEvF,CAAC;IACH;;;OAGG;IACH,8CAbG,GAaH,UAJmB,EAAwB;QAKvC,IAAI,CAJC,QAAC,GAAU,UAAA,KAAE,IAAW,EAAA,CAAG,KAAC,IAAQ,EAAA,GAAK,IAAA,GAAO,UAAA,CAAW,KAAC,CAAK,CAAC,CAAC,CAAC,CAAA,CAAE;IAK7E,CAAC;IACH;;;OAGG;IACH,+CAjBG,GAiBH,UARoB,EAAU,IAAc,IAAA,CAAK,SAAC,GAAW,EAAA,CAAG,CAAC,CAAA;IASjE;;;OAGG;IACH,8CApBG,GAoBH,UAXmB,UAAY;QAY3B,IAAI,CAXC,SAAC,CAAS,WAAC,CAAW,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,UAAA,EAAY,UAAA,CAAW,CAAC;IAYrF,CAAC;IAkBH,0BA5BC;AA4BD,CAtDA,AA0BC;;AATM,8BAAA,GAA+C;IAqBtD,EApBE,IAAA,EAAM,SAAA,EAtBN,IAAA,EAAA,CAAA;gBA2CA,QAAQ,EACJ,iGAAiG;gBACrG,IAAI,EA1CE;oBA2CJ,UAAU,EA1CE,+BAAA;oBA2CZ,SAAS,EA1CE,+BAAA;oBA2CX,QAAQ,EA1CE,aAAA;iBA2CX;gBACD,SAAS,EA1CE,CAAA,qBAAE,CAAqB;aA2CnC,EApBC,EAAG;CAqBJ,CApBC;AAqBF,kBAAkB;AAnBX,kCAAA,GAA4F,cAAM,OAAA;IAqBzG,EAAC,IApBC,EAAK,SAAA,GAAU;IAqBjB,EAAC,IApBC,EAAK,UAAA,GAAW;CAqBjB,EAvBwG,CAuBxG,CApBC;AAuBF;IACA,gBAAgB;IAChB,mBAAmB,CAAC,UAAU,CAAC;IAC/B;;;OAGG;IACH,mBAAmB,CAAC,cAAc,CAAC;IACnC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACvC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;IACxC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;IACxC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC;AAC1C,CAAC","file":"number_value_accessor.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Renderer2, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ NUMBER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nexport class NumberValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: number): void {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const /** @type {?} */ normalizedValue = value == null ? '' : value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: number|null) => void): void {\n    this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()'\n  },\n  providers: [NUMBER_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction NumberValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberValueAccessor.ctorParameters;\n/** @type {?} */\nNumberValueAccessor.prototype.onChange;\n/** @type {?} */\nNumberValueAccessor.prototype.onTouched;\n/** @type {?} */\nNumberValueAccessor.prototype._renderer;\n/** @type {?} */\nNumberValueAccessor.prototype._elementRef;\n}\n\n"]}