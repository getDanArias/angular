{"version":3,"sources":["../../../../../../packages/forms/src/directives/shared.ts"],"names":[],"mappings":"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","file":"shared.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ÉµlooseIdentical as looseIdentical} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '../model';\nimport {Validators} from '../validators';\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NgControl} from './ng_control';\nimport {normalizeAsyncValidator, normalizeValidator} from './normalize_validator';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {RangeValueAccessor} from './range_value_accessor';\nimport {FormArrayName} from './reactive_directives/form_group_name';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {SelectMultipleControlValueAccessor} from './select_multiple_control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  return [... /** @type {?} */((parent.path)), name];\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpControl(control: FormControl, dir: NgControl): void {\n  if (!control) _throwError(dir, 'Cannot find control with');\n  if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');\n\n  control.validator = Validators.compose([ /** @type {?} */((control.validator)), dir.validator]);\n  control.asyncValidator = Validators.composeAsync([ /** @type {?} */((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */((\n  dir.valueAccessor)).writeValue(control.value);\n\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n\n  setUpBlurPipeline(control, dir);\n\n  if ( /** @type {?} */((dir.valueAccessor)).setDisabledState) {\n    control.registerOnDisabledChange(\n        (isDisabled: boolean) => { /** @type {?} */(( /** @type {?} */(( dir.valueAccessor)).setDisabledState))(isDisabled); });\n  }\n\n  // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  dir._rawValidators.forEach((validator: Validator | ValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange) /** @type {?} */((\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange))(() => control.updateValueAndValidity());\n  });\n\n  dir._rawAsyncValidators.forEach((validator: AsyncValidator | AsyncValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange) /** @type {?} */((\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange))(() => control.updateValueAndValidity());\n  });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function cleanUpControl(control: FormControl, dir: NgControl) { /** @type {?} */((\n  dir.valueAccessor)).registerOnChange(() => _noControlError(dir)); /** @type {?} */((\n  dir.valueAccessor)).registerOnTouched(() => _noControlError(dir));\n\n  dir._rawValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  dir._rawAsyncValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  if (control) control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpViewChangePipeline(control: FormControl, dir: NgControl): void { /** @type {?} */((\n  dir.valueAccessor)).registerOnChange((newValue: any) => {\n    control._pendingValue = newValue;\n    control._pendingDirty = true;\n\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpBlurPipeline(control: FormControl, dir: NgControl): void { /** @type {?} */((\n  dir.valueAccessor)).registerOnTouched(() => {\n    control._pendingTouched = true;\n\n    if (control.updateOn === 'blur') updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction updateControl(control: FormControl, dir: NgControl): void {\n  dir.viewToModelUpdate(control._pendingValue);\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {emitModelToViewChange: false});\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpModelChangePipeline(control: FormControl, dir: NgControl): void {\n  control.registerOnChange((newValue: any, emitModelEvent: boolean) => { /** @type {?} */((\n    // control -> view\n    dir.valueAccessor)).writeValue(newValue);\n\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpFormContainer(\n    control: FormGroup | FormArray, dir: AbstractFormGroupDirective | FormArrayName) {\n  if (control == null) _throwError(dir, 'Cannot find control with');\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir: NgControl) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  let /** @type {?} */ messageEnd: string;\n  if ( /** @type {?} */((dir.path)).length > 1) {\n    messageEnd = `path: '${( /** @type {?} */((dir.path))).join(' -> ')}'`;\n  } else if ( /** @type {?} */((dir.path))[0]) {\n    messageEnd = `name: '${dir.path}'`;\n  } else {\n    messageEnd = 'unspecified name attribute';\n  }\n  throw new Error(`${message} ${messageEnd}`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeValidators(validators: Array<Validator|Function>): ValidatorFn|null {\n  return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeAsyncValidators(validators: Array<Validator|Function>): AsyncValidatorFn|\n    null {\n  return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n                              null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!changes.hasOwnProperty('model')) return false;\n  const /** @type {?} */ change = changes['model'];\n\n  if (change.isFirstChange()) return true;\n  return !looseIdentical(viewModel, change.currentValue);\n}\n\nconst /** @type {?} */ BUILTIN_ACCESSORS = [\n  CheckboxControlValueAccessor,\n  RangeValueAccessor,\n  NumberValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nexport function isBuiltInAccessor(valueAccessor: ControlValueAccessor): boolean {\n  return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nexport function selectValueAccessor(\n    dir: NgControl, valueAccessors: ControlValueAccessor[]): ControlValueAccessor|null {\n  if (!valueAccessors) return null;\n\n  let /** @type {?} */ defaultAccessor: ControlValueAccessor|undefined = undefined;\n  let /** @type {?} */ builtinAccessor: ControlValueAccessor|undefined = undefined;\n  let /** @type {?} */ customAccessor: ControlValueAccessor|undefined = undefined;\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor)\n        _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n\n    } else {\n      if (customAccessor)\n        _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n\n  _throwError(dir, 'No valid value accessor for form control with');\n  return null;\n}\n"]}