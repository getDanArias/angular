{"version":3,"sources":["../../../../../../../packages/forms/src/directives/reactive_directives/form_group_directive.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,SAAE,EAAU,YAAA,EAAc,MAAA,EAAQ,KAAA,EAAkB,QAAA,EAAU,MAAA,EAAQ,IAAA,EAAqB,UAAA,EAAW,MAAA,eAAA,CAAA;AAO7G,OALO,EAAA,mBAAE,EAAoB,aAAA,EAAe,UAAA,EAAW,MAAA,kBAAA,CAAA;AAMvD,OALO,EAAA,gBAAE,EAAgB,MAAA,sBAAA,CAAA;AAOzB,OALO,EAAA,cAAE,EAAc,MAAA,oBAAA,CAAA;AAMvB,OALO,EAAA,cAAE,EAAe,sBAAA,EAAwB,iBAAA,EAAmB,YAAA,EAAc,kBAAA,EAAmB,MAAA,WAAA,CAAA;AAUpG,MAAM,CALC,IAAA,gBAAA,CAAM,qBAAA,GAA6B;IAMxC,OAAO,EALE,gBAAA;IAMT,WAAW,EALE,UAAA,CAAW,cAAM,OAAA,kBAAA,EAAA,CAAA,CAAmB;CAMlD,CALC;AAMF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH;IAEwC,8CAAA;IAMxC;;;OAGG;IACH,4BAAyD,WAAiB,EACX,gBAAsB;QADrF,YAGI,iBADM,SAEP;QAJsD,iBAAA,GAAA,WAAA,CAAiB;QACX,sBAAA,GAAA,gBAAA,CAAsB;QAT3E,gBAAA,GAAsB,KAAA,CAAM;QAApC,gBAKmB,GAHa,EAAA,CAAG;QAAlC,UAAI,GAE+B,CAAA,CAAE,IAAA,CAAA,CAAA,CAAO;QAD5C,cAK8C,GAH1B,IAAI,YAAA,EAAa,CAAE;;IAOxC,CAAC;IACH;;;OAGG;IACH,wCATG,GASH,UAJc,OAAS;QAKnB,IAAI,CAJC,iBAAC,EAAiB,CAAE;QAKzB,EAKE,CAAA,CAAA,OATG,CAAO,cAAC,CAAc,MAAC,CAAM,CAAC,CAAC,CAAA;YAKlC,IAAI,CAJC,iBAAC,EAAiB,CAAE;YAUzB,IAAA,CATK,eAAC,EAAe,CAAE;YAKvB,IAAI,CAJC,oBAAC,EAAoB,CAAE;QAK9B,CAAC;IACH,CAAC;IAIH,sBANM,yCAAA;QAGN;;WAEG;aACH,cAN6B,MAAA,CAAO,IAAA,CAAK,UAAC,CAAU,CAAC,CAAA;;;OAAA;IAUrD,sBARM,6CAAA;QAKN;;WAEG;aACH,cAR8B,MAAA,CAAO,IAAA,CAAK,CAAC,CAAA;;;OAAA;IAY3C,sBAVM,uCAAA;QAON;;WAEG;aACH,cAV6B,MAAA,CAAO,IAAA,CAAK,IAAC,CAAI,CAAC,CAAA;;;OAAA;IAc/C,sBAZM,oCAAA;QASN;;WAEG;aACH,cAZyB,MAAA,CAAO,EAAA,CAAG,CAAC,CAAA;;;OAAA;IAapC;;;OAGG;IACH,uCApBG,GAoBH,UAfa,GAAK;QAgBd,IAAM,gBAAgB,CAfhB,IAAA,GAAY,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;QAgB1C,YAKY,CApBC,IAAC,EAAK,GAAA,CAAI,CAAC;QAgBxB,IAAI,CAfC,sBAAC,CAAsB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;QAgBhD,IAAI,CAfC,UAAC,CAAU,IAAC,CAAI,GAAC,CAAG,CAAC;QAgB1B,MAKM,CApBC,IAAA,CAAK;IAgBd,CAAC;IACH;;;OAGG;IACH,uCAvBG,GAuBH,UAlBa,GAAK,IAAgC,MAAA,CAAA,CAAoB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC,CAAC,CAAA;IAmB/F;;;OAGG;IACH,0CA1BG,GA0BH,UArBgB,GAAK,IAAyB,MAAA,CAAO,IAAC,CAAI,UAAC,EAAW,GAAA,CAAI,CAAC,CAAC,CAAA;IAsB5E;;;OAGG;IACH,yCA7BG,GA6BH,UAxBe,GAAK;QA8BhB,IAAA,gBAAA,CA7BM,IAAA,GAAY,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;QAyB1C,kBAAkB,CAxBC,IAAC,EAAK,GAAA,CAAI,CAAC;QAyB9B,IAAI,CAxBC,sBAAC,CAAsB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;IAyBlD,CAAC;IACH;;;OAGG;IACH,4CAhCG,GAgCH,UA3BkB,GAAK,IAAqB,CAAA;IA4B5C;;;OAGG;IACH,yCAnCG,GAmCH,UA9Be,GAAK,IAA4B,MAAA,CAAA,CAAkB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC,CAAC,CAAA;IA+B3F;;;OAGG;IACH,yCAtCG,GAsCH,UAjCe,GAAK;QAkChB,IAAM,gBAAgB,CAjChB,IAAA,GAAY,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;QAkC1C,kBAKkB,CAtCC,IAAC,EAAK,GAAA,CAAI,CAAC;QAkC9B,IAAI,CAjCC,sBAAC,CAAsB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;IAkClD,CAAC;IACH;;;OAGG;IACH,4CAzCG,GAyCH,UApCkB,GAAK,IAAqB,CAAA;IAqC5C;;;OAGG;IACH,yCA5CG,GA4CH,UAvCe,GAAK,IAA4B,MAAA,CAAA,CAAkB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC,CAAC,CAAA;IAwC3F;;;;OAIG;IACH,wCAhDG,GAgDH,UA3Cc,GAAK,EAAiB,KAAO;QA4CvC,IAKM,gBAAA,CAhDA,IAAA,GAAK,CAAgB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC;QA4CnD,IAAI,CA3CC,QAAC,CAAQ,KAAC,CAAK,CAAC;IA4CvB,CAAC;IACH;;;OAGG;IACH,qCAnDG,GAmDH,UA9CW,MAAQ;QA+Cf,IAAI,CA9CC,UAAC,GAAY,IAAA,CAAK;QA+CvB,IAAI,CA9CC,oBAAC,EAAoB,CAAE;QA+C5B,IAAI,CA9CC,QAAC,CAAQ,IAAC,CAAI,MAAC,CAAM,CAAC;QA+C3B,MAKE,CAnDK,KAAA,CAAM;IA+Cf,CAAC;IACH;;OAEG;IACH,oCArDG,GAqDH,cAhDoB,IAAA,CAAK,SAAC,EAAS,CAAE,CAAC,CAAA;IAiDtC;;;OAGG;IACH,sCAxDG,GAwDH,UAnDY,KAAa;QAAb,sBAAA,EAAA,iBAAa;QAoDrB,IAAI,CAnDC,IAAC,CAAI,KAAC,CAAK,KAAC,CAAK,CAAC;QAoDvB,IAAI,CAnDC,UAAC,GAAY,KAAA,CAAM;IAoD1B,CAAC;IACH;;;OAGG;IACH,iDA1DG,GA0DH;QAXE,IAAA,CAzCO,IAAC,CAAI,oBAAC,EAAoB,CAAE;QAsDjC,IAAI,CArDC,UAAC,CAAU,OAAC,CAAO,UAAA,GAAC;YAsDvB,EAAE,CAZC,CAAA,GAzCE,CAAG,OAAC,CAAO,QAAC,KAAY,QAAA,CAAS,CAAC,CAAA;gBA0CrC,GAAA,CAzCI,iBAAC,CAAiB,GAAC,CAAG,OAAC,CAAO,aAAC,CAAa,CAAC;YAsDnD,CAZC;QAaH,CAAC,CArDC,CAAC;IAsDL,CAAC;IACH;;;OAGG;IACH,4CA5DG,GA4DH;QAAA,iBAWG;QAVC,IAAI,CAvDC,UAAC,CAAU,OAAC,CAAO,UAAA,GAAC;YAwDvB,IAAM,gBAAgB,CAvDhB,OAAA,GAAe,KAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;YAwD7C,EAAE,CAAC,CAAC,GAvDC,CAAG,QAAC,KAAY,OAAA,CAAQ,CAAC,CAAA;gBAwD5B,cAAc,CAvDC,GAAC,CAAG,QAAC,EAAS,GAAA,CAAI,CAAC;gBAwDlC,EAAE,CAAC,CAAC,OAvDC,CAAO;oBAAC,YAAA,CAAa,OAAC,EAAQ,GAAA,CAAI,CAAC;gBAwDxC,GAAG,CAvDC,QAAC,GAAU,OAAA,CAAQ;YAwDzB,CAAC;QACH,CAAC,CAvDC,CAAC;QAyDH,IAAI,CAvDC,IAAC,CAAI,mBAAC,CAAmB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;IAwDpD,CAAC;IACH;;OAEG;IAxDO,iDAAA,GA0DV;QAAA,iBAIG;QAHC,IAAI,CA1DC,IAAC,CAAI,2BAAC,CAA2B,cAAM,OAAA,KAAA,CAAK,eAAC,EAAe,EAArB,CAAqB,CAAE,CAAC;QA2DpE,EAAE,CAAC,CAAC,IA1DC,CAAI,QAAC,CAAQ;YAAC,IAAA,CAAK,QAAC,CAAQ,2BAAC,CAA2B,cAAM,CAAA,CAAG,CAAC;QA2DvE,IAAI,CA1DC,QAAC,GAAU,IAAA,CAAK,IAAC,CAAI;IA2D5B,CAAC;IACH;;OAEG;IA3DO,8CAAA,GA6DV;QACI,IAAM,gBAAgB,CA7DhB,IAAA,GAAO,iBAAA,CAAkB,IAAC,CAAI,WAAC,CAAW,CAAC;QA8DjD,IAAI,CA7DC,IAAC,CAAI,SAAC,GAAW,UAAA,CAAW,OAAC,CAAO,CAAC,gBAAA,CAAA,CAAA,CAAA,IAAC,CAAI,IAAC,CAAI,SAAC,CAAA,CAAA,EAAW,gBAAA,CAAA,CAAA,CAAC,IAAA,CAAA,CAAA,CAAO,CAAC,CAAC;QA+D1E,IAAM,gBAAgB,CA7DhB,KAAA,GAAQ,sBAAA,CAAuB,IAAC,CAAI,gBAAC,CAAgB,CAAC;QA8D5D,IAAI,CA7DC,IAAC,CAAI,cAAC,GAAgB,UAAA,CAAW,YAAC,CAAY,CAAC,gBAAA,CAAA,CAAA,CAAA,IAAC,CAAI,IAAC,CAAI,cAAC,CAAA,CAAA,EAAgB,gBAAA,CAAA,CAAA,CAAC,KAAA,CAAA,CAAA,CAAQ,CAAC,CAAC;IA8D5F,CAAC;IACH;;OAEG;IA9DO,8CAAA,GAgEV;QACI,EAAE,CAAC,CAAC,CAhEC,IAAC,CAAI,IAAC,CAAI,CAAC,CAAA;YAiEd,cAAc,CAhEC,oBAAC,EAAoB,CAAE;QAiExC,CAAC;IACH,CAAC;IAkBH,yBAjFC;AAiFD,CAjNA,AAgIC,CA9HuC,gBAAA;;AAyHjC,6BAAA,GAA+C;IAsEtD,EArEE,IAAA,EAAM,SAAA,EAhIN,IAAA,EAAA,CAAA;gBAsMA,QAAQ,EArME,aAAA;gBAsMV,SAAS,EArME,CAAA,qBAAE,CAAqB;gBAsMlC,IAAI,EArME,EAAA,UAAE,EAAW,kBAAA,EAAoB,SAAA,EAAW,WAAA,EAAY;gBAsM9D,QAAQ,EArME,QAAA;aAsMX,EArEC,EAAG;CAsEJ,CArEC;AAsEF,kBAAkB;AApEX,iCAAA,GAA4F,cAAM,OAAA;IAsEzG,EAAC,IArEC,EAAK,KAAA,EAAO,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,QAAA,EAzH3B,EAAA,EAAA,IAAA,EAAA,IAAA,EAAY,EAAA,EAAA,IAAA,EAAA,MAAA,EAAQ,IAAA,EAAA,CAAA,aAAO,EAAA,EAAA,EAAA,EAAA;IA+LnC,EAAC,IArEC,EAAK,KAAA,EAAO,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,QAAA,EAzH3B,EAAA,EAAA,IAAA,EAAA,IAAA,EAAY,EAAA,EAAA,IAAA,EAAA,MAAA,EAAQ,IAAA,EAAA,CAAA,mBAAO,EAAA,EAAA,EAAA,EAAA;CA+LlC,EAxEwG,CAwExG,CArEC;AACK,iCAAA,GAAoE;IAsE3E,MAAM,EArEE,CAAA,EAAG,IAAA,EAAM,KAAA,EAjIb,IAAA,EAAA,CAAA,WAAM,EAAA,EAAA,EAAA;IAuMV,UAAU,EArEE,CAAA,EAAG,IAAA,EAAM,MAAA,EAjIjB,EAAA;CAuMH,CArEC;AAwEF;IACA,gBAAgB;IAChB,kBAAkB,CAAC,UAAU,CAAC;IAC9B;;;OAGG;IACH,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACtC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACtC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;IACzC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,CAAC;AAC9C,CAAC;AAED;;;;;GAKG;AACH,gBAjHkB,IAAS,EAAG,EAAI;IAkHhC,IAAM,gBAAgB,CAjHhB,KAAA,GAAQ,IAAA,CAAK,OAAC,CAAO,EAAC,CAAE,CAAC;IAkH/B,EAAE,CAAC,CAAC,KAjHC,GAAO,CAAA,CAAE,CAAC,CAAC,CAAA;QAkHd,IAAI,CAjHC,MAAC,CAAM,KAAC,EAAM,CAAA,CAAE,CAAC;IAkHxB,CAAC;AACH,CAAC","file":"form_group_directive.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from '../../validators';\nimport {ControlContainer} from '../control_container';\nimport {Form} from '../form_interface';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {cleanUpControl, composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer} from '../shared';\n\nimport {FormControlName} from './form_control_name';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const /** @type {?} */ formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n * \n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue} methods.\n * \n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl#statusChanges} event to be notified when the validation status is\n * re-calculated.\n * \n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n * \n * ### Example\n * \n * In this example, we create form controls for first name and last name.\n * \n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: {\\@link ReactiveFormsModule}\n * \n *  \\@stable\n */\nexport class FormGroupDirective extends ControlContainer implements Form,\n    OnChanges {\nprivate _submitted: boolean = false;\nprivate _oldForm: FormGroup;\n  directives: FormControlName[] = [];\n\n   form: FormGroup = /** @type {?} */(( null));\n   ngSubmit = new EventEmitter();\n/**\n * @param {?} _validators\n * @param {?} _asyncValidators\n */\nconstructor(\nprivate _validators: any[],\nprivate _asyncValidators: any[]) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n    }\n  }\n/**\n * @return {?}\n */\nget submitted(): boolean { return this._submitted; }\n/**\n * @return {?}\n */\nget formDirective(): Form { return this; }\n/**\n * @return {?}\n */\nget control(): FormGroup { return this.form; }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControl(dir: FormControlName): FormControl {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n    return ctrl;\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControl(dir: FormControlName): FormControl { return /** @type {?} */(( <FormControl>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControl(dir: FormControlName): void { remove(this.directives, dir); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormGroup(dir: FormGroupName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormGroup(dir: FormGroupName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormGroup(dir: FormGroupName): FormGroup { return /** @type {?} */(( <FormGroup>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormArray(dir: FormArrayName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormArray(dir: FormArrayName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormArray(dir: FormArrayName): FormArray { return /** @type {?} */(( <FormArray>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @param {?} value\n * @return {?}\n */\nupdateModel(dir: FormControlName, value: any): void {\n    const /** @type {?} */ ctrl  = /** @type {?} */(( <FormControl>this.form.get(dir.path)));\n    ctrl.setValue(value);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nonSubmit($event: Event): boolean {\n    this._submitted = true;\n    this._syncPendingControls();\n    this.ngSubmit.emit($event);\n    return false;\n  }\n/**\n * @return {?}\n */\nonReset(): void { this.resetForm(); }\n/**\n * @param {?=} value\n * @return {?}\n */\nresetForm(value: any = undefined): void {\n    this.form.reset(value);\n    this._submitted = false;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_syncPendingControls() {\n    this.form._syncPendingControls();\n    this.directives.forEach(dir => {\n      if (dir.control.updateOn === 'submit') {\n        dir.viewToModelUpdate(dir.control._pendingValue);\n      }\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateDomValue() {\n    this.directives.forEach(dir => {\n      const /** @type {?} */ newCtrl: any = this.form.get(dir.path);\n      if (dir._control !== newCtrl) {\n        cleanUpControl(dir._control, dir);\n        if (newCtrl) setUpControl(newCtrl, dir);\n        dir._control = newCtrl;\n      }\n    });\n\n    this.form._updateTreeValidity({emitEvent: false});\n  }\n/**\n * @return {?}\n */\n\nprivate _updateRegistrations() {\n    this.form._registerOnCollectionChange(() => this._updateDomValue());\n    if (this._oldForm) this._oldForm._registerOnCollectionChange(() => {});\n    this._oldForm = this.form;\n  }\n/**\n * @return {?}\n */\n\nprivate _updateValidators() {\n    const /** @type {?} */ sync = composeValidators(this._validators);\n    this.form.validator = Validators.compose([ /** @type {?} */((this.form.validator)), /** @type {?} */(( sync))]);\n\n    const /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n    this.form.asyncValidator = Validators.composeAsync([ /** @type {?} */((this.form.asyncValidator)), /** @type {?} */(( async))]);\n  }\n/**\n * @return {?}\n */\n\nprivate _checkFormPresent() {\n    if (!this.form) {\n      ReactiveErrors.missingFormException();\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{\n  selector: '[formGroup]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: {type: Function, args?: any[]}[]} = {\n\"form\": [{ type: Input, args: ['formGroup', ] },],\n\"ngSubmit\": [{ type: Output },],\n};\n}\n\nfunction FormGroupDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroupDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormGroupDirective.ctorParameters;\n/** @type {?} */\nFormGroupDirective.propDecorators;\n/** @type {?} */\nFormGroupDirective.prototype._submitted;\n/** @type {?} */\nFormGroupDirective.prototype._oldForm;\n/** @type {?} */\nFormGroupDirective.prototype.directives;\n/** @type {?} */\nFormGroupDirective.prototype.form;\n/** @type {?} */\nFormGroupDirective.prototype.ngSubmit;\n/** @type {?} */\nFormGroupDirective.prototype._validators;\n/** @type {?} */\nFormGroupDirective.prototype._asyncValidators;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n"]}