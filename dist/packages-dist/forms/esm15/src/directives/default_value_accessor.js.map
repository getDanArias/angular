{"version":3,"sources":["../../../../../packages/forms/src/directives/default_value_accessor.ts"],"names":[],"mappings":"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","file":"default_value_accessor.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, Optional, Renderer2, forwardRef} from '@angular/core';\nimport {ÉµgetDOM as getDOM} from '@angular/platform-browser';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ DEFAULT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid(): boolean {\n  const /** @type {?} */ userAgent = getDOM() ? getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nexport const /** @type {?} */ COMPOSITION_BUFFER_MODE = new InjectionToken<boolean>('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n * \n *  \\@stable\n */\nexport class DefaultValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * Whether the user is creating a composition string (IME events).\n */\n\nprivate _composing = false;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _compositionMode\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _compositionMode: boolean) {\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    const /** @type {?} */ normalizedValue = value == null ? '' : value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_handleInput(value: any): void {\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n      this.onChange(value);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_compositionStart(): void { this._composing = true; }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_compositionEnd(value: any): void {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{\n  selector:\n      'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n  // TODO: vsavkin replace the above selector with the one below it once\n  // https://github.com/angular/angular/issues/3011 is implemented\n  // selector: '[ngModel],[formControl],[formControlName]',\n  host: {\n    '(input)': '_handleInput($event.target.value)',\n    '(blur)': 'onTouched()',\n    '(compositionstart)': '_compositionStart()',\n    '(compositionend)': '_compositionEnd($event.target.value)'\n  },\n  providers: [DEFAULT_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\n}\n\nfunction DefaultValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDefaultValueAccessor.ctorParameters;\n/** @type {?} */\nDefaultValueAccessor.prototype.onChange;\n/** @type {?} */\nDefaultValueAccessor.prototype.onTouched;\n/**\n * Whether the user is creating a composition string (IME events).\n * @type {?}\n */\nDefaultValueAccessor.prototype._composing;\n/** @type {?} */\nDefaultValueAccessor.prototype._renderer;\n/** @type {?} */\nDefaultValueAccessor.prototype._elementRef;\n/** @type {?} */\nDefaultValueAccessor.prototype._compositionMode;\n}\n\n"]}