{"version":3,"sources":["../../../../../packages/forms/src/directives/ng_control_status.ts"],"names":[],"mappings":"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","file":"ng_control_status.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\nexport class AbstractControlStatus {\nprivate _cd: AbstractControlDirective;\n/**\n * @param {?} cd\n */\nconstructor(cd: AbstractControlDirective) { this._cd = cd; }\n/**\n * @return {?}\n */\nget ngClassUntouched(): boolean { return this._cd.control ? this._cd.control.untouched : false; }\n/**\n * @return {?}\n */\nget ngClassTouched(): boolean { return this._cd.control ? this._cd.control.touched : false; }\n/**\n * @return {?}\n */\nget ngClassPristine(): boolean { return this._cd.control ? this._cd.control.pristine : false; }\n/**\n * @return {?}\n */\nget ngClassDirty(): boolean { return this._cd.control ? this._cd.control.dirty : false; }\n/**\n * @return {?}\n */\nget ngClassValid(): boolean { return this._cd.control ? this._cd.control.valid : false; }\n/**\n * @return {?}\n */\nget ngClassInvalid(): boolean { return this._cd.control ? this._cd.control.invalid : false; }\n/**\n * @return {?}\n */\nget ngClassPending(): boolean { return this._cd.control ? this._cd.control.pending : false; }\n}\n\nfunction AbstractControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractControlStatus.prototype._cd;\n}\n\n\nexport const /** @type {?} */ ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n * \n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n * \n * \\@stable\n */\nexport class NgControlStatus extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: NgControl) { super(cd); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: NgControl, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatus.ctorParameters;\n}\n\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n * \n * \\@stable\n */\nexport class NgControlStatusGroup extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: ControlContainer) { super(cd); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Directive, args: [{\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatusGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatusGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatusGroup.ctorParameters;\n}\n\n"]}