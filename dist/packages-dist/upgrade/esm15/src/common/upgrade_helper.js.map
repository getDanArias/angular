{"version":3,"sources":["../../../../../packages/upgrade/src/common/upgrade_helper.ts"],"names":[],"mappings":"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","file":"upgrade_helper.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef, Injector, SimpleChanges} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE} from './constants';\nimport {controllerKey, directiveNormalize, isFunction} from './util';\n\n\n// Constants\nconst /** @type {?} */ REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n/**\n * @record\n */\nexport function IBindingDestination() {}\n\n\nfunction IBindingDestination_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n[key: string]: any;\n*/\n/** @type {?|undefined} */\nIBindingDestination.prototype.$onChanges;\n}\n\n\n// Interfaces\nexport interface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n/**\n * @record\n */\nexport function IControllerInstance() {}\n\n\nfunction IControllerInstance_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nIControllerInstance.prototype.$doCheck;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$onDestroy;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$onInit;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$postLink;\n}\n\n\nexport interface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\nexport class UpgradeHelper {\npublic readonly $injector: angular.IInjectorService;\npublic readonly element: Element;\npublic readonly $element: angular.IAugmentedJQuery;\npublic readonly directive: angular.IDirective;\nprivate readonly $compile: angular.ICompileService;\nprivate readonly $controller: angular.IControllerService;\n/**\n * @param {?} injector\n * @param {?} name\n * @param {?} elementRef\n * @param {?=} directive\n */\nconstructor(\nprivate injector: Injector,\nprivate name: string, elementRef: ElementRef,\n      directive?: angular.IDirective) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n  }\n/**\n * @param {?} $injector\n * @param {?} name\n * @return {?}\n */\nstatic getDirective($injector: angular.IInjectorService, name: string): angular.IDirective {\n    const /** @type {?} */ directives: angular.IDirective[] = $injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error(`Only support single directive definition for: ${name}`);\n    }\n\n    const /** @type {?} */ directive = directives[0];\n\n    // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n    // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n    if (directive.compile && !directive.link) notSupported(name, 'compile');\n    if (directive.replace) notSupported(name, 'replace');\n    if (directive.terminal) notSupported(name, 'terminal');\n\n    return directive;\n  }\n/**\n * @param {?} $injector\n * @param {?} directive\n * @param {?=} fetchRemoteTemplate\n * @return {?}\n */\nstatic getTemplate(\n      $injector: angular.IInjectorService, directive: angular.IDirective,\n      fetchRemoteTemplate = false): string|Promise<string> {\n    if (directive.template !== undefined) {\n      return getOrCall<string>(directive.template);\n    } else if (directive.templateUrl) {\n      const /** @type {?} */ $templateCache = /** @type {?} */(( $injector.get($TEMPLATE_CACHE) as angular.ITemplateCacheService));\n      const /** @type {?} */ url = getOrCall<string>(directive.templateUrl);\n      const /** @type {?} */ template = $templateCache.get(url);\n\n      if (template !== undefined) {\n        return template;\n      } else if (!fetchRemoteTemplate) {\n        throw new Error('loading directive templates asynchronously is not supported');\n      }\n\n      return new Promise((resolve, reject) => {\n        const /** @type {?} */ $httpBackend = /** @type {?} */(( $injector.get($HTTP_BACKEND) as angular.IHttpBackendService));\n        $httpBackend('GET', url, null, (status: number, response: string) => {\n          if (status === 200) {\n            resolve($templateCache.put(url, response));\n          } else {\n            reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Directive '${directive.name}' is not a component, it is missing template.`);\n    }\n  }\n/**\n * @param {?} controllerType\n * @param {?} $scope\n * @return {?}\n */\nbuildController(controllerType: angular.IController, $scope: angular.IScope) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance.\n    // Quoted properties below so that this code can be optimized with Closure Compiler.\n    const /** @type {?} */ locals = {'$scope': $scope, '$element': this.$element};\n    const /** @type {?} */ controller = this.$controller(controllerType, locals, null, this.directive.controllerAs); /** @type {?} */((\n\n    this.$element.data))(controllerKey( /** @type {?} */((this.directive.name))), controller);\n\n    return controller;\n  }\n/**\n * @param {?=} template\n * @return {?}\n */\ncompileTemplate(template?: string): angular.ILinkFn {\n    if (template === undefined) {\n      template = /** @type {?} */(( UpgradeHelper.getTemplate(this.$injector, this.directive) as string));\n    }\n\n    return this.compileHtml(template);\n  }\n/**\n * @return {?}\n */\nprepareTransclusion(): angular.ILinkFn|undefined {\n    const /** @type {?} */ transclude = this.directive.transclude;\n    const /** @type {?} */ contentChildNodes = this.extractChildNodes();\n    let /** @type {?} */ $template = contentChildNodes;\n    let /** @type {?} */ attachChildrenFn: angular.ILinkFn|undefined = (scope, cloneAttach) => /** @type {?} */((\n        cloneAttach))($template, scope);\n\n    if (transclude) {\n      const /** @type {?} */ slots = Object.create(null);\n\n      if (typeof transclude === 'object') {\n        $template = [];\n\n        const /** @type {?} */ slotMap = Object.create(null);\n        const /** @type {?} */ filledSlots = Object.create(null);\n\n        // Parse the element selectors.\n        Object.keys(transclude).forEach(slotName => {\n          let /** @type {?} */ selector = transclude[slotName];\n          const /** @type {?} */ optional = selector.charAt(0) === '?';\n          selector = optional ? selector.substring(1) : selector;\n\n          slotMap[selector] = slotName;\n          slots[slotName] = null;            // `null`: Defined but not yet filled.\n          filledSlots[slotName] = optional;  // Consider optional slots as filled.\n        });\n\n        // Add the matching elements into their slot.\n        contentChildNodes.forEach(node => {\n          const /** @type {?} */ slotName = slotMap[directiveNormalize(node.nodeName.toLowerCase())];\n          if (slotName) {\n            filledSlots[slotName] = true;\n            slots[slotName] = slots[slotName] || [];\n            slots[slotName].push(node);\n          } else {\n            $template.push(node);\n          }\n        });\n\n        // Check for required slots that were not filled.\n        Object.keys(filledSlots).forEach(slotName => {\n          if (!filledSlots[slotName]) {\n            throw new Error(`Required transclusion slot '${slotName}' on directive: ${this.name}`);\n          }\n        });\n\n        Object.keys(slots).filter(slotName => slots[slotName]).forEach(slotName => {\n          const /** @type {?} */ nodes = slots[slotName];\n          slots[slotName] = (scope: angular.IScope, cloneAttach: angular.ICloneAttachFunction) => /** @type {?} */((\n              cloneAttach))(nodes, scope);\n        });\n      }\n\n      // Attach `$$slots` to default slot transclude fn.\n      attachChildrenFn.$$slots = slots;\n\n      // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n      // removes all text content after the first interpolation and updates it later, after\n      // evaluating the expressions. This would result in AngularJS failing to recognize text\n      // nodes that start with an interpolation as transcluded content and use the fallback\n      // content instead.\n      // To avoid this issue, we add a\n      // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n      // to empty text nodes (which can only be a result of Angular removing their initial content).\n      // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n      //       will still fail to be detected by AngularJS v1.6+\n      $template.forEach(node => {\n        if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n          node.nodeValue = '\\u200C';\n        }\n      });\n    }\n\n    return attachChildrenFn;\n  }\n/**\n * @param {?} controllerInstance\n * @return {?}\n */\nresolveAndBindRequiredControllers(controllerInstance: IControllerInstance|null) {\n    const /** @type {?} */ directiveRequire = this.getDirectiveRequire();\n    const /** @type {?} */ requiredControllers = this.resolveRequire(directiveRequire);\n\n    if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n      const /** @type {?} */ requiredControllersMap = /** @type {?} */(( requiredControllers as{[key: string]: IControllerInstance}));\n      Object.keys(requiredControllersMap).forEach(key => {\n        controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    return requiredControllers;\n  }\n/**\n * @param {?} html\n * @return {?}\n */\n\nprivate compileHtml(html: string): angular.ILinkFn {\n    this.element.innerHTML = html;\n    return this.$compile(this.element.childNodes);\n  }\n/**\n * @return {?}\n */\n\nprivate extractChildNodes(): Node[] {\n    const /** @type {?} */ childNodes: Node[] = [];\n    let /** @type {?} */ childNode: Node|null;\n\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    return childNodes;\n  }\n/**\n * @return {?}\n */\n\nprivate getDirectiveRequire(): angular.DirectiveRequireProperty {\n    const /** @type {?} */ require = this.directive.require || /** @type {?} */(( (this.directive.controller && this.directive.name)));\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const /** @type {?} */ value = require[key];\n        const /** @type {?} */ match = /** @type {?} */(( value.match(REQUIRE_PREFIX_RE)));\n        const /** @type {?} */ name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n/**\n * @param {?} require\n * @param {?=} controllerInstance\n * @return {?}\n */\n\nprivate resolveRequire(require: angular.DirectiveRequireProperty, controllerInstance?: any):\n      angular.SingleOrListOrMap<IControllerInstance>|null {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(req));\n    } else if (typeof require === 'object') {\n      const /** @type {?} */ value: {[key: string]: IControllerInstance} = {};\n      Object.keys(require).forEach(key => value[key] = /** @type {?} */(( this.resolveRequire(require[key]))));\n      return value;\n    } else if (typeof require === 'string') {\n      const /** @type {?} */ match = /** @type {?} */(( require.match(REQUIRE_PREFIX_RE)));\n      const /** @type {?} */ inheritType = match[1] || match[3];\n\n      const /** @type {?} */ name = require.substring(match[0].length);\n      const /** @type {?} */ isOptional = !!match[2];\n      const /** @type {?} */ searchParents = !!inheritType;\n      const /** @type {?} */ startOnParent = inheritType === '^^';\n\n      const /** @type {?} */ ctrlKey = controllerKey(name);\n      const /** @type {?} */ elem = startOnParent ? /** @type {?} */(( this.$element.parent))() : this.$element;\n      const /** @type {?} */ value = searchParents ? /** @type {?} */(( elem.inheritedData))(ctrlKey) : /** @type {?} */(( elem.data))(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${this.name}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized 'require' syntax on upgraded directive '${this.name}': ${require}`);\n    }\n  }\n}\n\nfunction UpgradeHelper_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeHelper.prototype.$injector;\n/** @type {?} */\nUpgradeHelper.prototype.element;\n/** @type {?} */\nUpgradeHelper.prototype.$element;\n/** @type {?} */\nUpgradeHelper.prototype.directive;\n/** @type {?} */\nUpgradeHelper.prototype.$compile;\n/** @type {?} */\nUpgradeHelper.prototype.$controller;\n/** @type {?} */\nUpgradeHelper.prototype.injector;\n/** @type {?} */\nUpgradeHelper.prototype.name;\n}\n\n/**\n * @template T\n * @param {?} property\n * @return {?}\n */\nfunction getOrCall<T>(property: T | Function): T {\n  return isFunction(property) ? property() : property;\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isMap<T>(value: angular.SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n/**\n * @param {?} name\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(name: string, feature: string) {\n  throw new Error(`Upgraded directive '${name}' contains unsupported feature: '${feature}'.`);\n}\n"]}