{"version":3,"sources":["../../../../../../packages/upgrade/src/common/util.ts"],"names":[],"mappings":"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","file":"util.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, Type} from '@angular/core';\nimport * as angular from './angular1';\n\nconst /** @type {?} */ DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\nconst /** @type {?} */ DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n/**\n * @param {?} e\n * @return {?}\n */\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function directiveNormalize(name: string): string {\n  return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n      .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, (_, letter) => letter.toUpperCase());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getAttributesAsArray(node: Node): [string, string][] {\n  const /** @type {?} */ attributes = node.attributes;\n  let /** @type {?} */ asArray: [string, string][] = /** @type {?} */(( undefined));\n  if (attributes) {\n    let /** @type {?} */ attrLen = attributes.length;\n    asArray = new Array(attrLen);\n    for (let /** @type {?} */ i = 0; i < attrLen; i++) {\n      asArray[i] = [attributes[i].nodeName, /** @type {?} */(( attributes[i].nodeValue))];\n    }\n  }\n  return asArray || [];\n}\n/**\n * @param {?} component\n * @return {?}\n */\nexport function getComponentName(component: Type<any>): string {\n  // Return the name of the component or the first line of its stringified version.\n  return ( /** @type {?} */((component as any))).overriddenName || component.name || component.toString().split('\\n')[0];\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any) => void;\nconstructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nfunction Deferred_tsickle_Closure_declarations() {\n/** @type {?} */\nDeferred.prototype.promise;\n/** @type {?} */\nDeferred.prototype.resolve;\n/** @type {?} */\nDeferred.prototype.reject;\n}\n\n/**\n * @record\n */\nexport function LazyModuleRef() {}\n\n\nfunction LazyModuleRef_tsickle_Closure_declarations() {\n/** @type {?} */\nLazyModuleRef.prototype.needsNgZone;\n/** @type {?|undefined} */\nLazyModuleRef.prototype.injector;\n/** @type {?|undefined} */\nLazyModuleRef.prototype.promise;\n}\n\n\nexport interface LazyModuleRef {\n  // Whether the AngularJS app has been bootstrapped outside the Angular zone\n  // (in which case calls to Angular APIs need to be brought back in).\n  needsNgZone: boolean;\n  injector?: Injector;\n  promise?: Promise<Injector>;\n}\n/**\n * @param {?} component\n * @return {?} Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n * @param {?} ngModel\n * @param {?} component\n * @return {?}\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n    if (typeof component.registerOnTouched === 'function') {\n      component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n    }\n  }\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} val1\n * @param {?} val2\n * @return {?}\n */\nexport function strictEquals(val1: any, val2: any): boolean {\n  return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n"]}