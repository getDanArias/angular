{"version":3,"sources":["../../../../../../packages/upgrade/src/common/downgrade_component_adapter.ts"],"names":[],"mappings":"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","file":"downgrade_component_adapter.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {getAttributesAsArray, getComponentName, hookupNgModel, strictEquals} from './util';\n\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nexport class DowngradeComponentAdapter {\nprivate implementsOnChanges = false;\nprivate inputChangeCount: number = 0;\nprivate inputChanges: SimpleChanges = {};\nprivate componentScope: angular.IScope;\nprivate componentRef: ComponentRef<any>;\nprivate component: any;\nprivate changeDetector: ChangeDetectorRef;\nprivate appRef: ApplicationRef;\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} attrs\n * @param {?} scope\n * @param {?} ngModel\n * @param {?} parentInjector\n * @param {?} $injector\n * @param {?} $compile\n * @param {?} $parse\n * @param {?} componentFactory\n * @param {?} wrapCallback\n */\nconstructor(\nprivate id: string,\nprivate element: angular.IAugmentedJQuery,\nprivate attrs: angular.IAttributes,\nprivate scope: angular.IScope,\nprivate ngModel: angular.INgModelController,\nprivate parentInjector: Injector,\nprivate $injector: angular.IInjectorService,\nprivate $compile: angular.ICompileService,\nprivate $parse: angular.IParseService,\nprivate componentFactory: ComponentFactory<any>,\nprivate wrapCallback: <T>(cb: () => T) => () => T) {\n    ( /** @type {?} */((this.element[0] as any))).id = id;\n    this.componentScope = scope.$new();\n    this.appRef = parentInjector.get(ApplicationRef);\n  }\n/**\n * @return {?}\n */\ncompileContents(): Node[][] {\n    const /** @type {?} */ compiledProjectableNodes: Node[][] = [];\n    const /** @type {?} */ projectableNodes: Node[][] = this.groupProjectableNodes();\n    const /** @type {?} */ linkFns = projectableNodes.map(nodes => this.$compile(nodes)); /** @type {?} */((\n\n    this.element.empty))();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone); /** @type {?} */((\n        this.element.append))(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n/**\n * @param {?} projectableNodes\n * @return {?}\n */\ncreateComponent(projectableNodes: Node[][]) {\n    const /** @type {?} */ childInjector =\n        Injector.create([{provide: $SCOPE, useValue: this.componentScope}], this.parentInjector);\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n/**\n * @param {?} needsNgZone\n * @param {?=} propagateDigest\n * @return {?}\n */\nsetupInputs(needsNgZone: boolean, propagateDigest = true): void {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ inputs = this.componentFactory.inputs || [];\n    for (let /** @type {?} */ i = 0; i < inputs.length; i++) {\n      const /** @type {?} */ input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n      let /** @type {?} */ expr: string|null = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const /** @type {?} */ observeFn = (prop => {\n          let /** @type {?} */ prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            // Initially, both `$observe()` and `$watch()` will call this function.\n            if (!strictEquals(prevValue, currValue)) {\n              if (prevValue === INITIAL_VALUE) {\n                prevValue = currValue;\n              }\n\n              this.updateInput(prop, prevValue, currValue);\n              prevValue = currValue;\n            }\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n        // Use `$watch()` (in addition to `$observe()`) in order to initialize the input  in time\n        // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n        // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n        let /** @type {?} */ unwatch: Function|null = this.componentScope.$watch(() => { /** @type {?} */((\n          unwatch))();\n          unwatch = null;\n          observeFn(attrs[input.attr]);\n        });\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = attrs[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = attrs[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = attrs[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = attrs[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const /** @type {?} */ watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    // Invoke `ngOnChanges()` and Change Detection (when necessary)\n    const /** @type {?} */ detectChanges = () => this.changeDetector.detectChanges();\n    const /** @type {?} */ prototype = this.componentFactory.componentType.prototype;\n    this.implementsOnChanges = !!(prototype && ( /** @type {?} */((<OnChanges>prototype))).ngOnChanges);\n\n    this.componentScope.$watch(() => this.inputChangeCount, this.wrapCallback(() => {\n      // Invoke `ngOnChanges()`\n      if (this.implementsOnChanges) {\n        const /** @type {?} */ inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        ( /** @type {?} */((<OnChanges>this.component))).ngOnChanges( /** @type {?} */((inputChanges)));\n      }\n\n      // If opted out of propagating digests, invoke change detection\n      // when inputs change\n      if (!propagateDigest) {\n        detectChanges();\n      }\n    }));\n\n    // If not opted out of propagating digests, invoke change detection on every digest\n    if (propagateDigest) {\n      this.componentScope.$watch(this.wrapCallback(detectChanges));\n    }\n\n    // Attach the view so that it will be dirty-checked.\n    if (needsNgZone) {\n      this.appRef.attachView(this.componentRef.hostView);\n    }\n  }\n/**\n * @return {?}\n */\nsetupOutputs() {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ outputs = this.componentFactory.outputs || [];\n    for (let /** @type {?} */ j = 0; j < outputs.length; j++) {\n      const /** @type {?} */ output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n      let /** @type {?} */ expr: string|null = null;\n      let /** @type {?} */ assignExpr = false;\n\n      const /** @type {?} */ bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n      const /** @type {?} */ bracketParenAttr =\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]`;\n\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        expr = attrs[output.onAttr];\n      } else if (attrs.hasOwnProperty(output.parenAttr)) {\n        expr = attrs[output.parenAttr];\n      } else if (attrs.hasOwnProperty(bindonAttr)) {\n        expr = attrs[bindonAttr];\n        assignExpr = true;\n      } else if (attrs.hasOwnProperty(bracketParenAttr)) {\n        expr = attrs[bracketParenAttr];\n        assignExpr = true;\n      }\n\n      if (expr != null && assignExpr != null) {\n        const /** @type {?} */ getter = this.$parse(expr);\n        const /** @type {?} */ setter = getter.assign;\n        if (assignExpr && !setter) {\n          throw new Error(`Expression '${expr}' is not assignable!`);\n        }\n        const /** @type {?} */ emitter = /** @type {?} */(( this.component[output.prop] as EventEmitter<any>));\n        if (emitter) {\n          emitter.subscribe({\n            next: assignExpr ? (v: any) => /** @type {?} */(( setter))(this.scope, v) :\n                               (v: any) => getter(this.scope, {'$event': v})\n          });\n        } else {\n          throw new Error(\n              `Missing emitter '${output.prop}' on component '${getComponentName(this.componentFactory.componentType)}'!`);\n        }\n      }\n    }\n  }\n/**\n * @param {?} needsNgZone\n * @return {?}\n */\nregisterCleanup(needsNgZone: boolean) { /** @type {?} */((\n    this.element.on))('$destroy', () => {\n      this.componentScope.$destroy();\n      this.componentRef.destroy();\n      if (needsNgZone) {\n        this.appRef.detachView(this.componentRef.hostView);\n      }\n    });\n  }\n/**\n * @return {?}\n */\ngetInjector(): Injector { return this.componentRef.injector; }\n/**\n * @param {?} prop\n * @param {?} prevValue\n * @param {?} currValue\n * @return {?}\n */\n\nprivate updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.implementsOnChanges) {\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.inputChangeCount++;\n    this.component[prop] = currValue;\n  }\n/**\n * @return {?}\n */\ngroupProjectableNodes() {\n    let /** @type {?} */ ngContentSelectors = this.componentFactory.ngContentSelectors;\n    return groupNodesBySelector(ngContentSelectors, /** @type {?} */(( this.element.contents))());\n  }\n}\n\nfunction DowngradeComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDowngradeComponentAdapter.prototype.implementsOnChanges;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChangeCount;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChanges;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentScope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentRef;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.component;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.changeDetector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.appRef;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.id;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.element;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.attrs;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.scope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.ngModel;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.parentInjector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$injector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$compile;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$parse;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentFactory;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.wrapCallback;\n}\n\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n * @param {?} ngContentSelectors\n * @param {?} nodes\n * @return {?}\n */\nexport function groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n  const /** @type {?} */ projectableNodes: Node[][] = [];\n  let /** @type {?} */ wildcardNgContentIndex: number;\n\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = ngContentSelectors.length; i < ii; ++i) {\n    projectableNodes[i] = [];\n  }\n\n  for (let /** @type {?} */ j = 0, /** @type {?} */ jj = nodes.length; j < jj; ++j) {\n    const /** @type {?} */ node = nodes[j];\n    const /** @type {?} */ ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n    if (ngContentIndex != null) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n/**\n * @param {?} element\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction findMatchingNgContentIndex(element: any, ngContentSelectors: string[]): number|null {\n  const /** @type {?} */ ngContentIndices: number[] = [];\n  let /** @type {?} */ wildcardNgContentIndex: number = -1;\n  for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n    const /** @type {?} */ selector = ngContentSelectors[i];\n    if (selector === '*') {\n      wildcardNgContentIndex = i;\n    } else {\n      if (matchesSelector(element, selector)) {\n        ngContentIndices.push(i);\n      }\n    }\n  }\n  ngContentIndices.sort();\n\n  if (wildcardNgContentIndex !== -1) {\n    ngContentIndices.push(wildcardNgContentIndex);\n  }\n  return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n\nlet /** @type {?} */ _matches: (this: any, selector: string) => boolean;\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nfunction matchesSelector(el: any, selector: string): boolean {\n  if (!_matches) {\n    const /** @type {?} */ elProto = /** @type {?} */(( <any>Element.prototype));\n    _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n        elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n  }\n  return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n"]}