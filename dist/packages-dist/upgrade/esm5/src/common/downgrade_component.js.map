{"version":3,"sources":["../../../../../../packages/upgrade/src/common/downgrade_component.ts"],"names":[],"mappings":"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","file":"downgrade_component.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, NgZone, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, LAZY_MODULE_REF, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {LazyModuleRef, controllerKey, getComponentName, isFunction} from './util';\n/**\n * @record\n */\nfunction Thenable() {}\n\n\nfunction Thenable_tsickle_Closure_declarations() {\n/** @type {?} */\nThenable.prototype.then;\n}\n\n\n\ninterface Thenable<T> {\n  then(callback: (value: T) => any): any;\n}\n\nlet /** @type {?} */ downgradeCount = 0;\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allows an Angular component to be used from AngularJS.\n * \n * \\@howToUse \n * \n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n * \n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n * \n * \\@description \n * \n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n * \n * The parameter contains information about the Component that is being downgraded:\n * \n * * `component: Type<any>`: The type of the Component that will be downgraded\n * \n * \\@experimental\n * @param {?} info\n * @return {?}\n */\nexport function downgradeComponent(info: {\n  component: Type<any>;\n  /** @experimental */\n  propagateDigest?: boolean;\n  /** @deprecated since v4. This parameter is no longer used */\n  inputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  outputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  selectors?: string[];\n}): any /* angular.IInjectable */ {\n  const /** @type {?} */ idPrefix = `NG2_UPGRADE_${downgradeCount++}_`;\n  let /** @type {?} */ idCount = 0;\n\n  const /** @type {?} */ directiveFactory:\n      angular.IAnnotatedFunction = function(\n                                       $compile: angular.ICompileService,\n                                       $injector: angular.IInjectorService,\n                                       $parse: angular.IParseService): angular.IDirective {\n    // When using `UpgradeModule`, we don't need to ensure callbacks to Angular APIs (e.g. change\n    // detection) are run inside the Angular zone, because `$digest()` will be run inside the zone\n    // (except if explicitly escaped, in which case we shouldn't force it back in).\n    // When using `downgradeModule()` though, we need to ensure such callbacks are run inside the\n    // Angular zone.\n    let /** @type {?} */ needsNgZone = false;\n    let /** @type {?} */ wrapCallback = <T>(cb: () => T) => cb;\n    let /** @type {?} */ ngZone: NgZone;\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes,\n             required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const /** @type {?} */ ngModel: angular.INgModelController = required[1];\n        let /** @type {?} */ parentInjector: Injector|Thenable<Injector>|undefined = required[0];\n        let /** @type {?} */ ranAsync = false;\n\n        if (!parentInjector) {\n          const /** @type {?} */ lazyModuleRef = /** @type {?} */(( $injector.get(LAZY_MODULE_REF) as LazyModuleRef));\n          needsNgZone = lazyModuleRef.needsNgZone;\n          parentInjector = lazyModuleRef.injector || /** @type {?} */(( lazyModuleRef.promise as Promise<Injector>));\n        }\n\n        const /** @type {?} */ doDowngrade = (injector: Injector) => {\n          const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver =\n              injector.get(ComponentFactoryResolver);\n          const /** @type {?} */ componentFactory: ComponentFactory<any> = /** @type {?} */((\n              componentFactoryResolver.resolveComponentFactory(info.component)));\n\n          if (!componentFactory) {\n            throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n          }\n\n          const /** @type {?} */ id = idPrefix + (idCount++);\n          const /** @type {?} */ injectorPromise = new ParentInjectorPromise(element);\n          const /** @type {?} */ facade = new DowngradeComponentAdapter(\n              id, element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory, wrapCallback);\n\n          const /** @type {?} */ projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs(needsNgZone, info.propagateDigest);\n          facade.setupOutputs();\n          facade.registerCleanup(needsNgZone);\n\n          injectorPromise.resolve(facade.getInjector());\n\n          if (ranAsync) {\n            // If this is run async, it is possible that it is not run inside a\n            // digest and initial input values will not be detected.\n            scope.$evalAsync(() => {});\n          }\n        };\n\n        const /** @type {?} */ downgradeFn = !needsNgZone ? doDowngrade : (injector: Injector) => {\n          if (!ngZone) {\n            ngZone = injector.get(NgZone);\n            wrapCallback = <T>(cb: () => T) => () =>\n                NgZone.isInAngularZone() ? cb() : ngZone.run(cb);\n          }\n\n          wrapCallback(() => doDowngrade(injector))();\n        };\n\n        if (isThenable<Injector>(parentInjector)) {\n          parentInjector.then(downgradeFn);\n        } else {\n          downgradeFn(parentInjector);\n        }\n\n        ranAsync = true;\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate injectorKey: string = controllerKey(INJECTOR_KEY);\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) { /** @type {?} */((\n    // Store the promise on the element.\n    element.data))(this.injectorKey, this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector; /** @type {?} */((\n\n    // Store the real injector on the element.\n    this.element.data))(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = /** @type {?} */(( null));\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.injectorKey;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n/**\n * @template T\n * @param {?} obj\n * @return {?}\n */\nfunction isThenable<T>(obj: object): obj is Thenable<T> {\n  return isFunction(( /** @type {?} */((obj as any))).then);\n}\n"]}