{"version":3,"file":"compiler-testing.umd.js","sources":["../../../../packages/compiler/testing/src/schema_registry_mock.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/compiler/testing/src/directive_resolver_mock.ts","../../../../packages/compiler/testing/src/ng_module_resolver_mock.ts","../../../../packages/compiler/testing/src/pipe_resolver_mock.ts","../../../../packages/compiler/testing/src/metadata_overrider.ts","../../../../packages/compiler/testing/src/testing.ts","../../../../packages/compiler/testing/public_api.ts","../../../../packages/compiler/testing/index.ts"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementSchemaRegistry} from '@angular/compiler';\nimport {SchemaMetadata, SecurityContext} from '@angular/core';\nexport class MockSchemaRegistry implements ElementSchemaRegistry {\n/**\n * @param {?} existingProperties\n * @param {?} attrPropMapping\n * @param {?} existingElements\n * @param {?} invalidProperties\n * @param {?} invalidAttributes\n */\nconstructor(\npublic existingProperties: {[key: string]: boolean},\npublic attrPropMapping: {[key: string]: string},\npublic existingElements: {[key: string]: boolean},\npublic invalidProperties: Array<string>,\npublic invalidAttributes: Array<string>) {}\n/**\n * @param {?} tagName\n * @param {?} property\n * @param {?} schemas\n * @return {?}\n */\nhasProperty(tagName: string, property: string, schemas: SchemaMetadata[]): boolean {\n    const /** @type {?} */ value = this.existingProperties[property];\n    return value === void 0 ? true : value;\n  }\n/**\n * @param {?} tagName\n * @param {?} schemaMetas\n * @return {?}\n */\nhasElement(tagName: string, schemaMetas: SchemaMetadata[]): boolean {\n    const /** @type {?} */ value = this.existingElements[tagName.toLowerCase()];\n    return value === void 0 ? true : value;\n  }\n/**\n * @return {?}\n */\nallKnownElementNames(): string[] { return Object.keys(this.existingElements); }\n/**\n * @param {?} selector\n * @param {?} property\n * @param {?} isAttribute\n * @return {?}\n */\nsecurityContext(selector: string, property: string, isAttribute: boolean): SecurityContext {\n    return SecurityContext.NONE;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\ngetMappedPropName(attrName: string): string { return this.attrPropMapping[attrName] || attrName; }\n/**\n * @return {?}\n */\ngetDefaultComponentElementName(): string { return 'ng-component'; }\n/**\n * @param {?} name\n * @return {?}\n */\nvalidateProperty(name: string): {error: boolean, msg?: string} {\n    if (this.invalidProperties.indexOf(name) > -1) {\n      return {error: true, msg: `Binding to property '${name}' is disallowed for security reasons`};\n    } else {\n      return {error: false};\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nvalidateAttribute(name: string): {error: boolean, msg?: string} {\n    if (this.invalidAttributes.indexOf(name) > -1) {\n      return {\n        error: true,\n        msg: `Binding to attribute '${name}' is disallowed for security reasons`\n      };\n    } else {\n      return {error: false};\n    }\n  }\n/**\n * @param {?} propName\n * @return {?}\n */\nnormalizeAnimationStyleProperty(propName: string): string { return propName; }\n/**\n * @param {?} camelCaseProp\n * @param {?} userProvidedProp\n * @param {?} val\n * @return {?}\n */\nnormalizeAnimationStyleValue(camelCaseProp: string, userProvidedProp: string, val: string|number):\n      {error: string, value: string} {\n    return {error: /** @type {?} */(( null)), value: val.toString()};\n  }\n}\n\nfunction MockSchemaRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nMockSchemaRegistry.prototype.existingProperties;\n/** @type {?} */\nMockSchemaRegistry.prototype.attrPropMapping;\n/** @type {?} */\nMockSchemaRegistry.prototype.existingElements;\n/** @type {?} */\nMockSchemaRegistry.prototype.invalidProperties;\n/** @type {?} */\nMockSchemaRegistry.prototype.invalidAttributes;\n}\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileReflector, DirectiveResolver} from '@angular/compiler';\nimport {Compiler, Component, Directive, Injectable, Injector, Provider, Type, resolveForwardRef, ɵViewMetadata as ViewMetadata} from '@angular/core';\n/**\n * An implementation of {\\@link DirectiveResolver} that allows overriding\n * various properties of directives.\n */\nexport class MockDirectiveResolver extends DirectiveResolver {\nprivate _directives = new Map<Type<any>, Directive>();\nprivate _providerOverrides = new Map<Type<any>, any[]>();\nprivate _viewProviderOverrides = new Map<Type<any>, any[]>();\nprivate _views = new Map<Type<any>, ViewMetadata>();\nprivate _inlineTemplates = new Map<Type<any>, string>();\n/**\n * @param {?} _injector\n * @param {?} reflector\n */\nconstructor(private _injector: Injector, reflector: CompileReflector) { super(reflector); }\n/**\n * @return {?}\n */\n\nprivate get _compiler(): Compiler { return this._injector.get(Compiler); }\n/**\n * @param {?} component\n * @return {?}\n */\n\nprivate _clearCacheFor(component: Type<any>) { this._compiler.clearCacheFor(component); }\n\n  resolve(type: Type<any>): Directive;\n  resolve(type: Type<any>, throwIfNotFound: true): Directive;\n  resolve(type: Type<any>, throwIfNotFound: boolean): Directive|null;\n/**\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): Directive|null {\n    let /** @type {?} */ metadata = this._directives.get(type) || null;\n    if (!metadata) {\n      metadata = super.resolve(type, throwIfNotFound);\n    }\n    if (!metadata) {\n      return null;\n    }\n\n    const /** @type {?} */ providerOverrides = this._providerOverrides.get(type);\n    const /** @type {?} */ viewProviderOverrides = this._viewProviderOverrides.get(type);\n\n    let /** @type {?} */ providers = metadata.providers;\n    if (providerOverrides != null) {\n      const /** @type {?} */ originalViewProviders: Provider[] = metadata.providers || [];\n      providers = originalViewProviders.concat(providerOverrides);\n    }\n\n    if (metadata instanceof Component) {\n      let /** @type {?} */ viewProviders = metadata.viewProviders;\n      if (viewProviderOverrides != null) {\n        const /** @type {?} */ originalViewProviders: Provider[] = metadata.viewProviders || [];\n        viewProviders = originalViewProviders.concat(viewProviderOverrides);\n      }\n\n      let /** @type {?} */ view = this._views.get(type) || metadata;\n      let /** @type {?} */ animations = view.animations;\n      let /** @type {?} */ templateUrl: string|undefined = view.templateUrl;\n\n      let /** @type {?} */ inlineTemplate = this._inlineTemplates.get(type);\n      if (inlineTemplate) {\n        templateUrl = undefined;\n      } else {\n        inlineTemplate = view.template;\n      }\n\n      return new Component({\n        selector: metadata.selector,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        host: metadata.host,\n        exportAs: metadata.exportAs,\n        moduleId: metadata.moduleId,\n        queries: metadata.queries,\n        changeDetection: metadata.changeDetection,\n        providers: providers,\n        viewProviders: viewProviders,\n        entryComponents: metadata.entryComponents,\n        template: inlineTemplate,\n        templateUrl: templateUrl,\n        animations: animations,\n        styles: view.styles,\n        styleUrls: view.styleUrls,\n        encapsulation: view.encapsulation,\n        interpolation: view.interpolation\n      });\n    }\n\n    return new Directive({\n      selector: metadata.selector,\n      inputs: metadata.inputs,\n      outputs: metadata.outputs,\n      host: metadata.host,\n      providers: providers,\n      exportAs: metadata.exportAs,\n      queries: metadata.queries\n    });\n  }\n/**\n * Overrides the {\\@link Directive} for a directive.\n * @param {?} type\n * @param {?} metadata\n * @return {?}\n */\nsetDirective(type: Type<any>, metadata: Directive): void {\n    this._directives.set(type, metadata);\n    this._clearCacheFor(type);\n  }\n/**\n * @param {?} type\n * @param {?} providers\n * @return {?}\n */\nsetProvidersOverride(type: Type<any>, providers: Provider[]): void {\n    this._providerOverrides.set(type, providers);\n    this._clearCacheFor(type);\n  }\n/**\n * @param {?} type\n * @param {?} viewProviders\n * @return {?}\n */\nsetViewProvidersOverride(type: Type<any>, viewProviders: Provider[]): void {\n    this._viewProviderOverrides.set(type, viewProviders);\n    this._clearCacheFor(type);\n  }\n/**\n * Overrides the {\\@link ViewMetadata} for a component.\n * @param {?} component\n * @param {?} view\n * @return {?}\n */\nsetView(component: Type<any>, view: ViewMetadata): void {\n    this._views.set(component, view);\n    this._clearCacheFor(component);\n  }\n/**\n * Overrides the inline template for a component - other configuration remains unchanged.\n * @param {?} component\n * @param {?} template\n * @return {?}\n */\nsetInlineTemplate(component: Type<any>, template: string): void {\n    this._inlineTemplates.set(component, template);\n    this._clearCacheFor(component);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n{type: CompileReflector, },\n];\n}\n\nfunction MockDirectiveResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nMockDirectiveResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMockDirectiveResolver.ctorParameters;\n/** @type {?} */\nMockDirectiveResolver.prototype._directives;\n/** @type {?} */\nMockDirectiveResolver.prototype._providerOverrides;\n/** @type {?} */\nMockDirectiveResolver.prototype._viewProviderOverrides;\n/** @type {?} */\nMockDirectiveResolver.prototype._views;\n/** @type {?} */\nMockDirectiveResolver.prototype._inlineTemplates;\n/** @type {?} */\nMockDirectiveResolver.prototype._injector;\n}\n\n/**\n * @param {?} tree\n * @param {?} out\n * @return {?}\n */\nfunction flattenArray(tree: any[], out: Array<Type<any>|any[]>): void {\n  if (tree == null) return;\n  for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n    const /** @type {?} */ item = resolveForwardRef(tree[i]);\n    if (Array.isArray(item)) {\n      flattenArray(item, out);\n    } else {\n      out.push(item);\n    }\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, NgModuleResolver} from '@angular/compiler';\nimport {Compiler, Injectable, Injector, NgModule, Type} from '@angular/core';\nexport class MockNgModuleResolver extends NgModuleResolver {\nprivate _ngModules = new Map<Type<any>, NgModule>();\n/**\n * @param {?} _injector\n * @param {?} reflector\n */\nconstructor(private _injector: Injector, reflector: CompileReflector) { super(reflector); }\n/**\n * Overrides the {\\@link NgModule} for a module.\n * @param {?} type\n * @param {?} metadata\n * @return {?}\n */\nsetNgModule(type: Type<any>, metadata: NgModule): void {\n    this._ngModules.set(type, metadata);\n    this._clearCacheFor(type);\n  }\n/**\n * Returns the {\\@link NgModule} for a module:\n * - Set the {\\@link NgModule} to the overridden view when it exists or fallback to the\n * default\n * `NgModuleResolver`, see `setNgModule`.\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): NgModule {\n    return this._ngModules.get(type) || /** @type {?} */(( super.resolve(type, throwIfNotFound)));\n  }\n/**\n * @return {?}\n */\n\nprivate get _compiler(): Compiler { return this._injector.get(Compiler); }\n/**\n * @param {?} component\n * @return {?}\n */\n\nprivate _clearCacheFor(component: Type<any>) { this._compiler.clearCacheFor(component); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n{type: CompileReflector, },\n];\n}\n\nfunction MockNgModuleResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nMockNgModuleResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMockNgModuleResolver.ctorParameters;\n/** @type {?} */\nMockNgModuleResolver.prototype._ngModules;\n/** @type {?} */\nMockNgModuleResolver.prototype._injector;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, PipeResolver} from '@angular/compiler';\nimport {Compiler, Injectable, Injector, Pipe, Type} from '@angular/core';\nexport class MockPipeResolver extends PipeResolver {\nprivate _pipes = new Map<Type<any>, Pipe>();\n/**\n * @param {?} _injector\n * @param {?} refector\n */\nconstructor(private _injector: Injector, refector: CompileReflector) { super(refector); }\n/**\n * @return {?}\n */\n\nprivate get _compiler(): Compiler { return this._injector.get(Compiler); }\n/**\n * @param {?} pipe\n * @return {?}\n */\n\nprivate _clearCacheFor(pipe: Type<any>) { this._compiler.clearCacheFor(pipe); }\n/**\n * Overrides the {\\@link Pipe} for a pipe.\n * @param {?} type\n * @param {?} metadata\n * @return {?}\n */\nsetPipe(type: Type<any>, metadata: Pipe): void {\n    this._pipes.set(type, metadata);\n    this._clearCacheFor(type);\n  }\n/**\n * Returns the {\\@link Pipe} for a pipe:\n * - Set the {\\@link Pipe} to the overridden view when it exists or fallback to the\n * default\n * `PipeResolver`, see `setPipe`.\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): Pipe {\n    let /** @type {?} */ metadata = this._pipes.get(type);\n    if (!metadata) {\n      metadata = /** @type {?} */(( super.resolve(type, throwIfNotFound)));\n    }\n    return metadata;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n{type: CompileReflector, },\n];\n}\n\nfunction MockPipeResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nMockPipeResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMockPipeResolver.ctorParameters;\n/** @type {?} */\nMockPipeResolver.prototype._pipes;\n/** @type {?} */\nMockPipeResolver.prototype._injector;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵstringify as stringify} from '@angular/core';\nimport {MetadataOverride} from '@angular/core/testing';\n\ntype StringMap = {\n  [key: string]: any\n};\n\nlet /** @type {?} */ _nextReferenceId = 0;\nexport class MetadataOverrider {\nprivate _references = new Map<any, string>();\n/**\n * Creates a new instance for the given metadata class\n * based on an old instance and overrides.\n * @template C, T\n * @param {?} metadataClass\n * @param {?} oldMetadata\n * @param {?} override\n * @return {?}\n */\noverrideMetadata<C extends T, T>(\n      metadataClass: {new (options: T): C;}, oldMetadata: C, override: MetadataOverride<T>): C {\n    const /** @type {?} */ props: StringMap = {};\n    if (oldMetadata) {\n      _valueProps(oldMetadata).forEach((prop) => props[prop] = ( /** @type {?} */((<any>oldMetadata)))[prop]);\n    }\n\n    if (override.set) {\n      if (override.remove || override.add) {\n        throw new Error(`Cannot set and add/remove ${stringify(metadataClass)} at the same time!`);\n      }\n      setMetadata(props, override.set);\n    }\n    if (override.remove) {\n      removeMetadata(props, override.remove, this._references);\n    }\n    if (override.add) {\n      addMetadata(props, override.add);\n    }\n    return new metadataClass( /** @type {?} */((<any>props)));\n  }\n}\n\nfunction MetadataOverrider_tsickle_Closure_declarations() {\n/** @type {?} */\nMetadataOverrider.prototype._references;\n}\n\n/**\n * @param {?} metadata\n * @param {?} remove\n * @param {?} references\n * @return {?}\n */\nfunction removeMetadata(metadata: StringMap, remove: any, references: Map<any, string>) {\n  const /** @type {?} */ removeObjects = new Set<string>();\n  for (const /** @type {?} */ prop in remove) {\n    const /** @type {?} */ removeValue = remove[prop];\n    if (removeValue instanceof Array) {\n      removeValue.forEach(\n          (value: any) => { removeObjects.add(_propHashKey(prop, value, references)); });\n    } else {\n      removeObjects.add(_propHashKey(prop, removeValue, references));\n    }\n  }\n\n  for (const /** @type {?} */ prop in metadata) {\n    const /** @type {?} */ propValue = metadata[prop];\n    if (propValue instanceof Array) {\n      metadata[prop] = propValue.filter(\n          (value: any) => !removeObjects.has(_propHashKey(prop, value, references)));\n    } else {\n      if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n        metadata[prop] = undefined;\n      }\n    }\n  }\n}\n/**\n * @param {?} metadata\n * @param {?} add\n * @return {?}\n */\nfunction addMetadata(metadata: StringMap, add: any) {\n  for (const /** @type {?} */ prop in add) {\n    const /** @type {?} */ addValue = add[prop];\n    const /** @type {?} */ propValue = metadata[prop];\n    if (propValue != null && propValue instanceof Array) {\n      metadata[prop] = propValue.concat(addValue);\n    } else {\n      metadata[prop] = addValue;\n    }\n  }\n}\n/**\n * @param {?} metadata\n * @param {?} set\n * @return {?}\n */\nfunction setMetadata(metadata: StringMap, set: any) {\n  for (const /** @type {?} */ prop in set) {\n    metadata[prop] = set[prop];\n  }\n}\n/**\n * @param {?} propName\n * @param {?} propValue\n * @param {?} references\n * @return {?}\n */\nfunction _propHashKey(propName: any, propValue: any, references: Map<any, string>): string {\n  const /** @type {?} */ replacer = (key: any, value: any) => {\n    if (typeof value === 'function') {\n      value = _serializeReference(value, references);\n    }\n    return value;\n  };\n\n  return `${propName}:${JSON.stringify(propValue, replacer)}`;\n}\n/**\n * @param {?} ref\n * @param {?} references\n * @return {?}\n */\nfunction _serializeReference(ref: any, references: Map<any, string>): string {\n  let /** @type {?} */ id = references.get(ref);\n  if (!id) {\n    id = `${stringify(ref)}${_nextReferenceId++}`;\n    references.set(ref, id);\n  }\n  return id;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _valueProps(obj: any): string[] {\n  const /** @type {?} */ props: string[] = [];\n  // regular public props\n  Object.keys(obj).forEach((prop) => {\n    if (!prop.startsWith('_')) {\n      props.push(prop);\n    }\n  });\n\n  // getters\n  let /** @type {?} */ proto = obj;\n  while (proto = Object.getPrototypeOf(proto)) {\n    Object.keys(proto).forEach((protoProp) => {\n      const /** @type {?} */ desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n      if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n        props.push(protoProp);\n      }\n    });\n  }\n  return props;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\nexport {MockSchemaRegistry} from './schema_registry_mock';\nexport {MockDirectiveResolver} from './directive_resolver_mock';\nexport {MockNgModuleResolver} from './ng_module_resolver_mock';\nexport {MockPipeResolver} from './pipe_resolver_mock';\n\nimport {createPlatformFactory, ModuleWithComponentFactories, Injectable, CompilerOptions, COMPILER_OPTIONS, CompilerFactory, ComponentFactory, NgModuleFactory, Injector, NgModule, Component, Directive, Pipe, Type, PlatformRef, ɵstringify} from '@angular/core';\nimport {MetadataOverride, ɵTestingCompilerFactory as TestingCompilerFactory, ɵTestingCompiler as TestingCompiler} from '@angular/core/testing';\nimport {platformCoreDynamic, JitCompiler, DirectiveResolver, NgModuleResolver, PipeResolver, CompileMetadataResolver, CompileReflector} from '@angular/compiler';\nimport {MockDirectiveResolver} from './directive_resolver_mock';\nimport {MockNgModuleResolver} from './ng_module_resolver_mock';\nimport {MockPipeResolver} from './pipe_resolver_mock';\nimport {MetadataOverrider} from './metadata_overrider';\nexport class TestingCompilerFactoryImpl implements TestingCompilerFactory {\n/**\n * @param {?} _compilerFactory\n */\nconstructor(private _compilerFactory: CompilerFactory) {}\n/**\n * @param {?} options\n * @return {?}\n */\ncreateTestingCompiler(options: CompilerOptions[]): TestingCompiler {\n    const /** @type {?} */ compiler = /** @type {?} */(( <JitCompiler>this._compilerFactory.createCompiler(options)));\n    return new TestingCompilerImpl(\n        compiler, compiler.injector.get(MockDirectiveResolver),\n        compiler.injector.get(MockPipeResolver), compiler.injector.get(MockNgModuleResolver),\n        compiler.injector.get(CompileMetadataResolver));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompilerFactory, },\n];\n}\n\nfunction TestingCompilerFactoryImpl_tsickle_Closure_declarations() {\n/** @type {?} */\nTestingCompilerFactoryImpl.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestingCompilerFactoryImpl.ctorParameters;\n/** @type {?} */\nTestingCompilerFactoryImpl.prototype._compilerFactory;\n}\n\nexport class TestingCompilerImpl implements TestingCompiler {\nprivate _overrider = new MetadataOverrider();\n/**\n * @param {?} _compiler\n * @param {?} _directiveResolver\n * @param {?} _pipeResolver\n * @param {?} _moduleResolver\n * @param {?} _metadataResolver\n */\nconstructor(\nprivate _compiler: JitCompiler,\nprivate _directiveResolver: MockDirectiveResolver,\nprivate _pipeResolver: MockPipeResolver,\nprivate _moduleResolver: MockNgModuleResolver,\nprivate _metadataResolver: CompileMetadataResolver) {}\n/**\n * @return {?}\n */\nget injector(): Injector { return this._compiler.injector; }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._compiler.compileModuleSync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._compiler.compileModuleAsync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    return this._compiler.getNgContentSelectors(component);\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\ngetComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    return this._compiler.getComponentFactory(component);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ncheckOverrideAllowed(type: Type<any>) {\n    if (this._compiler.hasAotSummary(type)) {\n      throw new Error(`${ɵstringify(type)} was AOT compiled, so its metadata cannot be changed.`);\n    }\n  }\n/**\n * @param {?} ngModule\n * @param {?} override\n * @return {?}\n */\noverrideModule(ngModule: Type<any>, override: MetadataOverride<NgModule>): void {\n    this.checkOverrideAllowed(ngModule);\n    const /** @type {?} */ oldMetadata = this._moduleResolver.resolve(ngModule, false);\n    this._moduleResolver.setNgModule(\n        ngModule, this._overrider.overrideMetadata(NgModule, oldMetadata, override));\n  }\n/**\n * @param {?} directive\n * @param {?} override\n * @return {?}\n */\noverrideDirective(directive: Type<any>, override: MetadataOverride<Directive>): void {\n    this.checkOverrideAllowed(directive);\n    const /** @type {?} */ oldMetadata = this._directiveResolver.resolve(directive, false);\n    this._directiveResolver.setDirective(\n        directive, this._overrider.overrideMetadata(Directive, /** @type {?} */(( oldMetadata)), override));\n  }\n/**\n * @param {?} component\n * @param {?} override\n * @return {?}\n */\noverrideComponent(component: Type<any>, override: MetadataOverride<Component>): void {\n    this.checkOverrideAllowed(component);\n    const /** @type {?} */ oldMetadata = this._directiveResolver.resolve(component, false);\n    this._directiveResolver.setDirective(\n        component, this._overrider.overrideMetadata(Component, /** @type {?} */(( oldMetadata)), override));\n  }\n/**\n * @param {?} pipe\n * @param {?} override\n * @return {?}\n */\noverridePipe(pipe: Type<any>, override: MetadataOverride<Pipe>): void {\n    this.checkOverrideAllowed(pipe);\n    const /** @type {?} */ oldMetadata = this._pipeResolver.resolve(pipe, false);\n    this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(Pipe, oldMetadata, override));\n  }\n/**\n * @param {?} summaries\n * @return {?}\n */\nloadAotSummaries(summaries: () => any[]) { this._compiler.loadAotSummaries(summaries); }\n/**\n * @return {?}\n */\nclearCache(): void { this._compiler.clearCache(); }\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) { this._compiler.clearCacheFor(type); }\n}\n\nfunction TestingCompilerImpl_tsickle_Closure_declarations() {\n/** @type {?} */\nTestingCompilerImpl.prototype._overrider;\n/** @type {?} */\nTestingCompilerImpl.prototype._compiler;\n/** @type {?} */\nTestingCompilerImpl.prototype._directiveResolver;\n/** @type {?} */\nTestingCompilerImpl.prototype._pipeResolver;\n/** @type {?} */\nTestingCompilerImpl.prototype._moduleResolver;\n/** @type {?} */\nTestingCompilerImpl.prototype._metadataResolver;\n}\n\n/**\n * Platform for dynamic tests\n * \n * \\@experimental\n */\nexport const /** @type {?} */ platformCoreDynamicTesting: (extraProviders?: any[]) => PlatformRef =\n    createPlatformFactory(platformCoreDynamic, 'coreDynamicTesting', [\n      {\n        provide: COMPILER_OPTIONS,\n        useValue: {\n          providers: [\n            {provide: MockPipeResolver, deps: [Injector, CompileReflector]},\n            {provide: PipeResolver, useExisting: MockPipeResolver},\n            {provide: MockDirectiveResolver, deps: [Injector, CompileReflector]},\n            {provide: DirectiveResolver, useExisting: MockDirectiveResolver},\n            {provide: MockNgModuleResolver, deps: [Injector, CompileReflector]},\n            {provide: NgModuleResolver, useExisting: MockNgModuleResolver},\n          ]\n        },\n        multi: true\n      },\n      {\n        provide: TestingCompilerFactory,\n        useClass: TestingCompilerFactoryImpl,\n        deps: [CompilerFactory]\n      }\n    ]);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport {TestingCompilerFactoryImpl,TestingCompilerImpl,platformCoreDynamicTesting,MockSchemaRegistry,MockDirectiveResolver,MockNgModuleResolver,MockPipeResolver} from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {TestingCompilerFactoryImpl,TestingCompilerImpl,platformCoreDynamicTesting,MockSchemaRegistry,MockDirectiveResolver,MockNgModuleResolver,MockPipeResolver} from './public_api';\n"],"names":["SecurityContext","tslib_1.__extends","Compiler","Component","Directive","DirectiveResolver","Injectable","Injector","CompileReflector","NgModuleResolver","PipeResolver","stringify","CompileMetadataResolver","CompilerFactory","ɵstringify","NgModule","Pipe","createPlatformFactory","platformCoreDynamic","COMPILER_OPTIONS","TestingCompilerFactory"],"mappings":"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"}