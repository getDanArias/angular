{"version":3,"sources":["/Users/jasonaden/Projects/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","TemplateAst","QueryMatch","TemplateAstVisitor","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","TagDefinition","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","obj","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","OutputContext","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","Éµstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","ProxyClass","CompileIdentifierMetadata","CompileTypeSummary","CompileDiDependencyMetadata","CompileProviderMetadata","CompileFactoryMetadata","tokenName","token","tokenReference","CompileTokenMetadata","CompileTypeMetadata","CompileQueryMetadata","CompileTemplateSummary","CompileEntryComponentMetadata","CompileDirectiveSummary","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","CompilePipeSummary","CompileNgModuleSummary","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","AstVisitor","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","Node","Visitor","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","join","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","PrenormalizedTemplateMetadata","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","Summary","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ÉµERROR_COMPONENT_TYPE","ExpressionVisitor","StatementVisitor","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","entries","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","symbol","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createTypeReferenceStub","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","NgAnalyzedModules","NgAnalyzeModulesHost","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","StaticSymbolResolverHost","unescapeIdentifier","substr","AotSummaryResolverHost","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","console","ÉµConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","locale","enableSummariesForJit","AotCompilerOptions","AotCompilerHost","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","_this","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","importExpr$$1","moduleName","runtime","genFilePath","ExtractorHost","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","VERSION","Version","setPrototypeOf","__proto__","hasOwnProperty","__assign","assign","t","call","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","cb","results","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","name_1","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","name_2","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","MODULE_SUFFIX","ValueTransformer","SyncAsync","assertSync","ÉµisPromise","then","all","syncAsyncValues","some","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","CompileReflector","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","letName","locationText","skip","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","Attribute$$1","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ÉµCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","Éµcmf","moduleDef","Éµmod","moduleProviderDef","Éµmpd","RegisterModuleFactoryFn","ÉµregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ÉµinlineInterpolate","interpolate","Éµinterpolate","EMPTY_ARRAY","ÉµEMPTY_ARRAY","EMPTY_MAP","ÉµEMPTY_MAP","Renderer","viewDef","Éµvid","elementDef","Éµeld","anchorDef","Éµand","textDef","Éµted","directiveDef","Éµdid","Éµprd","queryDef","Éµqud","pureArrayDef","Éµpad","pureObjectDef","Éµpod","purePipeDef","Éµppd","pipeDef","Éµpid","nodeValue","Éµnov","ngContentDef","Éµncd","Éµunv","createRendererType2","Éµcrt","RendererType2","ViewDefinition","createComponentFactory","Éµccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","getMappedPropName","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","validateAttribute","validateProperty","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","_reflector","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","hasElement","allDirectiveEvents","event","hasProperty","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizeTemplateOnly","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","moduleId","isNgModule","metas","annotation","SummaryResolver","JitSummaryResolver","_summaries","getLibraryFileName","getImportAs","addSummary","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","Type$$1","modifiers","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassField","ClassMethod","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","OutputEmitter","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","suppliedParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schemaMetas","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","compileStyles","needsStyleShim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ÉµelementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","_addProviderNode","componentDirMeta","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_enableSummariesForJit","_symbolResolver","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","emitAllStubs","sourceModules","_compileStubFile","emitPartialStubs","emitAllImpls","_compileImplFile","partial","generatedFiles","ngFactoryOutputCtx","_createOutputContext","jitSummaryOutputCtx","partialJitStubRequired","partialFactoryStubRequired","stylesheetMeta","styleContext","_codegenSourceModule","_createSummary","_compileModule","componentStylesheet","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","arity","getTypeArity","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","ANGULAR_ROUTER","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","ROUTES","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ÉµgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","JitReflector","reflectionCapabilities","ÉµReflectionCapabilities","cmpMetadata","scheme","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","parser","Ignore","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory","Éµq","Éµo","Éµp","Éµn","Éµm","Éµa","Éµk","Éµg","Éµh","Éµj","Éµi","Éµd","Éµe","Éµf","Éµc","Éµb","Éµl"],"mappings":"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8F,KAAMoqB,IAAKuyE,aAC3D38F,OAASgsB,gBACT5B,IAAIwvE,MAAM,KAAM,KAChBviG,KAAKq3B,UAAU1uB,KAAMoqB,IAAKuyE,eAG3BvuE,mBACTgtE,wBAgBEpsE,kBAaJJ,iBAAgBt3B,cAAcsmB,gBAAgBy/E,MAC1C,gBACA,cACA,gBAEJzuE,gBAAgBt3B,cAAcsmB,gBAAgBsB,OAAQ,YAEtD0P,gBAAgBt3B,cAAcsmB,gBAAgB0/E,KAC1C,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhE1uE,gBAAgBt3B,cAAcsmB,gBAAgB2/E,cAC1C,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAcJ,GAAIC,SAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SAuDTC,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZj9D,yBAA4B,SAAUh1B,QAEtC,QAASg1B,4BACL,GAAIwC,OAAQx3B,OAAOm6B,KAAKhvC,OAASA,IAqCjC,OApCAqsC,OAAM06D,WACNR,OAAOllG,QAAQ,SAAU2lG,aACrB,GAAqBr+F,SACjBiQ,GAAKouF,YAAYj7F,MAAM,KAAMk7F,QAAUruF,GAAG,GAAIsuF,cAAgBtuF,GAAG,GAChDuuF,WAAaD,cAAcn7F,MAAM,KAClDgN,GAAKkuF,QAAQl7F,MAAM,KAAMq7F,UAAYruF,GAAG,GAAIsuF,UAAYtuF,GAAG,EAC/DquF,WAAUr7F,MAAM,KAAK1K,QAAQ,SAAU+d,KAAO,MAAOitB,OAAM06D,QAAQ3nF,IAAI1c,eAAiBiG,MACxF,IAAqB2+F,WAAYD,WAAah7D,MAAM06D,QAAQM,UAAU3kG,cAClE4kG,YACA7mG,OAAO+5B,KAAK8sE,WAAWjmG,QAAQ,SAAUw2B,MAAQlvB,KAAKkvB,MAAQyvE,UAAUzvE,QAE5EsvE,WAAW9lG,QAAQ,SAAUkmG,UACzB,GAAIA,SAASpkG,OAAS,EAClB,OAAQokG,SAAS,IACb,IAAK,IAMD,KACJ,KAAK,IACD5+F,KAAK4+F,SAAS36E,UAAU,IAAMu5E,OAC9B,MACJ,KAAK,IACDx9F,KAAK4+F,SAAS36E,UAAU,IAAMw5E,MAC9B,MACJ,KAAK,IACDz9F,KAAK4+F,SAAS36E,UAAU,IAAM05E,MAC9B,MACJ,SACI39F,KAAK4+F,UAAYlB,YAK9Bh6D,MAoJX,MA3LAnsC,WAAU2pC,yBAA0Bh1B,QA+CpCg1B,yBAAyBrpC,UAAUopF,YAAc,SAAU5nF,QAAS2jB,SAAU6hF,aAC1E,GAAIA,YAAYp/C,KAAK,SAAUq/C,QAAU,MAAOA,QAAOxhG,OAAShG,cAAcynG,iBAAiBzhG,OAC3F,OAAO,CAEX,IAAIjE,QAAQJ,QAAQ,MAAO,EAAI,CAC3B,GAAIG,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIwlG,YAAYp/C,KAAK,SAAUq/C,QAAU,MAAOA,QAAOxhG,OAAShG,cAAc0nG,uBAAuB1hG,OAGjG,OAAO,EAGf,GAAqB2hG,mBAAoB5nG,KAAK+mG,QAAQ/kG,QAAQU,gBAAkB1C,KAAK+mG,QAAiB,OACtG,SAASa,kBAAkBjiF,WAO/BkkB,yBAAyBrpC,UAAUipF,WAAa,SAAUznF,QAASwlG,aAC/D,GAAIA,YAAYp/C,KAAK,SAAUq/C,QAAU,MAAOA,QAAOxhG,OAAShG,cAAcynG,iBAAiBzhG,OAC3F,OAAO,CAEX,IAAIjE,QAAQJ,QAAQ,MAAO,EAAI,CAC3B,GAAIG,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIwlG,YAAYp/C,KAAK,SAAUq/C,QAAU,MAAOA,QAAOxhG,OAAShG,cAAc0nG,uBAAuB1hG,OAEjG,OAAO,EAGf,QAASjG,KAAK+mG,QAAQ/kG,QAAQU,gBAgBlCmnC,yBAAyBrpC,UAAU8lB,gBAAkB,SAAUtkB,QAAS2jB,SAAUC,aAC1EA,cAEAD,SAAW3lB,KAAK6gF,kBAAkBl7D,WAItC3jB,QAAUA,QAAQU,cAClBijB,SAAWA,SAASjjB,aACpB,IAAqBqwB,KAAM4E,gBAAgB31B,QAAU,IAAM2jB,SAC3D,OAAIoN,KACOA,KAEXA,IAAM4E,gBAAgB,KAAOhS,UACtBoN,IAAMA,IAAM9yB,cAAcsmB,gBAAgBC,OAMrDqjB,yBAAyBrpC,UAAUqgF,kBAAoB,SAAUl7D,UAAY,MAAO6gF,eAAc7gF,WAAaA,UAI/GkkB,yBAAyBrpC,UAAUqxF,+BAAiC,WAAc,MAAO,gBAKzFhoD,yBAAyBrpC,UAAUmhF,iBAAmB,SAAU17E,MAC5D,GAAIA,KAAKvD,cAAckb,WAAW,MAAO,CACrC,GAAqBlZ,KAAM,8BAAgCuB,KAAO,0CAC7D,eAAiBA,KAAKnE,MAAM,GAAK,UACjC,SAAWmE,KAAO,sEACnB,kBACJ,QAASrB,OAAO,EAAMF,IAAKA,KAG3B,OAASE,OAAO,IAOxBilC,yBAAyBrpC,UAAUkhF,kBAAoB,SAAUz7E,MAC7D,GAAIA,KAAKvD,cAAckb,WAAW,MAAO,CACrC,GAAqBlZ,KAAM,+BAAiCuB,KAAO,0CAC9D,eAAiBA,KAAKnE,MAAM,GAAK,QACtC,QAAS8C,OAAO,EAAMF,IAAKA,KAG3B,OAASE,OAAO,IAMxBilC,yBAAyBrpC,UAAUulB,qBAAuB,WAAc,MAAOtlB,QAAO+5B,KAAKx6B,KAAK+mG,UAKhGl9D,yBAAyBrpC,UAAUqnG,gCAAkC,SAAUliF,UAC3E,MAAO/iB,qBAAoB+iB,WAQ/BkkB,yBAAyBrpC,UAAUsnG,6BAA+B,SAAUC,cAAeC,iBAAkB1jG,KACzG,GAAqB85B,MAAO,GACP6pE,OAAS3jG,IAAIuX,WAAWlY,OACxBi2D,SAAW,IAChC,IAAIhiC,uBAAuBmwE,gBAA0B,IAARzjG,KAAqB,MAARA,IACtD,GAAmB,gBAARA,KACP85B,KAAO,SAEN,CACD,GAAqB8pE,mBAAoB5jG,IAAI+c,MAAM,yBAC/C6mF,oBAAoD,GAA/BA,kBAAkB,GAAG/kG,SAC1Cy2D,SAAW,uCAAyCouC,iBAAmB,IAAM1jG,KAIzF,OAASM,MAAOg1D,SAAU/1D,MAAOokG,OAAS7pE,OAEvCyL,0BACT4zC,sBACF5zC,0BAAyBylB,aACnB3mD,KAAM4G,qBAGZs6B,yBAAyB0lB,eAAiB,WAAc,SA6CxD,IAAI44C,WAAa,WACb,QAASA,aACLnoG,KAAKooG,eAAgB,EAmUzB,MA3TAD,WAAU3nG,UAAU6nG,YAAc,SAAUpjF,QAAS/a,SAAUo+F,cACtC,SAAjBA,eAA2BA,aAAe,GAC9C,IAAqBC,kBAAmBvwE,wBAAwB/S,QAGhE,OAFAA,SAAU6S,cAAc7S,SACxBA,QAAUjlB,KAAKwoG,kBAAkBvjF,SAC1BjlB,KAAKyoG,cAAcxjF,QAAS/a,SAAUo+F,cAAgBC,kBAMjEJ,UAAU3nG,UAAUgoG,kBAAoB,SAAUvjF,SAE9C,MADAA,SAAUjlB,KAAK0oG,mCAAmCzjF,SAC3CjlB,KAAK2oG,8BAA8B1jF,UAM9CkjF,UAAU3nG,UAAUkoG,mCAAqC,SAAUzjF,SAE/D,MAAOA,SAAQniB,QAAQ8lG,0BAA2B,WAE9C,IAAK,GADD5lG,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,OAAOD,GAAE,GAAK,OAOtBmlG,UAAU3nG,UAAUmoG,8BAAgC,SAAU1jF,SAE1D,MAAOA,SAAQniB,QAAQ+lG,kBAAmB,WAEtC,IAAK,GADD7lG,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,IAAqB81B,MAAO/1B,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAI,GACjE,OAAOA,GAAE,GAAK+1B,QAStBovE,UAAU3nG,UAAUioG,cAAgB,SAAUxjF,QAAS6jF,cAAeR,cAClE,GAAqBS,eAAgB/oG,KAAKgpG,iCAAiC/jF,QAU3E,OARAA,SAAUjlB,KAAKipG,6BAA6BhkF,SAC5CA,QAAUjlB,KAAKkpG,kBAAkBjkF,SACjCA,QAAUjlB,KAAKmpG,yBAAyBlkF,SACxCA,QAAUjlB,KAAKopG,2BAA2BnkF,SACtC6jF,gBACA7jF,QAAUjlB,KAAKqpG,gBAAgBpkF,QAAS6jF,cAAeR,eAE3DrjF,QAAUA,QAAU,KAAO8jF,cACpB9jF,QAAQthB,QAMnBwkG,UAAU3nG,UAAUwoG,iCAAmC,SAAU/jF,SAE7D,GACqBjiB,GADAsmG,EAAI,EAGzB,KADAC,0BAA0BtuE,UAAY,EACmB,QAAjDj4B,EAAIumG,0BAA0BvkD,KAAK//B,WAAoB,CAC3D,GAAqB8T,MAAO/1B,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAIA,EAAE,GACnEsmG,IAAKvwE,KAAO,OAEhB,MAAOuwE,IAMXnB,UAAU3nG,UAAU0oG,kBAAoB,SAAUjkF,SAC9C,MAAOjlB,MAAKwpG,kBAAkBvkF,QAASwkF,gBAAiBzpG,KAAK0pG,yBAMjEvB,UAAU3nG,UAAU2oG,yBAA2B,SAAUlkF,SACrD,MAAOjlB,MAAKwpG,kBAAkBvkF,QAAS0kF,uBAAwB3pG,KAAK4pG,gCAQxEzB,UAAU3nG,UAAUgpG,kBAAoB,SAAUvkF,QAAS4kF,OAAQC,cAE/D,MAAO7kF,SAAQniB,QAAQ+mG,OAAQ,WAE3B,IAAK,GADD7mG,MACKC,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCD,EAAEC,IAAMC,UAAUD,GAEtB,IAAID,EAAE,GAAI,CAGN,IAAK,GAFgBsU,OAAQtU,EAAE,GAAG+I,MAAM,KACnBu9F,KACK35F,EAAI,EAAGA,EAAI2H,MAAMnU,OAAQwM,IAAK,CACpD,GAAqBoO,GAAIzG,MAAM3H,GAAGhM,MAClC,KAAKoa,EACD,KACJurF,GAAE/nG,KAAKuoG,aAAaC,0BAA2BhsF,EAAG/a,EAAE,KAExD,MAAOsmG,GAAEzxF,KAAK,KAGd,MAAOkyF,2BAA4B/mG,EAAE,MAUjDmlG,UAAU3nG,UAAUopG,8BAAgC,SAAU5/F,KAAMwvB,KAAMb,QACtE,MAAIa,MAAK53B,QAAQooG,gBAAiB,EACvBhqG,KAAK0pG,uBAAuB1/F,KAAMwvB,KAAMb,QAGxC3uB,KAAOwvB,KAAOb,OAAS,KAAOa,KAAO,IAAMxvB,KAAO2uB,QASjEwvE,UAAU3nG,UAAUkpG,uBAAyB,SAAU1/F,KAAMwvB,KAAMb,QAC/D,MAAO3uB,MAAOwvB,KAAK12B,QAAQknG,cAAe,IAAMrxE,QAMpDwvE,UAAU3nG,UAAU4oG,2BAA6B,SAAUnkF,SACvD,MAAOglF,uBAAsB/+F,OAAO,SAAUhK,OAAQmS,SAAW,MAAOnS,QAAO4B,QAAQuQ,QAAS,MAAS4R,UAQ7GkjF,UAAU3nG,UAAU6oG,gBAAkB,SAAUpkF,QAAS6jF,cAAeR,cACpE,GAAIj8D,OAAQrsC,IACZ,OAAOm4B,cAAalT,QAAS,SAAU8T,MACnC,GAAqB7uB,UAAW6uB,KAAK7uB,SAChBwuB,QAAUK,KAAKL,OASpC,OARwB,KAApBK,KAAK7uB,SAAS,GACdA,SACImiC,MAAM69D,eAAenxE,KAAK7uB,SAAU4+F,cAAeR,aAAcj8D,MAAM+7D,gBAEtErvE,KAAK7uB,SAAS0T,WAAW,WAAamb,KAAK7uB,SAAS0T,WAAW,cACpEmb,KAAK7uB,SAAS0T,WAAW,UAAYmb,KAAK7uB,SAAS0T,WAAW,gBAC9D8a,QAAU2T,MAAMg9D,gBAAgBtwE,KAAKL,QAASowE,cAAeR,eAE1D,GAAItvE,SAAQ9uB,SAAUwuB,YAUrCyvE,UAAU3nG,UAAU0pG,eAAiB,SAAUhgG,SAAU4+F,cAAeR,aAAc6B,QAClF,GAAI99D,OAAQrsC,IACZ,OAAOkK,UAAS6B,MAAM,KACjBkM,IAAI,SAAUuhB,MAAQ,MAAOA,MAAK71B,OAAOoI,MAAMq+F,wBAC/CnyF,IAAI,SAAUoyF,WACf,GAAIC,aAAcD,UAAU,GAAIE,WAAaF,UAAUvoG,MAAM,GACxC0oG,WAAa,SAAUF,aACxC,MAAIj+D,OAAMo+D,sBAAsBH,YAAaxB,eAClCqB,OACH99D,MAAMq+D,0BAA0BJ,YAAaxB,cAAeR,cAC5Dj8D,MAAMs+D,oBAAoBL,YAAaxB,cAAeR,cAGnDgC,YAGf,QAAQE,WAAWF,cAAch/F,OAAOi/F,YAAY1yF,KAAK,OAExDA,KAAK,OAOdswF,UAAU3nG,UAAUiqG,sBAAwB,SAAUvgG,SAAU4+F,eAC5D,GAAqB8B,IAAK5qG,KAAK6qG,kBAAkB/B,cACjD,QAAQ8B,GAAG36F,KAAK/F,WAMpBi+F,UAAU3nG,UAAUqqG,kBAAoB,SAAU/B,eAC9C,GAAqBgC,KAAM,MACNC,IAAM,KAE3B,OADAjC,eAAgBA,cAAchmG,QAAQgoG,IAAK,OAAOhoG,QAAQioG,IAAK,OACxD,GAAIv3F,QAAO,KAAOs1F,cAAgB,IAAMkC,kBAAmB,MAQtE7C,UAAU3nG,UAAUmqG,oBAAsB,SAAUzgG,SAAU4+F,cAAeR,cAEzE,MAAOtoG,MAAKirG,0BAA0B/gG,SAAU4+F,cAAeR,eAQnEH,UAAU3nG,UAAUyqG,0BAA4B,SAAU/gG,SAAU4+F,cAAeR,cAG/E,GADA4C,gBAAgBjwE,UAAY,EACxBiwE,gBAAgBj7F,KAAK/F,UAAW,CAChC,GAAqBihG,aAAcnrG,KAAKooG,cAAgB,IAAME,aAAe,IAAMQ,aACnF,OAAO5+F,UACFpH,QAAQsoG,4BAA6B,SAAUC,IAAKnhG,UACrD,MAAOA,UAASpH,QAAQ,kBAAmB,SAAUmd,EAAGm3C,OAAQk0C,MAAOj0C,OACnE,MAAOD,QAAS+zC,YAAcG,MAAQj0C,UAGzCv0D,QAAQooG,gBAAiBC,YAAc,KAEhD,MAAOrC,eAAgB,IAAM5+F,UAQjCi+F,UAAU3nG,UAAUkqG,0BAA4B,SAAUxgG,SAAU4+F,cAAeR,cAC/E,GAAIj8D,OAAQrsC,KACSurG,KAAO,kBAC5BzC,eAAgBA,cAAchmG,QAAQyoG,KAAM,SAAUtrF,GAElD,IAAK,GADD3I,UACKrU,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCqU,MAAMrU,GAAK,GAAKC,UAAUD,GAE9B,OAAOqU,OAAM,IAEjB,IAAqBwR,UAAW,IAAMggF,cAAgB,IACjC0C,mBAAqB,SAAUztF,GAChD,GAAqB0tF,SAAU1tF,EAAEpa,MACjC,KAAK8nG,QACD,MAAO,EAEX,IAAI1tF,EAAEnc,QAAQmoG,4BAA6B,EACvC0B,QAAUp/D,MAAM4+D,0BAA0BltF,EAAG+qF,cAAeR,kBAE3D,CAED,GAAqBv5D,GAAIhxB,EAAEjb,QAAQooG,gBAAiB,GACpD,IAAIn8D,EAAE5rC,OAAS,EAAG,CACd,GAAqBymD,SAAU7a,EAAE1tB,MAAM,kBACnCuoC,WACA6hD,QAAU7hD,QAAQ,GAAK9gC,SAAW8gC,QAAQ,GAAKA,QAAQ,KAInE,MAAO6hD,UAEUC,YAAc,GAAIC,cAAazhG,SACpDA,UAAWwhG,YAAYhzE,SAMvB,KALA,GAEqB/B,KAFAi1E,eAAiB,GACjBxgC,WAAa,EAEbygC,IAAM,sBACNC,WAAa5hG,SAAStI,QAAQmoG,2BACb,QAA9BpzE,IAAMk1E,IAAI7mD,KAAK96C,YAAqB,CACxC,GAAqBo6F,WAAY3tE,IAAI,GAChB6C,KAAOtvB,SAASpI,MAAMspE,WAAYz0C,IAAIlxB,OAAO9B,OAG7CooG,WAAa3gC,YAAc0gC,WAAaN,mBAAmBhyE,MAAQA,IACxFoyE,iBAAkBG,WAAa,IAAMzH,UAAY,IACjDl5B,WAAaygC,IAAI5wE,UAIrB,MAFA2wE,iBAAkBJ,mBAAmBthG,SAAS0iB,UAAUw+C,aAEjDsgC,YAAYM,QAAQJ,iBAM/BzD,UAAU3nG,UAAUyoG,6BAA+B,SAAU/+F,UACzD,MAAOA,UAASpH,QAAQmpG,oBAAqBC,sBACxCppG,QAAQqpG,aAAcnC,gBAExB7B,aAEPwD,aAAgB,WAIhB,QAASA,cAAazhG,UAClB,GAAImiC,OAAQrsC,IACZA,MAAK0iE,gBACL1iE,KAAKyF,MAAQ,EAGbyE,SAAWA,SAASpH,QAAQ,gBAAiB,SAAUmd,EAAGmsF,MACtD,GAAqBC,WAAY,QAAUhgE,MAAM5mC,MAAQ,IAGzD,OAFA4mC,OAAMq2B,aAAanhE,KAAK6qG,MACxB//D,MAAM5mC,QACC4mG,YAIXrsG,KAAKssG,SAAWpiG,SAASpH,QAAQ,4BAA6B,SAAUmd,EAAGssF,OAAQz+F,KAC/E,GAAqBu+F,WAAY,QAAUhgE,MAAM5mC,MAAQ,IAGzD,OAFA4mC,OAAMq2B,aAAanhE,KAAKuM,KACxBu+B,MAAM5mC,QACC8mG,OAASF,YAgBxB,MARAV,cAAanrG,UAAUwrG,QAAU,SAAUtzE,SACvC,GAAI2T,OAAQrsC,IACZ,OAAO04B,SAAQ51B,QAAQ,gBAAiB,SAAUs/D,GAAI38D,OAAS,MAAO4mC,OAAMq2B,cAAcj9D,UAK9FkmG,aAAanrG,UAAUk4B,QAAU,WAAc,MAAO14B,MAAKssG,UACpDX,gBAEP/C,0BAA4B,4EAC5BC,kBAAoB,kEACpBU,0BAA4B,2EAC5BS,cAAgB,iBAEhBkC,qBAAuB,oBACvBM,aAAe,kDAGf/C,gBAAkB,GAAIj2F,QAAO,IAAMw2F,cAAgBwC,aAAc,OACjE7C,uBAAyB,GAAIn2F,QAAO,IAAM04F,qBAAuBM,aAAc,OAC/EzC,0BAA4BC,cAAgB,iBAC5CoB,4BAA8B,uCAC9BnB,uBACA,YACA,aAEA,mBACA,eAKAG,qBAAuB,sCACvBY,kBAAoB,6BACpBE,gBAAkB,oBAClBiB,aAAe,WACfF,oBAAsB,mBACtBl0E,WAAa,uBASbG,oBAAsB,2CAStBO,QAAU,wDACVS,SAAW,UACXQ,WAAa,IACbD,YAAc,IACdZ,kBAAoB,UACpBG,QAAW,WAKX,QAASA,SAAQ9uB,SAAUwuB,SACvB14B,KAAKkK,SAAWA,SAChBlK,KAAK04B,QAAUA,QAEnB,MAAOM,YA4BPW,wBAA2B,WAK3B,QAASA,yBAAwBnB,cAAeM,QAC5C94B,KAAKw4B,cAAgBA,cACrBx4B,KAAK84B,OAASA,OAElB,MAAOa,4BAkDP8yE,mBAAqB,SACrBC,UAAY,WAAaD,mBACzBE,aAAe,cAAgBF,mBAC/BG,wBAA2B,WAM3B,QAASA,yBAAwB3mG,KAAM0N,UAAWiwB,UAC9C5jC,KAAKiG,KAAOA,KACZjG,KAAK2T,UAAYA,UACjB3T,KAAK4jC,SAAWA,SAEpB,MAAOgpE,4BAEPC,mBAAsB,WAQtB,QAASA,oBAAmB5pE,UAAW6pE,UAAWnpE,aAAcopE,UAAWlhG,MACvE7L,KAAKijC,UAAYA,UACjBjjC,KAAK8sG,UAAYA,UACjB9sG,KAAK2jC,aAAeA,aACpB3jC,KAAK+sG,UAAYA,UACjB/sG,KAAK6L,KAAOA,KAEhB,MAAOghG,uBAEPtiE,cAAiB,WAIjB,QAASA,eAAcogD,cACnB3qF,KAAK2qF,aAAeA,aACpB3qF,KAAKgtG,WAAa,GAAI7E,WAoE1B,MA7DA59D,eAAc/pC,UAAUysG,iBAAmB,SAAUhqE,UAAWgxD,MAC5D,GAAqB5rF,UAAa4rF,KAAc,QAChD,OAAOj0F,MAAKktG,eAAejqE,UAAWgxD,KAAM,GAAIzqC,4BAC5CrgD,OAAQd,SAASc,OACjBC,UAAWf,SAASe,UACpBuK,UAAWjN,oBAAoButF,KAAKtrF,SACpC,IAQR4hC,cAAc/pC,UAAU2sG,cAAgB,SAAUlqE,UAAWgxD,KAAMhJ,YAC/D,MAAOjrF,MAAKktG,eAAejqE,UAAWgxD,KAAMhJ,YAAY,IAM5D1gD,cAAc/pC,UAAU4sG,eAAiB,SAAUnZ,MAC/C,MAASA,MAAc,SAAElrF,gBAAkB9I,cAAc+I,kBAAkBogC,UAS/EmB,cAAc/pC,UAAU0sG,eAAiB,SAAUjqE,UAAWgxD,KAAMhJ,WAAYoiB,uBAC5E,GAAIhhE,OAAQrsC,KACSgkC,KAAOhkC,KAAKotG,eAAenZ,MAC3BqZ,iBAAmBriB,WAAW9hF,OAAO8O,IAAI,SAAUs1F,YAAc,MAAO36E,SAAQyZ,MAAMmhE,cAAcD,WAAYvpE,SAChHL,eACrBsnD,YAAW7hF,UAAU/H,QAAQ,SAAU4qF,UACnC,GAAqBwhB,WAAYH,iBAAiBnqG,MAElDmqG,kBAAiB/rG,KAAsB,MACvCoiC,aAAapiC,KAAK,GAAIqrG,yBAAwBhzE,iBAAiB,MAAOqyD,SAAU,SAAUpoF,OAAS,MAAOypG,kBAAiBG,WAAaxqE,UAAU1R,WAAW1tB,WAIjK,IAAqBipG,WAAYlzE,iBAAiByzE,sBAAwBpZ,KAAO,MAC5DnjE,KAAOO,SAASy7E,WAChC9sF,IAAI8R,WAAWw7E,iBAAkB,GAAIlqE,WAAUjP,cAAeijE,aAAaC,UAC3E57D,WAAW,KAAM4xE,uBAAyB3xE,aAAaC,QACxDD,aAAaC,MAAOD,aAAa2H,UAGrC,OADAJ,WAAUvG,WAAWn7B,KAAKuvB,MACnB,GAAI+7E,oBAAmB5pE,UAAW6pE,UAAWnpE,aAAcK,KAAMinD,aAO5E1gD,cAAc/pC,UAAUgtG,cAAgB,SAAU9vB,SAAU15C,MACxD,MAAOA,MAAOhkC,KAAKgtG,WAAW3E,YAAY3qB,SAAUivB,aAAcD,WAAahvB,UAE5EnzC,gBAEXA,eAAc+kB,aACR3mD,KAAM4G,qBAGZg7B,cAAcglB,eAAiB,WAAc,QACvC5mD,KAAM2hB;;;;;;;AAyBZ,GAAIojF,kBAAoB,WACpB,QAASA,qBAET,MAAOA,oBAEXA,kBAAiB/jB,MAAQt4D,SAAS,SAKlC,IAAIuK,4BAA8B,WAK9B,QAASA,4BAA2BnL,MAAOk9E,cACvC3tG,KAAKywB,MAAQA,MACbzwB,KAAK2tG,aAAeA,aAExB,MAAO/xE,+BAuEPS,6BAAgC,WAKhC,QAASA,8BAA6B5L,MAAOwL,aACzCj8B,KAAKywB,MAAQA,MACbzwB,KAAKi8B,YAAcA,YAEvB,MAAOI,iCAgEPvB,QACJA,OAAM5D,UAAY,EAClB4D,MAAM3D,WAAa,EACnB2D,MAAMA,MAAM5D,WAAa,YACzB4D,MAAMA,MAAM3D,YAAc,YAkC1B,IAAImF,sBAAwB,SAAUznB,QAKlC,QAASynB,sBAAqBsxE,mBAC1B,GAAIvhE,OAAQx3B,OAAOm6B,KAAKhvC,OAASA,IAEjC,OADAqsC,OAAMuhE,kBAAoBA,kBACnBvhE,MAgCX,MAvCAnsC,WAAUo8B,qBAAsBznB,QAchCynB,qBAAqB97B,UAAUqN,UAAY,SAAUzM,IAAKH,SACtD,GAAIorC,OAAQrsC,KACSkN,MAAQ9L,IAAI0M,KAAKxC,OAAOlK,IAAI8L,MAAM+K,IAAI,SAAU7W,KAAO,MAAOA,KAAID,MAAMkrC,MAAOprC,UACpG,OAAO,IAAI4sG,qBAAoBzsG,IAAI4T,KAAM9H,KAAMlN,KAAK4tG,kBAAkBlzE,oBAAoBt5B,IAAI6E,KAAMiH,KAAK/J,UAO7Gm5B,qBAAqB97B,UAAUgN,kBAAoB,SAAUpM,IAAKH,SAC9D,GAAIorC,OAAQrsC,KACSkN,KAAO9L,IAAIuL,YAAYsL,IAAI,SAAU7W,KAAO,MAAOA,KAAID,MAAMkrC,MAAOprC,UACzF,OAAO,IAAI4sG,qBAAoBzsG,IAAI4T,KAAM9H,KAAMlN,KAAK4tG,kBAAkBvzE,4BAA4Bj5B,IAAIuL,YAAYxJ,UAOtHm5B,qBAAqB97B,UAAUiN,gBAAkB,SAAUrM,IAAKH,SAC5D,GAAIorC,OAAQrsC,KACSkN,KAAO9L,IAAIsoB,OAAOzR,IAAI,SAAU7W,KAAO,MAAOA,KAAID,MAAMkrC,MAAOprC,UACpF,OAAO,IAAI4sG,qBAAoBzsG,IAAI4T,KAAM9H,KAAMlN,KAAK4tG,kBAAkBrzE,0BAA0Bn5B,IAAIo5B,QAEjG8B,sBACToxB,gBACE/yB,gBAAmB,WAMnB,QAASA,iBAAgBmzE,eAAgBC,kBAAmB9zE,WACxDj6B,KAAK8tG,eAAiBA,eACtB9tG,KAAK+tG,kBAAoBA,kBACzB/tG,KAAKi6B,UAAYA,UACjBj6B,KAAKguG,SAAW,GAAIjrF,KACpB/iB,KAAKiuG,WAAa,GAAIlrF,KACtB/iB,KAAKkuG,kBAAoB,EACzBluG,KAAKg7B,eAAiB,EAqnB1B,MA9mBAL,iBAAgBn6B,UAAU+L,YAAc,SAAUnL,IAAKw7B,MACnD,GAAqB03B,GACrB,QAAQlzD,IAAI4rD,WACR,IAAK,IACDsH,GAAKkkC,eAAeM,IACpB,MACJ,KAAK,IACDxkC,GAAKkkC,eAAeK,KACpB,MACJ,KAAK,IACDvkC,GAAKkkC,eAAeQ,QACpB,MACJ,KAAK,IACD1kC,GAAKkkC,eAAeO,MACpB,MACJ,KAAK,IACDzkC,GAAKkkC,eAAeS,MACpB,MACJ,KAAK,KACD3kC,GAAKkkC,eAAeU,GACpB,MACJ,KAAK,KACD5kC,GAAKkkC,eAAeW,EACpB,MACJ,KAAK,KACD7kC,GAAKkkC,eAAeC,MACpB,MACJ,KAAK,KACDnkC,GAAKkkC,eAAeE,SACpB,MACJ,KAAK,MACDpkC,GAAKkkC,eAAeG,SACpB,MACJ,KAAK,MACDrkC,GAAKkkC,eAAeI,YACpB,MACJ,KAAK,IACDtkC,GAAKkkC,eAAeY,KACpB,MACJ,KAAK,IACD9kC,GAAKkkC,eAAec,MACpB,MACJ,KAAK,KACDhlC,GAAKkkC,eAAea,WACpB,MACJ,KAAK,KACD/kC,GAAKkkC,eAAee,YACpB,MACJ,SACI,KAAM,IAAI13F,OAAM,yBAA2BT,IAAI4rD,WAEvD,MAAOlwB,4BAA2BF,KAAM,GAAIw9D,oBAAmB9lC,GAAIt0D,KAAKmuG,OAAO/sG,IAAIoL,KAAMsuB,MAAM3D,YAAan3B,KAAKmuG,OAAO/sG,IAAIqL,MAAOquB,MAAM3D,eAO7IwD,gBAAgBn6B,UAAUkM,WAAa,SAAUtL,IAAKw7B,MAElD,MADAD,qBAAoBC,KAAMx7B,KACnBpB,KAAKsM,SAASlL,IAAIuL,YAAaiwB,OAO1CjC,gBAAgBn6B,UAAUoM,iBAAmB,SAAUxL,IAAKw7B,MACxD,GAAqB/4B,OAAQ7D,KAAKmuG,OAAO/sG,IAAIyL,UAAWiuB,MAAM3D,WAC9D,OAAO2F,4BAA2BF,KAAM/4B,MAAMi2F,YAAY95F,KAAKmuG,OAAO/sG,IAAI0L,QAASguB,MAAM3D,YAAan3B,KAAKmuG,OAAO/sG,IAAI2L,SAAU+tB,MAAM3D,eAO1IwD,gBAAgBn6B,UAAUqN,UAAY,SAAUzM,IAAKw7B,MACjD,KAAM,IAAI/6B,OAAM,yEAA2ET,IAAI6E,OAOnG00B,gBAAgBn6B,UAAUwM,kBAAoB,SAAU5L,IAAKw7B,MACzD,GACqBwxE,UADAC,cAAgBruG,KAAKsM,SAASlL,IAAI8L,KAAM4tB,MAAM3D,WAQnE,OALIi3E,UADAhtG,cAAeysG,qBACJzsG,IAAI01B,UAAUu3E,eAGdruG,KAAKmuG,OAA0B/sG,IAAW,OAAG05B,MAAM3D,YAAY1C,OAAO45E,eAE9EvxE,2BAA2BF,KAAMwxE,WAO5CzzE,gBAAgBn6B,UAAU2M,sBAAwB,SAAU/L,IAAKw7B,MAE7D,MADAC,sBAAqBD,KAAMx7B,KACpBpB,KAAK+tG,mBAOhBpzE,gBAAgBn6B,UAAU4M,mBAAqB,SAAUhM,IAAKw7B,MAC1DC,qBAAqBD,KAAMx7B,IAE3B,KAAK,GADgB8L,OAAQ0lB,QAAQxxB,IAAIuL,YAAYxJ,SAC3BwM,EAAI,EAAGA,EAAIvO,IAAI0rD,QAAQ3pD,OAAS,EAAGwM,IACzDzC,KAAK3L,KAAKqxB,QAAQxxB,IAAI0rD,QAAQn9C,KAC9BzC,KAAK3L,KAAKvB,KAAKmuG,OAAO/sG,IAAIuL,YAAYgD,GAAImrB,MAAM3D,YAGpD,OADAjqB,MAAK3L,KAAKqxB,QAAQxxB,IAAI0rD,QAAQ1rD,IAAI0rD,QAAQ3pD,OAAS,KAC5C/B,IAAIuL,YAAYxJ,QAAU,EAC7BouB,WAAW+D,YAAY8hD,mBAAmB3iD,OAAOvnB,MACjDqkB,WAAW+D,YAAYgiD,aAAa7iD,QAAQvnB,KAAK,GAAI4kB,WAAW5kB,KAAKpL,MAAM,OAOnF64B,gBAAgBn6B,UAAU6M,eAAiB,SAAUjM,IAAKw7B,MACtD,GAAqB0xE,cAAetuG,KAAKuuG,iBAAiBntG,IAC1D,OAAIktG,cACOtuG,KAAKwuG,kBAAkBptG,IAAKktG,aAAc1xE,MAG1CE,2BAA2BF,KAAM58B,KAAKmuG,OAAO/sG,IAAI+D,IAAK21B,MAAM3D,YAAY7pB,IAAItN,KAAKmuG,OAAO/sG,IAAIkM,IAAKwtB,MAAM3D,eAQtHwD,gBAAgBn6B,UAAU+M,gBAAkB,SAAUnM,IAAKw7B,MACvD,GAAqBz3B,KAAMnF,KAAKmuG,OAAO/sG,IAAI+D,IAAK21B,MAAM3D,YACjC7pB,IAAMtN,KAAKmuG,OAAO/sG,IAAIkM,IAAKwtB,MAAM3D,YACjCtzB,MAAQ7D,KAAKmuG,OAAO/sG,IAAIyC,MAAOi3B,MAAM3D,WAC1D,OAAO2F,4BAA2BF,KAAMz3B,IAAImI,IAAIA,KAAK0S,IAAInc,SAO7D82B,gBAAgBn6B,UAAUgN,kBAAoB,SAAUpM,IAAKw7B,MACzD,KAAM,IAAI/6B,OAAM,4EAOpB84B,gBAAgBn6B,UAAUiN,gBAAkB,SAAUrM,IAAKw7B,MACvD,KAAM,IAAI/6B,OAAM,0EAOpB84B,gBAAgBn6B,UAAUkN,sBAAwB,SAAUtM,IAAKw7B,MAC7D,MAAOE,4BAA2BF,KAAMhK,QAAQxxB,IAAIyC,SAMxD82B,gBAAgBn6B,UAAUiuG,UAAY,SAAUxoG,MAAQ,MAAOjG,MAAK8tG,eAAeY,SAASzoG,OAM5F00B,gBAAgBn6B,UAAUmN,gBAAkB,SAAUvM,IAAKw7B,MACvD,GAAqB0xE,cAAetuG,KAAKuuG,iBAAiBntG,IAC1D,IAAIktG,aACA,MAAOtuG,MAAKwuG,kBAAkBptG,IAAKktG,aAAc1xE,KAGjD,IAAqB1vB,MAAOlN,KAAKsM,SAASlL,IAAI8L,KAAM4tB,MAAM3D,YACrCj2B,OAAS,KACT0M,SAAW5N,KAAKmuG,OAAO/sG,IAAIwM,SAAUktB,MAAM3D,WAChE,IAAIvpB,WAAa5N,KAAK+tG,kBAAmB,CACrC,GAAqBY,SAAU3uG,KAAKyuG,UAAUrtG,IAAI6E,KAC9C0oG,WACAztG,OAASytG,QAAQl6E,OAAOvnB,OAMhC,MAHc,OAAVhM,SACAA,OAAS0M,SAAS8rF,WAAWt4F,IAAI6E,KAAMiH,OAEpC4vB,2BAA2BF,KAAM17B,SAQhDy5B,gBAAgBn6B,UAAUuN,eAAiB,SAAU3M,IAAKw7B,MACtD,MAAOE,4BAA2BF,KAAMxK,IAAIpyB,KAAKmuG,OAAO/sG,IAAI4M,WAAY8sB,MAAM3D,eAOlFwD,gBAAgBn6B,UAAUyN,mBAAqB,SAAU7M,IAAKw7B,MAC1D,MAAOE,4BAA2BF,KAAMtK,cAActyB,KAAKmuG,OAAO/sG,IAAI4M,WAAY8sB,MAAM3D,eAO5FwD,gBAAgBn6B,UAAU0N,kBAAoB,SAAU9M,IAAKw7B,MACzD,GAAqB0xE,cAAetuG,KAAKuuG,iBAAiBntG,IAC1D,IAAIktG,aACA,MAAOtuG,MAAKwuG,kBAAkBptG,IAAKktG,aAAc1xE,KAGjD,IAAqB17B,QAAS,KACT0M,SAAW5N,KAAKmuG,OAAO/sG,IAAIwM,SAAUktB,MAAM3D,WAOhE,OANIvpB,YAAa5N,KAAK+tG,oBAClB7sG,OAASlB,KAAKyuG,UAAUrtG,IAAI6E,OAElB,MAAV/E,SACAA,OAAS0M,SAASiqB,KAAKz2B,IAAI6E,OAExB62B,2BAA2BF,KAAM17B,SAQhDy5B,gBAAgBn6B,UAAU2N,mBAAqB,SAAU/M,IAAKw7B,MAC1D,GAAqBhvB,UAAW5N,KAAKmuG,OAAO/sG,IAAIwM,SAAUktB,MAAM3D,WAChE,IAAIvpB,WAAa5N,KAAK+tG,kBAAmB,CACrC,GAAqBY,SAAU3uG,KAAKyuG,UAAUrtG,IAAI6E,KAClD,IAAI0oG,QACA,KAAM,IAAI9sG,OAAM,6CAGxB,MAAOi7B,4BAA2BF,KAAMhvB,SAASiqB,KAAKz2B,IAAI6E,MAAM+Z,IAAIhgB,KAAKmuG,OAAO/sG,IAAIyC,MAAOi3B,MAAM3D,eAOrGwD,gBAAgBn6B,UAAU8N,sBAAwB,SAAUlN,IAAKw7B,MAC7D,MAAO58B,MAAKwuG,kBAAkBptG,IAAKpB,KAAKuuG,iBAAiBntG,KAAMw7B,OAOnEjC,gBAAgBn6B,UAAU6N,oBAAsB,SAAUjN,IAAKw7B,MAC3D,MAAO58B,MAAKwuG,kBAAkBptG,IAAKpB,KAAKuuG,iBAAiBntG,KAAMw7B,OAOnEjC,gBAAgBn6B,UAAU8L,SAAW,SAAUtL,KAAM47B,MACjD,GAAIyP,OAAQrsC,IACZ,OAAOgB,MAAKiX,IAAI,SAAU7W,KAAO,MAAOirC,OAAM8hE,OAAO/sG,IAAKw7B,SAO9DjC,gBAAgBn6B,UAAU4N,WAAa,SAAUhN,IAAKw7B,MAClD,KAAM,IAAI/6B,OAAM,gEAAkET,IAAI2qD,wBAA0B,eAAiB3qD,IAAI4qD,WAOzIrxB,gBAAgBn6B,UAAU2tG,OAAS,SAAU/sG,IAAKw7B,MAC9C,GAAqB17B,QAASlB,KAAKiuG,WAAWluF,IAAI3e,IAClD,OAAIF,QACOA,QACHlB,KAAKguG,SAASjuF,IAAI3e,MAAQA,KAAKD,MAAMnB,KAAM48B,OAQvDjC,gBAAgBn6B,UAAUguG,kBAAoB,SAAUptG,IAAKktG,aAAc1xE,MAoCvE,GAAqBgyE,mBAAoB5uG,KAAKmuG,OAAOG,aAAa1gG,SAAUktB,MAAM3D,YAC7D03E,UAAY,MAC7B7uG,MAAK8uG,eAAeR,aAAa1gG,YAGjCihG,UAAY7uG,KAAK+uG,oBAEjBH,kBAAoBC,UAAU7uF,IAAI4uF,mBAElC5uG,KAAKiuG,WAAWjuF,IAAIsuF,aAAa1gG,SAAUihG,WAE/C,IAAqBhiG,WAAY+hG,kBAAkB9T,SAG/CwT,wBAAwBlhD,gBACxBptD,KAAKguG,SAAShuF,IAAIsuF,aAAc,GAAInhD,YAAWmhD,aAAat5F,KAAMs5F,aAAa1gG,SAAU0gG,aAAaroG,KAAMqoG,aAAaphG,OAGzHlN,KAAKguG,SAAShuF,IAAIsuF,aAAc,GAAIliD,cAAakiD,aAAat5F,KAAMs5F,aAAa1gG,SAAU0gG,aAAaroG,MAG5G,IAAqB+oG,QAAShvG,KAAKmuG,OAAO/sG,IAAK05B,MAAM3D,WASrD,OANAn3B,MAAKguG,SAASluE,OAAOwuE,cAEjBO,WACA7uG,KAAKivG,iBAAiBJ,WAGnB/xE,2BAA2BF,KAAM/vB,UAAUitF,YAAYlnE,QAAQ,MAAOo8E,UAMjFr0E,gBAAgBn6B,UAAU+tG,iBAAmB,SAAUntG,KACnD,GAAIirC,OAAQrsC,KACSmB,MAAQ,SAAUJ,QAASK,KAC5C,OAAQirC,MAAM2hE,SAASjuF,IAAI3e,MAAQA,KAAKD,MAAMJ,SAElD,OAAOK,KAAID,OAKPoL,YAAa,SAAUnL,KAAO,MAAO,OAKrCsL,WAAY,SAAUtL,KAAO,MAAO,OAKpCwL,iBAAkB,SAAUxL,KAAO,MAAO,OAK1C4L,kBAAmB,SAAU5L,KAAO,MAAO,OAK3C+L,sBAAuB,SAAU/L,KAAO,MAAO,OAK/CgM,mBAAoB,SAAUhM,KAAO,MAAO,OAK5CiM,eAAgB,SAAUjM,KAAO,MAAOD,OAAMnB,KAAMoB,IAAI+D,MAKxDoI,gBAAiB,SAAUnM,KAAO,MAAO,OAKzCoM,kBAAmB,SAAUpM,KAAO,MAAO,OAK3CqM,gBAAiB,SAAUrM,KAAO,MAAO,OAKzCsM,sBAAuB,SAAUtM,KAAO,MAAO,OAK/CuM,gBAAiB,SAAUvM,KAAO,MAAOD,OAAMnB,KAAMoB,IAAIwM,WAKzDC,UAAW,SAAUzM,KAAO,MAAO,OAKnC2M,eAAgB,SAAU3M,KAAO,MAAO,OAKxC6M,mBAAoB,SAAU7M,KAAO,MAAO,OAK5C8M,kBAAmB,SAAU9M,KAAO,MAAOD,OAAMnB,KAAMoB,IAAIwM,WAK3DO,mBAAoB,SAAU/M,KAAO,MAAO,OAK5CgN,WAAY,SAAUhN,KAAO,MAAO,OAKpCiN,oBAAqB,SAAUjN,KAAO,MAAOD,OAAMnB,KAAMoB,IAAIwM,WAAaxM,KAK1EkN,sBAAuB,SAAUlN,KAC7B,MAAOD,OAAMnB,KAAMoB,IAAIwM,WAAaxM,QAQhDu5B,gBAAgBn6B,UAAUsuG,eAAiB,SAAU1tG,KACjD,GAAIirC,OAAQrsC,KACSmB,MAAQ,SAAUJ,QAASK,KAC5C,MAAOA,OAAQirC,MAAM2hE,SAASjuF,IAAI3e,MAAQA,KAAKD,MAAMJ,UAEpCmuG,UAAY,SAAUnuG,QAASK,KAChD,MAAOA,KAAIgnD,KAAK,SAAUhnD,KAAO,MAAOD,OAAMJ,QAASK,OAE3D,OAAOA,KAAID,OAKPoL,YAAa,SAAUnL,KAAO,MAAOD,OAAMnB,KAAMoB,IAAIoL,OAASrL,MAAMnB,KAAMoB,IAAIqL,QAK9EC,WAAY,SAAUtL,KAAO,OAAO,GAKpCwL,iBAAkB,SAAUxL,KACxB,MAAOD,OAAMnB,KAAMoB,IAAIyL,YAAc1L,MAAMnB,KAAMoB,IAAI0L,UACjD3L,MAAMnB,KAAMoB,IAAI2L,WAMxBC,kBAAmB,SAAU5L,KAAO,OAAO,GAK3C+L,sBAAuB,SAAU/L,KAAO,OAAO,GAK/CgM,mBAAoB,SAAUhM,KAAO,MAAO8tG,WAAUlvG,KAAMoB,IAAIuL,cAKhEU,eAAgB,SAAUjM,KAAO,OAAO,GAKxCmM,gBAAiB,SAAUnM,KAAO,OAAO,GAKzCoM,kBAAmB,SAAUpM,KAAO,OAAO,GAK3CqM,gBAAiB,SAAUrM,KAAO,OAAO,GAKzCsM,sBAAuB,SAAUtM,KAAO,OAAO,GAK/CuM,gBAAiB,SAAUvM,KAAO,OAAO,GAKzCyM,UAAW,SAAUzM,KAAO,OAAO,GAKnC2M,eAAgB,SAAU3M,KAAO,MAAOD,OAAMnB,KAAMoB,IAAI4M,aAKxDC,mBAAoB,SAAU7M,KAAO,MAAOD,OAAMnB,KAAMoB,IAAI4M,aAK5DE,kBAAmB,SAAU9M,KAAO,OAAO,GAK3C+M,mBAAoB,SAAU/M,KAAO,OAAO,GAK5CgN,WAAY,SAAUhN,KAAO,OAAO,GAKpCiN,oBAAqB,SAAUjN,KAAO,OAAO,GAK7CkN,sBAAuB,SAAUlN,KAAO,OAAO,MAMvDu5B,gBAAgBn6B,UAAUuuG,kBAAoB,WAC1C,GAAqBI,YAAanvG,KAAKkuG,mBAEvC,OADAluG,MAAKg7B,eAAiB3e,KAAKC,IAAItc,KAAKkuG,kBAAmBluG,KAAKg7B,gBACrD,GAAI1J,aAAYiL,cAAcv8B,KAAKi6B,UAAWk1E,cAMzDx0E,gBAAgBn6B,UAAUyuG,iBAAmB,SAAUJ,WAEnD,GADA7uG,KAAKkuG,oBACDW,UAAU5oG,MAAQs2B,cAAcv8B,KAAKi6B,UAAWj6B,KAAKkuG,mBACrD,KAAM,IAAIrsG,OAAM,aAAegtG,UAAU5oG,KAAO,2BAGjD00B,mBAePT,qBAAwB,WACxB,QAASA,yBAYT,MANAA,sBAAqB15B,UAAUkuG,SAAW,SAAUzoG,MAChD,MAAIA,QAASynG,iBAAiB/jB,MAAM1jF,KACzBynG,iBAAiB/jB,MAErB,MAEJzvD,wBA6BP2zE,oBAAuB,SAAUh5F,QAOjC,QAASg5F,qBAAoB74F,KAAM9H,KAAM4pB,WACrC,GAAIuV,OAAQx3B,OAAOm6B,KAAKhvC,KAAMgV,KAAM,KAAM9H,OAASlN,IAGnD,OAFAqsC,OAAMn/B,KAAOA,KACbm/B,MAAMvV,UAAYA,UACXuV,MAEX,MAZAnsC,WAAU2tG,oBAAqBh5F,QAYxBg5F,qBACTxgD,cAaEvuB,aAAe,QACfC,WAAa,QACbqwE,sBAAwB,YACxBC,kBAAqB,WAKrB,QAASA,mBAAkBC,aAAcC,iBACrCvvG,KAAKsvG,aAAeA,aACpBtvG,KAAKuvG,gBAAkBA,gBAE3B,MAAOF,sBAEPhlE,aAAgB,WAMhB,QAASA,cAAa44C,QAASC,WAAY3E,iBACvCv+E,KAAKijF,QAAUA,QACfjjF,KAAKkjF,WAAaA,WAClBljF,KAAKu+E,gBAAkBA,gBAyC3B,MA/BAl0C,cAAa7pC,UAAUysG,iBAAmB,SAAUhqE,UAAWjf,UAAW3b,SAAUc,OAAQ65E,WACxF,GAAI32C,OAAQrsC,KACSwvG,kBAAoB,EACpBhwE,eAAiBD,mBAAmBl3B,UACpConG,uBAAyB,MAC9C,KAAKzrF,UAAUtb,OAAQ,CACnB,GAAqBgnG,YAAe1rF,UAAmB,SAClC2rF,mBACjBD,YAAWpmG,YAAcomG,WAAWpmG,WAAWnG,QAC/CwsG,iBAAiBpuG,KAAK,GAAI2wB,iBAAgB,YAAaY,wBAAwBmQ,UAAWysE,WAAWpmG,cAAa,IAEtH,IAAqBsmG,oBAAqBv+E,SAAStqB,iBAAiBid,UAAUrb,KAAKvC,WACnFqpG,wBAA2BG,mBAAwB,KACnD3sE,UAAUvG,WAAWn7B,KAAKquG,mBACrB5vF,IAAIuR,WAAW+D,YAAYikD,qBAAqB9kD,QAAQ,GAAIxC,iBACzD,GAAIC,iBAAgB,gBAAiBU,QAAQ88E,WAAW3mG,iBAAgB,IACxE,GAAImpB,iBAAgB,SAAU/oB,SAAQ,IACtC,GAAI+oB,iBAAgB,OAAQ,GAAID,gBAAe09E,oBAAmB,SAErEl0E,WAAW/J,WAAW4D,YAAYmkD,gBAAiB/9C,aAAaC,MAAOD,aAAa2H,YAE7F,GAAqBwsE,oBAAqB,SAAUpjE,QAChD,GAAqBqjE,mBAAoBN,mBACzC,OAAO,IAAIO,aAAY1jE,MAAM62C,WAAYjgD,UAAWwJ,OAAQzoB,UAAW8rF,kBAAmB9sB,UAAWxjD,eAAgBqwE,qBAEpG9uG,QAAU8uG,mBAAmB,KAGlD,OAFA9uG,SAAQuL,YAAajE,WACpBuQ,GAAKqqB,UAAUvG,YAAYn7B,KAAKwT,MAAM6D,GAAI7X,QAAQ0+D,SAC5C,GAAI4vC,mBAAkBtuG,QAAQivG,SAAUP,uBAC/C,IAAI72F,KAEDyxB,eAEXA,cAAailB,aACP3mD,KAAM4G,qBAGZ86B,aAAaklB,eAAiB,WAAc,QACtC5mD,KAAMugC,iBACNvgC,KAAM6iD,mBACN7iD,KAAM80E,wBAEZ,IAAIwyB,WAAY5+E,SAAS,MACrB8N,SAAW9N,SAAS,MACpB6N,UAAY7N,SAAS,OACrB6+E,SAAW7+E,SAAS,OACpB8+E,eAAiB9+E,SAAS,MAC1B++E,kBAAoB/+E,SAAS,MAC7B0+E,YAAe,WAWf,QAASA,aAAYrvF,UAAWuiB,UAAWwJ,OAAQzoB,UAAW8rF,kBAAmB9sB,UAAWxjD,eAAgBqwE,oBACxG7vG,KAAK0gB,UAAYA,UACjB1gB,KAAKijC,UAAYA,UACjBjjC,KAAKysC,OAASA,OACdzsC,KAAKgkB,UAAYA,UACjBhkB,KAAK8vG,kBAAoBA,kBACzB9vG,KAAKgjF,UAAYA,UACjBhjF,KAAKw/B,eAAiBA,eACtBx/B,KAAK6vG,mBAAqBA,mBAC1B7vG,KAAKmU,SACLnU,KAAKqwG,oBAAsB5vG,OAAOC,OAAO,MACzCV,KAAKswG,eAAiB7vG,OAAOC,OAAO,MACpCV,KAAKowC,aACLpwC,KAAKyU,YAILzU,KAAK6G,SAAW7G,KAAK8vG,kBAAoB,EACrC37E,aAAiBvC,eAAeqR,UAAU1R,WAAWvxB,KAAKgkB,UAAUrb,KAAKvC,YAwxBjF,MAtxBA3F,QAAOmf,eAAemwF,YAAYvvG,UAAW,YAIzCuf,IAAK,WACD,MAAOnZ,eAAc5G,KAAKgkB,UAAUrb,KAAKvC,UAAWpG,KAAK8vG,oBAE7DhwF,YAAY,EACZD,cAAc,IAOlBkwF,YAAYvvG,UAAU8L,SAAW,SAAU8jC,UAAWhT,UAClD,GAAIiP,OAAQrsC,IAUZ,IATAA,KAAKowC,UAAYA,UAEZpwC,KAAKysC,QACNzsC,KAAKgjF,UAAU3hF,QAAQ,SAAUulC,MACzBA,KAAKqjB,OACL5d,MAAMgkE,oBAAoBzpE,KAAK3gC,MAAQomC,MAAMkkE,YAAY,KAAM3pE,UAItE5mC,KAAKysC,OAAQ,CACd,GAAqB+jE,YAAazwE,mBAAmB//B,KAAKw/B,eAC1Dx/B,MAAKgkB,UAAU1Z,YAAYjJ,QAAQ,SAAU6iB,MAAOusF,YAEhD,GAAqBrsF,SAAUqsF,WAAa,EACvBxyE,YAAc/Z,MAAM6zC,MAAQ,EAAgB,EAC5C5kC,MAAQ,UAAgCkN,4BAA4BmwE,WAAYpsF,QAASF,MAAM6zC,MACpH1rB,OAAMl4B,MAAM5S,KAAK,WAAc,OAC3B8S,WAAY,KACZq8F,UAAWv9E,MACXw9E,QAASp/E,WAAW+D,YAAYkjD,UAAU/jD,QACtC7B,QAAQO,OAAQP,QAAQxO,SACxB,GAAI6N,iBAAgB,GAAIC,iBAAgBhO,MAAM4yE,aAAclkE,QAAQqL,eAAc,aAKlGn9B,iBAAiBd,KAAMo9B,UACnBp9B,KAAKysC,SAA+B,IAApBrP,SAASj6B,QAAgBg6B,wBAAwBC,YAEjEp9B,KAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAY,KACZq8F,UAAW,EACXC,QAASp/E,WAAW+D,YAAY2iD,WAAWxjD,QACvC7B,QAAQ,GAAeiC,UAAWA,UAAWjC,QAAQ,SASrEm9E,YAAYvvG,UAAUi/D,MAAQ,SAAUmxC,kBACX,SAArBA,mBAA+BA,qBACnC5wG,KAAKyU,SAASpT,QAAQ,SAAUs+B,OAAS,MAAOA,OAAM8/B,MAAMmxC,mBAC5D,IAAIh4F,IAAK5Y,KAAK6wG,yBAA0BC,oBAAsBl4F,GAAGk4F,oBAAqBC,sBAAwBn4F,GAAGm4F,sBAAuBC,aAAep4F,GAAGo4F,aACrIC,iBAAmBjxG,KAAKkxG,gBAAgBJ,qBACxCK,mBAAqBnxG,KAAKkxG,gBAAgBH,uBAC1CK,UAAY,CAC5BpxG,MAAKysC,QAAUzsC,KAAKgkB,UAAUra,kBAAoB1J,cAAc2J,wBAAwBynG,SACzFD,WAAa,EAEjB,IAAqBE,aAAc,GAAIxU,qBAAoB98F,KAAKgwG,UAAW,GAAI97E,SAA2B+7E,UAAe,QAAM,GAAIv7E,iBAAgBnD,WAAW+D,YAAYuiD,SAASpjD,QAC3K7B,QAAQw+E,WACRt/E,WAAWk/E,cACXG,mBACAF,qBACEv/E,WAAW4D,YAAYokD,gBAA4C,IAA3B15E,KAAK8vG,mBAA2Bp0E,aAAa2H,aAE/F,OADAutE,kBAAiBrvG,KAAK+vG,aACfV,kBAMXb,YAAYvvG,UAAU0wG,gBAAkB,SAAUK,aAC9C,GAAqBC,SACrB,IAAID,YAAYpuG,OAAS,EAAG,CACxB,GAAqBsuG,cAChBzxG,KAAKgkB,UAAUtb,QAAU8nB,iBAAiB+gF,aAAalrF,IAAuB6pF,SAAc,OAC7FuB,SAASlwG,KAAK2uG,SAASlwF,IAAImf,SAAStH,KAAK,cAAc4D,WAAWz7B,KAAK6G,WAE3E2qG,SAAWh/E,IACP,GAAI0B,SAA2BgL,UAAe,KAAGvK,eACjD,GAAIT,SAA2BiL,SAAc,KAAGxK,gBACjD88E,SAASnmG,OAAOimG,aAAc58E,mBAGjC68E,UAAW38E,SAEf,OAAO28E,WAOXzB,YAAYvvG,UAAUuwC,eAAiB,SAAU3vC,IAAKH,SAElDjB,KAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAYjT,IAAIiT,WAChBq8F,UAAW,EACXC,QAASp/E,WAAW+D,YAAY8jD,cAAc3kD,QAC1C7B,QAAQxxB,IAAI8tC,gBAAiBtc,QAAQxxB,IAAIqE,aASrDsqG,YAAYvvG,UAAU2uC,UAAY,SAAU/tC,IAAKH,SAE7CjB,KAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAYjT,IAAIiT,WAChBq8F,UAAW,EACXC,QAASp/E,WAAW+D,YAAY6iD,SAAS1jD,QACrC7B,QAAQxxB,IAAI8tC,gBAAiBpd,YAAYc,QAAQxxB,IAAIyC,eASjEksG,YAAYvvG,UAAU6uC,eAAiB,SAAUjuC,IAAKH,SAClD,GAAIorC,OAAQrsC,KACSi/B,UAAYj/B,KAAKmU,MAAMhR,MAE5CnD,MAAKmU,MAAM5S,KAAsB,KACjC,IAAqBmwG,eAAiBtwG,IAAS,MAC1BuwG,MAASD,cAAiB,IAC1BE,0BAA4BD,MAAMhlG,YAAYsL,IAAI,SAAUkZ,KAAM0gF,cAAgB,MAAOxlE,OAAMylE,6BAA8B7yE,UAAWA,UAAW4yE,aAAcA,aAAcx9F,WAAYjT,IAAIiT,WAAYpT,QAASivG,SAAUrsG,MAAOstB,QAE1PnxB,MAAKmU,MAAM8qB,WAAa,WAAc,OAClC5qB,WAAYjT,IAAIiT,WAChBq8F,UAAW,EACXC,QAASp/E,WAAW+D,YAAY6iD,SAAS1jD,QACrC7B,QAAQxxB,IAAI8tC,gBAAiBpd,WAAW6/E,MAAM7kD,QAAQ70C,IAAI,SAAU/S,GAAK,MAAO0tB,SAAQ1tB,QAE5F6sG,eAAgBH,6BAQxB7B,YAAYvvG,UAAU6vC,sBAAwB,SAAUjvC,IAAKH,SACzD,GAAIorC,OAAQrsC,KACSi/B,UAAYj/B,KAAKmU,MAAMhR,MAE5CnD,MAAKmU,MAAM5S,KAAsB,KACjC,IAAIqX,IAAK5Y,KAAKgyG,wBAAwB/yE,UAAW79B,KAAM+xB,MAAQva,GAAGua,MAAO8+E,iBAAmBr5F,GAAGq5F,iBAAkBrhE,WAAah4B,GAAGg4B,WAC5GshE,aAAelyG,KAAK6vG,mBAAmB7vG,KAC5DA,MAAKyU,SAASlT,KAAK2wG,cACnBA,aAAa5lG,SAASlL,IAAIgvC,UAAWhvC,IAAIqT,SACzC,IAAqB09F,YAAanyG,KAAKmU,MAAMhR,OAAS87B,UAAY,CAKlEj/B,MAAKmU,MAAM8qB,WAAa,WAAc,OAClC5qB,WAAYjT,IAAIiT,WAChBq8F,UAAW,EAAsBv9E,MACjCw9E,QAASp/E,WAAW+D,YAAY2iD,WAAWxjD,QACvC7B,QAAQO,OACR8+E,iBACAr/E,QAAQxxB,IAAI8tC,gBACZtc,QAAQu/E,YACR9lE,MAAM+lE,4BAA4BnzE,UAAW2R,YAC7Cvf,SAAS6gF,aAAalC,eASlCD,YAAYvvG,UAAU2vC,aAAe,SAAU/uC,IAAKH,SAChD,GAAIorC,OAAQrsC,KACSi/B,UAAYj/B,KAAKmU,MAAMhR,MAE5CnD,MAAKmU,MAAM5S,KAAsB,KAEjC,IAAqBioF,QAASznF,cAAcX,IAAI6E,MAAQ,KAAO7E,IAAI6E,KAC/D2S,GAAK5Y,KAAKgyG,wBAAwB/yE,UAAW79B,KAAM+xB,MAAQva,GAAGua,MAAOk/E,WAAaz5F,GAAGy5F,WAAYJ,iBAAmBr5F,GAAGq5F,iBAAkBK,gBAAkB15F,GAAGu0E,aAAcv8C,WAAah4B,GAAGg4B,WAC3K2hE,aACAX,6BACAY,aACrB,IAAIhpB,OAAQ,CACR,GAAqB2D,cAAe/rF,IAAI0I,OACnCmO,IAAI,SAAU0lB,UAAY,OAC3B18B,QAA0B,SAC1B08B,SAAUA,SACVC,OAAyB,QAExBtyB,OAAOgnG,gBACRnlB,cAAahqF,SACbyuG,0BACIzkB,aAAal1E,IAAI,SAAUo1E,YAAawkB,cAAgB,MAAOxlE,OAAMylE,6BACjE7wG,QAASosF,YAAYpsF,QACrBg+B,UAAWA,UACX4yE,aAAcA,aACdx9F,WAAYg5E,YAAY1vD,SAAStpB,WACjCxQ,MAAOwpF,YAAY1vD,SAAS95B,UAEpC0uG,UAAYplB,aAAal1E,IAAI,SAAUo1E,aAAe,MAAO3vD,mBAAkB2vD,YAAY1vD,SAAU0vD,YAAYzvD,WAErH40E,WAAaH,WAAWp6F,IAAI,SAAUW,IAClC,GAAI3L,QAAS2L,GAAG,GAAIqoE,UAAYroE,GAAG,EACnC,OAAOkZ,aAAYc,QAAQ3lB,QAAS2lB,QAAQquD,eAGpDngF,iBAAiBd,KAAMoB,IAAIqT,SAC3B,IAAqB09F,YAAanyG,KAAKmU,MAAMhR,OAAS87B,UAAY,EAC7CwzE,QAAUrxG,IAAIwhB,WAAW3E,KAAK,SAAU2f,QAAU,MAAOA,QAAO5a,UAAU/Y,cAC1EyoG,iBAAmB,UACnBC,SAAW,SAC5BF,WACAE,SAAW3yG,KAAKijC,UAAU1R,WAAWkhF,QAAQzvF,UAAUzY,mBACvDmoG,iBAAmB1yG,KAAKijC,UAAU1R,WAAWkhF,QAAQzvF,UAAUxY,eAUnExK,KAAKmU,MAAM8qB,WAAa,WAAc,OAClC5qB,WAAYjT,IAAIiT,WAChBq8F,UAAW,EAAsBv9E,MACjCw9E,QAASp/E,WAAW+D,YAAYyiD,YAAYtjD,QACxC7B,QAAQO,OACR8+E,iBACAr/E,QAAQxxB,IAAI8tC,gBACZtc,QAAQu/E,YACRv/E,QAAQ42D,QACRA,OAASnrD,cAAcj9B,KAAOyzB,UAC9B09E,UAAUpvG,OAAS2uB,WAAWygF,WAAa19E,UAC3C29E,WAAWrvG,OAAS2uB,WAAW0gF,YAAc39E,UAC7CwX,MAAM+lE,4BAA4BnzE,UAAW2R,YAC7C+hE,SACAD,mBAEJX,eAAgBH,6BAQxB7B,YAAYvvG,UAAUwxG,wBAA0B,SAAU/yE,UAAW79B,KACjE,GAAIirC,OAAQrsC,KACSmzB,MAAQ,CACzB/xB,KAAIm8B,mBACJpK,OAAS,SAEb,IAAqBk/E,YAAa,GAAItvF,IACtC3hB,KAAI2I,QAAQ1I,QAAQ,SAAUsoF,OAC1B,GAAI/wE,IAAKqnB,0BAA0B0pD,MAAO,MAAO1jF,KAAO2S,GAAG3S,KAAMgH,OAAS2L,GAAG3L,MAC7EolG,YAAWryF,IAAI/f,cAAc2yG,sBAAsB3lG,OAAQhH,OAAQgH,OAAQhH,SAE/E7E,IAAIwhB,WAAWvhB,QAAQ,SAAUu8B,QAC7BA,OAAOgT,WAAWvvC,QAAQ,SAAUsoF,OAChC,GAAI/wE,IAAKqnB,0BAA0B0pD,MAAO/rD,QAAS33B,KAAO2S,GAAG3S,KAAMgH,OAAS2L,GAAG3L,MAC/EolG,YAAWryF,IAAI/f,cAAc2yG,sBAAsB3lG,OAAQhH,OAAQgH,OAAQhH,UAGnF,IAAqBknF,iBACAv8C,aACrB5wC,MAAK6yG,uCAAuCzxG,IAAIwhB,YAChDxhB,IAAI+I,UAAU9I,QAAQ,SAAU6xB,YAAaW,eACzC,GAAqB+J,QAAS,OACTk1E,SAAW,MAOhC,IANA1xG,IAAIwhB,WAAWvhB,QAAQ,SAAU0xG,YAAapjG,GACtCojG,YAAY/vF,UAAUra,KAAKvC,YAAcsB,eAAewrB,YAAYzrB,SACpEm2B,OAASm1E,YACTD,SAAWnjG,KAGfiuB,OAAQ,CACR,GAAIhlB,IAAKyzB,MAAM2mE,gBAAgB9/E,YAAa0K,OAAQk1E,SAAU7zE,UAAW79B,IAAI8uC,WAAY9uC,IAAIs+B,aAAc2yE,WAA+BhmE,MAAM7M,eAAezf,IAAqB,MAAWuyF,gBAAkB15F,GAAGu0E,aAAc8lB,cAAgBr6F,GAAGg4B,UACrPu8C,cAAa5rF,KAAKwT,MAAMo4E,aAAcmlB,iBACtC1hE,WAAWrvC,KAAKwT,MAAM67B,WAAYqiE,mBAGlC5mE,OAAM6mE,eAAehgF,YAAa9xB,IAAIs+B,eAG9C,IAAqByzE,mBAoCrB,OAnCA/xG,KAAIs+B,aAAar+B,QAAQ,SAAUggB,OAC/B,GAAqBg3E,WAAY,MAC7B3wF,gBAAe2Z,MAAMxd,SACrBwoC,MAAM3rB,UAAUC,yBAAyB2U,YAAY0gD,YACrDqiB,UAAY,EAEP3wF,eAAe2Z,MAAMxd,SAC1BwoC,MAAM3rB,UAAUC,yBAAyB2U,YAAY2gD,kBACrDoiB,UAAY,EAEP3wF,eAAe2Z,MAAMxd,SAC1BwoC,MAAM3rB,UAAUC,yBAAyB2U,YAAY8gD,eACrDiiB,UAAY,GAEC,MAAbA,WACA8a,gBAAgB5xG,KAAKuwB,YAAYc,QAAQvR,MAAM+C,SAAUwO,QAAQylE,gBAGzEj3F,IAAI8uC,WAAW7uC,QAAQ,SAAUgF,KAC7B,GAAqBgyF,WAAY,MAC5BhyF,KAAIxC,MAGA6D,eAAerB,IAAIxC,SACxBwoC,MAAM3rB,UAAUC,yBAAyB2U,YAAY8gD,eACrDiiB,UAAY,GAJZA,UAAY,EAMC,MAAbA,YACAhsD,MAAMikE,eAAejqG,IAAIJ,MAAQg5B,UACjCk0E,gBAAgB5xG,KAAKuwB,YAAYc,QAAQvsB,IAAIJ,MAAO2sB,QAAQylE,iBAGpEj3F,IAAI2I,QAAQ1I,QAAQ,SAAU+xG,WAC1BxiE,WAAWrvC,MAAON,QAASivG,SAAUhwE,SAAUkzE,UAAWx1E,OAAyB,UAGnFzK,MAAOA,MACPk/E,WAAYvuG,MAAM2iB,KAAK4rF,WAAW3oF,UAClCuoF,iBAAkBkB,gBAAgBhwG,OAAS2uB,WAAWqhF,iBAAmBt+E,UACzEs4D,aAAcA,aACdv8C,WAAYA,aAcpBm/D,YAAYvvG,UAAUwyG,gBAAkB,SAAU9/E,YAAa0K,OAAQnZ,eAAgB4uF,iBAAkBj5B,KAAM16C,aAAc2yE,WAAY/xE,UACrI,GAAI+L,OAAQrsC,KACSi/B,UAAYj/B,KAAKmU,MAAMhR,MAE5CnD,MAAKmU,MAAM5S,KAAsB,MACjCq8B,OAAO5a,UAAU3Y,QAAQhJ,QAAQ,SAAU6iB,MAAOusF,YAC9C,GAAqBrsF,SAAUwZ,OAAOtZ,oBAAsBmsF,WACvCt9E,MAAQ,SAAkCkN,4BAA4BC,SAAUlc,QAASF,MAAM6zC,OAC/F95B,YAAc/Z,MAAM6zC,MAAQ,EAAgB,CACjE1rB,OAAMl4B,MAAM5S,KAAK,WAAc,OAC3B8S,WAAYupB,OAAOvpB,WACnBq8F,UAAWv9E,MACXw9E,QAASp/E,WAAW+D,YAAYkjD,UAAU/jD,QACtC7B,QAAQO,OAAQP,QAAQxO,SACxB,GAAI6N,iBAAgB,GAAIC,iBAAgBhO,MAAM4yE,aAAclkE,QAAQqL,eAAc,YAQ9F,IAAqBk0E,YAAanyG,KAAKmU,MAAMhR,OAAS87B,UAAY,EAC9DrmB,GAAK5Y,KAAKszG,0BAA0BpgF,YAAawM,cAAevM,MAAQva,GAAGua,MAAOggF,gBAAkBv6F,GAAGu6F,gBAAiB3/E,aAAe5a,GAAG4a,aAAcE,SAAW9a,GAAG8a,QAC1K0mD,MAAK/4E,QAAQ,SAAUgF,KACfA,IAAIxC,OAAS6D,eAAerB,IAAIxC,SAAW6D,eAAewrB,YAAYzrB,SACtE4kC,MAAMikE,eAAejqG,IAAIJ,MAAQg5B,UACjCk0E,gBAAgB5xG,KAAKuwB,YAAYc,QAAQvsB,IAAIJ,MAAO2sB,QAAQ,SAGhEgL,OAAO5a,UAAU/Y,cACjBkpB,OAAS,MAEb,IAAqBo/E,WAAY30E,OAAO9zB,OAAOmO,IAAI,SAAU0lB,SAAUq2B,YACnE,GAAqBu/C,UAAWzhF,YAAYc,QAAQohC,YAAaphC,QAAQ+K,SAAS4S,gBAElF,OAAO,IAAIre,iBAAgByL,SAAS4S,cAAegjE,WAAU,MAE5Cf,cACA3zB,QAAUjhD,OAAO5a,SACtCviB,QAAO+5B,KAAKqkD,QAAQ90E,SAAS1I,QAAQ,SAAUskB,UAC3C,GAAqBs7D,WAAYpC,QAAQ90E,QAAQ4b,SAC7C0sF,YAAWhsF,IAAI46D,YAEfuxB,WAAWjxG,KAAK,GAAI2wB,iBAAgBvM,SAAUiN,QAAQquD,aAAY,MAG1E,IAAqBuyB,gCACjB51E,OAAO9zB,OAAO3G,SAAmB,OAARgwB,OAAuD,KAChFqgF,2BACI51E,OAAO9zB,OAAOmO,IAAI,SAAUpV,MAAOgvG,cAAgB,MAAOxlE,OAAMylE,6BAC5D7yE,UAAWA,UACX4yE,aAAcA,aACdx9F,WAAYxR,MAAMwR,WAClBpT,QAASivG,SACTrsG,MAAOhB,MAAMgB,UAGzB,IAAqB4vG,gBAAiBliF,WAAW+D,YAAY4jD,WAAWzkD,QAAQ0K,SAAUvM,QAAQqM,aAC7EkuD,aAAevvD,OAAO+S,eAAe14B,IAAI,SAAU0lB,UAAY,OAChF18B,QAASwyG,eACT71E,OAAQA,OACRD,SAAUA,YAEOiT,WAAahT,OAAOgT,WAAW34B,IAAI,SAAUy7F,cAAgB,OAC9EzyG,QAASwyG,eACTvzE,SAAUwzE,aAAc91E,OAAQA,SAmBpC,OAZA59B,MAAKmU,MAAM8qB,WAAa,WAAc,OAClC5qB,WAAYupB,OAAOvpB,WACnBq8F,UAAW,MAA4Bv9E,MACvCw9E,QAASp/E,WAAW+D,YAAY+iD,cAAc5jD,QAC1C7B,QAAQO,OAAQggF,gBAAgBhwG,OAAS2uB,WAAWqhF,iBAAmBt+E,UACvEjC,QAAQu/E,YAAa3+E,aAAcE,SACnC6+E,UAAUpvG,OAAS,GAAI8uB,gBAAesgF,WAAa19E,UACnD29E,WAAWrvG,OAAS,GAAI8uB,gBAAeugF,YAAc39E,YAEzD8+E,iBAAkBH,2BAClBxwF,UAAW4a,OAAO5a,UAAUra,QAEvBwkF,aAAcA,aAAcv8C,WAAYA,aAOrDm/D,YAAYvvG,UAAU0yG,eAAiB,SAAUhgF,YAAawM,cAC1D1/B,KAAK4zG,iBAAiB5zG,KAAKszG,0BAA0BpgF,YAAawM,gBAMtEqwE,YAAYvvG,UAAUqyG,uCAAyC,SAAUjwF,YACrE,GAAqBixF,kBAAmBjxF,WAAW3E,KAAK,SAAU2f,QAAU,MAAOA,QAAO5a,UAAU/Y,aACpG,IAAI4pG,kBAAoBA,iBAAiB7wF,UAAUrY,gBAAgBxH,OAAQ,CACvE,GAAIyV,IAAKuc,oCAAoCn1B,KAAK0gB,UAAW1gB,KAAKijC,UAAW,KAA4B4wE,iBAAiB7wF,UAAUrY,iBAAkB6oB,aAAe5a,GAAG4a,aAAcE,SAAW9a,GAAG8a,SAAUP,MAAQva,GAAGua,MAAOQ,UAAY/a,GAAG+a,SAC/O3zB,MAAK4zG,kBACDpgF,aAAcA,aACdE,SAAUA,SACVP,MAAOA,MACPQ,UAAWA,UACXw/E,mBACA9+F,WAAYw/F,iBAAiBx/F,eAQzC07F,YAAYvvG,UAAUozG,iBAAmB,SAAUlpG,MACd1K,KAAKmU,MAAMhR,MAI5CnD,MAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAY3J,KAAK2J,WACjBq8F,UAAWhmG,KAAKyoB,MAChBw9E,QAASp/E,WAAW+D,YAAYrC,aAAawB,QACzC7B,QAAQloB,KAAKyoB,OACbzoB,KAAKyoG,gBAAgBhwG,OAAS2uB,WAAWpnB,KAAKyoG,iBAAmBt+E,UACjEnqB,KAAKipB,UAAWjpB,KAAK8oB,aAAc9oB,KAAKgpB,eASpDq8E,YAAYvvG,UAAU8yG,0BAA4B,SAAUpgF,YAAawM,cACrE,GAAqBvM,OAAQ,EACRggF,kBACrBzzE,cAAar+B,QAAQ,SAAUggB,OACvB3Z,eAAe2Z,MAAMxd,SAAW6D,eAAewrB,YAAYzrB,QAC3D0rG,gBAAgB5xG,KAAKuwB,YAAYc,QAAQvR,MAAM+C,SAAUwO,QAAQ,OAGzE,IAAIha,IAAKqa,YAAYjzB,KAAKijC,UAAW/P,aAAcM,aAAe5a,GAAG4a,aAAcE,SAAW9a,GAAG8a,SAAUD,cAAgB7a,GAAGua,MAAOQ,UAAY/a,GAAG+a,SACpJ,QACIR,MAAOA,MAAQM,cACf0/E,gBAAiBA,gBACjB3/E,aAAcA,aACdE,SAAUA,SACVC,UAAWA,UACXtf,WAAY6e,YAAY7e,aAOhC07F,YAAYvvG,UAAUkuG,SAAW,SAAUzoG,MACvC,GAAIA,MAAQynG,iBAAiB/jB,MAAM1jF,KAC/B,MAAOynG,kBAAiB/jB,KAG5B,KAAK,GADgBmqB,cAAe30E,SACV40E,YAAc/zG,KAAM+zG,YAAaA,YAAcA,YAAYtnE,OACjFqnE,aAAeA,aAAaj8E,KAAK,UAAU0D,KAAKpH,cAAe,CAE/D,GAAqB6/E,cAAeD,YAAYzD,eAAerqG,KAC/D,IAAoB,MAAhB+tG,aACA,MAAOziF,YAAW+D,YAAY4jD,WAAWzkD,QAAQq/E,aAAclhF,QAAQohF,eAG3E,IAAqBC,QAASF,YAAY3jE,UAAUnyB,KAAK,SAAUg2F,QAAU,MAAOA,QAAOhuG,OAASA,MACpG,IAAIguG,OAAQ,CACR,GAAqBC,UAAWD,OAAOpwG,OAASurG,qBAChD,OAAO0E,cAAaj8E,KAAK,WAAWA,KAAKq8E,WAGjD,MAAO,OAOXnE,YAAYvvG,UAAU65B,4BAA8B,SAAUhmB,WAAYimB,UACtE,GAAiB,IAAbA,SAAgB,CAChB,GAAqB65E,aAAc5iF,WAAW+D,YAAYkiD,YAC1D,OAAO,YAAc,MAAO28B,cAEhC,GAAqBl1E,WAAYj/B,KAAKmU,MAAMhR,MAO5C,OALAnD,MAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAYA,WACZq8F,UAAW,GACXC,QAASp/E,WAAW+D,YAAYojD,cAAcjkD,QAAQ7B,QAAQ0H,eAE3D,SAAUptB,MAAQ,MAAO8xB,eAAcC,UAAW/xB,QAO7D6iG,YAAYvvG,UAAU+5B,0BAA4B,SAAUlmB,WAAYmmB,MACpE,GAAoB,IAAhBA,KAAKr3B,OAAc,CACnB,GAAqBixG,aAAc7iF,WAAW+D,YAAYoiD,UAC1D,OAAO,YAAc,MAAO08B,cAGhC,GAAqBn8F,KAAM+Z,WAAWwI,KAAKviB,IAAI,SAAUa,EAAGnJ,GAAK,MAAQk/B,aAAa/1B,GAAKjV,MAAO+uB,QAAQjjB,QACrFsvB,UAAYj/B,KAAKmU,MAAMhR,MAM5C,OALAnD,MAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAYA,WACZq8F,UAAW,GACXC,QAASp/E,WAAW+D,YAAYsjD,eAAenkD,QAAQxc,SAEpD,SAAU/K,MAAQ,MAAO8xB,eAAcC,UAAW/xB,QAQ7D6iG,YAAYvvG,UAAUk6B,oBAAsB,SAAU1sB,WAAY/H,KAAMq0B,UACpE,GAAqBsM,MAAS5mC,KAAKgjF,UAAU/kE,KAAK,SAAU62E,aAAe,MAAOA,aAAY7uF,OAASA,MACvG,IAAI2gC,KAAKqjB,KAAM,CACX,GAAqBoqD,aAAcr0G,KAAKmU,MAAMhR,MAE9CnD,MAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAYrG,WAAWqG,WACvBq8F,UAAW,IACXC,QAASp/E,WAAW+D,YAAYwjD,aAAarkD,QAAQ7B,QAAQ0H,cAKjE,KAFA,GAAqBg6E,cAAen1E,SACfo1E,YAAcv0G,KAC5Bu0G,YAAY9nE,QACf8nE,YAAcA,YAAY9nE,OAC1B6nE,aAAeA,aAAaz8E,KAAK,UAAU0D,KAAKpH,aAEpD,IAAqBqgF,eAAgBD,YAAYlE,oBAAoBpqG,MAChDwuG,gBAAkBljF,WAAW+D,YAAY4jD,WAAWzkD,QAAQ6/E,aAAc1hF,QAAQ4hF,gBACvG,OAAO,UAAUtnG,MAAQ,MAAOkyB,iBAAgBpxB,WAAWixB,UAAWjxB,WAAW6jG,aAAc7yE,cAAcq1E,aAAcI,iBAAiBnpG,OAAO4B,SAGnJ,GAAqB+xB,WAAYj/B,KAAKuwG,YAAYviG,WAAWqG,WAAYuyB,MACpD8tE,gBAAkBnjF,WAAW+D,YAAY4jD,WAAWzkD,QAAQ0K,SAAUvM,QAAQqM,YACnG,OAAO,UAAU/xB,MAAQ,MAAOkyB,iBAAgBpxB,WAAWixB,UAAWjxB,WAAW6jG,aAAc6C,gBAAgBhb,WAAW,YAAaxsF,SAQ/I6iG,YAAYvvG,UAAU+vG,YAAc,SAAUl8F,WAAYuyB,MACtD,GAAIyF,OAAQrsC,KACSi/B,UAAYj/B,KAAKmU,MAAMhR,OACvBgwB,MAAQ,CAC7ByT,MAAKj+B,KAAKE,eAAexH,QAAQ,SAAU+xB,eAEnCA,gBAAkB1E,eAAeE,YACjCuE,OAASE,wBAAwBD,iBAGzC,IAAqBmB,UAAWqS,KAAKj+B,KAAKC,OAAOqP,IAAI,SAAU08F,OAAS,MAAOtgF,QAAOgY,MAAMpJ,UAAW0xE,QAUvG,OAPA30G,MAAKmU,MAAM5S,KAAK,WAAc,OAC1B8S,WAAYA,WACZq8F,UAAW,GACXC,QAASp/E,WAAW+D,YAAY0jD,SAASvkD,QACrC7B,QAAQO,OAAQkZ,MAAMpJ,UAAU1R,WAAWqV,KAAKj+B,KAAKvC,WAAY0rB,WAAWyC,eAG7E0K,WAMX8wE,YAAYvvG,UAAUsxG,4BAA8B,SAAU9jG,YAC1D,GAAIq+B,OAAQrsC,IACZ,QACIi/B,UAAWjxB,WAAWixB,UACtB4yE,aAAc7jG,WAAW6jG,aACzBx9F,WAAYrG,WAAWqG,WACvBpT,QAAS+M,WAAW/M,QACpB4C,MAAOu2B,gCACHC,4BAA6B,SAAUC,UAAY,MAAO+R,OAAMhS,4BAA4BrsB,WAAWqG,WAAYimB,WACnHC,0BAA2B,SAAUC,MACjC,MAAO6R,OAAM9R,0BAA0BvsB,WAAWqG,WAAYmmB,OAElEE,oBAAqB,SAAUz0B,KAAMq0B,UACjC,MAAO+R,OAAM3R,oBAAoB1sB,WAAY/H,KAAMq0B;GAExDtsB,WAAWnK,SAMtBksG,YAAYvvG,UAAUqwG,uBAAyB,WA+B3C,QAAS+D,wBAAuB31E,UAAW5qB,WAAY1H,YAAakoG,iBAChE,GAAqBtD,gBACAj9E,MAAQ3nB,YAAYsL,IAAI,SAAUW,IACnD,GAAIvE,YAAauE,GAAGvE,WAAYpT,QAAU2X,GAAG3X,QAAS4C,MAAQ+U,GAAG/U,MAC5Co2B,UAAY,GAAK66E,qBACjBC,aAAe9zG,UAAYivG,SAAW8E,KAAO,KAC9Dj8F,GAAKgjB,uBAAuBg5E,aAAc9zG,QAAS4C,MAAOo2B,WAAYxJ,MAAQ1X,GAAG0X,MAAOwL,YAAcljB,GAAGkjB,WAE7G,OADAs1E,aAAYhwG,KAAKwT,MAAMw8F,YAAa9gF,MAAMxY,IAAI,SAAU6Y,MAAQ,MAAOD,oCAAmCC,KAAMzc,eACzG6c,oCAAoC+K,YAAa5nB,aAK5D,QAHI1H,YAAYxJ,QAAU0xG,kBACtBtD,YAAYhwG,KAAKsvB,mCAAmCmO,cAAcC,UAAW3K,OAAOyI,SAAU1oB,aAE3Fk9F,YA3CX,GAAqByD,MAAOh1G,KACP80G,mBAAqB,EACrBhE,uBACAC,yBACAC,aAAehxG,KAAKmU,MAAM8D,IAAI,SAAU1Y,QAAS0/B,WAClE,GAAIrmB,IAAKrZ,UAAWoxG,QAAU/3F,GAAG+3F,QAASD,UAAY93F,GAAG83F,UAAWiD,iBAAmB/6F,GAAG+6F,iBAAkB5B,eAAiBn5F,GAAGm5F,eAAgB19F,WAAauE,GAAGvE,UAC5J09F,iBACAjB,oBAAoBvvG,KAAKwT,MAAM+7F,oBAAqB8D,uBAAuB31E,UAAW5qB,WAAY09F,gBAAgB,IAElH4B,kBACA5C,sBAAsBxvG,KAAKwT,MAAMg8F,sBAAuB6D,uBAAuB31E,UAAW5qB,WAAYs/F,kBAA+B,OAAZjD,WAA2D,GAOxL,IAAqBuE,gBAA6B,EAAZvE,UAClC,GAAIrT,YAAW4S,UAAUx7E,WAAWA,WAAYk8E,UAChDA,OACJ,OAAOz/E,qCAAoC+jF,eAAgB5gG,aAE/D,QAASy8F,oBAAqBA,oBAAqBC,sBAAuBA,sBAAuBC,aAAcA,eA6BnHjB,YAAYvvG,UAAU4xG,4BAA8B,SAAUnzE,UAAWi2E,UACrE,GAAI7oE,OAAQrsC,KACSm1G,oBACAC,wBAA0B,CAC/CF,UAAS7zG,QAAQ,SAAUuX,IACvB,GAAI3X,SAAU2X,GAAG3X,QAASi/B,SAAWtnB,GAAGsnB,SAAUtC,OAAShlB,GAAGglB,OACzC3D,UAAY,GAAKm7E,0BACjBL,aAAe9zG,UAAYivG,SAAW7jE,MAAQ,KAC/DtzB,GAAK8gB,qBAAqBk7E,aAAc9zG,QAASi/B,SAASyP,QAAS1V,WAAYxJ,MAAQ1X,GAAG0X,MAAOk9E,aAAe50F,GAAG40F,aAClG0H,UAAY5kF,KAC7Bk9E,eACA0H,UAAU9zG,KAAK6uG,kBAAkBpwF,IAAI2tF,aAAa76D,IAAIs9D,oBAAoBrzE,SAE9E,IAAIxjB,IAAK0mB,0BAA0BC,SAAUtC,QAAS03E,YAAc/7F,GAAGtM,OAAQg0E,UAAY1nE,GAAGtT,KACzEsvG,cAAgBt1G,cAAc2yG,sBAAsB0C,YAAar0B,UACtFk0B,kBAAiB5zG,KAAKsvB,mCAAmC,GAAIqtE,QAAOtrE,QAAQ2iF,eAAejb,UAAU6V,gBAAiBkF,WAAYn1E,SAAS7rB,cAE/I,IAAqBmhG,cACrB,IAAIL,iBAAiBhyG,OAAS,EAAG,CAC7B,GAAqBsuG,WAAYrB,kBAAkBpwF,IAAI4S,SAAQ,IAAO6I,WAAW88D,aAC5Ev4F,KAAKgkB,UAAUtb,QAAU8nB,iBAAiB2kF,kBAAkB9uF,IAAuB6pF,SAAc,OAClGuB,SAASlwG,KAAK2uG,SAASlwF,IAAImf,SAAStH,KAAK,cAAc4D,WAAWz7B,KAAK6G,WAE3E2uG,cAAgBhjF,IACZ,GAAI0B,SAA2BiL,SAAc,KAAGxK,eAChD,GAAIT,SAA2Bi8E,eAAoB,KAAGx7E,eACtD,GAAIT,SAA2Bw5E,iBAAiB/jB,MAAW,KAAGh1D,gBAC/D88E,SAASnmG,OAAO6pG,kBAAmB,GAAIzgF,iBAAgB07E,qBAAsBz7E,mBAGhF6gF,eAAgB3gF,SAEpB,OAAO2gF,gBAOXzF,YAAYvvG,UAAUqwC,eAAiB,SAAUzvC,IAAKH,WAMtD8uG,YAAYvvG,UAAUiwC,uBAAyB,SAAUrvC,IAAKH,WAM9D8uG,YAAYvvG,UAAUuvC,eAAiB,SAAU3uC,IAAKH,WAMtD8uG,YAAYvvG,UAAUyvC,cAAgB,SAAU7uC,IAAKH,WAMrD8uG,YAAYvvG,UAAUqvC,WAAa,SAAUzuC,IAAKH,WAMlD8uG,YAAYvvG,UAAUivC,qBAAuB,SAAUruC,IAAKH,WAM5D8uG,YAAYvvG,UAAU+uC,UAAY,SAAUnuC,IAAKH,WAC1C8uG,eA4MP0F,cAAiB,WAMjB,QAASA,eAAc30E,WAAYH,WAAY+0E,eAC3C11G,KAAK8gC,WAAaA,WAClB9gC,KAAK2gC,WAAaA,WACW,gBAAlB+0E,gBACP11G,KAAKoV,OAASsgG,cACd11G,KAAKywB,MAAQ,OAGbzwB,KAAKoV,OAAS,KACdpV,KAAKywB,MAAQilF,eAGrB,MAAOD,kBAuHPn0E,iBAAoB,SAAUzsB,QAM9B,QAASysB,kBAAiBJ,eAAgBD,iBACtC,GAAIoL,OAAQx3B,OAAOm6B,KAAKhvC,OAASA,IAQjC,OAPAqsC,OAAMnL,eAAiBA,eACvBmL,MAAMpL,gBAAkBA,gBAExBoL,MAAMlL,WACNkL,MAAMspE,cAAgB,GAAI5yF,KAC1BspB,MAAMupE,yBAA2B,GAAI7yF,KACrCspB,MAAMwpE,sBACCxpE,MA2FX,MAzGAnsC,WAAUohC,iBAAkBzsB,QAoB5BysB,iBAAiB9gC,UAAUkhC,kBAAoB,SAAUK,SACrD,GAAqBsE,YAAatE,QAAQH,QAC1C,IAAIyE,YAAwC,UAA1BA,WAAWC,WAAwB,CASjD,GAAqBwvE,WACrBr1G,QAAO+5B,KAAK6L,YAAYhlC,QAAQ,SAAUskB,UACrB,eAAbA,WACAmwF,QAAQnwF,UAAY0gB,WAAW1gB,aAGvC0gB,WAAayvE,QAEjB,GAAqBC,kBAAmB/1G,KAAK41G,yBAAyB71F,IAAIgiB,QAAQJ,OAC7Eo0E,oBACDA,iBAAmB/1G,KAAKg2G,cAAer0E,OAAQI,QAAQJ,SACvD3hC,KAAK61G,mBAAmBt0G,KAAKw0G,kBAC7B/1G,KAAK41G,yBAAyB51F,IAAI+hB,QAAQJ,OAAQo0E,mBAGrB,MAA7BA,iBAAiBn0E,UAAkC,MAAdyE,aACrC0vE,iBAAiBn0E,SAAW5hC,KAAKg2G,aAAa3vE,aAGrB,MAAzB0vE,iBAAiBptG,MAAgC,MAAhBo5B,QAAQp5B,OACzCotG,iBAAiBptG,KAAO3I,KAAKg2G,aAAaj0E,QAAQp5B,QAM1D24B,iBAAiB9gC,UAAUqe,UAAY,WACnC,GAAIwtB,OAAQrsC,KACS0J,YACAg5B,KAAO6O,KAAKC,WAC7BykE,UAAWj2G,KAAK61G,mBAChB10E,QAASnhC,KAAKmhC,QAAQlpB,IAAI,SAAU0pB,OAAQl8B,OACxCk8B,OAAO2P,iBACP,IAAqB4kE,UAAW,MAKhC,OAJI7pE,OAAMpL,gBAAgBa,cAAcH,OAAOh7B,YAC3CuvG,SAAWv0E,OAAO17B,KAAO,IAAMR,MAC/BiE,SAASnI,MAAOogC,OAAQA,OAAQj4B,SAAUwsG,aAG1CC,SAAU1wG,MACVQ,KAAM07B,OAAO17B,KAIbU,SAAU0lC,MAAMpL,gBAAgB2tD,mBAAmBjtD,OAAOh7B,UAC1DuvG,SAAUA,aAItB,QAASxzE,KAAMA,KAAMh5B,SAAUA,WAMnC43B,iBAAiB9gC,UAAUw1G,aAAe,SAAUnyG,OAAS,MAAOD,YAAWC,MAAO7D,KAAM,OAM5FshC,iBAAiB9gC,UAAU4D,WAAa,SAAUP,MAAO5C,SACrD,GAAI4C,gBAAiByC,cAAc,CAC/B,GAAqB8vG,YAAap2G,KAAKkhC,eAAe2C,gBAAgBhgC,MAAM8C,SAAU9C,MAAMoC,MACvER,MAAQzF,KAAK21G,cAAc51F,IAAIq2F,WAOpD,OALa,OAAT3wG,QACAA,MAAQzF,KAAK21G,cAAcxtB,KAC3BnoF,KAAK21G,cAAc31F,IAAIo2F,WAAY3wG,OACnCzF,KAAKmhC,QAAQ5/B,KAAK60G,cAEbD,SAAU1wG,MAAO4rC,QAASxtC,MAAMwtC,WAG1C/P,kBACTumB,kBACErmB,iBAAoB,WAKpB,QAASA,kBAAiByB,UAAW/B,gBACjClhC,KAAKijC,UAAYA,UACjBjjC,KAAKkhC,eAAiBA,eACtBlhC,KAAK0K,KAAO,GAAIqY,KAgJpB,MAzIAye,kBAAiBhhC,UAAU2hC,cAAgB,SAAUJ,QAASH,UAC1D5hC,KAAK0K,KAAKsV,IAAI+hB,QAAQp5B,KAAKvC,WAAa27B,QAASA,QAASH,SAAUA,SAAUy0E,WAAW,KAM7F70E,iBAAiBhhC,UAAU0hC,WAAa,SAAUH,SAC9C/hC,KAAK0K,KAAKsV,IAAI+hB,QAAQp5B,KAAKvC,WAAa27B,QAASA,QAASH,SAAU,KAAMy0E,WAAW,KAMzF70E,iBAAiBhhC,UAAUqe,UAAY,SAAUnV,UAC7C,GAAI2iC,OAAQrsC,KACSs2G,gBAAkB,GAAIrwF,IAC3CniB,OAAM2iB,KAAKzmB,KAAK0K,KAAKgf,UAAUroB,QAAQ,SAAUuX,IAC7C,GAAImpB,SAAUnpB,GAAGmpB,QAASH,SAAWhpB,GAAGgpB,SAAUy0E,UAAYz9F,GAAGy9F,SACjE,IAAIt0E,QAAQK,cAAgBC,mBAAmBjT,SAAU,CAKrDknF,gBAAgBz2E,IAAIkC,QAAQp5B,KAAKvC,UACjC,IAAqB2tF,YAAa,OAClCA,YAAWjtD,QAAQzlC,QAAQ,SAAU2yF,KAAOsiB,gBAAgBz2E,IAAIm0D,IAAI5tF,aAExE,IAAKiwG,UAAW,CACkBpoF,kBAAkB8T,QAAQp5B,KAAKvC,UAAUH,KACvEi9B,6BAA4BmJ,MAAMpJ,UAAWlB,QAAQp5B,KAAKvC,UAAWimC,MAAMkqE,yBAAyBx0E,QAA0B,cAGtIr4B,SAASrI,QAAQ,SAAU6d,OACvB,GAAqByiB,QAASziB,MAAMyiB,MACpC,IAAI20E,gBAAgBjwF,IAAIsb,QAAS,CAC7B,GAAqB60E,iBAAkBvoF,kBAAkB/O,MAAMxV,SAC/D2iC,OAAMpJ,UAAUvG,WAAWn7B,KAAK8vB,SAASmlF,iBAAiBx2F,IAAIqsB,MAAMoqE,oBAAoB90E,SAASlG,WAAW,MACxGC,aAAa2H,gBAU7B7B,iBAAiBhhC,UAAU+1G,yBAA2B,SAAUx0E,QAASH,UACrE,GAAIyK,OAAQrsC,KACS2M,aAAe3M,KAAK02G,iBAAiB30E,UACrC53B,YACrB,IAAIy3B,mBAAoBsoB,yBACpBv9C,YAAYpL,KAAKwT,MAAMpI,YAIvBi1B,SAAS2D,mBAAmBj6B,OAAOs2B,SAAS8D,eACvCztB,IAAI,SAAUtP,MAAQ,MAAOA,MAAKvC,YAClCkF,OAAOs2B,SAASiF,iBAAiBC,QAAQ7uB,IAAI,SAAUtP,MAAQ,MAAOA,MAAKvC,YAC3Emd,OAAO,SAAUld,KAAO,MAAOA,OAAQu7B,SAASj5B,KAAKvC,aACrD6R,IAAI,SAAU5R,KAAO,MAAOgmC,OAAMoqE,oBAAoBpwG,QAG3D8D,UAAYy3B,SAASz3B,cAEpB,IAAI43B,QAAQK,cAAgBC,mBAAmBhf,UAAW,CAC3D,GAAqB6uE,YAAa,OAClC/nF,WAAY+nF,WAAW/nF,UAAUmB,OAAO4mF,WAAW9nF,eASvD,MAHAuC,aAAYpL,KAAKwT,MAAMpI,YAAaxC,UAAUoZ,OAAO,SAAUxB,UAAY,QAASA,SAASI,WAAalK,IAAI,SAAU8J,UAAY,MAAOsqB,OAAMqqE,kBAC7It0E,YAAaC,mBAAmBknB,WAAY5gD,KAAMoZ,SAASI,cAExD2P,WAAWnlB,cAMtB60B,iBAAiBhhC,UAAUi2G,oBAAsB,SAAUE,YACvD,GAAqBC,mBAAoB52G,KAAKkhC,eAAe2C,gBAAgB/V,sBAAsB6oF,WAAWhwG,UAAWsnB,kBAAkB0oF,WAAW1wG,MACtJ,OAAOjG,MAAKijC,UAAU1R,WAAWqlF,oBAMrCp1E,iBAAiBhhC,UAAUk2G,iBAAmB,SAAUhsG,MACpD,GAAqBu4B,WAAYjjC,KAAKijC,UAClC4zE,YAAe,WACf,QAASA,gBAuCT,MAhCAA,aAAYr2G,UAAUwD,WAAa,SAAUgpB,IAAK/rB,SAC9C,GAAIorC,OAAQrsC,IACZ,OAAO8xB,YAAW9E,IAAI/U,IAAI,SAAUiH,OAAS,MAAOtb,YAAWsb,MAAOmtB,MAAOprC,aAOjF41G,YAAYr2G,UAAU0D,eAAiB,SAAU+T,IAAKhX,SAClD,GAAIorC,OAAQrsC,IACZ,OAAO,IAAIiyB,gBAAexxB,OAAO+5B,KAAKviB,KAAKA,IAAI,SAAU3K,KAAO,MAAO,IAAI4kB,iBAAgB5kB,IAAK1J,WAAWqU,IAAI3K,KAAM++B,MAAOprC,WAAU,QAO1I41G,YAAYr2G,UAAU2D,eAAiB,SAAUN,MAAO5C,SAAW,MAAO2xB,SAAQ/uB,QAMlFgzG,YAAYr2G,UAAU4D,WAAa,SAAUP,MAAO5C,SAChD,GAAI4C,gBAAiByC,cACjB,MAAO28B,WAAU1R,WAAW1tB,MAG5B,MAAM,IAAIhC,OAAM,oCAAsCgC,QAGvDgzG,cAEX,OAAOjzG,YAAW8G,KAAM,GAAImsG,aAAe,OAExCr1E,oBAEPsB,qBAAwB,SAAUjuB,QAKlC,QAASiuB,sBAAqBF,aAC1B,GAAIyJ,OAAQx3B,OAAOm6B,KAAKhvC,OAASA,IAEjC,OADAqsC,OAAMzJ,YAAcA,YACbyJ,MAqCX,MA5CAnsC,WAAU4iC,qBAAsBjuB,QAahCiuB,qBAAqBtiC,UAAUuiC,YAAc,SAAUL,MACnD,GAAI2J,OAAQrsC,KACS0K,KAAO6mC,KAAKhpC,MAAMm6B,MAClBwzE,WACrBl2G,MAAKmhC,WACLz2B,KAAKy2B,QAAQ9/B,QAAQ,SAAUy1G,kBAC3B,GAAqBn1E,QAAS0K,MAAMzJ,YAAY7iB,IAAI+2F,iBAAiBnwG,SAAUmwG,iBAAiB7wG,KAChGomC,OAAMlL,QAAQ5/B,KAAKogC,QACfm1E,iBAAiBZ,UACjBA,SAAS30G,MAAOogC,OAAQA,OAAQu0E,SAAUY,iBAAiBZ,YAGnE,IAAqBD,WAAYryG,WAAW8G,KAAKurG,UAAWj2G,KAAM,KAClE,QAASi2G,UAAWA,UAAWC,SAAUA,WAO7CpzE,qBAAqBtiC,UAAU0D,eAAiB,SAAU+T,IAAKhX,SAC3D,GAAI,YAAcgX,KAAK,CACnB,GAAqBm+F,YAAap2G,KAAKmhC,QAAQlpB,IAAc,UACxCo5B,QAAUp5B,IAAa,OAC5C,OAAOo5B,SAAQluC,OAASnD,KAAK4iC,YAAY7iB,IAAIq2F,WAAWzvG,SAAUyvG,WAAWnwG,KAAMorC,SAC/E+kE,WAGJ,MAAOvhG,QAAOrU,UAAU0D,eAAe8qC,KAAKhvC,KAAMiY,IAAKhX,UAGxD6hC,sBACT+kB,kBAaEvd,YAAe,WAiBf,QAASA,aAAY24C,QAAS8zB,MAAO7zB,WAAY8zB,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,kBAAmBC,eAAgBloB,iBAAkBmoB,UAAWC,mBAAoBC,uBAAwBC,iBAC5Nz3G,KAAKijF,QAAUA,QACfjjF,KAAK+2G,MAAQA,MACb/2G,KAAKkjF,WAAaA,WAClBljF,KAAKg3G,kBAAoBA,kBACzBh3G,KAAKi3G,gBAAkBA,gBACvBj3G,KAAKk3G,eAAiBA,eACtBl3G,KAAKm3G,cAAgBA,cACrBn3G,KAAKo3G,kBAAoBA,kBACzBp3G,KAAKq3G,eAAiBA,eACtBr3G,KAAKmvF,iBAAmBA,iBACxBnvF,KAAKs3G,UAAYA,UACjBt3G,KAAKu3G,mBAAqBA,mBAC1Bv3G,KAAKw3G,uBAAyBA,uBAC9Bx3G,KAAKy3G,gBAAkBA,gBAyV3B,MApVAntE,aAAY9pC,UAAUqqF,WAAa,WAAc7qF,KAAKg3G,kBAAkBnsB,cAKxEvgD,YAAY9pC,UAAUk3G,mBAAqB,SAAUC,WACjD,GAAItrE,OAAQrsC,KACS2kC,eAAiBqB,sBAAsBhmC,KAAKy3G,gBAAiBE,UAAW33G,KAAK+2G,OAC7Ea,cAAgBlzE,4BAA4BC,eAAgB3kC,KAAK+2G,MAAO/2G,KAAKg3G,kBAElG,OADAY,eAAcrzE,UAAUljC,QAAQ,SAAUyjC,UAAY,MAAOuH,OAAM2qE,kBAAkB1kB,qCAAqCxtD,SAASn8B,KAAKvC,WAAW,KAC5IwxG,eAMXttE,YAAY9pC,UAAUq3G,oBAAsB,SAAUF,WAClD,GAAItrE,OAAQrsC,KACS2kC,eAAiBqB,sBAAsBhmC,KAAKy3G,gBAAiBE,UAAW33G,KAAK+2G,OAC7Ea,cAAgBlzE,4BAA4BC,eAAgB3kC,KAAK+2G,MAAO/2G,KAAKg3G,kBAClG,OAAO3uD,SACFH,IAAI0vD,cAAcrzE,UAAUtsB,IAAI,SAAU6sB,UAAY,MAAOuH,OAAM2qE,kBAAkB1kB,qCAAqCxtD,SAASn8B,KAAKvC,WAAW,MACnJ6hD,KAAK,WAAc,MAAO2vD,kBAMnCttE,YAAY9pC,UAAUs3G,aAAe,SAAUF,eAC3C,GAAIvrE,OAAQrsC,KACR4lC,MAAQgyE,cAAchyE,MACLmyE,cAAgBnyE,MAAM3tB,IAAI,SAAUwoB,MACrD,MAAO4L,OAAM2rE,iBAAiBv3E,KAAKoF,OAAQpF,KAAK7d,WAAY6d,KAAKqF,MAAOrF,KAAK8D,WAAW,IAE5F,OAAOv5B,SAAQ+sG,gBAMnBztE,YAAY9pC,UAAUy3G,iBAAmB,SAAUL,eAC/C,GAAIvrE,OAAQrsC,KACR4lC,MAAQgyE,cAAchyE,MACLmyE,cAAgBnyE,MAAM3tB,IAAI,SAAUwoB,MACrD,MAAO4L,OAAM2rE,iBAAiBv3E,KAAKoF,OAAQpF,KAAK7d,WAAY6d,KAAKqF,MAAOrF,KAAK8D,WAAW,IAE5F,OAAOv5B,SAAQ+sG,gBAMnBztE,YAAY9pC,UAAU03G,aAAe,SAAUN,eAC3C,GAAIvrE,OAAQrsC,KACR+kC,0BAA4B6yE,cAAc7yE,0BAA2Ba,MAAQgyE,cAAchyE,MAC1EmyE,cAAgBnyE,MAAM3tB,IAAI,SAAUwoB,MAAQ,MAAO4L,OAAM8rE,iBAAiB13E,KAAKoF,OAAQd,0BAA2BtE,KAAK7d,WAAY6d,KAAKqF,MAAOrF,KAAK8D,UAAW9D,KAAKsF,cACzL,OAAO/6B,SAAQ+sG,gBAUnBztE,YAAY9pC,UAAUw3G,iBAAmB,SAAUl3E,WAAYle,WAAYkjB,MAAOvB,UAAW6zE,SACzF,GAAI/rE,OAAQrsC,KAYS0jC,WAAatW,sBAAsB0T,YAAY,GAAM,GACrDu3E,kBACAC,mBAAqBt4G,KAAKu4G,qBAAqBtrF,kBAAkB6T,YAAY,IAC7E03E,oBAAsBx4G,KAAKu4G,qBAAqBzqF,sBAAsBgT,YAAY,GAEvGyD,WAAUljC,QAAQ,SAAU6+F,mBACxB7zD,MAAM+qE,kBAAkBnX,WAAWqY,mBAAoBpY,mBACvDl9D,iBAAiBw1E,oBAAqBtY,oBAE1C,IAAqBuY,yBAAyB,EACzBC,4BAA6B,CAmClD,OAhCA91F,YAAWvhB,QAAQ,SAAUgvF,SACzB,GAAqBloF,UAAWkkC,MAAM2qE,kBAAkBhlB,qBAAsC,QAC9FymB,yBAAyB,EACpBtwG,SAAS8B,cAKd9B,SAAkB,SAAEqB,oBAAoBnI,QAAQ,SAAUs3G,gBACtD,GAAqBC,cAAevsE,MAAMksE,qBAAqBz0E,iBAAoC60E,eAAyB,UAAGtsE,MAAM6qE,eAAe9J,eAAejlG,UAAWu7B,YAC9KJ,0BAAyBs1E,aAActjF,YAAYghD,kBACnD+hC,eAAe92G,KAAK8qC,MAAMwsE,qBAAwCF,eAAyB,UAAGC,iBAElGF,4BAA6B,MAG5BA,6BAA+BN,UAAYE,mBAAmB57E,WAAWv5B,QAAU,GACpFmgC,yBAAyBg1E,mBAAoBhjF,YAAYghD,mBAExDmiC,yBAA2BL,SAAYtyE,OAASA,MAAM3iC,OAAS,IAChEq1G,oBAAoB97E,WAAWv5B,QAAU,GACzCmgC,yBAAyBk1E,oBAAqBljF,YAAYghD,kBAO9D+hC,eAAe92G,KAAKvB,KAAK64G,qBAAqB/3E,WAAYw3E,qBACtDt4G,KAAKw3G,wBACLa,eAAe92G,KAAKvB,KAAK64G,qBAAqB/3E,WAAY03E,sBAEvDH,gBAWX/tE,YAAY9pC,UAAU23G,iBAAmB,SAAUr3E,WAAYiE,0BAA2BniB,WAAYkjB,MAAOvB,UAAWwB,aACpH,GAAIsG,OAAQrsC,KACS0jC,WAAatW,sBAAsB0T,YAAY,GAAM,GACrDu3E,kBACAp1E,UAAYjjC,KAAKu4G,qBAAqBtrF,kBAAkB6T,YAAY,GAyBzF,IAxBAu3E,eAAe92G,KAAKwT,MAAMsjG,eAAgBr4G,KAAK84G,eAAeh4E,WAAYle,WAAYkjB,MAAOvB,UAAWwB,YAAa9C,YAErHsB,UAAUljC,QAAQ,SAAUqK,cAAgB,MAAO2gC,OAAM0sE,eAAe91E,UAAWv3B,gBAEnFkX,WAAWvhB,QAAQ,SAAUgvF,SACzB,GAAqBloF,UAAWkkC,MAAM2qE,kBAAkBhlB,qBAAsC,QAC9F,IAAK7pF,SAAS8B,YAAd,CAGA,GAAqB66B,UAAWC,0BAA0BhlB,IAAIswE,QAC9D,KAAKvrD,SACD,KAAM,IAAIjjC,OAAM,6DAA+DqE,eAAeiC,SAASQ,MAAQ,IAGnH,IAAqBqwG,qBAAsB3sE,MAAM6qE,eAAejK,iBAAiBhqE,UAAW96B,SAG5FA,UAAkB,SAAEqB,oBAAoBnI,QAAQ,SAAUs3G,gBACtDN,eAAe92G,KAAK8qC,MAAM4sE,eAAkCN,eAAyB,UAAGxwG,SAAUwwG,eAAgBj1E,cAGlF2I,OAAM6sE,kBAAkBj2E,UAAW96B,SAAU28B,SAAUA,SAAS+B,iBAAiBjkB,WAAYo2F,oBAAqBt1E,WACtJ2I,OAAM8sE,yBAAyBl2E,UAAW96B,SAAU28B,SAAUpB,eAE9DT,UAAUvG,WAAWv5B,OAAS,EAAG,CACjC,GAAqBi2G,WAAYp5G,KAAK64G,qBAAqB/3E,WAAYmC,UACvEo1E,gBAAetsF,QAAQqtF,WAE3B,MAAOf,iBAWX/tE,YAAY9pC,UAAUs4G,eAAiB,SAAUh4E,WAAYle,WAAYkjB,MAAOvB,UAAWwB,YAAaszE,cACpG,GAAIhtE,OAAQrsC,KACSs5G,gBAAkBt5G,KAAKy3G,gBAAgBrxE,aAAatF,YACpE7oB,IAAI,SAAU0pB,QAAU,MAAO0K,OAAMorE,gBAAgBx1E,cAAcN,UACnD43E,SAAWh1E,UAAUtsB,IAAI,SAAU5R,KAAO,OAC3D07B,QAA4BsK,MAAM2qE,kBAAkB7kB,mBAAmB9rF,KACvEu7B,SAA6ByK,MAAM2qE,kBAAkBrwE,oBAAoBtgC,QACtEiF,OAAOsX,WAAW3K,IAAI,SAAU5R,KAAO,OAC1C07B,QAA4BsK,MAAM2qE,kBAAkB/kB,oBAAoB5rF,KACxEu7B,SAA6ByK,MAAM2qE,kBAAkBhlB,qBAAqB3rF,QACtEy/B,MAAM7tB,IAAI,SAAU5R,KAAO,OAC/B07B,QAA4BsK,MAAM2qE,kBAAkBniB,eAAexuF,KACnEu7B,SAA6ByK,MAAM2qE,kBAAkBriB,gBAAgBtuF,QACjE0/B,YAAY9tB,IAAI,SAAU5R,KAAO,OACrC07B,QAA4BsK,MAAM2qE,kBAAkB1iB,qBAAqBjuF,KACzEu7B,SAA6ByK,MAAM2qE,kBAAkB1iB,qBAAqBjuF,KAAOsC,SAEhE6wG,gBAAkBx5G,KAAKu4G,qBAAqBzqF,sBAAsBgT,YAAY,IAC/FloB,GAAKmoB,mBAAmBy4E,gBAAiBx5G,KAAKmvF,iBAAkBnvF,KAAKy3G,gBAAiB6B,gBAAiBC,UAAW72E,KAAO9pB,GAAG8pB,KAAMh5B,SAAWkP,GAAGlP,QACpJA,UAASrI,QAAQ,SAAU6d,OACvBm6F,aAAa38E,WAAWn7B,KAAK8vB,SAASnS,MAAMxV,UAAUsW,IAAIq5F,aAAa9nF,WAAWrS,MAAMyiB,SAASlG,WAAW,MACxGC,aAAa2H,aAGrB,IAAqBo2E,aAAc,GAAIhE,eAAc30E,WAAYpT,gBAAgBoT,YAAa4B,KAC9F,OAAI1iC,MAAKw3G,wBACGiC,YAAaz5G,KAAK64G,qBAAqB/3E,WAAY04E,mBAGvDC,cAOZnvE,YAAY9pC,UAAUu4G,eAAiB,SAAU91E,UAAWv3B,cACxD,GAAqBo5B,UAAa9kC,KAAKg3G,kBAAkBrwE,oBAAoBj7B,cACxDvB,YACjBnK,MAAKs3G,WACLntG,UAAU5I,MACNkG,MAAOgZ,gCAAgCzgB,KAAKkjF,WAAY5tD,YAAY4hD,WACpEj1D,SAAUjiB,KAAKs3G,YAGnBt3G,KAAKu3G,oBACLptG,UAAU5I,MACNkG,MAAOgZ,gCAAgCzgB,KAAKkjF,WAAY5tD,YAAY6hD,qBACpEl1D,SAAUjiB,KAAKu3G,qBAGvBv3G,KAAKo3G,kBAAkB1X,QAAQz8D,UAAW6B,SAAU36B,YASxDmgC,YAAY9pC,UAAU24G,yBAA2B,SAAUl2E,UAAW96B,SAAU28B,SAAUpB,YACtF,GAAqBg2E,UAAW15G,KAAKg3G,kBAAkBxmB,qBAAqBroF,SAASQ,KAAKvC,WACrEuzG,SAAW1xG,wBAAwByxG,SAAUvxG,SAAUnI,KAAKg3G,kBAAkBzmB,0BAA0BmpB,WACxGE,mBAAqB55G,KAAKk5G,kBAAkBj2E,UAAW02E,SAAU70E,UAAW38B,SAASQ,MAAO,KAAM+6B,YAClH4rE,aACgBuK,eAAiB5yG,qBAAqBkB,SAASQ,KAAKvC,WACpD0zG,cACrB,KAAK,GAAqBn0F,YAAYxd,UAAS2B,OAAQ,CACnD,GAAqB0mC,cAAeroC,SAAS2B,OAAO6b,SAEpDm0F,aAAYv4G,KAAK,GAAI2wB,iBAAgBvM,SAAUiN,QAAQ4d,gBAAe,KAE1E,GAAqBupE,gBACrB,KAAK,GAAqBp0F,YAAYxd,UAAS4B,QAAS,CACpD,GAAqBymC,cAAeroC,SAAS4B,QAAQ4b,SAErDo0F,cAAax4G,KAAK,GAAI2wB,iBAAgBvM,SAAUiN,QAAQ4d,gBAAe,KAE3EvN,UAAUvG,WAAWn7B,KAAK8vB,SAASwoF,gBAC9B75F,IAAIuR,WAAW+D,YAAYqkD,wBAAwBllD,QACpD7B,QAAQzqB,SAAS+B,UAAW+4B,UAAU1R,WAAWppB,SAASQ,KAAKvC,WAC/DirB,SAASuoF,oBAAqB,GAAI3nF,gBAAe6nF,aACjD,GAAI7nF,gBAAe8nF,cACnBjoF,WAA8B3pB,SAAkB,SAAEkB,mBAAmB4O,IAAI,SAAU/N,UAAY,MAAO0oB,SAAQ1oB,gBAE7GuxB,WAAW/J,WAAW4D,YAAYghD,kBAAsC1kD,eAAeqR,UAAU1R,WAAWppB,SAASQ,KAAKvC,cAAiBgxF,aAAaC,SAAU37D,aAAaC,MAAOD,aAAa2H,aAW5MiH,YAAY9pC,UAAU04G,kBAAoB,SAAUj2E,UAAW96B,SAAU28B,SAAUk1E,qBAAsBC,gBAAiBv2E,YACtH,GAAI2I,OAAQrsC,KACS4iB,WAAao3F,qBAAqB/hG,IAAI,SAAUuL,KAAO,MAAO6oB,OAAM2qE,kBAAkB/kB,oBAAoBzuE,IAAIpd,aAC9G0/B,MAAQhB,SAAS+B,iBAAiBf,MAAM7tB,IAAI,SAAU2uB,MAAQ,MAAOyF,OAAM2qE,kBAAkBniB,eAAejuD,KAAKxgC,aAClIwS,GAAK5Y,KAAKi3G,gBAAgB1uG,MAAMJ,SAA+BA,SAAkB,SAAW,SAAGya,WAAYkjB,MAAOhB,SAASwlB,QAAS7+C,kBAAkBq5B,SAASn8B,KAAMR,SAA6BA,SAAkB,WAAK+xG,eAAiBthG,GAAGvQ,SAAU26E,UAAYpqE,GAAGktB,MACrPq0E,WAAaF,gBAAkB5oF,SAAS4oF,gBAAgBnN,WAAah7E,eACrEsoF,WAAap6G,KAAKm3G,cAAclK,iBAAiBhqE,UAAW96B,SAAU+xG,eAAgBC,WAAYn3B,UAIvH,OAHIi3B,kBACA12E,wBAAwBvjC,KAAKy3G,gBAAiBwC,gBAAiBj6G,KAAKk3G,eAAe9J,eAAejlG,UAAWu7B,YAE1G02E,YAMX9vE,YAAY9pC,UAAU+3G,qBAAuB,SAAUrqE,aACnD,GAAI7B,OAAQrsC,KACS+tC,cAAgB,SAAUpM,OAAQnQ,YAEnD,GADmB,SAAfA,aAAyBA,WAAa,QACpCmQ,iBAAkBr7B,eACpB,KAAM,IAAIzE,OAAM,sCAAwC0vC,KAAKC,UAAU7P,QAE3E,IAAqB04E,OAAQhuE,MAAMorE,gBAAgB6C,aAAa34E,SAAW,EACvE/oB,GAAKyzB,MAAMorE,gBAAgB5oB,YAAYltD,SAAWA,OAAQh7B,SAAWiS,GAAGjS,SAAUV,KAAO2S,GAAG3S,KAAMorC,QAAUz4B,GAAGy4B,QAC9FkpE,aAAeluE,MAAMorE,gBAAgB+C,qBAAqB7zG,SAAUunC,aAKpEusE,cAAgBpuE,MAAMorE,gBAAgB+C,qBAAqBtsE,YAAaA,aACxEF,WAAausE,eAAiBE,cAAgB,KAAOF,aAMrDG,mBAAqBlpF,eACrBmpF,uBAAyBN,MAAQK,mBAAmBv3G,OACpDy3G,cAAgBF,mBAAmBpvG,OAAO,GAAIxH,OAAM62G,wBAAwBE,KAAK1mF,cACtG,OAAOkd,SAAQnmC,OAAO,SAAUimB,KAAM2pF,YAAc,MAAO3pF,MAAK0G,KAAKijF,aAAkCvpF,WAAW,GAAIirE,mBAAkBxuD,WAAY/nC,KAAM,MAAO20G,gBAErK,QAASl+E,cAAgBwR,YAAaA,YAAa3c,WAAYwc,gBASnEzD,YAAY9pC,UAAUy4G,eAAiB,SAAUn4E,WAAY34B,SAAU4yG,mBAAoBr3E,YACvF,GAAqBT,WAAYjjC,KAAKu4G,qBAAqBz0E,iBAAoCi3E,mBAA6B,UAAG/6G,KAAKk3G,eAAe9J,eAAejlG,UAAWu7B,aACxJs3E,mBAAqBh7G,KAAKk3G,eAAe/J,cAAclqE,UAAW96B,SAAU4yG,mBAEjG,OADAx3E,yBAAwBvjC,KAAKy3G,gBAAiBuD,mBAAoBh7G,KAAKk3G,eAAe9J,eAAejlG,UAAWu7B,YACzG1jC,KAAK64G,qBAAqB/3E,WAAYmC,YAOjDqH,YAAY9pC,UAAUq4G,qBAAuB,SAAU/3E,WAAY/N,KAC/D,MAAO,IAAI0iF,eAAc30E,WAAY/N,IAAImb,YAAanb,IAAI2J,aAEvD4N,eAmMP2wE,aAAe,gBACfC,eAAiB,kBACjB1zE,WAAa,WACb2zE,QACA70E,WAAY,UAEZ80E,UAAY,WACZC,QAAU,UACVC,cAAgB,GAAIr1F,MAAKm1F,UAAW,aAAc,SAYlD1yE,gBAAmB,WAQnB,QAASA,iBAAgBzH,gBAAiBC,eAAgBq6E,qBAAsBC,uBAAwBC,eACvE,SAAzBF,uBAAmCA,yBACR,SAA3BC,yBAAqCA,0BACzC,IAAInvE,OAAQrsC,IACZA,MAAKihC,gBAAkBA,gBACvBjhC,KAAKkhC,eAAiBA,eACtBlhC,KAAKy7G,cAAgBA,cACrBz7G,KAAK07G,gBAAkB,GAAI34F,KAC3B/iB,KAAK27G,cAAgB,GAAI54F,KACzB/iB,KAAK47G,eAAiB,GAAI74F,KAC1B/iB,KAAK67G,YAAc,GAAI94F,KACvB/iB,KAAK87G,cAAgB,GAAI/4F,KACzB/iB,KAAK+7G,wCAA0C,GAAIh5F,KACnD/iB,KAAKg8G,gBAAkB,GAAIj5F,KAC3B/iB,KAAKi8G,0BACLV,qBAAqBl6G,QAAQ,SAAU66G,IAAM,MAAO7vE,OAAM8vE,gCAAgC9vE,MAAMxI,gBAAgBq4E,GAAGv1G,SAAUu1G,GAAGj2G,MAAOi2G,GAAG9vE,QAC1IovE,uBAAuBn6G,QAAQ,SAAU+6G,IAAM,MAAO/vE,OAAMgwE,kBAAkBhwE,MAAMxI,gBAAgBu4E,GAAGz1G,SAAUy1G,GAAGn2G,MAAOm2G,GAAG5pF,MAC9HxyB,KAAK+7G,wCAAwC/7F,IAAIqiB,mBAAmBhf,WAAYpjB,cAAcojB,UAAWpjB,cAAcmjB,YACvHpjB,KAAK+7G,wCAAwC/7F,IAAIqiB,mBAAmB/S,MAAOrvB,cAAcqvB,OACzFtvB,KAAK+7G,wCAAwC/7F,IAAIqiB,mBAAmBjT,UAAWnvB,cAAcmvB,WAC7FpvB,KAAK+7G,wCAAwC/7F,IAAIqiB,mBAAmBknB,YAAatpD,cAAcspD,WAAYtpD,cAAcqvB,KAAMrvB,cAAcojB,UAAWpjB,cAAcmjB,UAAWnjB,cAAcmvB,WAC/LpvB,KAAKg8G,gBAAgBh8F,IAAI/f,cAAcojB,UAAW,aAClDrjB,KAAKg8G,gBAAgBh8F,IAAI/f,cAAcmjB,UAAW,aAClDpjB,KAAKg8G,gBAAgBh8F,IAAI/f,cAAcqvB,KAAM,QAC7CtvB,KAAKg8G,gBAAgBh8F,IAAI/f,cAAcmvB,SAAU,YACjDpvB,KAAKg8G,gBAAgBh8F,IAAI/f,cAAcspD,WAAY,cA+oBvD,MAzoBA7gB,iBAAgBloC,UAAU8wF,mBAAqB,SAAU2D,YACrD,GAAqBvuD,cAAe1mC,KAAKs8G,sBAAsBrnB,WAC/D,OAAOj1F,MAAKkhC,eAAeq7E,gBAAgB71E,eAM/CgC,gBAAgBloC,UAAUmgB,yBAA2B,SAAUta,KAC3D,GAAqBm2G,cAAex8G,KAAK6jC,gBAAmCx9B,IAAe,WAAsBA,IAAS,MACrGo2G,WAAaz8G,KAAK08G,gBAAmCr2G,IAAe,WAAsBA,IAAS,KAIxH,OAHIm2G,eAAgBC,YAChBz8G,KAAKkhC,eAAey7E,eAAeF,WAAYD,cAE5CC,YAQX/zE,gBAAgBloC,UAAUk8G,gBAAkB,SAAU/oG,UAAW1N,KAAM22G,gBACnE,MAAO58G,MAAKs8G,sBAAsBt8G,KAAKkhC,eAAe27E,kBAAkBlpG,UAAW1N,KAAM22G,kBAO7Fl0E,gBAAgBloC,UAAUs8G,mBAAqB,SAAUnpG,UAAW1N,MAChE,GAAIomC,OAAQrsC,IACZ,OAAOA,MAAKkhC,eAAe67E,gBAAgB,WAAc,MAAO1wE,OAAMqwE,gBAAgB/oG,UAAW1N,SAMrGyiC,gBAAgBloC,UAAU87G,sBAAwB,SAAU36E,QACxD,GAAqBF,gBAAiBzhC,KAAKkhC,eAAee,cAAcN,OACxE,OAAIF,iBAAkBA,eAAeG,mBAAoBt7B,cAC9CtG,KAAKs8G,sBAAsB76E,eAAeG,UAG1CD,QAOf+G,gBAAgBloC,UAAUisF,YAAc,SAAU9jF,MAC9C,GAAI0jC,OAAQrsC,KACSysF,YAAczsF,KAAK07G,gBAAgB37F,IAAIpX,KAC5D,KAAK8jF,YAAa,CACdA,cACA,IAAqBuwB,eAAgBh9G,KAAKi9G,gBAAgBt0G,MACrCu0G,WAAal9G,KAAKm9G,eAAex0G,KAAMq0G,cAC5D,IAAIE,WAAY,CACZ,GAAqBE,mBAAoBp9G,KAAKysF,YAAYywB,WAC1DzwB,aAAYlrF,KAAKwT,MAAM03E,YAAa2wB,mBAExC,GAAqBC,oBAKrB,IAJIL,cAA0B,aAC1BK,iBAAmBr9G,KAAKs9G,SAAS30G,KAAMq0G,cAA0B,YACjEvwB,YAAYlrF,KAAKwT,MAAM03E,YAAa4wB,mBAEpCH,aAAel9G,KAAKihC,gBAAgBa,cAAcn5B,KAAKhC,WACvD3G,KAAKihC,gBAAgBa,cAAco7E,WAAWv2G,UAAW,CACzD,GAAqBo7B,SAAU/hC,KAAKihC,gBAAgBe,eAAek7E,WACnE,IAAIn7E,SAAWA,QAAQp5B,KAAM,CACzB,GAAqB40G,yBAA4Bv9G,KAAK+7G,wCAAwCh8F,IAAuBgiB,QAAQp5B,KAAiB,aACzH60G,0BAA4BD,wBAAwBn1D,KAAK,SAAUq1D,cAAgB,MAAOJ,kBAAiBj1D,KAAK,SAAUisC,KAAO,MAAOA,eAAeopB,iBACvKD,4BACDx9G,KAAK09G,YAAYj5G,YAAY,SAAWkE,KAAK1C,KAAO,OAAS0C,KAAKhC,SAAW,mBAAqB07B,mBAAsBN,QAAQp5B,KAAkB,aAAK,oEAClJ,gBAAkB40G,wBAAwBtlG,IAAI,SAAUtP,MAAQ,MAAO0jC,OAAM2vE,gBAAgBj8F,IAAIpX,QAAUkP,KAAK,QAAU,6BAA8BlP,OAIzK3I,KAAK07G,gBAAgB17F,IAAIrX,KAAM8jF,YAAYlpE,OAAO,SAAU8wE,KAAO,QAASA,OAEhF,MAAO5H,cAMX/jD,gBAAgBloC,UAAUosF,aAAe,SAAUjkF,MAC/C,GAAI0jC,OAAQrsC,KACS4sF,aAAe5sF,KAAK27G,cAAc57F,IAAIpX,KAC3D,KAAKikF,aAAc,CACf,GAAqBowB,eAAgBh9G,KAAKi9G,gBAAgBt0G,KAC1DikF,gBACA,IAAqBswB,YAAal9G,KAAKm9G,eAAex0G,KAAMq0G,cAC5D,IAAIE,WAAY,CACZ,GAAqBS,sBAAuB39G,KAAK4sF,aAAaswB,WAC9Dz8G,QAAO+5B,KAAKmjF,sBAAsBt8G,QAAQ,SAAUu8G,YAChD,aAAiBA,YAAcD,qBAAqBC,cAG5D,GAAqBC,WAAYb,cAAuB,WACxDv8G,QAAO+5B,KAAKqjF,WAAWx8G,QAAQ,SAAUskB,UACrC,GAAqBm4F,UAAWD,UAAUl4F,UACrBkS,KAAO,SACvB5Z,KAAK,SAAU/F,GAAK,MAA0B,YAAnBA,EAAc,YAAsC,UAAnBA,EAAc,aAC1Do3C,aACjB,cAAiB3pC,WACjB2pC,WAAW/tD,KAAKwT,MAAMu6C,WAA6B,aAAiB3pC,WAExE,aAAiBA,UAAY2pC,WACzBz3B,MAAQA,KAAiB,YACzBy3B,WAAW/tD,KAAKwT,MAAMu6C,WAAYjjB,MAAMixE,SAAS30G,KAAMkvB,KAAiB,eAGhF73B,KAAK27G,cAAc37F,IAAIrX,KAAMikF,cAEjC,MAAOA,eAMXlkD,gBAAgBloC,UAAU20F,WAAa,SAAUxsF,MAC7C,GAAI0jC,OAAQrsC,IACZ,MAAM2I,eAAgBrC,eAElB,MADAtG,MAAK09G,YAAY,GAAI77G,OAAM,uBAAyB0vC,KAAKC,UAAU7oC,MAAQ,gCAAiCA,QAGhH,KACI,GAAqBo1G,cAAe/9G,KAAK47G,eAAe77F,IAAIpX,KAC5D,KAAKo1G,aAAc,CACf,GAAqBf,eAAgBh9G,KAAKi9G,gBAAgBt0G,MACrCu0G,WAAal9G,KAAKm9G,eAAex0G,KAAMq0G,eACvC3rE,QAAU2rE,cAAgBA,cAAuB,QAAI,KACrDgB,SAAW3sE,QAAUA,QAAkB,SAAI,IAChE,IAAI2sE,SAAU,CACV,GAAqB5xE,MAAO,SAAanuB,KAAK,SAAU/F,GAAK,MAA0B,eAAnBA,EAAc,aAC7D+lG,kBAAqB7xE,KAAkB,eACvC8xE,sBAAyBl+G,KAAKs9G,SAAS30G,KAAMyjC,KAA0B,wBAC5F2xE,iBACAE,kBAAkB58G,QAAQ,SAAU88G,aAAc14G,OAC9C,GAAqB24G,iBACAC,UAAYhyE,MAAMiyE,YAAY31G,KAAMw1G,aACrDE,YACAD,aAAa78G,KAAK88G,UACtB,IAAqB/uD,YAAa4uD,sBAAwBA,sBAAsBz4G,OAAS,IACrF6pD,aACA8uD,aAAa78G,KAAKwT,MAAMqpG,aAAc9uD,YAE1C,aAAiB/tD,KAAK68G,oBAGrBlB,cACLa,aAAe/9G,KAAKm1F,WAAW+nB,YAE9Ba,gBACDA,iBAEJ/9G,KAAK47G,eAAe57F,IAAIrX,KAAMo1G,cAElC,MAAOA,cAEX,MAAOjlG,GAEH,KADA6vB,SAAQ/jC,MAAM,kBAAoB2sC,KAAKC,UAAU7oC,MAAQ,eAAiBmQ,GACpEA,IAOd4vB,gBAAgBloC,UAAU+9G,aAAe,SAAU51G,MAC/C,GAAqB61G,aAAcx+G,KAAK67G,YAAY97F,IAAIpX,KACxD,KAAK61G,YAAa,CACd,GAAqBxB,eAAgBh9G,KAAKi9G,gBAAgBt0G,KAC1D61G,eACA,IAAqBtB,YAAal9G,KAAKm9G,eAAex0G,KAAMq0G,cAC5D,IAAIE,WAAY,CACZ,GAAqBuB,qBAAsBz+G,KAAKu+G,aAAarB,WAC7Dz8G,QAAO+5B,KAAKikF,qBAAqBp9G,QAAQ,SAAUu8G,YAC/C,YAAgBA,YAAca,oBAAoBb,cAG1D,GAAqBc,WAAY1B,cAAuB,WACxDv8G,QAAO+5B,KAAKkkF,WAAWr9G,QAAQ,SAAUskB,UACrC,GAAqBm4F,UAAWY,UAAU/4F,UACrBg5F,SAAW,SAAav2D,KAAK,SAAUlwC,GAAK,MAA0B,UAAnBA,EAAc,YACtF,aAAgByN,UAAY,YAAgBA,WAAag5F,WAE7D3+G,KAAK67G,YAAY77F,IAAIrX,KAAM61G,aAE/B,MAAOA,cAOX91E,gBAAgBloC,UAAU28G,eAAiB,SAAUx0G,KAAMq0G,eACvD,GAAqBE,YAAal9G,KAAKs+G,YAAY31G,KAAMq0G,cAAuB,QAChF,IAAIE,qBAAsB52G,cACtB,MAAO42G,aAQfx0E,gBAAgBloC,UAAU6tB,iBAAmB,SAAU1lB,KAAMi2G,YACnDj2G,eAAgBrC,eAClBtG,KAAK09G,YAAY,GAAI77G,OAAM,6BAA+B0vC,KAAKC,UAAU7oC,MAAQ,gCAAiCA,KAEtH,KACI,QAAS3I,KAAKu+G,aAAa51G,MAAMi2G,YAErC,MAAO9lG,GAEH,KADA6vB,SAAQ/jC,MAAM,kBAAoB2sC,KAAKC,UAAU7oC,MAAQ,eAAiBmQ,GACpEA,IAQd4vB,gBAAgBloC,UAAU27G,gCAAkC,SAAUxzG,KAAMyjC,MACxEpsC,KAAK87G,cAAc97F,IAAIrX,KAAM,SAAU1H,QAASiM,MAAQ,MAAO,KAAKk/B,KAAKe,KAAKp4B,MAAMq3B,MAAO,QAAQ9gC,OAAO4B,WAO9Gw7B,gBAAgBloC,UAAU67G,kBAAoB,SAAU1zG,KAAM6pB,IAC1DxyB,KAAK87G,cAAc97F,IAAIrX,KAAM,SAAU1H,QAASiM,MAAQ,MAAOslB,IAAGzd,MAAMxQ,OAAW2I,SAKvFw7B,gBAAgBloC,UAAUy7G,wBAA0B,WAChDj8G,KAAK6+G,eAAiB7+G,KAAK08G,gBAAgBzB,aAAc,kBACzDj7G,KAAK8+G,YAAc9+G,KAAK08G,gBAAgBzB,aAAc,eACtDj7G,KAAK++G,OAAS/+G,KAAK88G,mBAAmB5B,eAAgB,UACtDl7G,KAAK+1E,6BACD/1E,KAAK08G,gBAAgBzB,aAAc,gCACvCj7G,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,QAASh7G,cAAcq1F,MAC/Ft1F,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,cAAeh7G,cAAcspD,YACrGvpD,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,QAASh7G,cAAcs1F,MAC/Fv1F,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,YAAah7G,cAAcu1F,UACnGx1F,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,UAAWh7G,cAAcokF,QACjGrkF,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,YAAah7G,cAAcmkF,UACnGpkF,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,aAAch7G,cAAc69B,WACpG99B,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,gBAAiBh7G,cAAc++G,cACvGh/G,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,mBAAoBh7G,cAAcg/G,iBAC1Gj/G,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,aAAch7G,cAAci/G,WACpGl/G,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,gBAAiBh7G,cAAck/G;AACvGn/G,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,SAAUh7G,cAAc+sF,OAChGhtF,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,UAAWh7G,cAAcitF,QACjGltF,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,QAASh7G,cAAcqvB,MAC/FtvB,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,eAAgBh7G,cAAcmtF,aACtGptF,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,gBAAiBh7G,cAAcutF,cACvGxtF,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,aAAch7G,cAAcojB,WACpGrjB,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,aAAch7G,cAAcmjB,WACpGpjB,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,YAAah7G,cAAcmvB,UAEnGpvB,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,QAASh7G,cAAcq1F,MAC/Ft1F,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,QAASh7G,cAAcs1F,MAC/Fv1F,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,YAAah7G,cAAcu1F,UACnGx1F,KAAKm8G,gCAAgCn8G,KAAK08G,gBAAgBzB,aAAc,YAAah7G,cAAcmkF,UACnGpkF,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,WAAYh7G,cAAcm/G,SACpFp/G,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,SAAUh7G,cAAco/G,OAClFr/G,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,cAAeh7G,cAAcq/G,YACvFt/G,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,SAAUh7G,cAAcqkD,OAClFtkD,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,WAAYh7G,cAAcs/G,SACpFv/G,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,aAAch7G,cAAcu/G,WACtFx/G,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,YAAah7G,cAAcw/G,UACrFz/G,KAAKq8G,kBAAkBr8G,KAAK08G,gBAAgBzB,aAAc,SAAUh7G,cAAcy/G,QAWtFh3E,gBAAgBloC,UAAUqjC,gBAAkB,SAAU6N,gBAAiBzrC,KAAMorC,SACzE,MAAOrxC,MAAKkhC,eAAe2C,gBAAgB6N,gBAAiBzrC,KAAMorC,UAQtE3I,gBAAgBloC,UAAUk9G,YAAc,SAAU94G,MAAO3D,QAAS2T,MAC9D,IAAI5U,KAAKy7G,cAIL,KAAM72G,MAHN5E,MAAKy7G,cAAc72G,MAAQ3D,SAAWA,QAAQ0F,UAAaiO,OAYnE8zB,gBAAgBloC,UAAU89G,YAAc,SAAUr9G,QAAS4C,OACvD,GAAqB87G,kBAAmB3/G,KAAKy7G,aAC7Cz7G,MAAKy7G,cAAgB,SAAU72G,MAAO+oB,WACtC,IAAqBzsB,QAASlB,KAAKs9G,SAASr8G,QAAS4C,MAErD,OADA7D,MAAKy7G,cAAgBkE,iBACdz+G,QAQXwnC,gBAAgBloC,UAAU88G,SAAW,SAAUr8G,QAAS4C,OAYpD,QAAS+7G,mBAAkB3+G,QAAS4C,MAAOg8G,MAAO3vE,YAK9C,QAAS4vE,uBAAsBp5E,cAC3B,GAAqBjF,gBAAiBuzE,KAAK9zE,eAAee,cAAcyE,aACxE,OAAOjF,gBAAiBA,eAAeG,SAAW,KAQtD,QAASm+E,cAAaC,eAAgBC,eAAgB/yG,MAClD,GAAI+yG,gBAAkD,YAAhCA,eAA2B,WAAiB,CAC9D,GAAIC,QAAQngG,IAAIigG,gBACZ,KAAM,IAAIn+G,OAAM,0BAEpB,KACI,GAAqBs+G,SAAUF,eAAsB,KACrD,IAAIE,UAAqB,GAATN,OAAoC,SAAtBM,QAAQ75E,YAAwB,CAC1D,GAAqB6uD,YAAa8qB,eAA2B,WACxCG,SAAWH,eAAeG,QAC/ClzG,MAAOA,KAAK+K,IAAI,SAAU+kB,KAAO,MAAO4iF,mBAAkB3+G,QAAS+7B,IAAK6iF,MAAQ,EAAG3vE,cAC9Ej4B,IAAI,SAAU+kB,KAAO,MAAOkK,cAAalK,KAAOz4B,OAAYy4B,MAC7DojF,UAAYA,SAASj9G,OAAS+J,KAAK/J,QACnC+J,KAAK3L,KAAKwT,MAAM7H,KAAMkzG,SAASt+G,MAAMoL,KAAK/J,QAAQ8U,IAAI,SAAUpU,OAAS,MAAOy5G,UAASz5G,UAE7Fq8G,QAAQlgG,IAAIggG,gBAAgB,EAE5B,KAAK,GADgBK,eAAgBC,aAAa7gD,QACxB9vD,EAAI,EAAGA,EAAIwlF,WAAWhyF,OAAQwM,IACpD0wG,cAAc1gH,OAAOw1F,WAAWxlF,GAAIzC,KAAKyC,GAE7C,IACqB4wG,UADAC,SAAWC,KAEhC,KACIA,MAAQJ,cAAcK,OACtBH,SAAWX,kBAAkBI,eAAgBG,QAASN,MAAQ,EAAG3vE,YAErE,QACIuwE,MAAQD,SAEZ,MAAOD,WAGf,QACIL,QAAQpgF,OAAOkgF,iBAGvB,MAAc,KAAVH,MAIO1E,OAEJmC,UAAWh3E,WAAY,QAASp1B,QAAS,8BAA+BjQ,QAAS++G,iBAM5F,QAAS1C,UAAStvG,YACd,GAAIy5B,YAAYz5B,YACZ,MAAOA,WAEX,IAAIA,qBAAsBlK,OAAO,CAE7B,IAAK,GADgB68G,aACZ19G,GAAK,EAAG2V,GAAK,WAAgB3V,GAAK2V,GAAGzV,OAAQF,KAAM,CACxD,GAAImI,MAAOwN,GAAG3V,GAEd,IAAImI,MAA4B,WAApBA,KAAKk7B,WAAyB,CACtC,GAAqBs6E,aAActD,SAASlyG,KAAK4C,WACjD,IAAIlK,MAAMC,QAAQ68G,aAAc,CAC5B,IAAK,GAAI7nG,IAAK,EAAG8nG,cAAgBD,YAAa7nG,GAAK8nG,cAAc19G,OAAQ4V,KAAM,CAC3E,GAAI+nG,YAAaD,cAAc9nG,GAC/B4nG,UAASp/G,KAAKu/G,YAElB,UAGR,GAAqBC,SAAUzD,SAASlyG,KACpC87B,cAAa65E,UAGjBJ,SAASp/G,KAAKw/G,SAElB,MAAOJ,UAEX,GAAI3yG,qBAAsB1H,cAAc,CAEpC,GAAI0H,aAAegnG,KAAK6J,gBAAkB7wG,aAAegnG,KAAK8J,aAC1D9J,KAAK8G,cAAcz1F,IAAIrY,aAAekiC,WAAa,EACnD,MAAOliC,WAGP,IAAqB04B,cAAe14B,WACfgzG,iBAAmBlB,sBAAsBp5E,aAC9D,OAAIs6E,kBACOpB,kBAAkBl5E,aAAcs6E,iBAAkBnB,MAAQ,EAAG3vE,YAG7DxJ,aAInB,GAAI14B,WAAY,CACZ,GAAIA,WAAuB,WAAG,CAC1B,GAAqB04B,cAAe,MACpC,QAAQ14B,WAAuB,YAC3B,IAAK,QACD,GAAqBxB,MAAO8wG,SAAStvG,WAAiB,KACtD,IAAIk5B,aAAa16B,MACb,MAAOA,KACX,IAAqBC,OAAQ6wG,SAAStvG,WAAkB,MACxD,IAAIk5B,aAAaz6B,OACb,MAAOA,MACX,QAAQuB,WAAqB,UACzB,IAAK,KACD,MAAOxB,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,MAEtB,MAAO,KACX,KAAK,KACD,GAAqBI,WAAYywG,SAAStvG,WAAsB,UAChE,OAAmBsvG,UAAZzwG,UAAqBmB,WAA2B,eAC1CA,WAA2B,eAC5C,KAAK,MACD,GAAqBizG,SAAU3D,SAAStvG,WAAoB,QAC5D,IAAIk5B,aAAa+5E,SACb,MAAOA,QACX,QAAQjzG,WAAqB,UACzB,IAAK,IACD,MAAOizG,QACX,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,QAEhB,MAAO,KACX,KAAK,QACD,GAAqBC,aAAc5D,SAAStvG,WAAuB,YAC9CvI,MAAQ63G,SAAStvG,WAAkB,MACxD,OAAIkzG,cAAez5E,YAAYhiC,OACpBy7G,YAAYz7G,OAChB,IACX,KAAK,SACD,GAAqB07G,QAASnzG,WAAmB,OAC5BozG,cAAgBngH,QAChBogH,aAAe/D,SAAStvG,WAAuB,WACpE,IAAIqzG,uBAAwB/6G,cAAc,CACtC,GAAqB+qC,SAAUgwE,aAAahwE,QAAQ/lC,OAAO61G,OAC3DC,eACIpM,KAAKnxE,gBAAgBw9E,aAAa16G,SAAU06G,aAAap7G,KAAMorC,QACnE,IAAqB2vE,kBAAmBlB,sBAAsBsB,cAC9D,OAAIJ,kBACOpB,kBAAkBwB,cAAeJ,iBAAkBnB,MAAQ,EAAG3vE,YAG9DkxE,cAGf,MAAIC,eAAgB55E,YAAY05E,QACrBvB,kBAAkBwB,cAAeC,aAAaF,QAAStB,MAAQ,EAAG3vE,YACtE,IACX,KAAK,YAID,GAAqBkV,QAASp3C,WAAiB,KAC1BszG,WAAab,MAAMn7F,QAAQ8/B,OAChD,IAAIk8D,YAAchB,aAAaiB,QAC3B,MAAOD,WAEX,MACJ,KAAK,QACD,MAAOrgH,QACX,KAAK,WACD,MAAOA,QACX,KAAK,MACL,IAAK,OAGD,GADAylC,aAAek5E,kBAAkB3+G,QAAS+M,WAAuB,WAAG6xG,MAAQ,EAAoB,GAC5Fn5E,uBAAwBpgC,cAAc,CACtC,GAAIogC,eAAiBsuE,KAAK6J,gBAAkBn4E,eAAiBsuE,KAAK8J,YAG9D,MAAO79G,QAEX,IAAqBugH,gBAAiBxzG,WAAsB,cACvC8oB,UAAYk+E,KAAK8G,cAAc/7F,IAAI2mB,aACxD,IAAI5P,UAAW,CACX,GAAqB5pB,MAAOs0G,eACvBvpG,IAAI,SAAU+kB,KAAO,MAAO4iF,mBAAkB3+G,QAAS+7B,IAAK6iF,MAAQ,EAAG3vE,cACvEj4B,IAAI,SAAU+kB,KAAO,MAAOkK,cAAalK,KAAOz4B,OAAYy4B,KACjE,OAAOlG,WAAU71B,QAASiM,MAI1B,GAAqB+yG,gBAAiBH,sBAAsBp5E,aAC5D,OAAOq5E,cAAar5E,aAAcu5E,eAAgBuB,gBAG1D,MAAOrG,OACX,KAAK,QACD,GAAqBjqG,SAAUm2B,oBAAoBr5B,WASnD,OARIA,YAAiB,MACjBkD,QACIA,QAAU,eAAiBlD,WAAiB,KAAI,GAAK,KAAOA,WAAsB,UAAI,GAAK,6BAC/FgnG,KAAK0I,YAAY/1E,gBAAgBz2B,QAASjQ,QAAQ0F,SAAUqH,WAAiB,KAAGA,WAAsB,WAAI/M,UAG1G+zG,KAAK0I,YAAY,GAAI77G,OAAMqP,SAAUjQ,SAElCk6G,MACX,KAAK,SACD,MAAOntG,YAEf,MAAO,MAEX,MAAOs5B,cAAat5B,WAAY,SAAUnK,MAAOoC,MAC7C,GAAIq1G,cAAcj1F,IAAIpgB,MAAO,CACzB,GAAIA,OAASm1G,WAAaC,UAAWrtG,YAAY,CAG7C,GAAqBq8E,SAAUizB,SAAStvG,WAAWq8E,QACnD,IAAIA,UAAY2qB,KAAK+J,QAAU10B,SAAW2qB,KAAKj/B,6BAC3C,MAAOunC,UAASz5G,OAGxB,MAAO+7G,mBAAkB3+G,QAAS4C,MAAOg8G,MAAO3vE,WAAa,GAEjE,MAAOotE,UAASz5G,SAGxB,MAAOs3G,QAEX,IACI,MAAOmC,UAASz5G,OAEpB,MAAOiV,GACH,GAAqBu4B,SAAUpwC,QAAQowC,QAAQluC,OAAS,IAAMlC,QAAQowC,QAAQx5B,KAAK,KAAO,GACrE3G,QAAU4H,EAAE5H,QAAU,sBAAwBjQ,QAAQgF,KAAOorC,QAAU,OAASpwC,QAAQ0F,QAC7G,IAAImS,EAAE6U,SACF,KAAMga,iBAAgBz2B,QAAS4H,EAAE6U,SAAU7U,EAAE8uB,KAAM9uB,EAAE+uB,OAEzD,MAAMpjC,aAAYyM,UAzS1B,GAAIm7B,OAAQrsC,KACSg1G,KAAOh1G,KACPygH,MAAQH,aAAa5qE,MACrBwqE,QAAU,GAAIn9F,KAySd0+F,0BAA4B,SAAUxgH,QAAS4C,OAChE,IACI,MAAO+7G,mBAAkB3+G,QAAS4C,MAAO,EAAG,GAEhD,MAAOiV,GACHuzB,MAAMqxE,YAAY5kG,EAAG7X,WAGRC,OAASlB,KAAKy7G,cAAgBgG,0BAA0BxgH,QAAS4C,OAClF+7G,kBAAkB3+G,QAAS4C,MAAO,EAAG,EACzC,KAAIqjC,aAAahmC,QAGjB,MAAOA,SAMXwnC,gBAAgBloC,UAAUy8G,gBAAkB,SAAUt0G,MAClD,GAAqB84B,gBAAiBzhC,KAAKkhC,eAAee,cAAct5B,KACxE,OAAO84B,iBAAkBA,eAAeG,SAAWH,eAAeG,UAC5D0E,WAAY,UAEfoC,mBAyEP43E,aAAgB,WAChB,QAASA,iBAiBT,MAZAA,cAAa7gD,MAAQ,WACjB,GAAqB3a,SAAU,GAAI/hC,IACnC,QACIpjB,OAAQ,SAAUsG,KAAMpC,OAEpB,MADAihD,SAAQ9kC,IAAI/Z,KAAMpC,OACX7D,MAEX0gH,KAAM,WACF,MAAO57D,SAAQqjC,KAAO,EAAI,GAAIu5B,gBAAe58D,SAAWw7D,aAAa5qE,SAI1E4qE,eAEXA,cAAaiB,WACbjB,aAAa5qE,OAAUpwB,QAAS,SAAUrf,MAAQ,MAAOq6G,cAAaiB,SACtE,IAAIG,gBAAkB,SAAU7sG,QAK5B,QAAS6sG,gBAAetrD,UACpB,GAAI/pB,OAAQx3B,OAAOm6B,KAAKhvC,OAASA,IAEjC,OADAqsC,OAAM+pB,SAAWA,SACV/pB,MASX,MAhBAnsC,WAAUwhH,eAAgB7sG,QAa1B6sG,eAAelhH,UAAU8kB,QAAU,SAAUrf,MACzC,MAAOjG,MAAKo2D,SAAS/vC,IAAIpgB,MAAQjG,KAAKo2D,SAASr2C,IAAI9Z,MAAQq6G,aAAaiB,SAErEG,gBACTpB,cAoBEqB,qBAAwB,WAKxB,QAASA,sBAAqBhgF,OAAQC,UAClC5hC,KAAK2hC,OAASA,OACd3hC,KAAK4hC,SAAWA,SAEpB,MAAO+/E,yBASPC,yBAA2B,EAS3Bp5E,qBAAwB,WAOxB,QAASA,sBAAqBx+B,KAAM63G,kBAAmB5gF,gBAAiBw6E,eACpEz7G,KAAKgK,KAAOA,KACZhK,KAAK6hH,kBAAoBA,kBACzB7hH,KAAKihC,gBAAkBA,gBACvBjhC,KAAKy7G,cAAgBA,cACrBz7G,KAAK8hH,cAAgB,GAAI/+F,KACzB/iB,KAAK+hH,gBAAkB,GAAIh/F,KAC3B/iB,KAAKgiH,kBAAoB,GAAI/7F,KAC7BjmB,KAAKk2G,SAAW,GAAInzF,KACpB/iB,KAAKiiH,oBAAsB,GAAIl/F,KAC/B/iB,KAAKkiH,eAAiB,GAAIn/F,KAC1B/iB,KAAKmiH,2BAA6B,GAAIp/F,KAkd1C,MA5cAylB,sBAAqBhoC,UAAUyhC,cAAgB,SAAUyE,cACrD,GAAIA,aAAa2K,QAAQluC,OAAS,EAC9B,MAASnD,MAAKoiH,sBAAsB17E,aAExC,IAAqBxlC,QAASlB,KAAK+hH,gBAAgBhiG,IAAI2mB,aACvD,OAAIxlC,QACOA,QAEXA,OAAWlB,KAAKqiH,0BAA0B37E,eAE/BxlC,QAKXlB,KAAKsiH,iBAAiB57E,aAAa//B,UACnCzF,OAAWlB,KAAK+hH,gBAAgBhiG,IAAI2mB,gBAaxC8B,qBAAqBhoC,UAAUquF,YAAc,SAAUnoD,cACnD,GAAIA,aAAa2K,QAAQluC,OAAQ,CAC7B,GAAqBizG,YAAap2G,KAAK6jC,gBAAgB6C,aAAa//B,SAAU+/B,aAAazgC,MACtEs8G,aAAeviH,KAAK6uF,YAAYunB,WACrD,OAAOmM,cACHviH,KAAK6jC,gBAAgB0+E,aAAa57G,SAAU47G,aAAat8G,KAAMygC,aAAa2K,SAC5E,KAER,GAAqBmxE,oBAAqBz0F,6BAA6B2Y,aAAa//B,SACpF,IAAI67G,qBAAuB97E,aAAa//B,SAAU,CAC9C,GAAqB87G,gBAAiBt0F,6BAA6BuY,aAAazgC,MAC3DmwG,WAAap2G,KAAK6jC,gBAAgB2+E,mBAAoBC,eAAgB/7E,aAAa2K,SACnFkxE,aAAeviH,KAAK6uF,YAAYunB,WACrD,OAAOmM,cACHviH,KAAK6jC,gBAAgB/V,sBAAsBy0F,aAAa57G,UAAWsnB,kBAAkBs0F,aAAat8G,MAAOmwG,WAAW/kE,SACpH,KAER,GAAqBnwC,QAASlB,KAAKihC,gBAAgB4tD,YAAYnoD,aAI/D,OAHKxlC,UACDA,OAAWlB,KAAKk2G,SAASn2F,IAAI2mB,eAE1BxlC,QASXsnC,qBAAqBhoC,UAAU+7G,gBAAkB,SAAU71E,cACvD,MAAO1mC,MAAKiiH,oBAAoBliG,IAAI2mB,eAAiBA,aAAa//B,UAQtE6hC,qBAAqBhoC,UAAU85G,aAAe,SAAU5zE,cAKpD,GAAInZ,gBAAgBmZ,aAAa//B,UAC7B,MAAO,KAGX,KADA,GAAqB86B,gBAAiBzhC,KAAKiiC,cAAcyE,cAClDjF,gBAAkBA,eAAeG,mBAAoBt7B,eACxDm7B,eAAiBzhC,KAAKiiC,cAAcR,eAAeG,SAEvD,OAAQH,iBAAkBA,eAAeG,UAAYH,eAAeG,SAASy4E,OAAU,MAQ3F7xE,qBAAqBhoC,UAAUg6G,qBAAuB,SAAUkI,iBAAkBC,oBAC9E,MAAO3iH,MAAKmiH,2BAA2BpiG,IAAI2iG,mBACvC1iH,KAAKgK,KAAKwwG,qBAAqBkI,iBAAkBC,qBAOzDn6E,qBAAqBhoC,UAAUm8G,eAAiB,SAAUiG,aAAcC,cACpED,aAAatxE,kBACbuxE,aAAavxE,kBACbtxC,KAAKk2G,SAASl2F,IAAI4iG,aAAcC,eAQpCr6E,qBAAqBhoC,UAAUsiH,eAAiB,SAAUn1F,UACtD3tB,KAAK8hH,cAAchiF,OAAOnS,UAC1B3tB,KAAKgiH,kBAAkBliF,OAAOnS,SAC9B,IAAqBwT,SAAUnhC,KAAKkiH,eAAeniG,IAAI4N,SACvD,IAAIwT,QAAS,CACTnhC,KAAKkiH,eAAepiF,OAAOnS,SAC3B,KAAK,GAAI1qB,IAAK,EAAG8/G,UAAY5hF,QAASl+B,GAAK8/G,UAAU5/G,OAAQF,KAAM,CAC/D,GAAI0+B,QAASohF,UAAU9/G,GACvBjD,MAAK+hH,gBAAgBjiF,OAAO6B,QAC5B3hC,KAAKk2G,SAASp2E,OAAO6B,QACrB3hC,KAAKiiH,oBAAoBniF,OAAO6B,WAS5C6G,qBAAqBhoC,UAAUu8G,gBAAkB,SAAU5rE,IACvD,GAAqB6xE,UAAWhjH,KAAKy7G,aACrCz7G,MAAKy7G,cAAgB,YACrB,KACI,MAAOtqE,MAEX,QACInxC,KAAKy7G,cAAgBuH,WAO7Bx6E,qBAAqBhoC,UAAU4hH,sBAAwB,SAAU17E,cAC7D,GAAqB2K,SAAU3K,aAAa2K,QACvB4xE,mBAAqBjjH,KAAKiiC,cAAcjiC,KAAK6jC,gBAAgB6C,aAAa//B,SAAU+/B,aAAazgC,MACtH,KAAKg9G,mBACD,MAAO,KAEX,IAAqBC,cAAeD,mBAAmBrhF,QACvD,IAAIshF,uBAAwB58G,cACxB,MAAO,IAAIq7G,sBAAqBj7E,aAAc1mC,KAAK6jC,gBAAgBq/E,aAAav8G,SAAUu8G,aAAaj9G,KAAMorC,SAE5G,KAAI6xE,cAA4C,UAA5BA,aAAa58E,WAKjC,CAED,IAAK,GADgBziC,OAAQq/G,aACHvzG,EAAI,EAAGA,EAAI0hC,QAAQluC,QAAUU,MAAO8L,IAC1D9L,MAAQA,MAAMwtC,QAAQ1hC,GAE1B,OAAO,IAAIgyG,sBAAqBj7E,aAAc7iC,OAT9C,MAAIq/G,cAAaC,SAA8B,IAAnB9xE,QAAQluC,OACzB,GAAIw+G,sBAAqBj7E,aAAcw8E,aAAaC,QAAQ9xE,QAAQ,KAU5E,MAMX7I,qBAAqBhoC,UAAU6hH,0BAA4B,SAAU37E,cACjE,GAAqB3E,SAAU/hC,KAAKihC,gBAAgBe,eAAe0E,aACnE,OAAO3E,SAAU,GAAI4/E,sBAAqBj7E,aAAc3E,QAAQH,UAAY,MAWhF4G,qBAAqBhoC,UAAUqjC,gBAAkB,SAAU6N,gBAAiBzrC,KAAMorC,SAC9E,MAAOrxC,MAAK6hH,kBAAkB9hG,IAAI2xB,gBAAiBzrC,KAAMorC,UAM7D7I,qBAAqBhoC,UAAU4lC,aAAe,SAAUz/B,UAIpD,GAAqBw6B,SAAU,GAAIlb,KAAIjmB,KAAKihC,gBAAgBmF,aAAaz/B,UAOzE,OANA3G,MAAKsiH,iBAAiB37G,UACtB3G,KAAK+hH,gBAAgB1gH,QAAQ,SAAUogC,gBAC/BA,eAAeE,OAAOh7B,WAAaA,UACnCw6B,QAAQtB,IAAI4B,eAAeE,UAG5B79B,MAAM2iB,KAAK0a,UAMtBqH,qBAAqBhoC,UAAU8hH,iBAAmB,SAAU37G,UACxD,GAAI0lC,OAAQrsC,IACZ,KAAIA,KAAKgiH,kBAAkB37F,IAAI1f,UAA/B,CAGA3G,KAAKgiH,kBAAkBniF,IAAIl5B,SAC3B,IAAqBo7G,oBACAngF,SAAW5hC,KAAKojH,kBAAkBz8G,SAMvD,IALIi7B,SAAmB,UAGnB5hC,KAAKmiH,2BAA2BniG,IAAIrZ,SAAUi7B,SAAmB,UAEjEA,SAAmB,SAAG,CAEtB,GAAqByhF,uBAAwB,GAAIp9F,KAAIxlB,OAAO+5B,KAAKoH,SAAmB,UAAG3pB,IAAI8vB,qBACtEu7E,UAAY1hF,SAAkB,WACnDnhC,QAAO+5B,KAAKoH,SAAmB,UAAGvgC,QAAQ,SAAUkiH,aAChD,GAAqBl9E,YAAazE,SAAmB,SAAE2hF,aAClCt9G,KAAO8hC,mBAAmBw7E,aAC1B5hF,OAAS0K,MAAMxI,gBAAgBl9B,SAAUV,MACzCu9G,OAASF,UAAU10E,eAAe20E,cAAgBD,UAAUC,YACjF,IAAIC,OAAQ,CAIR,GAAqBC,gBAAiBp3E,MAAMq3E,cAAcF,OAAQ78G,SAC7D88G,gBAIDp3E,MAAM41E,oBAAoBjiG,IAAI2hB,OAAQ8hF,gBAHtCp3E,MAAMqxE,YAAY,GAAI77G,OAAM,wCAA0C2hH,OAAS,SAAW78G,WAMlGo7G,gBAAgBxgH,KAAK8qC,MAAMs3E,qBAAqBhiF,OAAQh7B,SAAU08G,sBAAuBh9E,eAIjG,GAAIzE,SAAkB,QAsClB,IAAK,GArCDgiF,SAAU,SAAUC,cAEpB,GAAIA,aAAaC,OACbD,aAAaC,OAAOziH,QAAQ,SAAU0iH,cAClC,GAAqB71F,WAEjBA,YADwB,gBAAjB61F,cACMA,aAGAA,aAAa/e,GAE9B92E,WAAa6Z,mBAAmB7Z,WAChC,IAAqB81F,SAAU91F,UACH,iBAAjB61F,gBACPC,QAAUj8E,mBAAmBg8E,aAAa99G,MAE9C,IAAqBg+G,gBAAiB53E,MAAMq3E,cAAcG,aAAap9F,KAAM9f,SAC7E,IAAIs9G,eAAgB,CAChB,GAAqBpB,cAAex2E,MAAMxI,gBAAgBogF,eAAgBD,SACrDpB,aAAev2E,MAAMxI,gBAAgBl9B,SAAUunB,WACpE6zF,iBAAgBxgH,KAAK8qC,MAAM63E,aAAatB,aAAcC,sBAI7D,CAED,GAAqBoB,gBAAiBE,OAAOT,cAAcG,aAAap9F,KAAM9f,SAC9E,IAAIs9G,eAAgB,CAChB,GAAqBG,eAAgBD,OAAO/9E,aAAa69E,eACzDG,eAAc/iH,QAAQ,SAAUwhH,cAC5B,GAAqBD,cAAev2E,MAAMxI,gBAAgBl9B,SAAUk8G,aAAa58G,KACjF87G,iBAAgBxgH,KAAK8qC,MAAM63E,aAAatB,aAAcC,oBAKlEsB,OAASnkH,KACJiD,GAAK,EAAG2V,GAAKgpB,SAAkB,QAAG3+B,GAAK2V,GAAGzV,OAAQF,KAAM,CAC7D,GAAI4gH,cAAejrG,GAAG3V,GACtB2gH,SAAyBC,cAGjC9B,gBAAgB1gH,QAAQ,SAAUogC,gBAAkB,MAAO4K,OAAM01E,gBAAgB/hG,IAAIyhB,eAAeE,OAAQF,kBAC5GzhC,KAAKkiH,eAAeliG,IAAIrZ,SAAUo7G,gBAAgB9pG,IAAI,SAAUwpB,gBAAkB,MAAOA,gBAAeE,YAS5G6G,qBAAqBhoC,UAAUmjH,qBAAuB,SAAUf,aAAcyB,aAAcC,oBAAqB1iF,UAM7G,GAAI5hC,KAAKihC,gBAAgBa,cAAc8gF,aAAaj8G,WAAai7B,UAClC,UAA3BA,SAAqB,WAAe,CACpC,GAAqB2iF,oBAAsBj+E,WAAY,QAAS+zE,MAAOz4E,SAASy4E,MAChF,OAAO,IAAIsH,sBAAqBiB,aAAc2B,mBAElD,GAAqBvP,MAAOh1G,KACxBwkH,qBAAwB,SAAU3vG,QAElC,QAAS2vG,wBACL,MAAkB,QAAX3vG,QAAmBA,OAAOE,MAAM/U,KAAMkD,YAAclD,KAiD/D,MAnDAE,WAAUskH,qBAAsB3vG,QAShC2vG,qBAAqBhkH,UAAU0D,eAAiB,SAAU+T,IAAKwsG,gBAC3D,GAAqBC,UAAWzsG,IAAgB,UAChD,IAAiB,aAAbysG,SAAyB,CACzB,GAAqBC,QAASF,eAAethH,MAC7CshH,gBAAeljH,KAAKwT,MAAM0vG,eAAiBxsG,IAAgB,eAC3D,IAAqB/W,QAAS2T,OAAOrU,UAAU0D,eAAe8qC,KAAKhvC,KAAMiY,IAAKwsG,eAE9E,OADAA,gBAAethH,OAASwhH,OACjBzjH,OAEN,GAAiB,cAAbwjH,SA8BL,MAAO7vG,QAAOrU,UAAU0D,eAAe8qC,KAAKhvC,KAAMiY,IAAKwsG,eA7BvD,IAAqBhlH,QAASwY,IAAY,OACrBmtC,OAASntC,IAAU,KAAI8vB,mBAAmB9vB,IAAU,MAAKA,IAAU,IACxF,KAAKmtC,OACD,MAAO,KAEX,IAAqBz+C,UAAW,MAChC,OAAIlH,SACAkH,SAAaquG,KAAK0O,cAAcjkH,OAAQmjH,aAAaj8G,UAChDA,SAMEquG,KAAKnxE,gBAAgBl9B,SAAUy+C,SAJ9B9e,WAAY,QACZp1B,QAAS,qBAAuBzR,OAAS,gBAAkBmjH,aAAaj8G,SAAW,MAKtF89G,eAAe7iH,QAAQwjD,SAAW,GAE9B9e,WAAY,YAAargC,KAAMm/C,QAGpCk/D,oBAAoBj+F,IAAI++B,QACjB4vD,KAAKnxE,gBAAgBwgF,aAAcj/D,QAD9C,QAWLo/D,sBACT38D,kBACmB+8D,gBAAkBhhH,WAAWg+B,SAAU,GAAI4iF,yBAChE,OAAII,2BAA2Bt+G,cACpBtG,KAAKkkH,aAAatB,aAAcgC,iBAEpC,GAAIjD,sBAAqBiB,aAAcgC,kBAOlDp8E,qBAAqBhoC,UAAU0jH,aAAe,SAAUtB,aAAcC,cAUlE,MATAD,cAAatxE,kBACbuxE,aAAavxE,kBACTtxC,KAAKihC,gBAAgBa,cAAc8gF,aAAaj8G,WAKhD3G,KAAKk2G,SAASl2F,IAAI6iG,aAAc7iH,KAAK6uF,YAAY+zB,eAAiBA,cAE/D,GAAIjB,sBAAqBiB,aAAcC,eAQlDr6E,qBAAqBhoC,UAAUk9G,YAAc,SAAU94G,MAAO3D,QAAS2T,MACnE,IAAI5U,KAAKy7G,cAIL,KAAM72G,MAHN5E,MAAKy7G,cAAc72G,MAAQ3D,SAAWA,QAAQ0F,UAAaiO,OAUnE4zB,qBAAqBhoC,UAAU4iH,kBAAoB,SAAU3jH,QACzD,GAAqBolH,gBAAiB7kH,KAAK8hH,cAAc/hG,IAAItgB,OAC7D,KAAKolH,eAAgB,CACjB,GAAqBC,iBAAkB9kH,KAAKgK,KAAK+6G,eAAetlH,OAChE,IAAIqlH,gBAAiB,CACjB,GAAqBE,eAAe,CACpCF,iBAAgBzjH,QAAQ,SAAU4jH,IAC1BA,GAAY,QAAID,eAChBA,aAAeC,GAAY,QAC3BJ,eAAiBI,MAQ7B,GAJKJ,iBACDA,gBACMv+E,WAAY,SAAUsoC,QAASgzC,yBAA0BniH,OAAQA,OAAQmiC,cAE/EijF,eAAwB,SAAKjD,yBAA0B,CACvD,GAAqBsD,cAA4C,GAA7BL,eAAwB,QACxD,gCAAkCA,eAAwB,QAAI,eAAiBplH,OAAS,+DACxF,wCAA0CA,OAAS,mBAAqBolH,eAAwB,QAAI,cAAgBjD,wBACxH5hH,MAAK09G,YAAY,GAAI77G,OAAMqjH,eAE/BllH,KAAK8hH,cAAc9hG,IAAIvgB,OAAQolH,gBAEnC,MAAOA,iBAQXr8E,qBAAqBhoC,UAAUq8G,kBAAoB,SAAUp9G,OAAQyuB,WAAY0uF,gBAC7E,GAAqBj2G,UAAW3G,KAAK0jH,cAAcjkH,OAAQm9G,eAC3D,OAAKj2G,UAIE3G,KAAK6jC,gBAAgBl9B,SAAUunB,aAHlCluB,KAAK09G,YAAY,GAAI77G,OAAM,4BAA8BpC,QAAUm9G,eAAiB,6DAA+D,MAC5I58G,KAAK6jC,gBAAgB,SAAWpkC,OAAQyuB,cASvDsa,qBAAqBhoC,UAAUkjH,cAAgB,SAAUjkH,OAAQm9G,gBAC7D,IACI,MAAO58G,MAAKgK,KAAKm7G,qBAAqB1lH,OAAQm9G,gBAElD,MAAO9jG,GACH6vB,QAAQ/jC,MAAM,6BAA+BnF,OAAS,sBAAwBm9G,gBAC9E58G,KAAK09G,YAAY5kG,EAAGvU,OAAWq4G,gBAEnC,MAAO,OAEJp0E,wBAkBPD,mBAAsB,WAKtB,QAASA,oBAAmBv+B,KAAM63G,mBAC9B7hH,KAAKgK,KAAOA,KACZhK,KAAK6hH,kBAAoBA,kBACzB7hH,KAAKolH,aAAe,GAAIriG,KACxB/iB,KAAKqlH,gBAAkB,GAAIp/F,KAC3BjmB,KAAKk2G,SAAW,GAAInzF,KAgFxB,MA1EAwlB,oBAAmB/nC,UAAUshC,cAAgB,SAAUn7B,UAInD,OAAQ3G,KAAKgK,KAAKm8B,aAAa9Y,yBAAyB1mB,YAM5D4hC,mBAAmB/nC,UAAUouF,mBAAqB,SAAUjoF,UAAY,MAAO3G,MAAKgK,KAAKs7G,kBAAkB3+G,WAK3G4hC,mBAAmB/nC,UAAUwhC,eAAiB,SAAU0E,cACpDA,aAAa4K,iBACb,IAAqBvP,SAAU/hC,KAAKolH,aAAarlG,IAAI2mB,aAKrD,OAJK3E,WACD/hC,KAAKulH,iBAAiB7+E,aAAa//B,UACnCo7B,QAAY/hC,KAAKolH,aAAarlG,IAAI2mB,eAE/B3E,SAMXwG,mBAAmB/nC,UAAU4lC,aAAe,SAAUz/B,UAElD,MADA3G,MAAKulH,iBAAiB5+G,UACf7C,MAAM2iB,KAAKzmB,KAAKolH,aAAa5qF,QAAQjX,OAAO,SAAUoe,QAAU,MAAOA,QAAOh7B,WAAaA,YAMtG4hC,mBAAmB/nC,UAAUquF,YAAc,SAAUnoD,cAEjD,MADAA,cAAa4K,kBACJtxC,KAAKk2G,SAASn2F,IAAI2mB,eAM/B6B,mBAAmB/nC,UAAUsuF,WAAa,SAAU/sD,SAAW/hC,KAAKolH,aAAaplG,IAAI+hB,QAAQJ,OAAQI,UAKrGwG,mBAAmB/nC,UAAU+kH,iBAAmB,SAAU5+G,UACtD,GAAI0lC,OAAQrsC,IACZ,KAAIA,KAAKqlH,gBAAgBh/F,IAAI1f,YAG7B3G,KAAKqlH,gBAAgBxlF,IAAIl5B,UACrB3G,KAAK8hC,cAAcn7B,WAAW,CAC9B,GAAqB6+G,iBAAkB93F,gBAAgB/mB,UAClC+7B,KAAO,MAC5B,KACIA,KAAO1iC,KAAKgK,KAAKy7G,YAAYD,iBAEjC,MAAO1sG,GAEH,KADA6vB,SAAQ/jC,MAAM,8BAAgC4gH,iBACxC1sG,EAEV,GAAI4pB,KAAM,CACN,GAAI9pB,IAAK+pB,qBAAqB3iC,KAAK6hH,kBAAmBn/E,MAAOuzE,UAAYr9F,GAAGq9F,UAAWC,SAAWt9F,GAAGs9F,QACrGD,WAAU50G,QAAQ,SAAU0gC,SAAW,MAAOsK,OAAM+4E,aAAaplG,IAAI+hB,QAAQJ,OAAQI,WACrFm0E,SAAS70G,QAAQ,SAAU60G,UACvB7pE,MAAM6pE,SAASl2F,IAAIk2F,SAASv0E,OAAQ0K,MAAMw1E,kBAAkB9hG,IAAIkN,kBAAkBtmB,UAAWuvG,SAASA,gBAK/G3tE,sBAyGPuC,kBAAqB,WAOrB,QAASA,mBAAkB2B,OAAQi5E,SAAUt8F,UAAW6hB,MACpDjrC,KAAKysC,OAASA,OACdzsC,KAAK0lH,SAAWA,SAChB1lH,KAAKopB,UAAYA,UACjBppB,KAAKirC,KAAOA,KACZjrC,KAAKR,WAQT,MAHAsrC,mBAAkBtqC,UAAU6qC,yBAA2B,WACnD,MAAO,IAAIP,mBAAkB9qC,KAAMA,KAAK0lH,SAAU1lH,KAAKopB,UAAW,GAAIrG,OAEnE+nB,qBAEP66E,YAAe,WAIf,QAASA,aAAY9hH,OACjB7D,KAAK6D,MAAQA,MAEjB,MAAO8hH,gBAoDP56E,qBAAwB,WACxB,QAASA,yBA0ZT,MApZAA,sBAAqBvqC,UAAUolH,SAAW,SAAUxkH,KAAO,MAAOy1B,4BAA2Bz1B,MAM7F2pC,qBAAqBvqC,UAAUg9F,oBAAsB,SAAU1sE,KAAMiC,KAKjE,MAJAA,KAAIkY,KAAKjrB,IAAI8Q,KAAK7qB,KAAM6qB,KAAKjtB,MAAMutB,gBAAgBpxB,KAAM+yB,MACrDjC,KAAK0mE,YAAY97D,aAAa2H,WAC9BtQ,IAAIvzB,QAAQ+B,KAAKuvB,KAAK7qB,MAEnB,MAOX8kC,qBAAqBvqC,UAAUi7F,kBAAoB,SAAUtqE,KAAM4B,KAG/D,IAFA,GAAqBlvB,OAAQstB,KAAKttB,MAAMutB,gBAAgBpxB,KAAM+yB,KACzC8yF,QAAU9yF,IACb,MAAX8yF,SAAiB,CACpB,GAAIA,QAAQ56E,KAAK5kB,IAAI8K,KAAKlrB,MAEtB,MADA4/G,SAAQ56E,KAAKjrB,IAAImR,KAAKlrB,KAAMpC,OACrBA,KAEXgiH,SAAYA,QAAe,OAE/B,KAAM,IAAIhkH,OAAM,yBAA2BsvB,KAAKlrB,OAOpD8kC,qBAAqBvqC,UAAU+6F,iBAAmB,SAAUn6F,IAAK2xB,KAC7D,GAAqBmkE,SAAY91F,IAAS,IAC1C,IAAmB,MAAfA,IAAIk6F,QACJ,OAAQl6F,IAAIk6F,SACR,IAAKL,YAAWE,MACZ,MAAOpoE,KAAI2yF,SAAS/2E,SACxB,KAAKssD,YAAWC,KACZ,MAAOnoE,KAAI2yF,QACf,KAAKzqB,YAAWG,WACZlE,QAAU4uB,iBACV,MACJ,KAAK7qB,YAAWI,WACZnE,QAAU6uB,iBACV,MACJ,SACI,KAAM,IAAIlkH,OAAM,4BAA8BT,IAAIk6F,SAI9D,IADA,GAAqBuqB,SAAU9yF,IACb,MAAX8yF,SAAiB,CACpB,GAAIA,QAAQ56E,KAAK5kB,IAAI6wE,SACjB,MAAO2uB,SAAQ56E,KAAKlrB,IAAIm3E,QAE5B2uB,SAAYA,QAAe,OAE/B,KAAM,IAAIhkH,OAAM,yBAA2Bq1F,UAO/CnsD,qBAAqBvqC,UAAUm7F,kBAAoB,SAAUxqE,KAAM4B,KAC/D,GAAqBnlB,UAAWujB,KAAKvjB,SAASwjB,gBAAgBpxB,KAAM+yB,KAC/CttB,MAAQ0rB,KAAK1rB,MAAM2rB,gBAAgBpxB,KAAM+yB,KACzClvB,MAAQstB,KAAKttB,MAAMutB,gBAAgBpxB,KAAM+yB,IAE9D,OADAnlB,UAASnI,OAAS5B,MACXA,OAOXknC,qBAAqBvqC,UAAUq7F,mBAAqB,SAAU1qE,KAAM4B,KAChE,GAAqBnlB,UAAWujB,KAAKvjB,SAASwjB,gBAAgBpxB,KAAM+yB,KAC/ClvB,MAAQstB,KAAKttB,MAAMutB,gBAAgBpxB,KAAM+yB,IAE9D,OADAnlB,UAASujB,KAAKlrB,MAAQpC,MACfA,OAOXknC,qBAAqBvqC,UAAU07F,sBAAwB,SAAU/qE,KAAM4B,KACnE,GAEqB7xB,QAFA0M,SAAWujB,KAAKvjB,SAASwjB,gBAAgBpxB,KAAM+yB,KAC/C7lB,KAAOlN,KAAK++F,oBAAoB5tE,KAAKjkB,KAAM6lB,IAEhE,IAAoB,MAAhB5B,KAAKmqE,QACL,OAAQnqE,KAAKmqE,SACT,IAAKQ,eAAcC,YACf76F,OAAS0M,SAAStC,OAAOyJ,MAAMnH,SAAUV,KACzC,MACJ,KAAK4uF,eAAcE,oBACf96F,OAAS0M,SAASo4G,WAAYjyD,KAAM7mD,KAAK,IACzC,MACJ,KAAK4uF,eAAcG,KACf/6F,OAAS0M,SAASu/B,KAAKp4B,MAAMnH,SAAUV,KACvC,MACJ,SACI,KAAM,IAAIrL,OAAM,0BAA4BsvB,KAAKmqE,aAIzDp6F,QAAS0M,SAAWujB,KAAU,MAAGpc,MAAMnH,SAAUV,KAErD,OAAOhM,SAOX6pC,qBAAqBvqC,UAAU27F,wBAA0B,SAAUrrE,KAAMiC,KACrE,GAAqB7lB,MAAOlN,KAAK++F,oBAAoBjuE,KAAK5jB,KAAM6lB,KAC3CkzF,OAASn1F,KAAK0B,EACnC,IAAIyzF,iBAAkB30F,cAAe20F,OAAO3qB,UAAYL,WAAWE,MAE/D,MADApoE,KAAI2yF,SAASplH,YAAYE,UAAUF,YAAYyU,MAAMge,IAAI2yF,SAAUx4G,MAC5D,IAGP,IAAqB2gC,OAAQ/c,KAAK0B,GAAGpB,gBAAgBpxB,KAAM+yB,IAC3D,OAAO8a,OAAM94B,MAAM,KAAM7H,OAQjC69B,qBAAqBvqC,UAAUm9F,gBAAkB,SAAU7sE,KAAMiC,KAC7D,MAAO,IAAI4yF,aAAY70F,KAAKjtB,MAAMutB,gBAAgBpxB,KAAM+yB,OAO5DgY,qBAAqBvqC,UAAUy9F,sBAAwB,SAAUntE,KAAMiC,KACnE,GAAqBiwE,OAAQ13D,mBAAmBxa,KAAMiC,IAAK/yB,KAK3D,OAJA+yB,KAAIkY,KAAKjrB,IAAI8Q,KAAK7qB,KAAM+8F,OACpBlyE,KAAK0mE,YAAY97D,aAAa2H,WAC9BtQ,IAAIvzB,QAAQ+B,KAAKuvB,KAAK7qB,MAEnB,MAOX8kC,qBAAqBvqC,UAAUk9F,oBAAsB,SAAU5sE,KAAMiC,KACjE,MAAOjC,MAAKK,KAAKC,gBAAgBpxB,KAAM+yB,MAO3CgY,qBAAqBvqC,UAAU29F,YAAc,SAAUrtE,KAAMiC,KACzD,GAAqBlmB,WAAYikB,KAAKjkB,UAAUukB,gBAAgBpxB,KAAM+yB,IACtE,OAAIlmB,WACO7M,KAAK2wB,mBAAmBG,KAAKipE,SAAUhnE,KAEvB,MAAlBjC,KAAKkpE,UACHh6F,KAAK2wB,mBAAmBG,KAAKkpE,UAAWjnE,KAE5C,MAOXgY,qBAAqBvqC,UAAUi+F,kBAAoB,SAAU3tE,KAAMiC,KAC/D,IACI,MAAO/yB,MAAK2wB,mBAAmBG,KAAKytE,UAAWxrE,KAEnD,MAAOja,GACH,GAAqBsyB,UAAWrY,IAAIsY,0BAGpC,OAFAD,UAASH,KAAKjrB,IAAI8lG,kBAAmBhtG,GACrCsyB,SAASH,KAAKjrB,IAAI+lG,kBAAmBjtG,EAAEtB,OAChCxX,KAAK2wB,mBAAmBG,KAAK0tE,WAAYpzD,YAQxDL,qBAAqBvqC,UAAUm+F,eAAiB,SAAU7tE,KAAMiC,KAC5D,KAAMjC,MAAKlsB,MAAMwsB,gBAAgBpxB,KAAM+yB,MAO3CgY,qBAAqBvqC,UAAU69F,iBAAmB,SAAUvtE,KAAM7vB,SAAW,MAAO,OAMpF8pC,qBAAqBvqC,UAAU67F,qBAAuB,SAAUj7F,IAAK2xB,KACjE,GAAqB7lB,MAAOlN,KAAK++F,oBAAoB39F,IAAI8L,KAAM6lB,KAC1CiwE,MAAQ5hG,IAAIg7F,UAAUhrE,gBAAgBpxB,KAAM+yB,IACjE,OAAO,KAAKiwE,MAAM71D,KAAKp4B,MAAMiuF,OAAQ,QAAQ13F,OAAO4B,SAOxD69B,qBAAqBvqC,UAAU87F,iBAAmB,SAAUl7F,IAAK2xB,KAAO,MAAO3xB,KAAIyC,OAMnFknC,qBAAqBvqC,UAAU+7F,kBAAoB,SAAUn7F,IAAK2xB,KAAO,MAAO3xB,KAAIyC,MAAMoqC,SAM1FlD,qBAAqBvqC,UAAUi8F,qBAAuB,SAAUr7F,IAAK2xB,KACjE,MAAI3xB,KAAIyL,UAAUukB,gBAAgBpxB,KAAM+yB,KAC7B3xB,IAAI24F,SAAS3oE,gBAAgBpxB,KAAM+yB,KAEpB,MAAjB3xB,IAAI44F,UACF54F,IAAI44F,UAAU5oE,gBAAgBpxB,KAAM+yB,KAExC,MAOXgY,qBAAqBvqC,UAAUk8F,aAAe,SAAUt7F,IAAK2xB,KACzD,OAAQ3xB,IAAIyL,UAAUukB,gBAAgBpxB,KAAM+yB,MAOhDgY,qBAAqBvqC,UAAUm8F,uBAAyB,SAAUv7F,IAAK2xB,KACnE,MAAO3xB,KAAIyL,UAAUukB,gBAAgBpxB,KAAM+yB,MAO/CgY,qBAAqBvqC,UAAUo8F,cAAgB,SAAUx7F,IAAK2xB,KAC1D,MAAO3xB,KAAIyC,MAAMutB,gBAAgBpxB,KAAM+yB,MAO3CgY,qBAAqBvqC,UAAUq8F,kBAAoB,SAAUz7F,IAAK2xB,KAC9D,GAAqBgZ,YAAa3qC,IAAIqxB,OAAOxa,IAAI,SAAU+zB,OAAS,MAAOA,OAAM/lC,MACjF,OAAOymC,YAAWX,WAAY3qC,IAAIs7B,WAAY3J,IAAK/yB,OAOvD+qC,qBAAqBvqC,UAAUi9F,yBAA2B,SAAU3sE,KAAMiC,KACtE,GAAqBgZ,YAAajb,KAAK2B,OAAOxa,IAAI,SAAU+zB,OAAS,MAAOA,OAAM/lC,MAKlF,OAJA8sB,KAAIkY,KAAKjrB,IAAI8Q,KAAK7qB,KAAMymC,WAAWX,WAAYjb,KAAK4L,WAAY3J,IAAK/yB,OACjE8wB,KAAK0mE,YAAY97D,aAAa2H,WAC9BtQ,IAAIvzB,QAAQ+B,KAAKuvB,KAAK7qB,MAEnB,MAOX8kC,qBAAqBvqC,UAAUw8F,wBAA0B,SAAU57F,IAAK2xB,KACpE,GAAIsZ,OAAQrsC,KACS+8F,IAAM,WAAc,MAAO37F,KAAI27F,IAAI3rE,gBAAgBib,MAAOtZ,MAC1DonE,IAAM,WAAc,MAAO/4F,KAAI+4F,IAAI/oE,gBAAgBib,MAAOtZ,KAC/E,QAAQ3xB,IAAIozD,UACR,IAAKgkC,gBAAeC,OAChB,MAAOsE,QAAS5C,KACpB,KAAK3B,gBAAeG,UAChB,MAAOoE,SAAU5C,KACrB,KAAK3B,gBAAeE,UAChB,MAAOqE,QAAS5C,KACpB,KAAK3B,gBAAeI,aAChB,MAAOmE,SAAU5C,KACrB,KAAK3B,gBAAeU,IAChB,MAAO6D,QAAS5C,KACpB,KAAK3B,gBAAeW,GAChB,MAAO4D,QAAS5C,KACpB,KAAK3B,gBAAeM,KAChB,MAAOiE,OAAQ5C,KACnB,KAAK3B,gBAAeK,MAChB,MAAOkE,OAAQ5C,KACnB,KAAK3B,gBAAeO,OAChB,MAAOgE,OAAQ5C,KACnB,KAAK3B,gBAAeQ,SAChB,MAAO+D,OAAQ5C,KACnB,KAAK3B,gBAAeS,OAChB,MAAO8D,OAAQ5C,KACnB,KAAK3B,gBAAeY,MAChB,MAAO2D,OAAQ5C,KACnB,KAAK3B,gBAAea,YAChB,MAAO0D,QAAS5C,KACpB,KAAK3B,gBAAec,OAChB,MAAOyD,OAAQ5C,KACnB,KAAK3B,gBAAee,aAChB,MAAOwD,QAAS5C,KACpB,SACI,KAAM,IAAIt4F,OAAM,oBAAsBT,IAAIozD,YAQtDzpB,qBAAqBvqC,UAAUy8F,kBAAoB,SAAU77F,IAAK2xB,KAC9D,GAAqB7xB,QACA0M,SAAWxM,IAAIwM,SAASwjB,gBAAgBpxB,KAAM+yB,IAEnE,OADA7xB,QAAS0M,SAASxM,IAAI6E,OAQ1B8kC,qBAAqBvqC,UAAU08F,iBAAmB,SAAU97F,IAAK2xB,KAC7D,GAAqBnlB,UAAWxM,IAAIwM,SAASwjB,gBAAgBpxB,KAAM+yB,KAC9C8E,KAAOz2B,IAAIqE,MAAM2rB,gBAAgBpxB,KAAM+yB,IAC5D,OAAOnlB,UAASiqB,OAOpBkT,qBAAqBvqC,UAAU28F,sBAAwB,SAAU/7F,IAAK2xB,KAClE,MAAO/yB,MAAK++F,oBAAoB39F,IAAIq5B,QAAS1H,MAOjDgY,qBAAqBvqC,UAAU48F,oBAAsB,SAAUh8F,IAAK2xB,KAChE,GAAIsZ,OAAQrsC,KACSkB,SAErB,OADAE,KAAIq5B,QAAQp5B,QAAQ,SAAU6d,OAAS,MAAOhe,QAAOge,MAAM5R,KAAO4R,MAAMrb,MAAMutB,gBAAgBib,MAAOtZ,OAC9F7xB,QAOX6pC,qBAAqBvqC,UAAU88F,eAAiB,SAAUl8F,IAAKH,SAC3D,GAAqByoB,QAAS1pB,KAAK++F,oBAAoB39F,IAAIkW,MAAOrW,QAClE,OAAOyoB,QAAOA,OAAOvmB,OAAS,IAOlC4nC,qBAAqBvqC,UAAUu+F,oBAAsB,SAAUpyF,YAAaomB,KACxE,GAAIsZ,OAAQrsC,IACZ,OAAO2M,aAAYsL,IAAI,SAAUkZ,MAAQ,MAAOA,MAAKC,gBAAgBib,MAAOtZ,QAOhFgY,qBAAqBvqC,UAAUmwB,mBAAqB,SAAU+L,WAAY3J,KACtE,IAAK,GAAqBpjB,GAAI,EAAGA,EAAI+sB,WAAWv5B,OAAQwM,IAAK,CACzD,GAAqBmhB,MAAO4L,WAAW/sB,GAClBrL,IAAMwsB,KAAKG,eAAejxB,KAAM+yB,IACrD,IAAIzuB,cAAeqhH,aACf,MAAOrhH,KAGf,MAAO,OAEJymC,wBAkBP+6E,kBAAoB,QACpBC,kBAAoB,QAgBpBG,yBAA4B,SAAUrxG,QAEtC,QAASqxG,4BACL,MAAOrxG,QAAOm6B,KAAKhvC,MAAM,IAAUA,KAqNvC,MAvNAE,WAAUgmH,yBAA0BrxG,QASpCqxG,yBAAyB1lH,UAAUy9F,sBAAwB,SAAUntE,KAAMiC,KACvE,GAAIsZ,OAAQrsC,IAWZ,OAVA+yB,KAAIgwE,UAAUjyE,MACd9wB,KAAK0lG,uBAAuB50E,KAAMiC,KACf,MAAfjC,KAAK2b,SACL1Z,IAAIwvE,MAAMzxE,KAAMA,KAAK7qB,KAAO,+BAC5B6qB,KAAK2b,OAAOrb,gBAAgBpxB,KAAM+yB,KAClCA,IAAIsvE,QAAQvxE,KAAM,iBAEtBA,KAAK4a,QAAQrqC,QAAQ,SAAUsqC,QAAU,MAAOU,OAAMs5D,kBAAkB70E,KAAM6a,OAAQ5Y,OACtFjC,KAAK+a,QAAQxqC,QAAQ,SAAUyqC,QAAU,MAAOO,OAAMu5D,kBAAkB90E,KAAMgb,OAAQ/Y,OACtFA,IAAIkwE,WACG,MAOXijB,yBAAyB1lH,UAAUklG,uBAAyB,SAAU50E,KAAMiC,KACxEA,IAAIwvE,MAAMzxE,KAAM,YAAcA,KAAK7qB,KAAO,KACZ,MAA1B6qB,KAAKqb,mBACLnsC,KAAK6lG,aAAa/0E,KAAKqb,kBAAkB1Z,OAAQM,KAErDA,IAAIsvE,QAAQvxE,KAAM,OAClBiC,IAAI8vE,YAC0B,MAA1B/xE,KAAKqb,mBACDrb,KAAKqb,kBAAkBzZ,KAAKvvB,OAAS,IACrC4vB,IAAIsvE,QAAQvxE,KAAM;AAClB9wB,KAAK2wB,mBAAmBG,KAAKqb,kBAAkBzZ,KAAMK,MAG7DA,IAAI+vE,YACJ/vE,IAAIsvE,QAAQvxE,KAAM,MAQtBo1F,yBAAyB1lH,UAAUmlG,kBAAoB,SAAU70E,KAAM6a,OAAQ5Y,KAC3EA,IAAIsvE,QAAQvxE,KAAM,yBAA2BA,KAAK7qB,KAAO,gBAAkB0lC,OAAO1lC,KAAO,0BACzF8sB,IAAI8vE,YACAl3D,OAAOjZ,KAAKvvB,OAAS,IACrB4vB,IAAIsvE,QAAQvxE,KAAM,oBAClB9wB,KAAK2wB,mBAAmBgb,OAAOjZ,KAAMK,MAEzCA,IAAI+vE,YACJ/vE,IAAIsvE,QAAQvxE,KAAM,SAQtBo1F,yBAAyB1lH,UAAUolG,kBAAoB,SAAU90E,KAAMgb,OAAQ/Y,KAC3EA,IAAIwvE,MAAMzxE,KAAMA,KAAK7qB,KAAO,cAAgB6lC,OAAO7lC,KAAO,gBAC1DjG,KAAK6lG,aAAa/5D,OAAOrZ,OAAQM,KACjCA,IAAIsvE,QAAQvxE,KAAM,OAClBiC,IAAI8vE,YACA/2D,OAAOpZ,KAAKvvB,OAAS,IACrB4vB,IAAIsvE,QAAQvxE,KAAM,oBAClB9wB,KAAK2wB,mBAAmBmb,OAAOpZ,KAAMK,MAEzCA,IAAI+vE,YACJ/vE,IAAIsvE,QAAQvxE,KAAM,OAOtBo1F,yBAAyB1lH,UAAU+6F,iBAAmB,SAAUn6F,IAAK2xB,KACjE,GAAI3xB,IAAIk6F,UAAYL,WAAWC,KAC3BnoE,IAAIwvE,MAAMnhG,IAAK,YAEd,CAAA,GAAIA,IAAIk6F,UAAYL,WAAWE,MAChC,KAAM,IAAIt5F,OAAM,+EAGhBgT,QAAOrU,UAAU+6F,iBAAiBvsD,KAAKhvC,KAAMoB,IAAK2xB,KAEtD,MAAO,OAOXmzF,yBAAyB1lH,UAAUg9F,oBAAsB,SAAU1sE,KAAMiC,KAIrE,MAHAA,KAAIwvE,MAAMzxE,KAAM,OAASA,KAAK7qB,KAAO,OACrC6qB,KAAKjtB,MAAMutB,gBAAgBpxB,KAAM+yB,KACjCA,IAAIsvE,QAAQvxE,KAAM,KACX,MAOXo1F,yBAAyB1lH,UAAUo8F,cAAgB,SAAUx7F,IAAK2xB,KAE9D,MADA3xB,KAAIyC,MAAMutB,gBAAgBpxB,KAAM+yB,KACzB,MAOXmzF,yBAAyB1lH,UAAU27F,wBAA0B,SAAUhrE,KAAM4B,KACzE,GAAqBkzF,QAAS90F,KAAKqB,EAanC,OAZIyzF,kBAAkB30F,cAAe20F,OAAO3qB,UAAYL,WAAWE,OAC3DpoE,IAAiB,aAAS,OAAE3B,gBAAgBpxB,KAAM+yB,KACtDA,IAAIwvE,MAAMpxE,KAAM,cACZA,KAAKjkB,KAAK/J,OAAS,IACnB4vB,IAAIwvE,MAAMpxE,KAAM,MAChBnxB,KAAK++F,oBAAoB5tE,KAAKjkB,KAAM6lB,IAAK,MAE7CA,IAAIwvE,MAAMpxE,KAAM,MAGhBtc,OAAOrU,UAAU27F,wBAAwBntD,KAAKhvC,KAAMmxB,KAAM4B,KAEvD,MAOXmzF,yBAAyB1lH,UAAUq8F,kBAAoB,SAAUz7F,IAAK2xB,KAQlE,MAPAA,KAAIwvE,MAAMnhG,IAAK,aACfpB,KAAK6lG,aAAazkG,IAAIqxB,OAAQM,KAC9BA,IAAIsvE,QAAQjhG,IAAK,OACjB2xB,IAAI8vE,YACJ7iG,KAAK2wB,mBAAmBvvB,IAAIs7B,WAAY3J,KACxCA,IAAI+vE,YACJ/vE,IAAIwvE,MAAMnhG,IAAK,KACR,MAOX8kH,yBAAyB1lH,UAAUi9F,yBAA2B,SAAU3sE,KAAMiC,KAQ1E,MAPAA,KAAIwvE,MAAMzxE,KAAM,YAAcA,KAAK7qB,KAAO,KAC1CjG,KAAK6lG,aAAa/0E,KAAK2B,OAAQM,KAC/BA,IAAIsvE,QAAQvxE,KAAM,OAClBiC,IAAI8vE,YACJ7iG,KAAK2wB,mBAAmBG,KAAK4L,WAAY3J,KACzCA,IAAI+vE,YACJ/vE,IAAIsvE,QAAQvxE,KAAM,KACX,MAOXo1F,yBAAyB1lH,UAAUi+F,kBAAoB,SAAU3tE,KAAMiC,KACnEA,IAAIsvE,QAAQvxE,KAAM,SAClBiC,IAAI8vE,YACJ7iG,KAAK2wB,mBAAmBG,KAAKytE,UAAWxrE,KACxCA,IAAI+vE,YACJ/vE,IAAIsvE,QAAQvxE,KAAM,YAAc4wE,kBAAkBz7F,KAAO,OACzD8sB,IAAI8vE,WACJ,IAAqBrE,aAAgCmD,kBAAkB3hF,IAAI0hF,kBAAkB7pE,KAAK,UAAU4D,WAAW,MAC/GC,aAAaC,SACZrwB,OAAOwlB,KAAK0tE,WAIrB,OAHAx+F,MAAK2wB,mBAAmB6tE,WAAYzrE,KACpCA,IAAI+vE,YACJ/vE,IAAIsvE,QAAQvxE,KAAM,KACX,MAOXo1F,yBAAyB1lH,UAAUqlG,aAAe,SAAUpzE,OAAQM,KAChE/yB,KAAKqkG,gBAAgB,SAAUr4D,OAAS,MAAOjZ,KAAIwvE,MAAM,KAAMv2D,MAAM/lC,OAAUwsB,OAAQM,IAAK,MAMhGmzF,yBAAyB1lH,UAAU2jG,qBAAuB,SAAUr4D,QAChE,GAAqB7lC,KACrB,QAAQ6lC,QACJ,IAAKgwD,eAAcC,YACf91F,KAAO,QACP,MACJ,KAAK61F,eAAcE,oBACf/1F,KAAO,WACP,MACJ,KAAK61F,eAAcG,KACfh2F,KAAO,MACP,MACJ,SACI,KAAM,IAAIpE,OAAM,2BAA6BiqC,QAErD,MAAO7lC,OAEJigH,0BACTniB,wBAmDEv2D,kBAAqB,SAAU34B,QAE/B,QAAS24B,qBACL,GAAInB,OAAmB,OAAXx3B,QAAmBA,OAAOE,MAAM/U,KAAMkD,YAAclD,IAIhE,OAHAqsC,OAAM85E,iBACN95E,MAAM+5E,kBACN/5E,MAAMg6E,qBACCh6E,MAsEX,MA5EAnsC,WAAUstC,kBAAmB34B,QAY7B24B,kBAAkBhtC,UAAUitC,iBAAmB,SAAU1a,KACrD,GAAqBjC,MAAO,GAAI4D,iBAAgB,GAAIzC,gBAAejyB,KAAKqmH,kBAAkBpuG,IAAI,SAAUquG,WAAa,MAAO,IAAIp0F,iBAAgBo0F,UAAWj1F,SAASi1F,aAAY,OAChLx1F,MAAKG,eAAejxB,KAAM+yB,MAK9Bya,kBAAkBhtC,UAAUktC,QAAU,WAElC,IAAK,GADgBxsC,WACKyO,EAAI,EAAGA,EAAI3P,KAAKmmH,cAAchjH,OAAQwM,IAC5DzO,OAAOlB,KAAKmmH,cAAcx2G,IAAM3P,KAAKomH,eAAez2G,EAExD,OAAOzO,SAOXssC,kBAAkBhtC,UAAU+7F,kBAAoB,SAAUn7F,IAAK2xB,KAC3D,GAAqBlvB,OAAQzC,IAAIyC,MAAMoqC,QAClBxjC,GAAKzK,KAAKomH,eAAexkH,QAAQiC,MACtD,IAAI4G,MAAO,EAAI,CACXA,GAAKzK,KAAKomH,eAAejjH,OACzBnD,KAAKomH,eAAe7kH,KAAKsC,MACzB,IAAqBuhD,QAASl/C,gBAAiBE,UAAWhF,IAAIyC,MAAMoqC,WAAc,KAClFjuC,MAAKmmH,cAAc5kH,KAAK,OAAS6jD,OAAS,IAAM36C,IAGpD,MADAsoB,KAAIwvE,MAAMnhG,IAAKpB,KAAKmmH,cAAc17G,KAC3B,MAOX+iC,kBAAkBhtC,UAAUg9F,oBAAsB,SAAU1sE,KAAMiC,KAI9D,MAHIjC,MAAK0mE,YAAY97D,aAAa2H,WAC9BrjC,KAAKqmH,kBAAkB9kH,KAAKuvB,KAAK7qB,MAE9B4O,OAAOrU,UAAUg9F,oBAAoBxuD,KAAKhvC,KAAM8wB,KAAMiC,MAOjEya,kBAAkBhtC,UAAUi9F,yBAA2B,SAAU3sE,KAAMiC,KAInE,MAHIjC,MAAK0mE,YAAY97D,aAAa2H,WAC9BrjC,KAAKqmH,kBAAkB9kH,KAAKuvB,KAAK7qB,MAE9B4O,OAAOrU,UAAUi9F,yBAAyBzuD,KAAKhvC,KAAM8wB,KAAMiC,MAOtEya,kBAAkBhtC,UAAUy9F,sBAAwB,SAAUntE,KAAMiC,KAIhE,MAHIjC,MAAK0mE,YAAY97D,aAAa2H,WAC9BrjC,KAAKqmH,kBAAkB9kH,KAAKuvB,KAAK7qB,MAE9B4O,OAAOrU,UAAUy9F,sBAAsBjvD,KAAKhvC,KAAM8wB,KAAMiC,MAE5Dya,mBACT04E,0BAsBEK,YAAe,WAYf,QAASA,aAAYC,UAAWxP,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,kBAAmBjoB,iBAAkBs3B,gBAAiBtxC,UACrJn1E,KAAKwmH,UAAYA,UACjBxmH,KAAKg3G,kBAAoBA,kBACzBh3G,KAAKi3G,gBAAkBA,gBACvBj3G,KAAKk3G,eAAiBA,eACtBl3G,KAAKm3G,cAAgBA,cACrBn3G,KAAKo3G,kBAAoBA,kBACzBp3G,KAAKmvF,iBAAmBA,iBACxBnvF,KAAKymH,gBAAkBA,gBACvBzmH,KAAKm1E,SAAWA,SAChBn1E,KAAK0mH,uBAAyB,GAAI3jG,KAClC/iB,KAAK2mH,2BAA6B,GAAI5jG,KACtC/iB,KAAK4mH,+BAAiC,GAAI7jG,KAC1C/iB,KAAK6mH,uBAAyB,GAAI9jG,KAClC/iB,KAAK8mH,uBAAyB,EAyUlC,MAvUArmH,QAAOmf,eAAe2mG,YAAY/lH,UAAW,YAIzCuf,IAAK,WAAc,MAAO/f,MAAKwmH,WAC/B1mG,YAAY,EACZD,cAAc,IAOlB0mG,YAAY/lH,UAAUumH,kBAAoB,SAAU30B,YAChD,MAAOtqC,WAAUC,WAAW/nD,KAAKgnH,4BAA4B50B,YAAY,KAO7Em0B,YAAY/lH,UAAUymH,mBAAqB,SAAU70B,YACjD,MAAO/pC,SAAQ/iC,QAAQtlB,KAAKgnH,4BAA4B50B,YAAY,KAOxEm0B,YAAY/lH,UAAU0mH,kCAAoC,SAAU90B,YAChE,MAAOtqC,WAAUC,WAAW/nD,KAAKmnH,+BAA+B/0B,YAAY,KAOhFm0B,YAAY/lH,UAAU4mH,mCAAqC,SAAUh1B,YACjE,MAAO/pC,SAAQ/iC,QAAQtlB,KAAKmnH,+BAA+B/0B,YAAY,KAM3Em0B,YAAY/lH,UAAU6mH,sBAAwB,SAAUrjG,WACpDhkB,KAAKm1E,SAASM,KAAK,iGACnB,IAAqBptE,UAAWrI,KAAK0mH,uBAAuB3mG,IAAIiE,UAChE,KAAK3b,SACD,KAAM,IAAIxG,OAAM,iBAAmB5B,cAAcuG,WAAWwd,WAAa,wBAE7E,OAAS3b,UAASF,SAAkB,SAAEkB,oBAO1Ck9G,YAAY/lH,UAAUmwF,oBAAsB,SAAU3sE,WAClD,GAAqB+d,SAAU/hC,KAAKg3G,kBAAkB/kB,oBAAoBjuE,UAC1E,OAAQ+d,SAAwB,kBAMpCwkF,YAAY/lH,UAAU8mH,iBAAmB,SAAUrR,WAC/C,GAAI5pE,OAAQrsC,IACZA,MAAK6qF,aACLj9C,iBAAiBqoE,WAAW50G,QAAQ,SAAU0gC,SAC1CsK,MAAM8iD,iBAAiBL,YAAantD,OAAQI,QAAQp5B,KAAKvC,UAAWw7B,SAAU,KAAMj5B,KAAMo5B,aAOlGwkF,YAAY/lH,UAAU+mH,cAAgB,SAAUlhH,KAAO,QAASrG,KAAKmvF,iBAAiBntD,eAAe37B,MAKrGkgH,YAAY/lH,UAAUgnH,sBAAwB,SAAUC,KACpD,GAAIp7E,OAAQrsC,IACZ,OAAOynH,KAAIxvG,IAAI,SAAU+7E,KAAO,MAAOA,KAAI5tF,YAAcmd,OAAO,SAAUld,KAAO,OAAQgmC,MAAMk7E,cAAclhH,QAQjHkgH,YAAY/lH,UAAUwmH,4BAA8B,SAAU50B,WAAYnB,QACtE,GAAI5kD,OAAQrsC,IACZ,OAAO8nD,WAAUG,KAAKjoD,KAAK0nH,aAAat1B,WAAYnB,QAAS,WAEzD,MADA5kD,OAAMs7E,mBAAmBv1B,WAAY,MAC9B/lD,MAAM0sE,eAAe3mB,eASpCm0B,YAAY/lH,UAAU2mH,+BAAiC,SAAU/0B,WAAYnB,QACzE,GAAI5kD,OAAQrsC,IACZ,OAAO8nD,WAAUG,KAAKjoD,KAAK0nH,aAAat1B,WAAYnB,QAAS,WACzD,GAAqB22B,sBAErB,OADAv7E,OAAMs7E,mBAAmBv1B,WAAYw1B,oBAC9B,GAAI3nH,eAAc4nH,6BAA6Bx7E,MAAM0sE,eAAe3mB,YAAaw1B,uBAQhGrB,YAAY/lH,UAAUknH,aAAe,SAAUI,WAAY72B,QACvD,GAAI5kD,OAAQrsC,KACSuyF,WACAw1B,aAAiB/nH,KAAKg3G,kBAAkBrwE,oBAAoBmhF,WAejF,OAZA9nH,MAAKwnH,sBAAsBO,aAAalhF,iBAAiBC,SAASzlC,QAAQ,SAAU2mH,gBAEhF,GAAqB97G,YAAemgC,MAAM2qE,kBAAkBrwE,oBAAoBqhF,eAChF37E,OAAMm7E,sBAAsBt7G,WAAWq5B,oBAAoBlkC,QAAQ,SAAUgF,KACzE,GAAqBmsF,SAAUnmD,MAAM2qE,kBAAkBhmB,sBAAsB9kF,WAAWvD,KAAKvC,UAAWC,IAAK4qF,OACzGuB,UACAD,QAAQhxF,KAAKixF,WAGrBnmD,MAAMm7E,sBAAsBt7G,WAAWw5B,eAClCrkC,QAAQ,SAAUgF,KAAO,MAAOgmC,OAAM2qE,kBAAkBjiB,sBAAsB1uF,SAEhFyhD,UAAUI,IAAIqqC,UAOzBg0B,YAAY/lH,UAAUu4G,eAAiB,SAAU3mB,YAC7C,GAAI/lD,OAAQrsC,KACSioH,gBAAoBjoH,KAAK6mH,uBAAuB9mG,IAAIqyE,WACzE,KAAK61B,gBAAiB,CAClB,GAAqBC,cAAiBloH,KAAKg3G,kBAAkBrwE,oBAAoByrD,YAE5DhV,gBAAkBp9E,KAAKg3G,kBAAkBzgB,oBAAoB,GAAIhrC,cAAatrD,cAAckoH,UAAY/lG,WAAY,WAAc,MAAO,IAAIgmG,qBAAoB/7E,MAAO67E,aAAav/G,KAAKvC,gBAC1L68B,UAAY6K,sBACZtK,cAAgBxjC,KAAKo3G,kBAAkB1X,QAAQz8D,UAAWilF,aAAc9qC,eAMzF6qC,iBALCjoH,KAAKymH,gBAAgBp9E,OAKJkE,cAActhC,eAAei8G,cAAejlF,UAAUvG,YAAY8G,cAAcg8D,oBAH9F30D,oBAAoB5H,UAAUvG,YAAY8G,cAAcg8D,oBAKhEx/F,KAAK6mH,uBAAuB7mG,IAAIkoG,aAAav/G,KAAKvC,UAAW6hH,iBAEjE,MAAOA,kBAQX1B,YAAY/lH,UAAUmnH,mBAAqB,SAAUG,WAAYO,uBAC7D,GAAIh8E,OAAQrsC,KACS8kC,SAAa9kC,KAAKg3G,kBAAkBrwE,oBAAoBmhF,YACxDQ,qBAAuB,GAAIvlG,KAC3BwlG,UAAY,GAAItiG,KAChBuiG,gBAAkBxoH,KAAKwnH,sBAAsB1iF,SAAS+B,iBAAiBC,QAC5F0hF,iBAAgBnnH,QAAQ,SAAUonH,UAC9B,GAAqBC,iBAAoBr8E,MAAM2qE,kBAAkBrwE,oBAAoB8hF,SACrFp8E,OAAMm7E,sBAAsBkB,gBAAgBnjF,oBAAoBlkC,QAAQ,SAAUsnH,QAC9EL,qBAAqBtoG,IAAI2oG,OAAQD,gBACjC,IAAqB7pC,SAAUxyC,MAAM2qE,kBAAkBhlB,qBAAqB22B,OAC5E,IAAI9pC,QAAQ50E,cACRs+G,UAAU1oF,IAAIwM,MAAMu8E,wBAAwB/pC,QAAS6pC,kBACjDL,uBAAuB,CACvB,GAAqBhgH,UAAWgkC,MAAMw8E,4BAA4BhqC,QAAQl2E,KAAKvC,UAAWsiH,gBAC1FH,WAAU1oF,IAAIx3B,UACdggH,sBAAsB9mH,KAAuBs9E,QAAwB,uBAKrF2pC,gBAAgBnnH,QAAQ,SAAUonH,UAC9B,GAAqBC,iBAAoBr8E,MAAM2qE,kBAAkBrwE,oBAAoB8hF,SACrFp8E,OAAMm7E,sBAAsBkB,gBAAgBnjF,oBAAoBlkC,QAAQ,SAAUsnH,QAC9E,GAAqB9pC,SAAUxyC,MAAM2qE,kBAAkBhlB,qBAAqB22B,OACxE9pC,SAAQ50E,aACR40E,QAAQl0E,gBAAgBtJ,QAAQ,SAAUynH,oBACtC,GAAqB58G,YAAeo8G,qBAAqBvoG,IAAI+oG,mBAAmBx9D,cAChFi9D,WAAU1oF,IAAIwM,MAAMw8E,4BAA4BC,mBAAmBx9D,cAAep/C,iBAI9Fw8G,gBAAgB/9G,gBAAgBtJ,QAAQ,SAAUynH,oBAC9C,IAAKz8E,MAAMk7E,cAAcuB,mBAAmBx9D,cAAcllD,WAAY,CAClE,GAAqB8F,YAAeo8G,qBAAqBvoG,IAAI+oG,mBAAmBx9D,cAChFi9D,WAAU1oF,IAAIwM,MAAMw8E,4BAA4BC,mBAAmBx9D,cAAep/C,kBAI9Fq8G,UAAUlnH,QAAQ,SAAUgH,UAAY,MAAOgkC,OAAM08E,iBAAiB1gH,aAM1Ek+G,YAAY/lH,UAAUuqF,cAAgB,SAAUpiF,MAC5C3I,KAAK6mH,uBAAuB/mF,OAAOn3B,MACnC3I,KAAKg3G,kBAAkBjsB,cAAcpiF,MACrC3I,KAAK2mH,2BAA2B7mF,OAAOn3B,KACvC,IAAqBqgH,kBAAmBhpH,KAAK0mH,uBAAuB3mG,IAAIpX,KACpEqgH,mBACAhpH,KAAK0mH,uBAAuB5mF,OAAOn3B,OAM3C49G,YAAY/lH,UAAUqqF,WAAa,WAC/B7qF,KAAKg3G,kBAAkBnsB,aACvB7qF,KAAK0mH,uBAAuB57B,QAC5B9qF,KAAK2mH,2BAA2B77B,QAChC9qF,KAAK6mH,uBAAuB/7B,SAOhCy7B,YAAY/lH,UAAUqoH,4BAA8B,SAAUhiH,SAAUi+B,UACpE,IAAKA,SACD,KAAM,IAAIjjC,OAAM,aAAe5B,cAAcuG,WAAWK,UAAY,qFAExE,IAAqBmiH,kBAAmBhpH,KAAK2mH,2BAA2B5mG,IAAIlZ,SAC5E,KAAKmiH,iBAAkB,CACnB,GAAqB7gH,UAAWnI,KAAKg3G,kBAAkBhlB,qBAAqBnrF,SAC5E8mC,iBAAgBxlC,SAChB,IAAqByC,kBAAoBzC,SAAyB,iBAC7C8gH,UAAYjpH,KAAKg3G,kBAAkBxmB,qBAAqB3pF,UACxD8yG,SAAW1xG,wBAAwBghH,UAAW9gH,SAA4BlI,cAAcipH,mCAAmCt+G,kBAChJo+G,kBACI,GAAIG,oBAAiB,GAAMhhH,SAASQ,KAAMgxG,SAAU70E,UAAW38B,SAASQ,OAC5E3I,KAAK2mH,2BAA2B3mG,IAAInZ,SAAUmiH,kBAElD,MAAOA,mBAOXzC,YAAY/lH,UAAUooH,wBAA0B,SAAUzgH,SAAU28B,UAChE,GAAqBkkF,kBAAmBhpH,KAAK0mH,uBAAuB3mG,IAAI5X,SAASQ,KAAKvC,UAMtF,OALK4iH,oBACDr7E,gBAAgBxlC,UAChB6gH,iBAAmB,GAAIG,oBAAiB,GAAOhhH,SAASQ,KAAMR,SAAU28B,SAAUA,SAAS+B,iBAAiBjkB,YAC5G5iB,KAAK0mH,uBAAuB1mG,IAAI7X,SAASQ,KAAKvC,UAAW4iH,mBAEtDA,kBAMXzC,YAAY/lH,UAAUuoH,iBAAmB,SAAU1gH,UAC/C,GAAIgkC,OAAQrsC,IACZ,KAAIqI,SAAS+gH,WAAb,CAGA,GAAqBjhH,UAAWE,SAASF,SACpBkhH,+BAAiC,GAAItmG,KACrCumG,cAAgBx7E,sBAChBkrE,oBAAsBh5G,KAAKk3G,eAAejK,iBAAiBqc,cAAenhH,SAC7FA,UAAkB,SAAEqB,oBAAoBnI,QAAQ,SAAUs3G,gBACxD,GAAqBqC,oBAAqB3uE,MAAM6qE,eAAe/J,cAAcr/D,sBAAuB3lC,SAAUwwG,eAC9G0Q,gCAA+BrpG,IAAuB24F,eAAyB,UAAGqC,sBAEtFh7G,KAAKupH,4BAA4BvQ,oBAAqBqQ,+BACtD,IAIqBG,YAJA5mG,WAAava,SAASua,WAAW3K,IAAI,SAAUuL,KAAO,MAAO6oB,OAAM2qE,kBAAkB/kB,oBAAoBzuE,IAAIpd,aAC7G0/B,MAAQz9B,SAASy8B,SAAS+B,iBAAiBf,MAAM7tB,IAAI,SAAU2uB,MAAQ,MAAOyF,OAAM2qE,kBAAkBniB,eAAejuD,KAAKxgC,aAC3IwS,GAAK5Y,KAAKi3G,gBAAgB1uG,MAAMJ,SAA+BA,SAAkB,SAAW,SAAGya,WAAYkjB,MAAOz9B,SAASy8B,SAASwlB,QAAS7+C,kBAAkBpD,SAASy8B,SAASn8B,KAAMN,SAASF,SAA6BE,SAASF,SAAkB,WAAK+xG,eAAiBthG,GAAGvQ,SAAU26E,UAAYpqE,GAAGktB,MACzRtC,cAAgBxjC,KAAKm3G,cAAclK,iBAAiBqc,cAAenhH,SAAU+xG,eAAgB7oF,SAAS2nF,oBAAoBlM,WAAY9pB,UAMvJwmC,YAJCxpH,KAAKymH,gBAAgBp9E,OAITkE,cAAcphC,eAAe9D,SAASy8B,SAASn8B,KAAMN,SAASF,UAAWmhH,cAAc5sF,YAHvFmO,oBAAoBy+E,cAAc5sF,WAKnD,IAAqB+sF,WAAYD,WAAWhmF,cAAc8rE,cACrC9kG,aAAeg/G,WAAWhmF,cAAc+rE,gBAC7DlnG,UAASqhH,SAASD,UAAWj/G,gBAOjC+7G,YAAY/lH,UAAU+oH,4BAA8B,SAAUroH,OAAQmoH,gCAClE,GAAIh9E,OAAQrsC,IACZkB,QAAOyiC,aAAatiC,QAAQ,SAAUyyB,IAAKnkB,GACvC,GAAqBg6G,qBAAwBN,+BAA+BtpG,IAAI+T,IAAIngB,WAC/Di2G,gBAAkBv9E,MAAMw9E,mCAAmCF,oBAAqBN,+BACrGv1F,KAAI8P,SAASgmF,oBAQrBrD,YAAY/lH,UAAUqpH,mCAAqC,SAAU3oH,OAAQmoH,gCAEzE,MADArpH,MAAKupH,4BAA4BroH,OAAQmoH,gCACpCrpH,KAAKymH,gBAAgBp9E,OAIfkE,cAAc3hC,uBAAuB1K,OAAO2K,KAAM7L,KAAK8mH,0BAA2B5lH,OAAO+hC,UAAUvG,YAAYx7B,OAAO4rG,WAHtHjiE,oBAAoB3pC,OAAO+hC,UAAUvG,YAAYx7B,OAAO4rG,YAMhEyZ,cAEXA,aAAYj3D,aACN3mD,KAAM4G,qBAGZg3G,YAAYh3D,eAAiB,WAAc,QACrC5mD,KAAM1I,cAAcg3E,WACpBtuE,KAAMqhC,0BACNrhC,KAAMohC,iBACNphC,KAAM4hC,gBACN5hC,KAAM0hC,eACN1hC,KAAM6hC,mBACN7hC,KAAM8lF,kBACN9lF,KAAMugC,iBACNvgC,KAAM1I,cAAc2oC,WAE1B,IAAIugF,kBAAoB,WAQpB,QAASA,kBAAiBzgH,OAAQ7B,SAAUsB,SAAU28B,SAAUliB,YAC5D5iB,KAAK0I,OAASA,OACd1I,KAAK6G,SAAWA,SAChB7G,KAAKmI,SAAWA,SAChBnI,KAAK8kC,SAAWA,SAChB9kC,KAAK4iB,WAAaA,WAClB5iB,KAAK8pH,WAAa,KAClB9pH,KAAKopH,YAAa,EAetB,MARAD,kBAAiB3oH,UAAUkpH,SAAW,SAAUD,UAAWj/G,cACvDxK,KAAK8pH,WAAaL,UAChBzpH,KAAKmI,SAA2B,kBAAE+nF,YAAYu5B,UAChD,KAAK,GAAqB5xF,QAAQrtB,cAC5BxK,KAAKmI,SAAsB,aAAE0vB,MAAQrtB,aAAaqtB,KAExD73B,MAAKopH,YAAa,GAEfD,oBAcPf,oBAAuB,WAKvB,QAASA,qBAAoB2B,UAAWC,WACpChqH,KAAK+pH,UAAYA,UACjB/pH,KAAKgqH,UAAYA,UA4DrB,MA1DAvpH,QAAOmf,eAAewoG,oBAAoB5nH,UAAW,aAIjDuf,IAAK,WAAc,MAAO/f,MAAK+pH,UAAUE,UACzCnqG,YAAY,EACZD,cAAc,IAOlBuoG,oBAAoB5nH,UAAUumH,kBAAoB,SAAU30B,YACxD,MAAOpyF,MAAK+pH,UAAUhD,kBAAkB30B,aAO5Cg2B,oBAAoB5nH,UAAUymH,mBAAqB,SAAU70B,YACzD,MAAOpyF,MAAK+pH,UAAU9C,mBAAmB70B,aAO7Cg2B,oBAAoB5nH,UAAU0mH,kCAAoC,SAAU90B,YACxE,MAAOpyF,MAAK+pH,UAAU7C,kCAAkC90B,aAO5Dg2B,oBAAoB5nH,UAAU4mH,mCAAqC,SAAUh1B,YACzE,MAAOpyF,MAAK+pH,UAAU3C,mCAAmCh1B,aAM7Dg2B,oBAAoB5nH,UAAU6mH,sBAAwB,SAAUrjG,WAC5D,MAAOhkB,MAAK+pH,UAAU1C,sBAAsBrjG,YAMhDokG,oBAAoB5nH,UAAUqqF,WAAa,WAAc7qF,KAAK+pH,UAAUl/B,cAMxEu9B,oBAAoB5nH,UAAUuqF,cAAgB,SAAUpiF,MAAQ3I,KAAK+pH,UAAUh/B,cAAcpiF,OACtFy/G,uBAoCP8B,cAAiB,WAOjB,QAASA,eAAcx0C,YAAarN,cAAeC,eAAgBuH,SAC/C,SAAZA,UAAsBA,QAAU,MACpC7vE,KAAK01E,YAAcA,YACnB11E,KAAKqoE,cAAgBA,cACrBroE,KAAKsoE,eAAiBA,eACtBtoE,KAAK6vE,QAAUA,QACf7vE,KAAKyoE,aA0DT,MAlDAyhD,eAAc1pH,UAAU2pH,mBAAqB,SAAUp1C,KAAMvpE,IAAK+J,qBAC9D,GAAqB60G,kBAAmBpqH,KAAK01E,YAAYntE,MAAMwsE,KAAMvpE,KAAK,EAAM+J,oBAChF,IAAI60G,iBAAiBnpG,OAAO9d,OACxB,MAAOinH,kBAAiBnpG,MAE5B,IAAqBopG,kBAAmBntG,gBAAgBktG,iBAAiBjrD,UAAW5pD,oBAAqBvV,KAAKqoE,cAAeroE,KAAKsoE,eAClI,OAAI+hD,kBAAiBppG,OAAO9d,OACjBknH,iBAAiBppG,SAE3BrI,GAAK5Y,KAAKyoE,WAAWlnE,KAAKwT,MAAM6D,GAAIyxG,iBAAiB3qG,aAEtD,IAAI9G,KAKRsxG,cAAc1pH,UAAU8pH,YAAc,WAAc,MAAOtqH,MAAKyoE,WAMhEyhD,cAAc1pH,UAAUutE,MAAQ,SAAU6G,WAAY21C,eAClD,GAAqB7qG,aACA8qG,cAAgB,GAAIC,oBAEzCzqH,MAAKyoE,UAAUpnE,QAAQ,SAAU6P,SAC7B,GAAqBzG,IAAKmqE,WAAWl9D,OAAOxG,QACvCwO,UAASkvB,eAAenkC,KAIxBmO,GAAK8G,SAASjV,IAAIm4D,SAASrhE,KAAKwT,MAAM6D,GAAI1H,QAAQ0xD,SAHnDljD,SAASjV,IAAMyG,OAKnB,IAAI0H,KAGR,IAAqB8xG,SAAUjqH,OAAO+5B,KAAK9a,UAAUzH,IAAI,SAAUxN,IAC/D,GAAqB+qE,QAASZ,WAAWnJ,iBAAiB/rD,SAASjV,KAC9CkgH,IAAMjrG,SAASjV,IACf0J,MAAQqhE,OAASg1C,cAAcl7C,QAAQq7C,IAAIx2G,MAAOqhE,QAAUm1C,IAAIx2G,MAChEy2G,mBAAqB,GAAInoD,SAAQtuD,YAAew2G,IAAI7yG,QAAS6yG,IAAI7tG,YAAarS,GAKnG,OAJAmgH,oBAAmBhoD,QAAU+nD,IAAI/nD,QAC7B2nD,eACAK,mBAAmBhoD,QAAQvhE,QAAQ,SAAU+T,QAAU,MAAOA,QAAOzO,SAAW4jH,cAAcn1G,OAAOzO,YAElGikH,oBAEX,OAAOh2C,YAAW7G,MAAM28C,QAAS1qH,KAAK6vE,UAEnCq6C,iBAEPO,oBAAuB,SAAU51G,QAEjC,QAAS41G,uBACL,MAAkB,QAAX51G,QAAmBA,OAAOE,MAAM/U,KAAMkD,YAAclD,KAuC/D,MAzCAE,WAAUuqH,oBAAqB51G,QAS/B41G,oBAAoBjqH,UAAU8uE,QAAU,SAAUn7D,MAAOqhE,QACrD,GAAInpC,OAAQrsC,IACZ,OAAOw1E,QAASrhE,MAAM8D,IAAI,SAAUlH,GAAK,MAAOA,GAAE5P,MAAMkrC,MAAOmpC,UAAcrhE,OAOjFs2G,oBAAoBjqH,UAAU2hE,oBAAsB,SAAUC,GAAIoT,QAC9D,GAAInpC,OAAQrsC,KACSqiE,UAAcmT,OAAOj2D,aAAa6iD,GAAGC,WACrCC,UAAYF,GAAGE,UAAckT,OAAOj2D,aAAa6iD,GAAGE,WAAeF,GAAGE,UACtE7tD,SAAW2tD,GAAG3tD,SAASwD,IAAI,SAAUlH,GAAK,MAAOA,GAAE5P,MAAMkrC,MAAOmpC,SACrF,OAAO,IAAIpS,gBAAehB,GAAGhjD,IAAKgjD,GAAGpkD,MAAOqkD,UAAWC,UAAW7tD,SAAU2tD,GAAGpgB,OAAQogB,GAAG/tD,aAO9Fo2G,oBAAoBjqH,UAAU+hE,iBAAmB,SAAUH,GAAIoT,QAC3D,MAAO,IAAInS,aAAYjB,GAAGv+D,MAA0B2xE,OAAOj2D,aAAa6iD,GAAGn8D,MAASm8D,GAAG/tD,aAO3Fo2G,oBAAoBjqH,UAAUgiE,oBAAsB,SAAUJ,GAAIoT,QAC9D,MAAO,IAAIlS,gBAAelB,GAAGv+D,MAA0B2xE,OAAOj2D,aAAa6iD,GAAGn8D,MAASm8D,GAAG/tD,aAEvFo2G,qBACTlnD,cAsBEsnD,UAAa,WAOb,QAASA,WAAU7gH,KAAMi8B,qBAAsB6kF,cAAezmF,kBAC1DrkC,KAAKgK,KAAOA,KACZhK,KAAKimC,qBAAuBA,qBAC5BjmC,KAAK8qH,cAAgBA,cACrB9qH,KAAKqkC,iBAAmBA,iBAuD5B,MAjDAwmF,WAAUrqH,UAAU8c,QAAU,SAAUq6F,WACpC,GAAItrE,OAAQrsC,KACS2kC,eAAiBqB,sBAAsBhmC,KAAKimC,qBAAsB0xE,UAAW33G,KAAKgK,MACnG4O,GAAK8rB,4BAA4BC,eAAgB3kC,KAAKgK,KAAMhK,KAAKqkC,kBAAmBuB,MAAQhtB,GAAGgtB,MAAOrB,UAAY3rB,GAAG2rB,SACzH,OAAO8jB,SACFH,IAAI3jB,UAAUtsB,IAAI,SAAU6sB,UAAY,MAAOuH,OAAMhI,iBAAiBiuD,qCAAqCxtD,SAASn8B,KAAKvC,WAAW,MACpI6hD,KAAK,WACN,GAAqBhnC,UAerB,IAdA2kB,MAAMvkC,QAAQ,SAAUo/B,MACpB,GAAqBsqF,aACrBtqF,MAAK7d,WAAWvhB,QAAQ,SAAU0rF,eAC9B,GAAqBlO,SAAUxyC,MAAMhI,iBAAiB2tD,qBAAqBjF,cACvElO,UAAWA,QAAQ50E,aACnB8gH,UAAUxpH,KAAKs9E,WAGvBksC,UAAU1pH,QAAQ,SAAU8G,UACxB,GAAqB4sE,MAAW5sE,SAAkB,SAAW,SACxCoN,oBAAsBy5C,oBAAoBC,UAA6B9mD,SAAkB,SAAEsB,cAChHwX,QAAO1f,KAAKwT,MAAMkM,OAA2BorB,MAAMy+E,cAAcX,mBAAmBp1C,KAAMt0C,KAAKoF,OAAQtwB,0BAG3G0L,OAAO9d,OACP,KAAM,IAAItB,OAAMof,OAAOhJ,IAAI,SAAUa,GAAK,MAAOA,GAAE+C,aAAehE,KAAK,MAE3E,OAAOw0B,OAAMy+E,iBAQrBD,UAAUnqH,OAAS,SAAUsJ,KAAMygC,QAC/B,GAAqB5B,YAAa,GAAIE,YACjBV,YAAc9d,kCACdqY,YAAc,GAAI0F,mBAClBrH,gBAAkB,GAAIsH,oBAAmBv+B,KAAM44B,aAC/CqD,qBAAuB,GAAIuC,sBAAqBx+B,KAAM44B,YAAa3B,iBACnEwH,gBAAkB,GAAIC,iBAAgBzH,gBAAiBgF,sBACvD7yB,OAAS,GAAI81B,iBAAiBC,qBAAsBlpC,cAAc+I,kBAAkBogC,SAAUC,QAAQ,IACtGC,WAAa,GAAIC,sBAAsBxpB,IAAK,SAAUvU,KAAO,MAAOxB,MAAKw/B,aAAah+B,OAAW68B,YAAaQ,WAAYz1B,QAC1Hw2B,sBAAwB,GAAIC,0BAC5B9kB,SAAW,GAAIilB,yBAAwB52B,OAAQ,GAAI62B,kBAAiBxB,iBAAkB,GAAIyB,mBAAkBzB,iBAAkB,GAAI0B,cAAa1B,iBAAkBxH,gBAAiB2I,sBAAuBN,WAAY,GAAIrpC,eAAc2oC,SAAYhG,YAAa6F,iBAEhQqiF,cAAgB,GAAIZ,eAAcrhF,iBAAoB4B,QACtDugF,UAAY,GAAIH,WAAU7gH,KAAMi8B,qBAAsB6kF,cAAe/lG,SAC1F,QAASimG,UAAWA,UAAWviF,gBAAiBA,kBAE7CoiF,aA0BPI,aAAgB,WAChB,QAASA,gBACLjrH,KAAKkrH,uBAAyB,GAAIjrH,eAAckrH,wBAqDpD,MA9CAF,cAAazqH,UAAU8wF,mBAAqB,SAAU3oF,KAAMyiH,aACxD,GAAqB/8B,UAAW+8B,YAAY/8B,QAC5C,IAAwB,gBAAbA,UAAuB,CAC9B,GAAqBg9B,QAAS7gG,aAAa6jE,SAC3C,OAAOg9B,QAASh9B,SAAW,WAAaA,SAAWzmC,cAElD,GAAiB,OAAbymC,UAAkC,SAAbA,SAC1B,KAAM5pF,aAAY,mCAAsCxE,cAAcuG,WAAWmC,MAAQ,yJAG7F,OAAO,KAAO1I,cAAcuG,WAAWmC,OAM3CsiH,aAAazqH,UAAU20F,WAAa,SAAUF,YAC1C,MAAOj1F,MAAKkrH,uBAAuB/1B,WAAWF,aAMlDg2B,aAAazqH,UAAUisF,YAAc,SAAUwI,YAC3C,MAAOj1F,MAAKkrH,uBAAuBz+B,YAAYwI,aAMnDg2B,aAAazqH,UAAUosF,aAAe,SAAUqI,YAC5C,MAAOj1F,MAAKkrH,uBAAuBt+B,aAAaqI,aAOpDg2B,aAAazqH,UAAU6tB,iBAAmB,SAAU1lB,KAAMi2G,YACtD,MAAO5+G,MAAKkrH,uBAAuB78F,iBAAiB1lB,KAAMi2G,aAM9DqM,aAAazqH,UAAUmgB,yBAA2B,SAAUta,KAAO,MAAOA,KAAI4nC,SACvEg9E,gBAcPK,qBAKAvrG,IAAK,SAAUvU,KACX,KAAM,IAAI3J,OAAM,4EAA8E2J,IAAM,OAGxG+/G,eAAiB,GAAItrH,eAAc2iF,eAAe,cAKlD4oC,qBACEnhC,QAAS7+B,iBAAkBvpC,SAAU,GAAIgpG,gBACzC5gC,QAASF,eAAgBloE,SAAUqpG,sBACnCjhC,QAASqE,mBAAoBxsE,UAC7BmoE,QAASoE,gBAAiBzsE,YAAa0sE,qBACvCrE,QAASpqF,cAAc2oC,SAAU1mB,UACjCmoE,QAAS1gD,MAAOznB,UAChBmoE,QAAS3gD,OAAQxnB,MAAOynB,SAEtB0gD,QAASkhC,eACTppG,SAAU4mB,WACV7mB,UAGAmoE,QAASvhD,eACT1mB,WAAY,SAAUqpG,OAAQjuG,aAAc2C,OAAQ/M,OAAQu1B,SACxDnrB,aAAeA,cAAgB,EAC/B,IAAqByrB,oBAAqBzrB,aAAiBpK,OAA0B,mBAAInT,cAAcu0E,2BAA2Bk3C,MAClI,OAAO,IAAI5iF,gBAAe2iF,OAAQjuG,aAAc2C,OAAQ8oB,mBAAoBN,UAEhFzmB,MACIqpG,gBACC,GAAItrH,eAAcmkF,SAAY,GAAInkF,eAAcokF,OAAOpkF,cAAc0rH,gBACrE,GAAI1rH,eAAcmkF,SAAY,GAAInkF,eAAcokF,OAAOpkF,cAAck3E,uBACrEjuC,iBACAjpC,cAAc2oC,aAInByhD,QAASthD,WACT/mB,YAAa8mB,iBAGbuhD,QAAStgD,eAAgB7nB,MAAOgnB,eAAgBsiB,iBAC5C9hB,OAAQ+zC,sBACR30C,eAAgB7oC,cAAc2oC,UAAW3oC,cAAcmkF,SAAUzB,wBAEvE0H,QAAS9gD,oBAAqBrnB,MAAOioE,eAAgB7/D,YAAaye,WAAYG,kBAC9EmhD,QAASrgD,wBAAyB9nB,MAAOgnB,eAAgBe,iBACnDC,kBAAmBC,aACnBskD,gBACAhR,sBACAl0C,oBAAqBtpC,cAAc2oC,UAClC3oC,cAAcmkF,SAAU97C,mBACzBkjB,kBACCvrD,cAAcmkF,SAAU2K,yBACjC3E,8BACEC,QAAS9/C,cAAeroB,MAAOoI,eAC/B+/D,QAAShgD,aAAcnoB,MAAOgnB,eAAgBsiB,iBAAkBiyB,yBAChE4M,QAAS7/C,iBAAkBtoB,MAAOspC,oBAClC6+B,QAASnhD,eAAgBjnB,SAAU,GAAIinB,kBACvCmhD,QAASk8B,YAAarkG,MAAOjiB,cAAcg3E,SAAUjtC,wBAC/CD,eAAgBQ,cAChBF,aAAcG,iBACdikD,gBAAiBvlD,eACjBjpC,cAAc2oC,YACpByhD,QAASpqF,cAAckoH,SAAUnmG,YAAaukG,cAC9Cl8B,QAASxgD,yBAA0B3nB,UACnCmoE,QAAS5M,sBAAuBz7D,YAAa6nB,2BAC7CwgD,QAAS//D,YAAapI,MAAOjiB,cAAcqqF,oBAC3CD,QAASngD,kBAAmBhoB,MAAOspC,oBACnC6+B,QAASlgD,aAAcjoB,MAAOspC,oBAC9B6+B,QAASpgD,iBAAkB/nB,MAAOspC,oBAEpCogE,mBAAsB,WAItB,QAASA,oBAAmBC,gBACxB,GAAqBC,kBACjBC,SAAU9rH,cAAcyP,YACxB25B,QAAQ,EACRF,qBAAsBlpC,cAAc+I,kBAAkBogC,SACtDH,mBAAoBhpC,cAAcu0E,2BAA2BC,QAC7DzqD,sBAAsB,EAE1BhqB,MAAKgsH,iBAAmBF,iBAAiBxgH,OAAOugH,gBA6BpD,MAvBAD,oBAAmBprH,UAAUyrH,eAAiB,SAAU7jF,SACpC,SAAZA,UAAsBA,WAC1B,IAAqB8jF,MAAO99E,cAAcpuC,KAAKgsH,gBAAgB1gH,OAAO88B,UACjD6hF,SAAWhqH,cAAcg3E,SAASv2E,QACnD8qH,oBACInhC,QAASnhD,eACT9mB,WAAY,WACR,MAAO,IAAI8mB,iBAGPG,OAAQ6iF,KAAK7iF,OAGbF,qBAAsB+iF,KAAK/iF,qBAC3BF,mBAAoBijF,KAAKjjF,mBACzBjf,qBAAsBkiG,KAAKliG,wBAGnC9H,SACkBgqG,KAAe,WAEzC,OAAOjC,UAASlqG,IAAI9f,cAAckoH,WAE/ByD,qBAEXA,oBAAmBt8D,aACb3mD,KAAM4G,qBAGZq8G,mBAAmBr8D,eAAiB,WAAc,QAC5C5mD,KAAM7E,MAAOwrD,aAAe3mD,KAAM1I,cAAcokF,OAAQn3E,MAAOjN,cAAcksH,sBAOnF,IAAIC,qBAAsBnsH,cAAcosH,sBAAsBpsH,cAAcqsH,aAAc,gBACpFjiC,QAASpqF,cAAcksH,iBAAkBlqG,YAAcI,OAAO,IAC9DgoE,QAASpqF,cAAcssH,gBAAiBpqG,SAAUypG,mBAAoB1pG,MAAOjiB,cAAcksH;;;;;;;;;;;;;;AA8FjG3sH,QAAQgvC,QAAUA,QAClBhvC,QAAQmjF,oBAAsBA,oBAC9BnjF,QAAQ0pC,eAAiBA,eACzB1pC,QAAQ+mH,YAAcA,YACtB/mH,QAAQ0qC,kBAAoBA,kBAC5B1qC,QAAQ2qC,aAAeA,aACvB3qC,QAAQyqC,iBAAmBA,iBAC3BzqC,QAAQgW,6BAA+BA,6BACvChW,QAAQwvD,oBAAsBA,oBAC9BxvD,QAAQgrC,iBAAmBA,iBAC3BhrC,QAAQ+yB,cAAgBA,cACxB/yB,QAAQg5F,eAAiBA,eACzBh5F,QAAQ46F,mBAAqBA,mBAC7B56F,QAAQs8F,cAAgBA,cACxBt8F,QAAQy7F,WAAaA,WACrBz7F,QAAQw7F,SAAWA,SACnBx7F,QAAQw+F,UAAYA,UACpBx+F,QAAQ69F,UAAYA,UACpB79F,QAAQ4+F,YAAcA,YACtB5+F,QAAQy6F,gBAAkBA,gBAC1Bz6F,QAAQs9F,oBAAsBA,oBAC9Bt9F,QAAQi9B,eAAiBA,eACzBj9B,QAAQ09B,oBAAsBA,oBAC9B19B,QAAQ8wB,kBAAoBA,kBAC5B9wB,QAAQiyB,aAAeA,aACvBjyB,QAAQg9F,kBAAoBA,kBAC5Bh9F,QAAQmzB,aAAeA,aACvBnzB,QAAQ0+F,OAASA,OACjB1+F,QAAQq6F,gBAAkBA,gBAC1Br6F,QAAQo6F,mBAAqBA,mBAC7Bp6F,QAAQm6F,iBAAmBA,iBAC3Bn6F,QAAQuyB,iBAAmBA,iBAC3BvyB,QAAQqzB,YAAcA,YACtBrzB,QAAQyyB,eAAiBA,eACzBzyB,QAAQ6yB,QAAUA,QAClB7yB,QAAQi6F,YAAcA,YACtBj6F,QAAQg6F,aAAeA,aACvBh6F,QAAQ8xB,YAAcA,YACtB9xB,QAAQk1B,gBAAkBA,gBAC1Bl1B,QAAQ+wB,iBAAmBA,iBAC3B/wB,QAAQk/F,UAAYA,UACpBl/F,QAAQ8+F,aAAeA,aACvB9+F,QAAQk8F,aAAeA,aACvBl8F,QAAQo8F,cAAgBA,cACxBp8F,QAAQg8F,aAAeA,aACvBh8F,QAAQk8B,aAAeA,aACvBl8B,QAAQ03B,UAAYA,UACpB13B,QAAQw3B,sBAAwBA,sBAChCx3B,QAAQ6qC,aAAeA,aACvB7qC,QAAQwF,eAAiBA,eACzBxF,QAAQuF,cAAgBA,cACxBvF,QAAQiF,YAAcA,YACtBjF,QAAQmB,YAAcA,YACtBnB,QAAQyvC,QAAUA,QAClBzvC,QAAQ4vC,aAAeA,aACvB5vC,QAAQ8vC,QAAUA,QAClB9vC,QAAQgwC,wBAA0BA,wBAClChwC,QAAQkwC,cAAgBA,cACxBlwC,QAAQswC,aAAeA,aACvBtwC,QAAQwwC,YAAcA,YACtBxwC,QAAQg+B,WAAaA,WACrBh+B,QAAQ89B,oBAAsBA,oBAC9B99B,QAAQ8wC,0BAA4BA,0BACpC9wC,QAAQkxC,aAAeA,aACvBlxC,QAAQgjB,YAAcA,YACtBhjB,QAAQ2jB,gBAAkBA,gBAC1B3jB,QAAQi+B,aAAeA,aACvBj+B,QAAQq+B,oBAAsBA,oBAC9Br+B,QAAQoB,WAAaA,WACrBpB,QAAQqB,mBAAqBA,mBAC7BrB,QAAQwxC,oBAAsBA,oBAC9BxxC,QAAQyxC,4BAA8BA,4BACtCzxC,QAAQsB,iBAAmBA,iBAC3BtB,QAAQ+oD,8BAAgCA,8BACxC/oD,QAAQipD,8BAAgCA,8BACxCjpD,QAAQkpD,yCAA2CA,yCACnDlpD,QAAQopD,wCAA0CA,wCAClDppD,QAAQupD,yBAA2BA,yBACnCvpD,QAAQwpD,0CAA4CA,0CACpDxpD,QAAQypD,8BAAgCA,8BACxCzpD,QAAQ0pD,gCAAkCA,gCAC1C1pD,QAAQ4pD,kCAAoCA,kCAC5C5pD,QAAQ6pD,iCAAmCA,iCAC3C7pD,QAAQ8pD,8BAAgCA,8BACxC9pD,QAAQ0G,eAAiBA,eACzB1G,QAAQkH,oBAAsBA,oBAC9BlH,QAAQoH,cAAgBA,cACxBpH,QAAQuH,iBAAmBA,iBAC3BvH,QAAQwH,kBAAoBA,kBAC5BxH,QAAQyH,qBAAuBA,qBAC/BzH,QAAQ0H,WAAaA,WACrB1H,QAAQ2H,0BAA4BA,0BACpC3H,QAAQ6iC,mBAAqBA,mBAC7B7iC,QAAQ4H,mBAAqBA,mBAC7B5H,QAAQ6H,4BAA8BA,4BACtC7H,QAAQ8H,wBAA0BA,wBAClC9H,QAAQ+H,uBAAyBA,uBACjC/H,QAAQgI,UAAYA,UACpBhI,QAAQkI,eAAiBA,eACzBlI,QAAQmI,qBAAuBA,qBAC/BnI,QAAQoI,oBAAsBA,oBAC9BpI,QAAQqI,qBAAuBA,qBAC/BrI,QAAQgqD,0BAA4BA,0BACpChqD,QAAQsI,uBAAyBA,uBACjCtI,QAAQsJ,wBAA0BA,wBAClCtJ,QAAQuI,8BAAgCA,8BACxCvI,QAAQwI,wBAA0BA,wBAClCxI,QAAQiJ,yBAA2BA,yBACnCjJ,QAAQyI,wBAA0BA,wBAClCzI,QAAQqL,mBAAqBA,mBAC7BrL,QAAQwqD,oBAAsBA,oBAC9BxqD,QAAQsL,uBAAyBA,uBACjCtL,QAAQ0qD,wBAA0BA,wBAClC1qD,QAAQ+qD,kCAAoCA,kCAC5C/qD,QAAQ+rD,aAAeA,aACvB/rD,QAAQwL,QAAUA,QAClBxL,QAAQ+L,UAAYA,UACpB/L,QAAQiM,kBAAoBA,kBAC5BjM,QAAQoM,uBAAyBA,uBACjCpM,QAAQyM,eAAiBA,eACzBzM,QAAQ2M,eAAiBA,eACzB3M,QAAQ0oC,kBAAoBA,kBAC5B1oC,QAAQ8qC,YAAcA,YACtB9qC,QAAQykC,kBAAoBA,kBAC5BzkC,QAAQ0kC,qBAAuBA,qBAC/B1kC,QAAQ2kC,iBAAmBA,iBAC3B3kC,QAAQklC,4BAA8BA,4BACtCllC,QAAQwmC,sBAAwBA,sBAChCxmC,QAAQi2G,cAAgBA,cACxBj2G,QAAQghC,aAAeA,aACvBhhC,QAAQmrC,mBAAqBA,mBAC7BnrC,QAAQorC,gBAAkBA,gBAC1BprC,QAAQkpC,gBAAkBA,gBAC1BlpC,QAAQ8G,aAAeA,aACvB9G,QAAQ8oC,kBAAoBA,kBAC5B9oC,QAAQmiH,qBAAuBA,qBAC/BniH,QAAQsoC,yBAA2BA,yBACnCtoC,QAAQgpC,qBAAuBA,qBAC/BhpC,QAAQuoC,mBAAqBA,mBAC7BvoC,QAAQyoC,uBAAyBA,uBACjCzoC,QAAQ+oC,mBAAqBA,mBAC7B/oC,QAAQ0V,QAAUA,QAClB1V,QAAQ+vB,QAAUA,QAClB/vB,QAAQivF,gBAAkBA,gBAC1BjvF,QAAQkvF,mBAAqBA,mBAC7BlvF,QAAQgsH,mBAAqBA,mBAC7BhsH,QAAQosH,mBAAqBA,mBAC7BpsH,QAAQ4sH,oBAAsBA,oBAC9B5sH,QAAQyrH,aAAeA,aACvBzrH,QAAQgsD,iBAAmBA,iBAC3BhsD,QAAQ6qB,sCAAwCA,sCAChD7qB,QAAQ+qB,gCAAkCA,gCAC1C/qB,QAAQ4qF,6BAA+BA,6BACvC5qF,QAAQ8qB,YAAcA,YACtB9qB,QAAQgrB,aAAeA,aACvBhrB,QAAQ2qF,eAAiBA,eACzB3qF,QAAQi+E,sBAAwBA,sBAChCj+E,QAAQqrH,UAAYA,UACpBrrH,QAAQ2uC,cAAgBA,cACxB3uC,QAAQspC,eAAiBA,eACzBtpC,QAAQ0qH,cAAgBA,cACxB1qH,QAAQgsE,WAAaA,WACrBhsE,QAAQ+gB,MAAQA,MAChB/gB,QAAQ8gB,OAASA,OACjB9gB,QAAQ4gB,IAAMA,IACd5gB,QAAQ6gB,IAAMA,IACd7gB,QAAQqtB,8BAAgCA,8BACxCrtB,QAAQ+pC,oBAAsBA,oBAC9B/pC,QAAQisD,YAAcA,YACtBjsD,QAAQosD,UAAYA,UACpBpsD,QAAQqsD,IAAMA,IACdrsD,QAAQssD,MAAQA,MAChBtsD,QAAQqqB,UAAYA,UACpBrqB,QAAQysD,iBAAmBA,iBAC3BzsD,QAAQ0sD,MAAQA,MAChB1sD,QAAQ2sD,YAAcA,YACtB3sD,QAAQ4sD,aAAeA,aACvB5sD,QAAQ6sD,cAAgBA,cACxB7sD,QAAQ8sD,iBAAmBA,iBAC3B9sD,QAAQ+sD,UAAYA,UACpB/sD,QAAQgtD,WAAaA,WACrBhtD,QAAQitD,YAAcA,YACtBjtD,QAAQktD,iBAAmBA,iBAC3BltD,QAAQmtD,aAAeA,aACvBntD,QAAQotD,WAAaA,WACrBptD,QAAQqtD,cAAgBA,cACxBrtD,QAAQutD,OAASA,OACjBvtD,QAAQytD,UAAYA,UACpBztD,QAAQ0tD,cAAgBA,cACxB1tD,QAAQ2tD,WAAaA,WACrB3tD,QAAQ4tD,eAAiBA,eACzB5tD,QAAQ6tD,aAAeA,aACvB7tD,QAAQoqB,cAAgBA,cACxBpqB,QAAQ8tD,gBAAkBA,gBAC1B9tD,QAAQ4M,WAAaA,WACrB5M,QAAQguD,eAAiBA,eACzBhuD,QAAQiuD,oBAAsBA,oBAC9BjuD,QAAQkuD,eAAiBA,eACzBluD,QAAQ6M,iBAAmBA,iBAC3B7M,QAAQ4Q,UAAYA,SACpB5Q,SAAQmqC,MAAQA,KAChBnqC,SAAQ2Q,MAAQA,MAChB3Q,QAAQixD,IAAMA,IACdjxD,QAAQ8R,aAAeA,aACvB9R,QAAQ2S,QAAUA,QAClB3S,QAAQoyD,mBAAqBA,mBAC7BpyD,QAAQsyD,2BAA6BA,2BACrCtyD,QAAQkqC,OAASA,OACjBlqC,QAAQ6yD,UAAYA,UACpB7yD,QAAQuvF,sBAAwBA,sBAChCvvF,QAAQwqC,wBAA0BA,wBAClCxqC,QAAQyU,KAAOA,KACfzU,QAAQ+pB,KAAOA,KACf/pB,QAAQw4D,UAAYA,UACpBx4D,QAAQ04D,cAAgBA,cACxB14D,QAAQs+B,UAAYrc,YACpBjiB,QAAQ+U,QAAUA,QAClB/U,QAAQme,QAAUA,QAClBne,QAAQ0U,QAAUA,QAClB1U,QAAQ8M,SAAWA,SACnB9M,QAAQyV,iBAAmBA,iBAC3BzV,QAAQkV,SAAWA,SACnBlV,QAAQ0/D,gBAAkBA,gBAC1B1/D,QAAQy/D,UAAYA,UACpBz/D,QAAQupC,WAAaA,WACrBvpC,QAAQkiD,kBAAoBA,kBAC5BliD,QAAQgD,qBAAuBA,qBAC/BhD,QAAQoyC,eAAiBA,eACzBpyC,QAAQgC,cAAgBA,cACxBhC,QAAQiC,YAAcA,YACtBjC,QAAQuC,cAAgBA,cACxBvC,QAAQyC,YAAcA,YACtBzC,QAAQ0C,aAAeA,aACvB1C,QAAQ2C,YAAcA,YACtB3C,QAAQ6C,eAAiBA,eACzB7C,QAAQwyC,eAAiBA,eACzBxyC,QAAQq3B,2BAA6BA,2BACrCr3B,QAAQohC,kBAAoBA,kBAC5BphC,QAAQwU,cAAgBA,cACxBxU,QAAQsU,gBAAkBA,gBAC1BtU,QAAQuU,gBAAkBA,gBAC1BvU,QAAQ+3D,gBAAkBA,gBAC1B/3D,QAAQk4D,WAAaA,WACrBl4D,QAAQiU,eAAiBA,eACzBjU,QAAQqqC,yBAA2BA,yBACnCrqC,QAAQ8I,YAAcA,YACtB9I,QAAQ8lD,gBAAkBA,gBAC1B9lD,QAAQ4mD,oBAAsBA,oBAC9B5mD,QAAQ+mD,gBAAkBA,gBAC1B/mD,QAAQotG,wBAA0BA,wBAClCptG,QAAQqtG,mBAAqBA,mBAC7BrtG,QAAQ+qC,cAAgBA,cACxB/qC,QAAQqjF,mBAAqBA,mBAC7BrjF,QAAQsjF,oBAAsBA,oBAC9BtjF,QAAQuqC,eAAiBA,eACzBvqC,QAAQ+oB,aAAeA,aACvB/oB,QAAQipB,yBAA2BA,yBACnCjpB,QAAQgqB,wBAA0BA,wBAClChqB,QAAQgtH,GAAKl6G,IACb9S,QAAQitH,GAAKp6G,IACb7S,QAAQktH,GAAKt6G,IACb5S,QAAQmtH,GAAKp9G,mBACb/P,QAAQotH,GAAKl+F,eACblvB,QAAQqtH,GAAKztD,SACb5/D,QAAQstH,GAAKlrB,cACbpiG,QAAQutH,GAAKnvB,kBACbp+F,QAAQwtH,GAAKnvB,WACbr+F,QAAQytH,GAAKlvB,YACbv+F,QAAQ0tH,GAAKpvB,YACbt+F,QAAQ2tH,GAAKh2F,WACb33B,QAAQ4tH,GAAKl5F,QACb10B,QAAQ6tH,GAAKn7F,gBACb1yB,QAAQ8tH,GAAKl1B,QACb54F,QAAQ+tH,GAAKn2F,OACb53B,QAAQguH,GAAKznH,cAEbtF,OAAOmf,eAAepgB,QAAS,cAAgBqE,OAAO","file":"/Users/jasonaden/Projects/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.3-14502f5b34\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('5.0.0-beta.3-14502f5b34');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\nfunction TemplateAst() { }\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\nfunction QueryMatch() { }\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\nfunction TemplateAstVisitor() { }\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { /** @type {?} */ return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\nfunction TagDefinition() { }\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (_angular_core.ÉµisPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return _angular_core.ÉµisPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(_angular_core.ÉµisPromise) ? Promise.all(syncAsyncValues) : (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        ((error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return ((error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\nfunction OutputContext() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.Éµstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + _angular_core.Éµstringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\nfunction ProxyClass() { }\n/**\n * @record\n */\nfunction CompileIdentifierMetadata() { }\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\nfunction CompileTypeSummary() { }\n/**\n * @record\n */\nfunction CompileDiDependencyMetadata() { }\n/**\n * @record\n */\nfunction CompileProviderMetadata() { }\n/**\n * @record\n */\nfunction CompileFactoryMetadata() { }\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\nfunction CompileTokenMetadata() { }\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\nfunction CompileTypeMetadata() { }\n/**\n * @record\n */\nfunction CompileQueryMetadata() { }\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\nfunction CompileTemplateSummary() { }\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\nfunction CompileEntryComponentMetadata() { }\n/**\n * @record\n */\nfunction CompileDirectiveSummary() { }\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\n/**\n * @record\n */\nfunction CompilePipeSummary() { }\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\nfunction CompileNgModuleSummary() { }\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\nfunction AstVisitor() { }\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ function CompilerInjectable() {\n    return function (x) { return x; };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction Node() { }\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\nfunction Visitor() { }\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { /** @type {?} */ return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ \nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nHtmlParser.ctorParameters = function () { return []; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { /** @type {?} */ return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectorRef\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ÉµCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'Éµcmf',\n    moduleName: CORE,\n    runtime: _angular_core.Éµcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'Éµmod',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'Éµmpd',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ÉµregisterModuleFactory',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: _angular_core.ViewEncapsulation\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: _angular_core.TRANSLATIONS_FORMAT\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ÉµinlineInterpolate',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµinlineInterpolate\n};\nIdentifiers.interpolate = { name: 'Éµinterpolate', moduleName: CORE, runtime: _angular_core.Éµinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ÉµEMPTY_ARRAY', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ÉµEMPTY_MAP', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'Éµvid', moduleName: CORE, runtime: _angular_core.Éµvid };\nIdentifiers.elementDef = { name: 'Éµeld', moduleName: CORE, runtime: _angular_core.Éµeld };\nIdentifiers.anchorDef = { name: 'Éµand', moduleName: CORE, runtime: _angular_core.Éµand };\nIdentifiers.textDef = { name: 'Éµted', moduleName: CORE, runtime: _angular_core.Éµted };\nIdentifiers.directiveDef = { name: 'Éµdid', moduleName: CORE, runtime: _angular_core.Éµdid };\nIdentifiers.providerDef = { name: 'Éµprd', moduleName: CORE, runtime: _angular_core.Éµprd };\nIdentifiers.queryDef = { name: 'Éµqud', moduleName: CORE, runtime: _angular_core.Éµqud };\nIdentifiers.pureArrayDef = { name: 'Éµpad', moduleName: CORE, runtime: _angular_core.Éµpad };\nIdentifiers.pureObjectDef = { name: 'Éµpod', moduleName: CORE, runtime: _angular_core.Éµpod };\nIdentifiers.purePipeDef = { name: 'Éµppd', moduleName: CORE, runtime: _angular_core.Éµppd };\nIdentifiers.pipeDef = { name: 'Éµpid', moduleName: CORE, runtime: _angular_core.Éµpid };\nIdentifiers.nodeValue = { name: 'Éµnov', moduleName: CORE, runtime: _angular_core.Éµnov };\nIdentifiers.ngContentDef = { name: 'Éµncd', moduleName: CORE, runtime: _angular_core.Éµncd };\nIdentifiers.unwrapValue = { name: 'Éµunv', moduleName: CORE, runtime: _angular_core.Éµunv };\nIdentifiers.createRendererType2 = { name: 'Éµcrt', moduleName: CORE, runtime: _angular_core.Éµcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ÉµViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'Éµccf', moduleName: CORE, runtime: _angular_core.Éµccf };\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { /** @type {?} */ return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { /** @type {?} */ return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(/** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ÉµConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { /** @type {?} */ return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction PrenormalizedTemplateMetadata() { }\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.Éµstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.Éµstringify(prenormData.componentType));\n        }\n        return SyncAsync.then(this.normalizeTemplateOnly(prenormData), function (result) { return _this.normalizeExternalStylesheets(result); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateOnly = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this.normalizeLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: []\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(templateMeta.styleUrls), function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.Éµstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nPipeResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Summary() { }\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nJitSummaryResolver.ctorParameters = function () { return []; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.Éµstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.Éµccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation\n            });\n            if (_angular_core.ÉµisPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: []\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { /** @type {?} */ return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { /** @type {?} */ return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { /** @type {?} */ return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ÉµConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: CompileReflector, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.Éµstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.Éµstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ÉµERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?} runtime\n     */\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\nfunction ExpressionVisitor() { }\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    /**\n     * @param {?} comment\n     * @param {?=} sourceSpan\n     */\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\nfunction StatementVisitor() { }\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    /**\n     * @param {?} ctx\n     */\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    /**\n     * @param {?} reflector\n     */\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nNgModuleCompiler.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the âsourcesâ list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar OutputEmitter = (function () {\n    function OutputEmitter() {\n    }\n    return OutputEmitter;\n}());\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - emittedLine.indent;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor();\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor() {\n        var _this = _super.call(this, false) || this;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var /** @type {?} */ template = ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = this.needsStyleShim(comp);\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) { return ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }); });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_config, _reflector, _schemaRegistry) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = (NULL_EXPR);\n        var /** @type {?} */ compView = (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.elementDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(Identifiers.queryDef).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(Identifiers.providerDef).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        // function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(Identifiers.pureObjectDef).callFn([map])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) {\n                    return _this.createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this.createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ÉµelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when the current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _enableSummariesForJit\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _enableSummariesForJit, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._enableSummariesForJit = _enableSummariesForJit;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, false);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitPartialStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, true);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileImplFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} partial\n     * @return {?}\n     */\n    AotCompiler.prototype._compileStubFile = function (srcFileUrl, directives, pipes, ngModules, partial) {\n        var _this = this;\n        // partial is true when we only need the files we are certain will produce a factory and/or\n        // summary.\n        // This is the normal case for `ngc` but if we assume libraryies are generating their own\n        // factories\n        // then we might need a factory for a file that re-exports a module or factory which we cannot\n        // know\n        // ahead of time so we need a stub generate for all non-.d.ts files. The .d.ts files do not need\n        // to\n        // be excluded here because they are excluded when the modules are analyzed. If a factory ends\n        // up\n        // not being needed, the factory file is not written in writeFile callback.\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ ngFactoryOutputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        var /** @type {?} */ jitSummaryOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        // create exports that user code can reference\n        ngModules.forEach(function (ngModuleReference) {\n            _this._ngModuleCompiler.createStub(ngFactoryOutputCtx, ngModuleReference);\n            createForJitStub(jitSummaryOutputCtx, ngModuleReference);\n        });\n        var /** @type {?} */ partialJitStubRequired = false;\n        var /** @type {?} */ partialFactoryStubRequired = false;\n        // create stubs for external stylesheets (always empty, as users should not import anything from\n        // the generated code)\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            partialJitStubRequired = true;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                var /** @type {?} */ styleContext = _this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMeta.moduleUrl)), _this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n                _createTypeReferenceStub(styleContext, Identifiers.ComponentFactory);\n                generatedFiles.push(_this._codegenSourceModule(/** @type {?} */ ((stylesheetMeta.moduleUrl)), styleContext));\n            });\n            partialFactoryStubRequired = true;\n        });\n        // If we need all the stubs to be generated then insert an arbitrary reference into the stub\n        if ((partialFactoryStubRequired || !partial) && ngFactoryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(ngFactoryOutputCtx, Identifiers.ComponentFactory);\n        }\n        if ((partialJitStubRequired || !partial || (pipes && pipes.length > 0)) &&\n            jitSummaryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(jitSummaryOutputCtx, Identifiers.ComponentFactory);\n        }\n        // Note: we are creating stub ngfactory/ngsummary for all source files,\n        // as the real calculation requires almost the same logic as producing the real content for\n        // them. Our pipeline will filter out empty ones at the end. Because of this filter, however,\n        // stub references to the reference type needs to be generated even if the user cannot\n        // refer to type from the `.d.ts` file to prevent the file being elided from the emit.\n        generatedFiles.push(this._codegenSourceModule(srcFileUrl, ngFactoryOutputCtx));\n        if (this._enableSummariesForJit) {\n            generatedFiles.push(this._codegenSourceModule(srcFileUrl, jitSummaryOutputCtx));\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleType) { return _this._compileModule(outputCtx, ngModuleType); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                generatedFiles.push(_this._codegenStyles(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        var _a = serializeSummaries(forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n        if (this._enableSummariesForJit) {\n            return [summaryJson, this._codegenSourceModule(srcFileUrl, forJitOutputCtx)];\n        }\n        \n        return [summaryJson];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModuleType\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModuleType) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction _createTypeReferenceStub(outputCtx, reference) {\n    outputCtx.statements.push(importExpr(reference).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\nfunction NgAnalyzedModules() { }\n/**\n * @record\n */\nfunction NgAnalyzeModulesHost() { }\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = function (ref) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ rootSymbol = this.findDeclaration(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression) || references > 0) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\nfunction StaticSymbolResolverHost() { }\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction AotSummaryResolverHost() { }\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ console = new _angular_core.ÉµConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, staticReflector, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, options.locale || null, options.i18nFormat || null, options.enableSummariesForJit || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction AotCompilerOptions() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The host of the AotCompiler disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\nfunction AotCompilerHost() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @return {?}\n */\nfunction interpretStatements(statements) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) { return ast.value.runtime; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.runtime;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: ast.value.runtime }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.Éµstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.Éµstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ÉµgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult;\n        if (!this._compilerConfig.useJit) {\n            evalResult = interpretStatements(outputContext.statements);\n        }\n        else {\n            evalResult = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        }\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ÉµConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\nfunction ExtractorHost() { }\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ÉµConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JitReflector = (function () {\n    function JitReflector() {\n        this.reflectionCapabilities = new _angular_core.ÉµReflectionCapabilities();\n    }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\n        var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + _angular_core.Éµstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return \"./\" + _angular_core.Éµstringify(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitReflector.prototype.resolveExternalReference = function (ref) { return ref.runtime; };\n    return JitReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = ([\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    { provide: JitSummaryResolver, deps: [] },\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    { provide: _angular_core.ÉµConsole, deps: [] },\n    { provide: Lexer, deps: [] },\n    { provide: Parser, deps: [Lexer] },\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n        deps: [],\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) {\n            translations = translations || '';\n            var /** @type {?} */ missingTranslation = translations ? ((config.missingTranslation)) : _angular_core.MissingTranslationStrategy.Ignore;\n            return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ÉµConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    {\n        provide: TemplateParser, deps: [CompilerConfig, CompileReflector,\n            Parser, ElementSchemaRegistry,\n            I18NHtmlParser, _angular_core.ÉµConsole, [_angular_core.Optional, TEMPLATE_TRANSFORMS]]\n    },\n    { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig] },\n    { provide: CompileMetadataResolver, deps: [CompilerConfig, NgModuleResolver,\n            DirectiveResolver, PipeResolver,\n            SummaryResolver,\n            ElementSchemaRegistry,\n            DirectiveNormalizer, _angular_core.ÉµConsole,\n            [_angular_core.Optional, StaticSymbolCache],\n            CompileReflector,\n            [_angular_core.Optional, ERROR_COLLECTOR_TOKEN]] },\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    { provide: StyleCompiler, deps: [UrlResolver] },\n    { provide: ViewCompiler, deps: [CompilerConfig, CompileReflector, ElementSchemaRegistry] },\n    { provide: NgModuleCompiler, deps: [CompileReflector] },\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    { provide: JitCompiler, deps: [_angular_core.Injector, CompileMetadataResolver,\n            TemplateParser, StyleCompiler,\n            ViewCompiler, NgModuleCompiler,\n            SummaryResolver, CompilerConfig,\n            _angular_core.ÉµConsole] },\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    { provide: DomElementSchemaRegistry, deps: [] },\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    { provide: UrlResolver, deps: [_angular_core.PACKAGE_ROOT_URL] },\n    { provide: DirectiveResolver, deps: [CompileReflector] },\n    { provide: PipeResolver, deps: [CompileReflector] },\n    { provide: NgModuleResolver, deps: [CompileReflector] },\n]);\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var /** @type {?} */ compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.Injector.create([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/** @nocollapse */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory, deps: [_angular_core.COMPILER_OPTIONS] },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { /** @type {?} */ return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n        enableLegacyTemplate: _lastDefined(optionsArr.map(function (options) { return options.enableLegacyTemplate; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExpressionVisitor = ExpressionVisitor;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.StatementVisitor = StatementVisitor;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TemplateAst = TemplateAst;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.QueryMatch = QueryMatch;\nexports.TemplateAstVisitor = TemplateAstVisitor;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.ProxyClass = ProxyClass;\nexports.CompileIdentifierMetadata = CompileIdentifierMetadata;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.CompileTypeSummary = CompileTypeSummary;\nexports.CompileDiDependencyMetadata = CompileDiDependencyMetadata;\nexports.CompileProviderMetadata = CompileProviderMetadata;\nexports.CompileFactoryMetadata = CompileFactoryMetadata;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileTokenMetadata = CompileTokenMetadata;\nexports.CompileTypeMetadata = CompileTypeMetadata;\nexports.CompileQueryMetadata = CompileQueryMetadata;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateSummary = CompileTemplateSummary;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileEntryComponentMetadata = CompileEntryComponentMetadata;\nexports.CompileDirectiveSummary = CompileDirectiveSummary;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeSummary = CompilePipeSummary;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleSummary = CompileNgModuleSummary;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.NgAnalyzedModules = NgAnalyzedModules;\nexports.NgAnalyzeModulesHost = NgAnalyzeModulesHost;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.AotCompilerOptions = AotCompilerOptions;\nexports.AotCompilerHost = AotCompilerHost;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolverHost = StaticSymbolResolverHost;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolverHost = AotSummaryResolverHost;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.Summary = Summary;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.JitReflector = JitReflector;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.ExtractorHost = ExtractorHost;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.PrenormalizedTemplateMetadata = PrenormalizedTemplateMetadata;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.AstVisitor = AstVisitor;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Node = Node;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.Visitor = Visitor;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.TagDefinition = TagDefinition;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\nexports.Éµq = $BT;\nexports.Éµo = $DQ;\nexports.Éµp = $SQ;\nexports.Éµn = CompilerInjectable;\nexports.Éµm = LifecycleHooks;\nexports.Éµa = Parser$1;\nexports.Éµk = OutputEmitter;\nexports.Éµg = AbstractClassPart;\nexports.Éµh = ClassField;\nexports.Éµj = ClassGetter;\nexports.Éµi = ClassMethod;\nexports.Éµd = Expression;\nexports.Éµe = FnParam;\nexports.Éµf = LiteralMapEntry;\nexports.Éµc = MapType;\nexports.Éµb = Type$1;\nexports.Éµl = OutputContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}