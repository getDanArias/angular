{"version":3,"sources":["../../../../../../packages/compiler/src/output/output_jit.ts"],"names":[],"mappings":"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","file":"output_jit.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '@angular/core';\nimport {identifierName} from '../compile_metadata';\n\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport * as o from './output_ast';\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(\n    sourceUrl: string, ctx: EmitterVisitorContext, vars: {[key: string]: any}): any {\n  let /** @type {?} */ fnBody = `${ctx.toSource()}\\n//# sourceURL=${sourceUrl}`;\n  const /** @type {?} */ fnArgNames: string[] = [];\n  const /** @type {?} */ fnArgValues: any[] = [];\n  for (const /** @type {?} */ argName in vars) {\n    fnArgNames.push(argName);\n    fnArgValues.push(vars[argName]);\n  }\n  if (isDevMode()) {\n    // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n    // E.g. ```\n    // function anonymous(a,b,c\n    // /**/) { ... }```\n    // We don't want to hard code this fact, so we auto detect it via an empty function first.\n    const /** @type {?} */ emptyFn = new Function(...fnArgNames.concat('return null;')).toString();\n    const /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n    fnBody += `\\n${ctx.toSourceMapGenerator(sourceUrl, sourceUrl, headerLines).toJsComment()}`;\n  }\n  return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nexport function jitStatements(sourceUrl: string, statements: o.Statement[]): {[key: string]: any} {\n  const /** @type {?} */ converter = new JitEmitterVisitor();\n  const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n  converter.visitAllStatements(statements, ctx);\n  converter.createReturnStmt(ctx);\n  return evalExpression(sourceUrl, ctx, converter.getArgs());\n}\nexport class JitEmitterVisitor extends AbstractJsEmitterVisitor {\nprivate _evalArgNames: string[] = [];\nprivate _evalArgValues: any[] = [];\nprivate _evalExportedVars: string[] = [];\n/**\n * @param {?} ctx\n * @return {?}\n */\ncreateReturnStmt(ctx: EmitterVisitorContext) {\n    const /** @type {?} */ stmt = new o.ReturnStatement(new o.LiteralMapExpr(this._evalExportedVars.map(\n        resultVar => new o.LiteralMapEntry(resultVar, o.variable(resultVar), false))));\n    stmt.visitStatement(this, ctx);\n  }\n/**\n * @return {?}\n */\ngetArgs(): {[key: string]: any} {\n    const /** @type {?} */ result: {[key: string]: any} = {};\n    for (let /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value.runtime;\n    let /** @type {?} */ id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      const /** @type {?} */ name = identifierName({reference: ast.value.runtime}) || 'val';\n      this._evalArgNames.push(`jit_${name}_${id}`);\n    }\n    ctx.print(ast, this._evalArgNames[id]);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareVarStmt(stmt, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareFunctionStmt(stmt, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareClassStmt(stmt, ctx);\n  }\n}\n\nfunction JitEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgNames;\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgValues;\n/** @type {?} */\nJitEmitterVisitor.prototype._evalExportedVars;\n}\n\n"]}