{"version":3,"sources":["../../../../../../packages/compiler/src/output/value_util.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAGH,OALO,EAAkC,UAAA,EAAW,MAAA,SAAA,CAAA;AAOpD,OALO,KAAK,CAAA,MAAA,cAAA,CAAA;AAOZ,MAAM,CALC,IAAA,gBAAA,CAAM,WAAA,GAAc,UAAA,CAAW;AAMtC;;;;;GAKG;AACH,MAVC,kCAWG,GAVK,EAAe,KAAO,EAAK,IAAsB;IAAtB,qBAAA,EAAA,WAAsB;IAWxD,MAAM,CAVC,UAAA,CAAW,KAAC,EAAM,IAAI,0BAAA,CAA2B,GAAC,CAAG,EAAE,IAAA,CAAK,CAAC;AAWtE,CAAC;AACD;IACA;;OAEG;IACH,oCAZsB,GAAK;QAAL,QAAA,GAAA,GAAA,CAAK;IAAe,CAAA;IAa1C;;;;OAIG;IACH,+CAjBG,GAiBH,UAjBa,GAAS,EAAG,IAAS;QAiBlC,iBAEG;QADC,MAAM,CAjBC,CAAA,CAAE,UAAC,CAAU,GAAC,CAAG,GAAC,CAAG,UAAA,KAAC,IAAQ,OAAA,UAAA,CAAW,KAAC,EAAM,KAAA,EAAM,IAAA,CAAK,EAA7B,CAA6B,CAAC,EAAE,IAAA,CAAK,CAAC;IAkB7E,CAAC;IACH;;;;OAIG;IACH,mDArBG,GAqBH,UArBiB,GAAyB,EAAE,IAAS;QAqBrD,iBAQG;QAPC,IAAM,gBAAgB,CArBhB,OAAA,GAA+B,EAAA,CAAG;QAsBxC,IAAM,gBAAgB,CArBhB,SAAA,GAAY,IAAI,GAAA,CAAW,GAAE,IAAM,GAAA,CAAI,WAAC,CAAW,CAAC,CAAC;QAsB3D,MAAM,CArBC,IAAC,CAAI,GAAC,CAAG,CAAC,OAAC,CAAO,UAAA,GAAC;YAsBxB,OAAO,CArBC,IAAC,CAsBL,IArBI,CAAA,CAAE,eAAC,CAAe,GAAC,EAAI,UAAA,CAAW,GAAC,CAAG,GAAC,CAAG,EAAE,KAAA,EAAM,IAAA,CAAK,EAAE,SAAA,CAAU,GAAC,CAAG,GAAC,CAAG,CAAC,CAAC,CAAC;QAsBxF,CAAC,CArBC,CAAC;QAsBH,MAAM,CArBC,IAAI,CAAA,CAAE,cAAC,CAAc,OAAC,EAAQ,IAAA,CAAK,CAAC;IAsB7C,CAAC;IACH;;;;OAIG;IACH,mDAzBG,GAyBH,UAzBiB,KAAO,EAAK,IAAS,IAAqB,MAAA,CAAO,CAAA,CAAE,OAAC,CAAO,KAAC,EAAM,IAAA,CAAK,CAAC,CAAC,CAAA;IA0B1F;;;;OAIG;IACH,+CA7BG,GA6BH,UA7Ba,KAAO,EAAK,IAAS;QA8B9B,EAAE,CAAC,CAAC,KA7BC,YAAgB,CAAA,CAAE,UAAC,CAAU,CAAC,CAAA;YA8BjC,MAAM,CA7BC,KAAA,CAAM;QA8Bf,CAAC;QA7BC,IAAA,CAAK,CAAA;YA8BL,MAAM,CA7BC,IAAA,CAAK,GAAC,CAAG,UAAC,CAAU,KAAC,CAAK,CAAC;QA8BpC,CAAC;IACH,CAAC;IACH,iCA7BC;AA6BD,CA7CA,AAgBC,IAAA;AA+BD;IACA,gBAAgB;IAChB,0BAA0B,CAAC,SAAS,CAAC,GAAG,CAAC;AACzC,CAAC","file":"value_util.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OutputContext, ValueTransformer, visitValue} from '../util';\n\nimport * as o from './output_ast';\n\nexport const /** @type {?} */ QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nexport function convertValueToOutputAst(\n    ctx: OutputContext, value: any, type: o.Type | null = null): o.Expression {\n  return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nclass _ValueOutputAstTransformer implements ValueTransformer {\n/**\n * @param {?} ctx\n */\nconstructor(private ctx: OutputContext) {}\n/**\n * @param {?} arr\n * @param {?} type\n * @return {?}\n */\nvisitArray(arr: any[], type: o.Type): o.Expression {\n    return o.literalArr(arr.map(value => visitValue(value, this, null)), type);\n  }\n/**\n * @param {?} map\n * @param {?} type\n * @return {?}\n */\nvisitStringMap(map: {[key: string]: any}, type: o.MapType): o.Expression {\n    const /** @type {?} */ entries: o.LiteralMapEntry[] = [];\n    const /** @type {?} */ quotedSet = new Set<string>(map && map[QUOTED_KEYS]);\n    Object.keys(map).forEach(key => {\n      entries.push(\n          new o.LiteralMapEntry(key, visitValue(map[key], this, null), quotedSet.has(key)));\n    });\n    return new o.LiteralMapExpr(entries, type);\n  }\n/**\n * @param {?} value\n * @param {?} type\n * @return {?}\n */\nvisitPrimitive(value: any, type: o.Type): o.Expression { return o.literal(value, type); }\n/**\n * @param {?} value\n * @param {?} type\n * @return {?}\n */\nvisitOther(value: any, type: o.Type): o.Expression {\n    if (value instanceof o.Expression) {\n      return value;\n    } else {\n      return this.ctx.importExpr(value);\n    }\n  }\n}\n\nfunction _ValueOutputAstTransformer_tsickle_Closure_declarations() {\n/** @type {?} */\n_ValueOutputAstTransformer.prototype.ctx;\n}\n\n"]}