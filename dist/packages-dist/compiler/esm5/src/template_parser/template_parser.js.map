{"version":3,"sources":["../../../../../../packages/compiler/src/template_parser/template_parser.ts"],"names":[],"mappings":"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","file":"template_parser.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, InjectionToken, Optional, SchemaMetadata, ɵConsole as Console} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileTokenMetadata, CompileTypeMetadata, identifierName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {CompilerConfig} from '../config';\nimport {AST, ASTWithSource, EmptyExpr} from '../expression_parser/ast';\nimport {Parser} from '../expression_parser/parser';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {Identifiers, createTokenForExternalReference, createTokenForReference} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as html from '../ml_parser/ast';\nimport {ParseTreeResult} from '../ml_parser/html_parser';\nimport {expandNodes} from '../ml_parser/icu_ast_expander';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {isNgTemplate, splitNsName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {ProviderElementContext, ProviderViewContext} from '../provider_analyzer';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {syntaxError} from '../util';\n\nimport {BindingParser, BoundProperty} from './binding_parser';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from './template_ast';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\n\nconst /** @type {?} */ BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\n// Group 1 = \"bind-\"\nconst /** @type {?} */ KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst /** @type {?} */ KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst /** @type {?} */ KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst /** @type {?} */ KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst /** @type {?} */ KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst /** @type {?} */ KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst /** @type {?} */ IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nconst /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nconst /** @type {?} */ IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nconst /** @type {?} */ IDENT_EVENT_IDX = 10;\n\n// deprecated in 4.x\nconst /** @type {?} */ TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nconst /** @type {?} */ TEMPLATE_ATTR = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\nconst /** @type {?} */ CLASS_ATTR = 'class';\n\nconst /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\nconst /** @type {?} */ TEMPLATE_ELEMENT_DEPRECATION_WARNING =\n    'The <template> element is deprecated. Use <ng-template> instead';\nconst /** @type {?} */ TEMPLATE_ATTR_DEPRECATION_WARNING =\n    'The template attribute is deprecated. Use an ng-template element instead.';\n\nlet /** @type {?} */ warningCounts: {[warning: string]: number} = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings: string[]): (warning: ParseError) => boolean {\n  return (error: ParseError) => {\n    if (warnings.indexOf(error.msg) !== -1) {\n      warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n      return warningCounts[error.msg] <= 1;\n    }\n    return true;\n  };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n * \n * This is currently an internal-only feature and not meant for general use.\n */\nexport const /** @type {?} */ TEMPLATE_TRANSFORMS = new InjectionToken('TemplateTransforms');\nexport class TemplateParseError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n * @param {?} level\n */\nconstructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\nexport class TemplateParseResult {\n/**\n * @param {?=} templateAst\n * @param {?=} usedPipes\n * @param {?=} errors\n */\nconstructor(\npublic templateAst?: TemplateAst[],\npublic usedPipes?: CompilePipeSummary[],\npublic errors?: ParseError[]) {}\n}\n\nfunction TemplateParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseResult.prototype.templateAst;\n/** @type {?} */\nTemplateParseResult.prototype.usedPipes;\n/** @type {?} */\nTemplateParseResult.prototype.errors;\n}\n\nexport class TemplateParser {\n/**\n * @param {?} _config\n * @param {?} _reflector\n * @param {?} _exprParser\n * @param {?} _schemaRegistry\n * @param {?} _htmlParser\n * @param {?} _console\n * @param {?} transforms\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _reflector: CompileReflector,\nprivate _exprParser: Parser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _htmlParser: I18NHtmlParser,\nprivate _console: Console,\npublic transforms: TemplateAstVisitor[]) {}\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\nparse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): {template: TemplateAst[], pipes: CompilePipeSummary[]} {\n    const /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n    const /** @type {?} */ warnings = /** @type {?} */((\n        result.errors)).filter(error => error.level === ParseErrorLevel.WARNING)\n            .filter(warnOnlyOnce(\n                [TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n\n    const /** @type {?} */ errors = /** @type {?} */(( result.errors)).filter(error => error.level === ParseErrorLevel.ERROR);\n\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n\n    if (errors.length > 0) {\n      const /** @type {?} */ errorString = errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n    }\n\n    return {template: /** @type {?} */(( result.templateAst)), pipes: /** @type {?} */(( result.usedPipes))};\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    return this.tryParseHtml(\n        this.expandHtml( /** @type {?} */((this._htmlParser)).parse(\n            template, templateUrl, true, this.getInterpolationConfig(component))),\n        component, directives, pipes, schemas);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?} component\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @return {?}\n */\ntryParseHtml(\n      htmlAstWithErrors: ParseTreeResult, component: CompileDirectiveMetadata,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[],\n      schemas: SchemaMetadata[]): TemplateParseResult {\n    let /** @type {?} */ result: TemplateAst[];\n    const /** @type {?} */ errors = htmlAstWithErrors.errors;\n    const /** @type {?} */ usedPipes: CompilePipeSummary[] = [];\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      const /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n      const /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n      const /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n      let /** @type {?} */ interpolationConfig: InterpolationConfig = /** @type {?} */(( undefined));\n      if (component.template && component.template.interpolation) {\n        interpolationConfig = {\n          start: component.template.interpolation[0],\n          end: component.template.interpolation[1]\n        };\n      }\n      const /** @type {?} */ bindingParser = new BindingParser(\n          this._exprParser, /** @type {?} */(( interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n      const /** @type {?} */ parseVisitor = new TemplateParseVisitor(\n          this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser,\n          this._schemaRegistry, schemas, errors);\n      result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors.push(...providerViewContext.errors);\n      usedPipes.push(...bindingParser.getUsedPipes());\n    } else {\n      result = [];\n    }\n    this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, usedPipes, errors);\n    }\n\n    if (this.transforms) {\n      this.transforms.forEach(\n          (transform: TemplateAstVisitor) => { result = templateVisitAll(transform, result); });\n    }\n\n    return new TemplateParseResult(result, usedPipes, errors);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?=} forced\n * @return {?}\n */\nexpandHtml(htmlAstWithErrors: ParseTreeResult, forced: boolean = false): ParseTreeResult {\n    const /** @type {?} */ errors: ParseError[] = htmlAstWithErrors.errors;\n\n    if (errors.length == 0 || forced) {\n      // Transform ICU messages to angular directives\n      const /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n      errors.push(...expandedHtmlAst.errors);\n      htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n    }\n    return htmlAstWithErrors;\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetInterpolationConfig(component: CompileDirectiveMetadata): InterpolationConfig|undefined {\n    if (component.template) {\n      return InterpolationConfig.fromArray(component.template.interpolation);\n    }\n    return undefined;\n  }\n/**\n * \\@internal\n * @param {?} result\n * @param {?} errors\n * @return {?}\n */\n_assertNoReferenceDuplicationOnTemplate(result: TemplateAst[], errors: TemplateParseError[]):\n      void {\n    const /** @type {?} */ existingReferences: string[] = [];\n\n    result.filter(element => !!( /** @type {?} */((<any>element))).references)\n        .forEach(element => ( /** @type {?} */((<any>element))).references.forEach((reference: ReferenceAst) => {\n          const /** @type {?} */ name = reference.name;\n          if (existingReferences.indexOf(name) < 0) {\n            existingReferences.push(name);\n          } else {\n            const /** @type {?} */ error = new TemplateParseError(\n                `Reference \"#${name}\" is defined several times`, reference.sourceSpan,\n                ParseErrorLevel.ERROR);\n            errors.push(error);\n          }\n        }));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompilerConfig, },\n{type: CompileReflector, },\n{type: Parser, },\n{type: ElementSchemaRegistry, },\n{type: I18NHtmlParser, },\n{type: Console, },\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS, ] }, ]},\n];\n}\n\nfunction TemplateParser_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParser.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTemplateParser.ctorParameters;\n/** @type {?} */\nTemplateParser.prototype._config;\n/** @type {?} */\nTemplateParser.prototype._reflector;\n/** @type {?} */\nTemplateParser.prototype._exprParser;\n/** @type {?} */\nTemplateParser.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParser.prototype._htmlParser;\n/** @type {?} */\nTemplateParser.prototype._console;\n/** @type {?} */\nTemplateParser.prototype.transforms;\n}\n\nclass TemplateParseVisitor implements html.Visitor {\n  selectorMatcher = new SelectorMatcher();\n  directivesIndex = new Map<CompileDirectiveSummary, number>();\n  ngContentCount = 0;\n  contentQueryStartId: number;\n/**\n * @param {?} reflector\n * @param {?} config\n * @param {?} providerViewContext\n * @param {?} directives\n * @param {?} _bindingParser\n * @param {?} _schemaRegistry\n * @param {?} _schemas\n * @param {?} _targetErrors\n */\nconstructor(\nprivate reflector: CompileReflector,\nprivate config: CompilerConfig,\npublic providerViewContext: ProviderViewContext, directives: CompileDirectiveSummary[],\nprivate _bindingParser: BindingParser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _schemas: SchemaMetadata[],\nprivate _targetErrors: TemplateParseError[]) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n    directives.forEach((directive, index) => {\n      const /** @type {?} */ selector = CssSelector.parse( /** @type {?} */((directive.selector)));\n      this.selectorMatcher.addSelectables(selector, directive);\n      this.directivesIndex.set(directive, index);\n    });\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return null; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return null; }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): any {\n    const /** @type {?} */ ngContentIndex = /** @type {?} */(( parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n    const /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */(( text.sourceSpan)));\n    return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */(( text.sourceSpan))) :\n                  new TextAst(text.value, ngContentIndex, /** @type {?} */(( text.sourceSpan)));\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\nvisitElement(element: html.Element, parent: ElementContext): any {\n    const /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n    const /** @type {?} */ nodeName = element.name;\n    const /** @type {?} */ preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ matchableAttrs: [string, string][] = [];\n    const /** @type {?} */ elementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    const /** @type {?} */ elementVars: VariableAst[] = [];\n    const /** @type {?} */ events: BoundEventAst[] = [];\n\n    const /** @type {?} */ templateElementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ templateMatchableAttrs: [string, string][] = [];\n    const /** @type {?} */ templateElementVars: VariableAst[] = [];\n\n    let /** @type {?} */ hasInlineTemplates = false;\n    const /** @type {?} */ attrs: AttrAst[] = [];\n    const /** @type {?} */ isTemplateElement = isTemplate(\n        element, this.config.enableLegacyTemplate,\n        (m: string, span: ParseSourceSpan) => this._reportError(m, span, ParseErrorLevel.WARNING));\n\n    element.attrs.forEach(attr => {\n      const /** @type {?} */ hasBinding = this._parseAttr(\n          isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events,\n          elementOrDirectiveRefs, elementVars);\n\n      let /** @type {?} */ templateBindingsSource: string|undefined;\n      let /** @type {?} */ prefixToken: string|undefined;\n      let /** @type {?} */ normalizedName = this._normalizeAttributeName(attr.name);\n\n      if (this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n        this._reportError(\n            TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n        templateBindingsSource = attr.value;\n      } else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        templateBindingsSource = attr.value;\n        prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n      }\n\n      const /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n      if (hasTemplateBinding) {\n        if (hasInlineTemplates) {\n          this._reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *`,\n              attr.sourceSpan);\n        }\n        hasInlineTemplates = true;\n        this._bindingParser.parseInlineTemplateBinding( /** @type {?} */((\n            prefixToken)), /** @type {?} */(( templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs,\n            templateElementOrDirectiveProps, templateElementVars);\n      }\n\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttribute(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n    });\n\n    const /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n    const {directives: directiveMetas, matchElement} =\n        this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    const /** @type {?} */ references: ReferenceAst[] = [];\n    const /** @type {?} */ boundDirectivePropNames = new Set<string>();\n    const /** @type {?} */ directiveAsts = this._createDirectiveAsts(\n        isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps,\n        elementOrDirectiveRefs, /** @type {?} */(( element.sourceSpan)), references, boundDirectivePropNames);\n    const /** @type {?} */ elementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n        element.name, elementOrDirectiveProps, boundDirectivePropNames);\n    const /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\n    const /** @type {?} */ providerContext = new ProviderElementContext(\n        this.providerViewContext, /** @type {?} */(( parent.providerContext)), isViewRoot, directiveAsts, attrs,\n        references, isTemplateElement, queryStartIndex, /** @type {?} */(( element.sourceSpan)));\n\n    const /** @type {?} */ children: TemplateAst[] = html.visitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(\n            isTemplateElement, directiveAsts,\n            isTemplateElement ? /** @type {?} */(( parent.providerContext)) : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    const /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n        CssSelector.parse(preparsedElement.projectAs)[0] :\n        elementCssSelector;\n    const /** @type {?} */ ngContentIndex = /** @type {?} */(( parent.findNgContentIndex(projectionSelector)));\n    let /** @type {?} */ parsedElement: TemplateAst;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      if (element.children && !element.children.every(_isEmptyTextNode)) {\n        this._reportError(`<ng-content> element cannot have content.`, /** @type {?} */(( element.sourceSpan)));\n      }\n\n      parsedElement = new NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? /** @type {?} */(( null)) : ngContentIndex, /** @type {?} */((\n          element.sourceSpan)));\n    } else if (isTemplateElement) {\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          directiveAsts, elementProps, /** @type {?} */(( element.sourceSpan)));\n\n      parsedElement = new EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer,\n          providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */(( null)) : ngContentIndex, /** @type {?} */((\n          element.sourceSpan)));\n    } else {\n      this._assertElementExists(matchElement, element);\n      this._assertOnlyOneComponent(directiveAsts, /** @type {?} */(( element.sourceSpan)));\n\n      const /** @type {?} */ ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new ElementAst(\n          nodeName, attrs, elementProps, events, references,\n          providerContext.transformedDirectiveAsts, providerContext.transformProviders,\n          providerContext.transformedHasViewContainer, providerContext.queryMatches, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan,\n          element.endSourceSpan || null);\n    }\n\n    if (hasInlineTemplates) {\n      const /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n      const /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n      const {directives: templateDirectiveMetas} =\n          this._parseDirectives(this.selectorMatcher, templateSelector);\n      const /** @type {?} */ templateBoundDirectivePropNames = new Set<string>();\n      const /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(\n          true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */((\n          element.sourceSpan)), [], templateBoundDirectivePropNames);\n      const /** @type {?} */ templateElementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, /** @type {?} */(( element.sourceSpan)));\n      const /** @type {?} */ templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, /** @type {?} */(( parent.providerContext)), parent.isTemplateElement,\n          templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */(( element.sourceSpan)));\n      templateProviderContext.afterElement();\n\n      parsedElement = new EmbeddedTemplateAst(\n          [], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts,\n          templateProviderContext.transformProviders,\n          templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches,\n          [parsedElement], ngContentIndex, /** @type {?} */(( element.sourceSpan)));\n    }\n\n    return parsedElement;\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} attr\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetEvents\n * @param {?} targetRefs\n * @param {?} targetVars\n * @return {?}\n */\n\nprivate _parseAttr(\n      isTemplateElement: boolean, attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: BoundProperty[], targetEvents: BoundEventAst[],\n      targetRefs: ElementOrDirectiveRef[], targetVars: VariableAst[]): boolean {\n    const /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n    const /** @type {?} */ value = attr.value;\n    const /** @type {?} */ srcSpan = attr.sourceSpan;\n\n    const /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n    let /** @type {?} */ hasBinding = false;\n\n    if (bindParts !== null) {\n      hasBinding = true;\n      if (bindParts[KW_BIND_IDX] != null) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n          this._parseVariable(identifier, value, srcSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n        this._parseReference(identifier, value, srcSpan, targetRefs);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_AT_IDX]) {\n        this._bindingParser.parseLiteralAttr(\n            name, value, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n      }\n    } else {\n      hasBinding = this._bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    if (!hasBinding) {\n      this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    return hasBinding;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\n\nprivate _normalizeAttributeName(attrName: string): string {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetVars\n * @return {?}\n */\n\nprivate _parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, targetVars: VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n\n    targetVars.push(new VariableAst(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetRefs\n * @return {?}\n */\n\nprivate _parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\n\nprivate _parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    this._bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n  }\n/**\n * @param {?} selectorMatcher\n * @param {?} elementCssSelector\n * @return {?}\n */\n\nprivate _parseDirectives(selectorMatcher: SelectorMatcher, elementCssSelector: CssSelector):\n      {directives: CompileDirectiveSummary[], matchElement: boolean} {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also deduplicate directives as they might match more than one time!\n    const /** @type {?} */ directives = new Array(this.directivesIndex.size);\n    // Whether any directive selector matches on the element name\n    let /** @type {?} */ matchElement = false;\n\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[ /** @type {?} */((this.directivesIndex.get(directive)))] = directive;\n      matchElement = matchElement || selector.hasElementSelector();\n    });\n\n    return {\n      directives: directives.filter(dir => !!dir),\n      matchElement,\n    };\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} elementName\n * @param {?} directives\n * @param {?} props\n * @param {?} elementOrDirectiveRefs\n * @param {?} elementSourceSpan\n * @param {?} targetReferences\n * @param {?} targetBoundDirectivePropNames\n * @return {?}\n */\n\nprivate _createDirectiveAsts(\n      isTemplateElement: boolean, elementName: string, directives: CompileDirectiveSummary[],\n      props: BoundProperty[], elementOrDirectiveRefs: ElementOrDirectiveRef[],\n      elementSourceSpan: ParseSourceSpan, targetReferences: ReferenceAst[],\n      targetBoundDirectivePropNames: Set<string>): DirectiveAst[] {\n    const /** @type {?} */ matchedReferences = new Set<string>();\n    let /** @type {?} */ component: CompileDirectiveSummary = /** @type {?} */(( null));\n\n    const /** @type {?} */ directiveAsts = directives.map((directive) => {\n      const /** @type {?} */ sourceSpan = new ParseSourceSpan(\n          elementSourceSpan.start, elementSourceSpan.end,\n          `Directive ${identifierName(directive.type)}`);\n\n      if (directive.isComponent) {\n        component = directive;\n      }\n      const /** @type {?} */ directiveProperties: BoundDirectivePropertyAst[] = [];\n      let /** @type {?} */ hostProperties = /** @type {?} */((\n          this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n      // Note: We need to check the host properties here as well,\n      // as we don't know the element name in the DirectiveWrapperCompiler yet.\n      hostProperties = this._checkPropertiesInSchema(elementName, hostProperties);\n      const /** @type {?} */ hostEvents = /** @type {?} */(( this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n      this._createDirectivePropertyAsts(\n          directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (directive.exportAs == elOrDirRef.value)) {\n          targetReferences.push(new ReferenceAst(\n              elOrDirRef.name, createTokenForReference(directive.type.reference),\n              elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      const /** @type {?} */ contentQueryStartId = this.contentQueryStartId;\n      this.contentQueryStartId += directive.queries.length;\n      return new DirectiveAst(\n          directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId,\n          sourceSpan);\n    });\n\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!matchedReferences.has(elOrDirRef.name)) {\n          this._reportError(\n              `There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n              elOrDirRef.sourceSpan);\n        }\n      } else if (!component) {\n        let /** @type {?} */ refToken: CompileTokenMetadata = /** @type {?} */(( null));\n        if (isTemplateElement) {\n          refToken = createTokenForExternalReference(this.reflector, Identifiers.TemplateRef);\n        }\n        targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n      }\n    });\n    return directiveAsts;\n  }\n/**\n * @param {?} directiveProperties\n * @param {?} boundProps\n * @param {?} targetBoundDirectiveProps\n * @param {?} targetBoundDirectivePropNames\n * @return {?}\n */\n\nprivate _createDirectivePropertyAsts(\n      directiveProperties: {[key: string]: string}, boundProps: BoundProperty[],\n      targetBoundDirectiveProps: BoundDirectivePropertyAst[],\n      targetBoundDirectivePropNames: Set<string>) {\n    if (directiveProperties) {\n      const /** @type {?} */ boundPropsByName = new Map<string, BoundProperty>();\n      boundProps.forEach(boundProp => {\n        const /** @type {?} */ prevValue = boundPropsByName.get(boundProp.name);\n        if (!prevValue || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      Object.keys(directiveProperties).forEach(dirProp => {\n        const /** @type {?} */ elProp = directiveProperties[dirProp];\n        const /** @type {?} */ boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (boundProp) {\n          targetBoundDirectivePropNames.add(boundProp.name);\n          if (!isEmptyExpression(boundProp.expression)) {\n            targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(\n                dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n          }\n        }\n      });\n    }\n  }\n/**\n * @param {?} elementName\n * @param {?} props\n * @param {?} boundDirectivePropNames\n * @return {?}\n */\n\nprivate _createElementPropertyAsts(\n      elementName: string, props: BoundProperty[],\n      boundDirectivePropNames: Set<string>): BoundElementPropertyAst[] {\n    const /** @type {?} */ boundElementProps: BoundElementPropertyAst[] = [];\n\n    props.forEach((prop: BoundProperty) => {\n      if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n        boundElementProps.push(this._bindingParser.createElementPropertyAst(elementName, prop));\n      }\n    });\n    return this._checkPropertiesInSchema(elementName, boundElementProps);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\n\nprivate _findComponentDirectives(directives: DirectiveAst[]): DirectiveAst[] {\n    return directives.filter(directive => directive.directive.isComponent);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\n\nprivate _findComponentDirectiveNames(directives: DirectiveAst[]): string[] {\n    return this._findComponentDirectives(directives)\n        .map(directive => /** @type {?} */(( identifierName(directive.directive.type))));\n  }\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _assertOnlyOneComponent(directives: DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(\n          `More than one component matched on this element.\\n` +\n              `Make sure that only one component's selector can match a given element.\\n` +\n              `Conflicting components: ${componentTypeNames.join(',')}`,\n          sourceSpan);\n    }\n  }\n/**\n * Make sure that non-angular tags conform to the schemas.\n * \n * Note: An element is considered an angular tag when at least one directive selector matches the\n * tag name.\n * \n * @param {?} matchElement Whether any directive has matched on the tag name\n * @param {?} element the html element\n * @return {?}\n */\n\nprivate _assertElementExists(matchElement: boolean, element: html.Element) {\n    const /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n\n    if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n      let /** @type {?} */ errorMsg = `'${elName}' is not a known element:\\n`;\n      errorMsg +=\n          `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n`;\n      if (elName.indexOf('-') > -1) {\n        errorMsg +=\n            `2. If '${elName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n      } else {\n        errorMsg +=\n            `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n      }\n      this._reportError(errorMsg, /** @type {?} */(( element.sourceSpan)));\n    }\n  }\n/**\n * @param {?} directives\n * @param {?} elementProps\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _assertNoComponentsNorElementBindingsOnTemplate(\n      directives: DirectiveAst[], elementProps: BoundElementPropertyAst[],\n      sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(\n          `Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n          sourceSpan);\n    });\n  }\n/**\n * @param {?} directives\n * @param {?} events\n * @return {?}\n */\n\nprivate _assertAllEventsPublishedByDirectives(\n      directives: DirectiveAst[], events: BoundEventAst[]) {\n    const /** @type {?} */ allDirectiveEvents = new Set<string>();\n\n    directives.forEach(directive => {\n      Object.keys(directive.directive.outputs).forEach(k => {\n        const /** @type {?} */ eventName = directive.directive.outputs[k];\n        allDirectiveEvents.add(eventName);\n      });\n    });\n\n    events.forEach(event => {\n      if (event.target != null || !allDirectiveEvents.has(event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n            event.sourceSpan);\n      }\n    });\n  }\n/**\n * @param {?} elementName\n * @param {?} boundProps\n * @return {?}\n */\n\nprivate _checkPropertiesInSchema(elementName: string, boundProps: BoundElementPropertyAst[]):\n      BoundElementPropertyAst[] {\n    // Note: We can't filter out empty expressions before this method,\n    // as we still want to validate them!\n    return boundProps.filter((boundProp) => {\n      if (boundProp.type === PropertyBindingType.Property &&\n          !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n        let /** @type {?} */ errorMsg =\n            `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n        if (elementName.startsWith('ng-')) {\n          errorMsg +=\n              `\\n1. If '${boundProp.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.` +\n              `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        } else if (elementName.indexOf('-') > -1) {\n          errorMsg +=\n              `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n              `\\n2. If '${elementName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.` +\n              `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        }\n        this._reportError(errorMsg, boundProp.sourceSpan);\n      }\n      return !isEmptyExpression(boundProp.value);\n    });\n  }\n/**\n * @param {?} message\n * @param {?} sourceSpan\n * @param {?=} level\n * @return {?}\n */\n\nprivate _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.ERROR) {\n    this._targetErrors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nfunction TemplateParseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseVisitor.prototype.selectorMatcher;\n/** @type {?} */\nTemplateParseVisitor.prototype.directivesIndex;\n/** @type {?} */\nTemplateParseVisitor.prototype.ngContentCount;\n/** @type {?} */\nTemplateParseVisitor.prototype.contentQueryStartId;\n/** @type {?} */\nTemplateParseVisitor.prototype.reflector;\n/** @type {?} */\nTemplateParseVisitor.prototype.config;\n/** @type {?} */\nTemplateParseVisitor.prototype.providerViewContext;\n/** @type {?} */\nTemplateParseVisitor.prototype._bindingParser;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemas;\n/** @type {?} */\nTemplateParseVisitor.prototype._targetErrors;\n}\n\nclass NonBindableVisitor implements html.Visitor {\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: html.Element, parent: ElementContext): ElementAst|null {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ attrNameAndValues = ast.attrs.map((attr): [string, string] => [attr.name, attr.value]);\n    const /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n    const /** @type {?} */ children: TemplateAst[] = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new ElementAst(\n        ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children,\n        ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): AttrAst {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): TextAst {\n    const /** @type {?} */ ngContentIndex = /** @type {?} */(( parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n    return new TextAst(text.value, ngContentIndex, /** @type {?} */(( text.sourceSpan)));\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\nclass ElementOrDirectiveRef {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction ElementOrDirectiveRef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementOrDirectiveRef.prototype.name;\n/** @type {?} */\nElementOrDirectiveRef.prototype.value;\n/** @type {?} */\nElementOrDirectiveRef.prototype.sourceSpan;\n}\n\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\nclass ElementContext {\n/**\n * @param {?} isTemplateElement\n * @param {?} directives\n * @param {?} providerContext\n * @return {?}\n */\nstatic create(\n      isTemplateElement: boolean, directives: DirectiveAst[],\n      providerContext: ProviderElementContext): ElementContext {\n    const /** @type {?} */ matcher = new SelectorMatcher();\n    let /** @type {?} */ wildcardNgContentIndex: number = /** @type {?} */(( null));\n    const /** @type {?} */ component = directives.find(directive => directive.directive.isComponent);\n    if (component) {\n      const /** @type {?} */ ngContentSelectors = /** @type {?} */(( component.directive.template)).ngContentSelectors;\n      for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n        const /** @type {?} */ selector = ngContentSelectors[i];\n        if (selector === '*') {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} _ngContentIndexMatcher\n * @param {?} _wildcardNgContentIndex\n * @param {?} providerContext\n */\nconstructor(\npublic isTemplateElement: boolean,\nprivate _ngContentIndexMatcher: SelectorMatcher,\nprivate _wildcardNgContentIndex: number|null,\npublic providerContext: ProviderElementContext|null) {}\n/**\n * @param {?} selector\n * @return {?}\n */\nfindNgContentIndex(selector: CssSelector): number|null {\n    const /** @type {?} */ ngContentIndices: number[] = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ngContentIndices.sort();\n    if (this._wildcardNgContentIndex != null) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n}\n\nfunction ElementContext_tsickle_Closure_declarations() {\n/** @type {?} */\nElementContext.prototype.isTemplateElement;\n/** @type {?} */\nElementContext.prototype._ngContentIndexMatcher;\n/** @type {?} */\nElementContext.prototype._wildcardNgContentIndex;\n/** @type {?} */\nElementContext.prototype.providerContext;\n}\n\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const /** @type {?} */ cssSelector = new CssSelector();\n  const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n    const /** @type {?} */ attrName = attributes[i][0];\n    const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    const /** @type {?} */ attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nconst /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nexport function removeSummaryDuplicates<T extends{type: CompileTypeMetadata}>(items: T[]): T[] {\n  const /** @type {?} */ map = new Map<any, T>();\n\n  items.forEach((item) => {\n    if (!map.get(item.type.reference)) {\n      map.set(item.type.reference, item);\n    }\n  });\n\n  return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast: AST): boolean {\n  if (ast instanceof ASTWithSource) {\n    ast = ast.ast;\n  }\n  return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(\n    el: html.Element, enableLegacyTemplate: boolean,\n    reportDeprecation: (m: string, span: ParseSourceSpan) => void): boolean {\n  if (isNgTemplate(el.name)) return true;\n  const /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n  // `<template>` is HTML and case insensitive\n  if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n    if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n      reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */(( el.sourceSpan)));\n      return true;\n    }\n  }\n  return false;\n}\n"]}