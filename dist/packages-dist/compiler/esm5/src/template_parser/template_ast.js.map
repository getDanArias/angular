{"version":3,"sources":["../../../../../../packages/compiler/src/template_parser/template_ast.ts"],"names":[],"mappings":"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","file":"template_ast.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '@angular/core';\n\nimport {AstPath} from '../ast_path';\nimport {CompileDirectiveSummary, CompileProviderMetadata, CompileTokenMetadata} from '../compile_metadata';\nimport {AST} from '../expression_parser/ast';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport {ParseSourceSpan} from '../parse_util';\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\nexport function TemplateAst() {}\n\n\nfunction TemplateAst_tsickle_Closure_declarations() {\n/**\n * The source span from which this node was parsed.\n * @type {?}\n */\nTemplateAst.prototype.sourceSpan;\n/**\n * Visit this node and possibly transform it.\n * @type {?}\n */\nTemplateAst.prototype.visit;\n}\n\n\n\n\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n */\nexport interface TemplateAst {\n  /**\n   * The source span from which this node was parsed.\n   */\n  sourceSpan: ParseSourceSpan;\n\n  /**\n   * Visit this node and possibly transform it.\n   */\n  visit(visitor: TemplateAstVisitor, context: any): any;\n}\n/**\n * A segment of text within the template.\n */\nexport class TextAst implements TemplateAst {\n/**\n * @param {?} value\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic value: string,\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any { return visitor.visitText(this, context); }\n}\n\nfunction TextAst_tsickle_Closure_declarations() {\n/** @type {?} */\nTextAst.prototype.value;\n/** @type {?} */\nTextAst.prototype.ngContentIndex;\n/** @type {?} */\nTextAst.prototype.sourceSpan;\n}\n\n/**\n * A bound expression within the text of a template.\n */\nexport class BoundTextAst implements TemplateAst {\n/**\n * @param {?} value\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic value: AST,\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitBoundText(this, context);\n  }\n}\n\nfunction BoundTextAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundTextAst.prototype.value;\n/** @type {?} */\nBoundTextAst.prototype.ngContentIndex;\n/** @type {?} */\nBoundTextAst.prototype.sourceSpan;\n}\n\n/**\n * A plain attribute on an element.\n */\nexport class AttrAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any { return visitor.visitAttr(this, context); }\n}\n\nfunction AttrAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAttrAst.prototype.name;\n/** @type {?} */\nAttrAst.prototype.value;\n/** @type {?} */\nAttrAst.prototype.sourceSpan;\n}\n\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nexport class BoundElementPropertyAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} type\n * @param {?} securityContext\n * @param {?} value\n * @param {?} unit\n * @param {?} sourceSpan\n */\nconstructor(\npublic name: string,\npublic type: PropertyBindingType,\npublic securityContext: SecurityContext,\npublic value: AST,\npublic unit: string|null,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitElementProperty(this, context);\n  }\n/**\n * @return {?}\n */\nget isAnimation(): boolean { return this.type === PropertyBindingType.Animation; }\n}\n\nfunction BoundElementPropertyAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundElementPropertyAst.prototype.name;\n/** @type {?} */\nBoundElementPropertyAst.prototype.type;\n/** @type {?} */\nBoundElementPropertyAst.prototype.securityContext;\n/** @type {?} */\nBoundElementPropertyAst.prototype.value;\n/** @type {?} */\nBoundElementPropertyAst.prototype.unit;\n/** @type {?} */\nBoundElementPropertyAst.prototype.sourceSpan;\n}\n\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nexport class BoundEventAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} target\n * @param {?} phase\n * @return {?}\n */\nstatic calcFullName(name: string, target: string|null, phase: string|null): string {\n    if (target) {\n      return `${target}:${name}`;\n    } else if (phase) {\n      return `@${name}.${phase}`;\n    } else {\n      return name;\n    }\n  }\n/**\n * @param {?} name\n * @param {?} target\n * @param {?} phase\n * @param {?} handler\n * @param {?} sourceSpan\n */\nconstructor(\npublic name: string,\npublic target: string|null,\npublic phase: string|null,\npublic handler: AST,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitEvent(this, context);\n  }\n/**\n * @return {?}\n */\nget fullName() { return BoundEventAst.calcFullName(this.name, this.target, this.phase); }\n/**\n * @return {?}\n */\nget isAnimation(): boolean { return !!this.phase; }\n}\n\nfunction BoundEventAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundEventAst.prototype.name;\n/** @type {?} */\nBoundEventAst.prototype.target;\n/** @type {?} */\nBoundEventAst.prototype.phase;\n/** @type {?} */\nBoundEventAst.prototype.handler;\n/** @type {?} */\nBoundEventAst.prototype.sourceSpan;\n}\n\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nexport class ReferenceAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(\npublic name: string,\npublic value: CompileTokenMetadata,\npublic sourceSpan: ParseSourceSpan) {\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitReference(this, context);\n  }\n}\n\nfunction ReferenceAst_tsickle_Closure_declarations() {\n/** @type {?} */\nReferenceAst.prototype.name;\n/** @type {?} */\nReferenceAst.prototype.value;\n/** @type {?} */\nReferenceAst.prototype.sourceSpan;\n}\n\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nexport class VariableAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitVariable(this, context);\n  }\n}\n\nfunction VariableAst_tsickle_Closure_declarations() {\n/** @type {?} */\nVariableAst.prototype.name;\n/** @type {?} */\nVariableAst.prototype.value;\n/** @type {?} */\nVariableAst.prototype.sourceSpan;\n}\n\n/**\n * An element declaration in a template.\n */\nexport class ElementAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} attrs\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} references\n * @param {?} directives\n * @param {?} providers\n * @param {?} hasViewContainer\n * @param {?} queryMatches\n * @param {?} children\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n * @param {?} endSourceSpan\n */\nconstructor(\npublic name: string,\npublic attrs: AttrAst[],\npublic inputs: BoundElementPropertyAst[],\npublic outputs: BoundEventAst[],\npublic references: ReferenceAst[],\npublic directives: DirectiveAst[],\npublic providers: ProviderAst[],\npublic hasViewContainer: boolean,\npublic queryMatches: QueryMatch[],\npublic children: TemplateAst[],\npublic ngContentIndex: number|null,\npublic sourceSpan: ParseSourceSpan,\npublic endSourceSpan: ParseSourceSpan|null) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitElement(this, context);\n  }\n}\n\nfunction ElementAst_tsickle_Closure_declarations() {\n/** @type {?} */\nElementAst.prototype.name;\n/** @type {?} */\nElementAst.prototype.attrs;\n/** @type {?} */\nElementAst.prototype.inputs;\n/** @type {?} */\nElementAst.prototype.outputs;\n/** @type {?} */\nElementAst.prototype.references;\n/** @type {?} */\nElementAst.prototype.directives;\n/** @type {?} */\nElementAst.prototype.providers;\n/** @type {?} */\nElementAst.prototype.hasViewContainer;\n/** @type {?} */\nElementAst.prototype.queryMatches;\n/** @type {?} */\nElementAst.prototype.children;\n/** @type {?} */\nElementAst.prototype.ngContentIndex;\n/** @type {?} */\nElementAst.prototype.sourceSpan;\n/** @type {?} */\nElementAst.prototype.endSourceSpan;\n}\n\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nexport class EmbeddedTemplateAst implements TemplateAst {\n/**\n * @param {?} attrs\n * @param {?} outputs\n * @param {?} references\n * @param {?} variables\n * @param {?} directives\n * @param {?} providers\n * @param {?} hasViewContainer\n * @param {?} queryMatches\n * @param {?} children\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic attrs: AttrAst[],\npublic outputs: BoundEventAst[],\npublic references: ReferenceAst[],\npublic variables: VariableAst[],\npublic directives: DirectiveAst[],\npublic providers: ProviderAst[],\npublic hasViewContainer: boolean,\npublic queryMatches: QueryMatch[],\npublic children: TemplateAst[],\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitEmbeddedTemplate(this, context);\n  }\n}\n\nfunction EmbeddedTemplateAst_tsickle_Closure_declarations() {\n/** @type {?} */\nEmbeddedTemplateAst.prototype.attrs;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.outputs;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.references;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.variables;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.directives;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.providers;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.hasViewContainer;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.queryMatches;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.children;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.ngContentIndex;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.sourceSpan;\n}\n\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nexport class BoundDirectivePropertyAst implements TemplateAst {\n/**\n * @param {?} directiveName\n * @param {?} templateName\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(\npublic directiveName: string,\npublic templateName: string,\npublic value: AST,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitDirectiveProperty(this, context);\n  }\n}\n\nfunction BoundDirectivePropertyAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.directiveName;\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.templateName;\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.value;\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.sourceSpan;\n}\n\n/**\n * A directive declared on an element.\n */\nexport class DirectiveAst implements TemplateAst {\n/**\n * @param {?} directive\n * @param {?} inputs\n * @param {?} hostProperties\n * @param {?} hostEvents\n * @param {?} contentQueryStartId\n * @param {?} sourceSpan\n */\nconstructor(\npublic directive: CompileDirectiveSummary,\npublic inputs: BoundDirectivePropertyAst[],\npublic hostProperties: BoundElementPropertyAst[],\npublic hostEvents: BoundEventAst[],\npublic contentQueryStartId: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitDirective(this, context);\n  }\n}\n\nfunction DirectiveAst_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectiveAst.prototype.directive;\n/** @type {?} */\nDirectiveAst.prototype.inputs;\n/** @type {?} */\nDirectiveAst.prototype.hostProperties;\n/** @type {?} */\nDirectiveAst.prototype.hostEvents;\n/** @type {?} */\nDirectiveAst.prototype.contentQueryStartId;\n/** @type {?} */\nDirectiveAst.prototype.sourceSpan;\n}\n\n/**\n * A provider declared on an element\n */\nexport class ProviderAst implements TemplateAst {\n/**\n * @param {?} token\n * @param {?} multiProvider\n * @param {?} eager\n * @param {?} providers\n * @param {?} providerType\n * @param {?} lifecycleHooks\n * @param {?} sourceSpan\n */\nconstructor(\npublic token: CompileTokenMetadata,\npublic multiProvider: boolean,\npublic eager: boolean,\npublic providers: CompileProviderMetadata[],\npublic providerType: ProviderAstType,\npublic lifecycleHooks: LifecycleHooks[],\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    // No visit method in the visitor for now...\n    return null;\n  }\n}\n\nfunction ProviderAst_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderAst.prototype.token;\n/** @type {?} */\nProviderAst.prototype.multiProvider;\n/** @type {?} */\nProviderAst.prototype.eager;\n/** @type {?} */\nProviderAst.prototype.providers;\n/** @type {?} */\nProviderAst.prototype.providerType;\n/** @type {?} */\nProviderAst.prototype.lifecycleHooks;\n/** @type {?} */\nProviderAst.prototype.sourceSpan;\n}\n\nexport type ProviderAstType = number;\nexport let ProviderAstType: any = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nexport class NgContentAst implements TemplateAst {\n/**\n * @param {?} index\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic index: number,\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitNgContent(this, context);\n  }\n}\n\nfunction NgContentAst_tsickle_Closure_declarations() {\n/** @type {?} */\nNgContentAst.prototype.index;\n/** @type {?} */\nNgContentAst.prototype.ngContentIndex;\n/** @type {?} */\nNgContentAst.prototype.sourceSpan;\n}\n\nexport type PropertyBindingType = number;\nexport let PropertyBindingType: any = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n\n/**\n * @record\n */\nexport function QueryMatch() {}\n\n\nfunction QueryMatch_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryMatch.prototype.queryId;\n/** @type {?} */\nQueryMatch.prototype.value;\n}\n\n\nexport interface QueryMatch {\n  queryId: number;\n  value: CompileTokenMetadata;\n}\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\nexport function TemplateAstVisitor() {}\n\n\nfunction TemplateAstVisitor_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nTemplateAstVisitor.prototype.visit;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitNgContent;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitEmbeddedTemplate;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitElement;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitReference;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitVariable;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitEvent;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitElementProperty;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitAttr;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitBoundText;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitText;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitDirective;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitDirectiveProperty;\n}\n\n\n/**\n * A visitor for {@link TemplateAst} trees that will process each node.\n */\nexport interface TemplateAstVisitor {\n  // Returning a truthy value from `visit()` will prevent `templateVisitAll()` from the call to\n  // the typed method and result returned will become the result included in `visitAll()`s\n  // result array.\n  visit?(ast: TemplateAst, context: any): any;\n\n  visitNgContent(ast: NgContentAst, context: any): any;\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any;\n  visitElement(ast: ElementAst, context: any): any;\n  visitReference(ast: ReferenceAst, context: any): any;\n  visitVariable(ast: VariableAst, context: any): any;\n  visitEvent(ast: BoundEventAst, context: any): any;\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any;\n  visitAttr(ast: AttrAst, context: any): any;\n  visitBoundText(ast: BoundTextAst, context: any): any;\n  visitText(ast: TextAst, context: any): any;\n  visitDirective(ast: DirectiveAst, context: any): any;\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any;\n}\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nexport class NullTemplateVisitor implements TemplateAstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitVariable(ast: VariableAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttr(ast: AttrAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: TextAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): void {}\n}\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nexport class RecursiveTemplateAstVisitor extends NullTemplateVisitor implements TemplateAstVisitor {\nconstructor() { super(); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.references);\n      visit(ast.variables);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.inputs);\n      visit(ast.outputs);\n      visit(ast.references);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.inputs);\n      visit(ast.hostProperties);\n      visit(ast.hostEvents);\n    });\n  }\n/**\n * @template T\n * @param {?} context\n * @param {?} cb\n * @return {?}\n */\nprotected visitChildren<T extends TemplateAst>(\n      context: any,\n      cb: (visit: (<V extends TemplateAst>(children: V[]|undefined) => void)) => void) {\n    let /** @type {?} */ results: any[][] = [];\n    let /** @type {?} */ t = this;\n/**\n * @template T\n * @param {?} children\n * @return {?}\n */\nfunction visit<T extends TemplateAst>(children: T[] | undefined) {\n      if (children && children.length) results.push(templateVisitAll(t, children, context));\n    }\n    cb(visit);\n    return [].concat.apply([], results);\n  }\n}\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nexport function templateVisitAll(\n    visitor: TemplateAstVisitor, asts: TemplateAst[], context: any = null): any[] {\n  const /** @type {?} */ result: any[] = [];\n  const /** @type {?} */ visit = visitor.visit ?\n      (ast: TemplateAst) => /** @type {?} */(( visitor.visit))(ast, context) || ast.visit(visitor, context) :\n      (ast: TemplateAst) => ast.visit(visitor, context);\n  asts.forEach(ast => {\n    const /** @type {?} */ astResult = visit(ast);\n    if (astResult) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\n\nexport type TemplateAstPath = AstPath<TemplateAst>;\n"]}