{"version":3,"sources":["../../../../../../packages/compiler/src/jit/jit_reflector.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAY,uBAAA,IAA2B,sBAAA,EAAwB,UAAA,IAAc,SAAA,EAAU,MAAA,eAAA,CAAA;AAS9F,OALO,EAAA,YAAE,EAAY,MAAA,iBAAA,CAAA;AAMrB,OALO,EAAA,aAAE,EAA6C,WAAA,EAAwB,MAAA,SAAA,CAAA;AAM9E;IAEA;QAJkB,IAAA,CAAK,sBAAC,GAAwB,IAAI,sBAAA,EAAuB,CAAE;IAAC,CAAA;IAK9E;;;;OAIG;IACH,yCATG,GASH,UATqB,IAAM,EAAK,WAAa;QAUzC,IAAM,gBAAgB,CAThB,QAAA,GAAW,WAAA,CAAY,QAAC,CAAQ;QAWtC,EAAE,CAAC,CAAC,OATO,QAAA,KAAa,QAAA,CAAS,CAAC,CAAA;YAUhC,IAAM,gBAAgB,CAThB,MAAA,GAAS,YAAA,CAAa,QAAC,CAAQ,CAAC;YAUtC,MAAM,CATC,MAAA,GAAS,QAAA,GAAW,aAAA,QAAY,GAAQ,aAAgB,CAAE;QAUnE,CAAC;QATC,IAAA,CAAK,EAAA,CAAA,CAAA,QAAK,KAAY,IAAA,IAAQ,QAAA,KAAa,KAAK,CAAA,CAAE,CAAC,CAAA;YAUnD,MATM,WAAA,CAUF,sCAAmC,SATC,CAAS,IAAC,CAAI,0DAAC;gBAUnD,mGAAmG,CATC,CAAC;QAU3G,CAAC;QAED,MAAM,CATC,OAAA,SAAM,CAAS,IAAC,CAAK,CAAE;IAUhC,CAAC;IACH;;;OAGG;IACH,iCAbG,GAaH,UAba,UAAY;QAcrB,MAAM,CAbC,IAAA,CAAK,sBAAC,CAAsB,UAAC,CAAU,UAAC,CAAU,CAAC;IAc5D,CAAC;IACH;;;OAGG;IACH,kCAjBG,GAiBH,UAjBc,UAAY;QAkBtB,MAAM,CAjBC,IAAA,CAAK,sBAAC,CAAsB,WAAC,CAAW,UAAC,CAAU,CAAC;IAkB7D,CAAC;IACH;;;OAGG;IACH,mCArBG,GAqBH,UArBe,UAAY;QAsBvB,MAAM,CArBC,IAAA,CAAK,sBAAC,CAAsB,YAAC,CAAY,UAAC,CAAU,CAAC;IAsB9D,CAAC;IACH;;;;OAIG;IACH,uCA1BG,GA0BH,UA1BmB,IAAM,EAAK,UAAY;QA2BtC,MAAM,CA1BC,IAAA,CAAK,sBAAC,CAAsB,gBAAC,CAAgB,IAAC,EAAK,UAAA,CAAW,CAAC;IA2BxE,CAAC;IACH;;;OAGG;IACH,+CA9BG,GA8BH,UA9B2B,GAAQ,IAAyB,MAAA,CAAO,GAAA,CAAI,OAAC,CAAO,CAAC,CAAA;IA+BhF,mBA9BC;AA8BD,CAxDA,AA0BC,IAAA;;AAgCD;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,sBAAsB,CAAC;AAC9C,CAAC","file":"jit_reflector.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ɵReflectionCapabilities as ReflectionCapabilities, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileReflector} from '../compile_reflector';\nimport * as o from '../output/output_ast';\nimport {getUrlScheme} from '../url_resolver';\nimport {MODULE_SUFFIX, ValueTransformer, noUndefined, syntaxError, visitValue} from '../util';\nexport class JitReflector implements CompileReflector {\nprivate reflectionCapabilities: ReflectionCapabilities;\nconstructor() { this.reflectionCapabilities = new ReflectionCapabilities(); }\n/**\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\ncomponentModuleUrl(type: any, cmpMetadata: Component): string {\n    const /** @type {?} */ moduleId = cmpMetadata.moduleId;\n\n    if (typeof moduleId === 'string') {\n      const /** @type {?} */ scheme = getUrlScheme(moduleId);\n      return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n    } else if (moduleId !== null && moduleId !== void 0) {\n      throw syntaxError(\n          `moduleId should be a string in \"${stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n          `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n    }\n\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: /*Type*/ any): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: /*Type*/ any): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} ref\n * @return {?}\n */\nresolveExternalReference(ref: o.ExternalReference): any { return ref.runtime; }\n}\n\nfunction JitReflector_tsickle_Closure_declarations() {\n/** @type {?} */\nJitReflector.prototype.reflectionCapabilities;\n}\n"]}