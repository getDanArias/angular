{"version":3,"sources":["../../../../../packages/compiler/src/shadow_css.ts"],"names":[],"mappings":"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","file":"shadow_css.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport class ShadowCss {\n  strictStyling: boolean = true;\nconstructor() {}\n/**\n * @param {?} cssText\n * @param {?} selector\n * @param {?=} hostSelector\n * @return {?}\n */\nshimCssText(cssText: string, selector: string, hostSelector: string = ''): string {\n    const /** @type {?} */ sourceMappingUrl: string = extractSourceMappingUrl(cssText);\n    cssText = stripComments(cssText);\n    cssText = this._insertDirectives(cssText);\n    return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _insertDirectives(cssText: string): string {\n    cssText = this._insertPolyfillDirectivesInCssText(cssText);\n    return this._insertPolyfillRulesInCssText(cssText);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _insertPolyfillDirectivesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(\n        _cssContentNextSelectorRe, function(...m: string[]) { return m[2] + '{'; });\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _insertPolyfillRulesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(_cssContentRuleRe, (...m: string[]) => {\n      const /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n      return m[4] + rule;\n    });\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _scopeCssText(cssText: string, scopeSelector: string, hostSelector: string): string {\n    const /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n    // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertShadowDOMSelectors(cssText);\n    if (scopeSelector) {\n      cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n    }\n    cssText = cssText + '\\n' + unscopedRules;\n    return cssText.trim();\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _extractUnscopedRulesFromCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    let /** @type {?} */ r = '';\n    let /** @type {?} */ m: RegExpExecArray|null;\n    _cssContentUnscopedRuleRe.lastIndex = 0;\n    while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n      const /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n      r += rule + '\\n\\n';\n    }\n    return r;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _convertColonHost(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _convertColonHostContext(cssText: string): string {\n    return this._convertColonRule(\n        cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @param {?} regExp\n * @param {?} partReplacer\n * @return {?}\n */\n\nprivate _convertColonRule(cssText: string, regExp: RegExp, partReplacer: Function): string {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function(...m: string[]) {\n      if (m[2]) {\n        const /** @type {?} */ parts = m[2].split(',');\n        const /** @type {?} */ r: string[] = [];\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n          const /** @type {?} */ p = parts[i].trim();\n          if (!p) break;\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\n\nprivate _colonHostContextPartReplacer(host: string, part: string, suffix: string): string {\n    if (part.indexOf(_polyfillHost) > -1) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\n\nprivate _colonHostPartReplacer(host: string, part: string, suffix: string): string {\n    return host + part.replace(_polyfillHost, '') + suffix;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _convertShadowDOMSelectors(cssText: string): string {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _scopeSelectors(cssText: string, scopeSelector: string, hostSelector: string): string {\n    return processRules(cssText, (rule: CssRule) => {\n      let /** @type {?} */ selector = rule.selector;\n      let /** @type {?} */ content = rule.content;\n      if (rule.selector[0] != '@') {\n        selector =\n            this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n      } else if (\n          rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n          rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n      }\n      return new CssRule(selector, content);\n    });\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @param {?} strict\n * @return {?}\n */\n\nprivate _scopeSelector(\n      selector: string, scopeSelector: string, hostSelector: string, strict: boolean): string {\n    return selector.split(',')\n        .map(part => part.trim().split(_shadowDeepSelectors))\n        .map((deepParts) => {\n          const [shallowPart, ...otherParts] = deepParts;\n          const /** @type {?} */ applyScope = (shallowPart: string) => {\n            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n              return strict ?\n                  this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                  this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n            } else {\n              return shallowPart;\n            }\n          };\n          return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n        .join(', ');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @return {?}\n */\n\nprivate _selectorNeedsScoping(selector: string, scopeSelector: string): boolean {\n    const /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n  }\n/**\n * @param {?} scopeSelector\n * @return {?}\n */\n\nprivate _makeScopeMatcher(scopeSelector: string): RegExp {\n    const /** @type {?} */ lre = /\\[/g;\n    const /** @type {?} */ rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _applySelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // Difference from webcomponents.js: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _applySimpleSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n      const /** @type {?} */ replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n      return selector\n          .replace(\n              _polyfillHostNoCombinatorRe,\n              (hnc, selector) => {\n                return selector.replace(\n                    /([^:]*)(:*)(.*)/,\n                    (_: string, before: string, colon: string, after: string) => {\n                      return before + replaceBy + colon + after;\n                    });\n              })\n          .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n\n    return scopeSelector + ' ' + selector;\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _applyStrictSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    const /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_: string, ...parts: string[]) => parts[0]);\n\n    const /** @type {?} */ attrName = '[' + scopeSelector + ']';\n\n    const /** @type {?} */ _scopeSelectorPart = (p: string) => {\n      let /** @type {?} */ scopedP = p.trim();\n\n      if (!scopedP) {\n        return '';\n      }\n\n      if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n        scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n      } else {\n        // remove :host since it should be unnecessary\n        const /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n        if (t.length > 0) {\n          const /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n          if (matches) {\n            scopedP = matches[1] + attrName + matches[2] + matches[3];\n          }\n        }\n      }\n\n      return scopedP;\n    };\n\n    const /** @type {?} */ safeContent = new SafeSelector(selector);\n    selector = safeContent.content();\n\n    let /** @type {?} */ scopedSelector = '';\n    let /** @type {?} */ startIndex = 0;\n    let /** @type {?} */ res: RegExpExecArray|null;\n    const /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n    const /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n\n    while ((res = sep.exec(selector)) !== null) {\n      const /** @type {?} */ separator = res[1];\n      const /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n      // if a selector appears before :host-context it should not be shimmed as it\n      // matches on ancestor elements and not on elements in the host's shadow\n      const /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n      scopedSelector += `${scopedPart} ${separator} `;\n      startIndex = sep.lastIndex;\n    }\n\n    scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n\n    // replace the placeholders with their original values\n    return safeContent.restore(scopedSelector);\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\n\nprivate _insertPolyfillHostInCssText(selector: string): string {\n    return selector.replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost);\n  }\n}\n\nfunction ShadowCss_tsickle_Closure_declarations() {\n/** @type {?} */\nShadowCss.prototype.strictStyling;\n}\n\nclass SafeSelector {\nprivate placeholders: string[] = [];\nprivate index = 0;\nprivate _content: string;\n/**\n * @param {?} selector\n */\nconstructor(selector: string) {\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n      const /** @type {?} */ replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(keep);\n      this.index++;\n      return replaceBy;\n    });\n\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n      const /** @type {?} */ replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(exp);\n      this.index++;\n      return pseudo + replaceBy;\n    });\n  };\n/**\n * @param {?} content\n * @return {?}\n */\nrestore(content: string): string {\n    return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n  }\n/**\n * @return {?}\n */\ncontent(): string { return this._content; }\n}\n\nfunction SafeSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeSelector.prototype.placeholders;\n/** @type {?} */\nSafeSelector.prototype.index;\n/** @type {?} */\nSafeSelector.prototype._content;\n}\n\n\nconst /** @type {?} */ _cssContentNextSelectorRe =\n    /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nconst /** @type {?} */ _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _cssContentUnscopedRuleRe =\n    /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst /** @type {?} */ _polyfillHostContext = '-shadowcsscontext';\nconst /** @type {?} */ _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst /** @type {?} */ _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst /** @type {?} */ _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst /** @type {?} */ _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst /** @type {?} */ _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst /** @type {?} */ _shadowDOMSelectorsRe = [\n  /::shadow/g,\n  /::content/g,\n  // Deprecated selectors\n  /\\/shadow-deep\\//g,\n  /\\/shadow\\//g,\n];\n\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nconst /** @type {?} */ _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nconst /** @type {?} */ _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst /** @type {?} */ _polyfillHostRe = /-shadowcsshost/gim;\nconst /** @type {?} */ _colonHostRe = /:host/gim;\nconst /** @type {?} */ _colonHostContextRe = /:host-context/gim;\n\nconst /** @type {?} */ _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input: string): string {\n  return input.replace(_commentRe, '');\n}\n\n// all comments except inline source mapping\nconst /** @type {?} */ _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input: string): string {\n  const /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n  return matcher ? matcher[0] : '';\n}\n\nconst /** @type {?} */ _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst /** @type {?} */ _curlyRe = /([{}])/g;\nconst /** @type {?} */ OPEN_CURLY = '{';\nconst /** @type {?} */ CLOSE_CURLY = '}';\nconst /** @type {?} */ BLOCK_PLACEHOLDER = '%BLOCK%';\nexport class CssRule {\n/**\n * @param {?} selector\n * @param {?} content\n */\nconstructor(public selector: string,\npublic content: string) {}\n}\n\nfunction CssRule_tsickle_Closure_declarations() {\n/** @type {?} */\nCssRule.prototype.selector;\n/** @type {?} */\nCssRule.prototype.content;\n}\n\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nexport function processRules(input: string, ruleCallback: (rule: CssRule) => CssRule): string {\n  const /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n  let /** @type {?} */ nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function(...m: string[]) {\n    const /** @type {?} */ selector = m[2];\n    let /** @type {?} */ content = '';\n    let /** @type {?} */ suffix = m[4];\n    let /** @type {?} */ contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    const /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n}\nclass StringWithEscapedBlocks {\n/**\n * @param {?} escapedString\n * @param {?} blocks\n */\nconstructor(public escapedString: string,\npublic blocks: string[]) {}\n}\n\nfunction StringWithEscapedBlocks_tsickle_Closure_declarations() {\n/** @type {?} */\nStringWithEscapedBlocks.prototype.escapedString;\n/** @type {?} */\nStringWithEscapedBlocks.prototype.blocks;\n}\n\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input: string): StringWithEscapedBlocks {\n  const /** @type {?} */ inputParts = input.split(_curlyRe);\n  const /** @type {?} */ resultParts: string[] = [];\n  const /** @type {?} */ escapedBlocks: string[] = [];\n  let /** @type {?} */ bracketCount = 0;\n  let /** @type {?} */ currentBlockParts: string[] = [];\n  for (let /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    const /** @type {?} */ part = inputParts[partIndex];\n    if (part == CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part == OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n"]}