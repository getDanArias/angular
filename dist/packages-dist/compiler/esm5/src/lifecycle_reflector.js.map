{"version":3,"sources":["../../../../../packages/compiler/src/lifecycle_reflector.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAYH,MAAM,CAAC,IAAI,cAAc,GAAQ,EAAE,CAAC;AACpC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1B,cAAc,CAAC,SAAS,GAAG,CAAC,CAAC;AAC7B,cAAc,CAAC,OAAO,GAAG,CAAC,CAAC;AAC3B,cAAc,CAAC,SAAS,GAAG,CAAC,CAAC;AAC7B,cAAc,CAAC,gBAAgB,GAAG,CAAC,CAAC;AACpC,cAAc,CAAC,mBAAmB,GAAG,CAAC,CAAC;AACvC,cAAc,CAAC,aAAa,GAAG,CAAC,CAAC;AACjC,cAAc,CAAC,gBAAgB,GAAG,CAAC,CAAC;AACpC,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;AACjD,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACvD,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;AACnD,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACvD,cAAc,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,kBAAkB,CAAC;AACrE,cAAc,CAAC,cAAc,CAAC,mBAAmB,CAAC,GAAG,qBAAqB,CAAC;AAC3E,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,eAAe,CAAC;AAC/D,cAAc,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,kBAAkB,CAAC;AAGrE,MAAM,CAbC,IAAA,gBAAA,CAAM,sBAAA,GAAyB;IAcpC,cAAc,CAbC,MAAC,EAAO,cAAA,CAAe,SAAC,EAAU,cAAA,CAAe,OAAC,EAAQ,cAAA,CAAe,SAAC;IAczF,cAAc,CAbC,gBAAC,EAAiB,cAAA,CAAe,mBAAC,EAAoB,cAAA,CAAe,aAAC;IAcrF,cAAc,CAbC,gBAAC;CAcjB,CAbC;AAcF;;;;;GAKG;AACH,MAlBC,2BAmBG,SAlBW,EAAkB,IAAM,EAAgB,KAAO;IAmB5D,MAAM,CAlBC,SAAA,CAAU,gBAAC,CAAgB,KAAC,EAAM,WAAA,CAAY,IAAC,CAAI,CAAC,CAAC;AAmB9D,CAAC;AACD;;;;GAIG;AACH,MAtBC,+BAAoC,SAAW,EAAkB,KAAO;IAuBvE,MAAM,CAtBC,sBAAA,CAAuB,MAAC,CAAM,UAAA,IAAC,IAAO,OAAA,gBAAA,CAAiB,SAAC,EAAU,IAAA,EAAM,KAAA,CAAM,EAAxC,CAAwC,CAAC,CAAC;AAuBzF,CAAC;AACD;;;GAGG;AACH,qBAzBqB,IAAM;IA0BzB,MAAM,CAAC,CAAC,IAzBC,CAAI,CAAC,CAAA;QA0BZ,KAzBK,cAAA,CAAe,MAAC;YA0BnB,MAAM,CAzBC,UAAA,CAAW;QA0BpB,KAzBK,cAAA,CAAe,SAAC;YA0BnB,MAAM,CAzBC,aAAA,CAAc;QA0BvB,KAzBK,cAAA,CAAe,OAAC;YA0BnB,MAAM,CAzBC,WAAA,CAAY;QA0BrB,KAzBK,cAAA,CAAe,SAAC;YA0BnB,MAAM,CAzBC,aAAA,CAAc;QA0BvB,KAzBK,cAAA,CAAe,gBAAC;YA0BnB,MAAM,CAzBC,oBAAA,CAAqB;QA0B9B,KAzBK,cAAA,CAAe,mBAAC;YA0BnB,MAAM,CAzBC,uBAAA,CAAwB;QA0BjC,KAzBK,cAAA,CAAe,aAAC;YA0BnB,MAAM,CAzBC,iBAAA,CAAkB;QA0B3B,KAzBK,cAAA,CAAe,gBAAC;YA0BnB,MAAM,CAzBC,oBAAA,CAAqB;IA0BhC,CAAC;AACH,CAAC","file":"lifecycle_reflector.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from './compile_reflector';\nexport type LifecycleHooks = number;\nexport let LifecycleHooks: any = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\n\n\nexport const /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n  LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n  LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n  LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nexport function hasLifecycleHook(\n    reflector: CompileReflector, hook: LifecycleHooks, token: any): boolean {\n  return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nexport function getAllLifecycleHooks(reflector: CompileReflector, token: any): LifecycleHooks[] {\n  return LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(reflector, hook, token));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook: LifecycleHooks): string {\n  switch (hook) {\n    case LifecycleHooks.OnInit:\n      return 'ngOnInit';\n    case LifecycleHooks.OnDestroy:\n      return 'ngOnDestroy';\n    case LifecycleHooks.DoCheck:\n      return 'ngDoCheck';\n    case LifecycleHooks.OnChanges:\n      return 'ngOnChanges';\n    case LifecycleHooks.AfterContentInit:\n      return 'ngAfterContentInit';\n    case LifecycleHooks.AfterContentChecked:\n      return 'ngAfterContentChecked';\n    case LifecycleHooks.AfterViewInit:\n      return 'ngAfterViewInit';\n    case LifecycleHooks.AfterViewChecked:\n      return 'ngAfterViewChecked';\n  }\n}\n"]}