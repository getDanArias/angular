{"version":3,"sources":["../../../../../../packages/compiler/src/ml_parser/parser.ts"],"names":[],"mappings":"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","file":"parser.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport * as lex from './lexer';\nimport {TagDefinition, getNsPrefix, isNgContainer, mergeNsAndName} from './tags';\nexport class TreeError extends ParseError {\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n * @return {?}\n */\nstatic create(elementName: string|null, span: ParseSourceSpan, msg: string): TreeError {\n    return new TreeError(elementName, span, msg);\n  }\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n */\nconstructor(public elementName: string|null, span: ParseSourceSpan, msg: string) {\n    super(span, msg);\n  }\n}\n\nfunction TreeError_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeError.prototype.elementName;\n}\n\nexport class ParseTreeResult {\n/**\n * @param {?} rootNodes\n * @param {?} errors\n */\nconstructor(public rootNodes: html.Node[],\npublic errors: ParseError[]) {}\n}\n\nfunction ParseTreeResult_tsickle_Closure_declarations() {\n/** @type {?} */\nParseTreeResult.prototype.rootNodes;\n/** @type {?} */\nParseTreeResult.prototype.errors;\n}\n\nexport class Parser {\n/**\n * @param {?} getTagDefinition\n */\nconstructor(public getTagDefinition: (tagName: string) => TagDefinition) {}\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ tokensAndErrors =\n        lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n\n    const /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\n    return new ParseTreeResult(\n        treeAndErrors.rootNodes,\n        ( /** @type {?} */((<ParseError[]>tokensAndErrors.errors))).concat(treeAndErrors.errors));\n  }\n}\n\nfunction Parser_tsickle_Closure_declarations() {\n/** @type {?} */\nParser.prototype.getTagDefinition;\n}\n\nclass _TreeBuilder {\nprivate _index: number = -1;\nprivate _peek: lex.Token;\nprivate _rootNodes: html.Node[] = [];\nprivate _errors: TreeError[] = [];\nprivate _elementStack: html.Element[] = [];\n/**\n * @param {?} tokens\n * @param {?} getTagDefinition\n */\nconstructor(\nprivate tokens: lex.Token[],\nprivate getTagDefinition: (tagName: string) => TagDefinition) {\n    this._advance();\n  }\n/**\n * @return {?}\n */\nbuild(): ParseTreeResult {\n    while (this._peek.type !== lex.TokenType.EOF) {\n      if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this._peek.type === lex.TokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (\n          this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n          this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new ParseTreeResult(this._rootNodes, this._errors);\n  }\n/**\n * @return {?}\n */\n\nprivate _advance(): lex.Token {\n    const /** @type {?} */ prev = this._peek;\n    if (this._index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this._index++;\n    }\n    this._peek = this.tokens[this._index];\n    return prev;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _advanceIf(type: lex.TokenType): lex.Token|null {\n    if (this._peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n/**\n * @param {?} startToken\n * @return {?}\n */\n\nprivate _consumeCdata(startToken: lex.Token) {\n    this._consumeText(this._advance());\n    this._advanceIf(lex.TokenType.CDATA_END);\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _consumeComment(token: lex.Token) {\n    const /** @type {?} */ text = this._advanceIf(lex.TokenType.RAW_TEXT);\n    this._advanceIf(lex.TokenType.COMMENT_END);\n    const /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n    this._addToParent(new html.Comment(value, token.sourceSpan));\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _consumeExpansion(token: lex.Token) {\n    const /** @type {?} */ switchValue = this._advance();\n\n    const /** @type {?} */ type = this._advance();\n    const /** @type {?} */ cases: html.ExpansionCase[] = [];\n\n    // read =\n    while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n      const /** @type {?} */ expCase = this._parseExpansionCase();\n      if (!expCase) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n      return;\n    }\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n    this._addToParent(new html.Expansion(\n        switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\n    this._advance();\n  }\n/**\n * @return {?}\n */\n\nprivate _parseExpansionCase(): html.ExpansionCase|null {\n    const /** @type {?} */ value = this._advance();\n\n    // read {\n    if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n      return null;\n    }\n\n    // read until }\n    const /** @type {?} */ start = this._advance();\n\n    const /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n    if (!exp) return null;\n\n    const /** @type {?} */ end = this._advance();\n    exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    const /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n    if (parsedExp.errors.length > 0) {\n      this._errors = this._errors.concat( /** @type {?} */((<TreeError[]>parsedExp.errors)));\n      return null;\n    }\n\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    const /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new html.ExpansionCase(\n        value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _collectExpansionExpTokens(start: lex.Token): lex.Token[]|null {\n    const /** @type {?} */ exp: lex.Token[] = [];\n    const /** @type {?} */ expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n          this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this._peek.type);\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EOF) {\n        this._errors.push(\n            TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _consumeText(token: lex.Token) {\n    let /** @type {?} */ text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      const /** @type {?} */ parent = this._getParentElement();\n      if (parent != null && parent.children.length == 0 &&\n          this.getTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new html.Text(text, token.sourceSpan));\n    }\n  }\n/**\n * @return {?}\n */\n\nprivate _closeVoidElement(): void {\n    const /** @type {?} */ el = this._getParentElement();\n    if (el && this.getTagDefinition(el.name).isVoid) {\n      this._elementStack.pop();\n    }\n  }\n/**\n * @param {?} startTagToken\n * @return {?}\n */\n\nprivate _consumeStartTag(startTagToken: lex.Token) {\n    const /** @type {?} */ prefix = startTagToken.parts[0];\n    const /** @type {?} */ name = startTagToken.parts[1];\n    const /** @type {?} */ attrs: html.Attribute[] = [];\n    while (this._peek.type === lex.TokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    const /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n    let /** @type {?} */ selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      const /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n      if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n        this._errors.push(TreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    const /** @type {?} */ end = this._peek.sourceSpan.start;\n    const /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    const /** @type {?} */ el = new html.Element(fullName, attrs, [], span, span, undefined);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\n\nprivate _pushElement(el: html.Element) {\n    const /** @type {?} */ parentEl = this._getParentElement();\n\n    if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n      this._elementStack.pop();\n    }\n\n    const /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n    const {parent, container} = this._getParentElementSkippingContainers();\n\n    if (parent && tagDef.requireExtraParent(parent.name)) {\n      const /** @type {?} */ newParent = new html.Element(\n          tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n      this._insertBeforeContainer(parent, container, newParent);\n    }\n\n    this._addToParent(el);\n    this._elementStack.push(el);\n  }\n/**\n * @param {?} endTagToken\n * @return {?}\n */\n\nprivate _consumeEndTag(endTagToken: lex.Token) {\n    const /** @type {?} */ fullName = this._getElementFullName(\n        endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    if (this._getParentElement()) { /** @type {?} */((\n      this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n    }\n\n    if (this.getTagDefinition(fullName).isVoid) {\n      this._errors.push(TreeError.create(\n          fullName, endTagToken.sourceSpan,\n          `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      const /** @type {?} */ errMsg =\n          `Unexpected closing tag \"${fullName}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;\n      this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n    }\n  }\n/**\n * @param {?} fullName\n * @return {?}\n */\n\nprivate _popElement(fullName: string): boolean {\n    for (let /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      const /** @type {?} */ el = this._elementStack[stackIndex];\n      if (el.name == fullName) {\n        this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!this.getTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\n\nprivate _consumeAttr(attrName: lex.Token): html.Attribute {\n    const /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    let /** @type {?} */ end = attrName.sourceSpan.end;\n    let /** @type {?} */ value = '';\n    let /** @type {?} */ valueSpan: ParseSourceSpan = /** @type {?} */(( undefined));\n    if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n      const /** @type {?} */ valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n      valueSpan = valueToken.sourceSpan;\n    }\n    return new html.Attribute(\n        fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n  }\n/**\n * @return {?}\n */\n\nprivate _getParentElement(): html.Element|null {\n    return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n  }\n/**\n * Returns the parent in the DOM and the container.\n * \n * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n * @return {?}\n */\n\nprivate _getParentElementSkippingContainers():\n      {parent: html.Element | null, container: html.Element|null} {\n    let /** @type {?} */ container: html.Element|null = null;\n\n    for (let /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n      if (!isNgContainer(this._elementStack[i].name)) {\n        return {parent: this._elementStack[i], container};\n      }\n      container = this._elementStack[i];\n    }\n\n    return {parent: null, container};\n  }\n/**\n * @param {?} node\n * @return {?}\n */\n\nprivate _addToParent(node: html.Node) {\n    const /** @type {?} */ parent = this._getParentElement();\n    if (parent != null) {\n      parent.children.push(node);\n    } else {\n      this._rootNodes.push(node);\n    }\n  }\n/**\n * Insert a node between the parent and the container.\n * When no container is given, the node is appended as a child of the parent.\n * Also updates the element stack accordingly.\n * \n * \\@internal\n * @param {?} parent\n * @param {?} container\n * @param {?} node\n * @return {?}\n */\n\nprivate _insertBeforeContainer(\n      parent: html.Element, container: html.Element|null, node: html.Element) {\n    if (!container) {\n      this._addToParent(node);\n      this._elementStack.push(node);\n    } else {\n      if (parent) {\n        // replace the container with the new node in the children\n        const /** @type {?} */ index = parent.children.indexOf(container);\n        parent.children[index] = node;\n      } else {\n        this._rootNodes.push(node);\n      }\n      node.children.push(container);\n      this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n    }\n  }\n/**\n * @param {?} prefix\n * @param {?} localName\n * @param {?} parentElement\n * @return {?}\n */\n\nprivate _getElementFullName(prefix: string, localName: string, parentElement: html.Element|null):\n      string {\n    if (prefix == null) {\n      prefix = /** @type {?} */(( this.getTagDefinition(localName).implicitNamespacePrefix));\n      if (prefix == null && parentElement != null) {\n        prefix = getNsPrefix(parentElement.name);\n      }\n    }\n\n    return mergeNsAndName(prefix, localName);\n  }\n}\n\nfunction _TreeBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\n_TreeBuilder.prototype._index;\n/** @type {?} */\n_TreeBuilder.prototype._peek;\n/** @type {?} */\n_TreeBuilder.prototype._rootNodes;\n/** @type {?} */\n_TreeBuilder.prototype._errors;\n/** @type {?} */\n_TreeBuilder.prototype._elementStack;\n/** @type {?} */\n_TreeBuilder.prototype.tokens;\n/** @type {?} */\n_TreeBuilder.prototype.getTagDefinition;\n}\n\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n"]}