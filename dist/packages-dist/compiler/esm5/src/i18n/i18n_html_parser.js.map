{"version":3,"sources":["../../../../../../packages/compiler/src/i18n/i18n_html_parser.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,0BAAE,EAA+C,MAAA,eAAA,CAAA;AAQxD,OALO,EAAA,4BAAE,EAAiD,MAAA,mCAAA,CAAA;AAM1D,OALO,EAAA,eAAE,EAAe,MAAA,qBAAA,CAAA;AAOxB,OALO,EAAA,MAAE,EAAM,MAAA,UAAA,CAAA;AAMf,OALO,EAAA,iBAAE,EAAiB,MAAA,oBAAA,CAAA;AAO1B,OALO,EAAA,KAAE,EAAK,MAAA,qBAAA,CAAA;AAMd,OALO,EAAA,MAAE,EAAM,MAAA,sBAAA,CAAA;AAMf,OALO,EAAA,GAAE,EAAG,MAAA,mBAAA,CAAA;AAMZ,OALO,EAAA,GAAE,EAAG,MAAA,mBAAA,CAAA;AAMZ,OALO,EAAA,iBAAE,EAAiB,MAAA,sBAAA,CAAA;AAM1B;IAIA;;;;;;OAMG;IACH,wBARc,WAAa,EAAY,YAAe,EAAQ,kBAAqB,EAU7E,kBAT6E,EAU7E,OATU;QAQV,mCAAA,EAAA,qBATiD,0BAAA,CAA2B,OAAC;QADrE,gBAAA,GAAA,WAAA,CAAa;QAYvB,EAAE,CAAC,CAAC,YATC,CAAY,CAAC,CAAA;YAUhB,IAAM,gBAAgB,CAThB,UAAA,GAAa,gBAAA,CAAiB,kBAAC,CAAkB,CAAC;YAUxD,IAAI,CATC,kBAAC;gBAUF,iBAAiB,CATC,IAAC,CAAI,YAAC,EAAa,MAAA,EAAQ,UAAA,EAAY,kBAAA,EAAoB,OAAA,CAAQ,CAAC;QAU5F,CAAC;QATC,IAAA,CAAK,CAAA;YAUL,IAAI,CATC,kBAAC;gBAUF,IATI,iBAAA,CAAkB,EAAC,EAAG,IAAA,EAAM,MAAA,EAAQ,SAAA,EAAW,kBAAA,EAAoB,OAAA,CAAQ,CAAC;QAUtF,CAAC;IACH,CAAC;IACH;;;;;;OAMG;IACH,8BAfG,GAeH,UACM,MAfQ,EAAQ,GAAK,EAAQ,mBAA+B,EAgB5D,mBAf2C;QADd,oCAAA,EAAA,2BAA+B;QAgB5D,oCAAA,EAAA,kDAf2C;QAgB7C,IAAM,gBAAgB,CAfhB,WAAA,GAgBF,IAAI,CAfC,WAAC,CAAW,KAAC,CAAK,MAAC,EAAO,GAAA,EAAK,mBAAA,EAAqB,mBAAA,CAAoB,CAAC;QAiBlF,EAAE,CAAC,CAAC,WAfC,CAAW,MAAC,CAAM,MAAC,CAAM,CAAC,CAAA;YAgB7B,MAAM,CAfC,IAAI,eAAA,CAAgB,WAAC,CAAW,SAAC,EAAU,WAAA,CAAY,MAAC,CAAM,CAAC;QAgBxE,CAAC;QAED,MAAM,CAfC,iBAAA,CAgBH,WAAW,CAfC,SAAC,EAAU,IAAA,CAAK,kBAAC,EAAmB,mBAAA,EAAqB,EAAA,EAAI,EAAA,CAAG,CAAC;IAgBnF,CAAC;IACH,qBAfC;AAeD,CA5CA,AA6BC,IAAA;;AAiBD;IACA,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC1C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC;IAC5C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,CAAC;AAED;;;GAGG;AACH,0BA5B0B,MAAS;IA6BjC,MAAM,GA5BG,CAAA,MAAE,IAAS,KAAA,CAAM,CAAC,WAAC,EAAW,CAAE;IA8BzC,MAAM,CAAC,CAAC,MA5BC,CAAM,CAAC,CAAA;QA6Bd,KA5BK,KAAA;YA6BH,MAAM,CA5BC,IAAI,GAAA,EAAI,CAAE;QA6BnB,KA5BK,KAAA;YA6BH,MAAM,CA5BC,IAAI,GAAA,EAAI,CAAE;QA6BnB,KA5BK,QAAA,CAAS;QA6Bd,KA5BK,MAAA;YA6BH,MAAM,CA5BC,IAAI,MAAA,EAAO,CAAE;QA6BtB,KA5BK,OAAA,CAAQ;QA6Bb,KA5BK,KAAA,CAAM;QA6BX;YACE,MAAM,CA5BC,IAAI,KAAA,EAAM,CAAE;IA6BvB,CAAC;AACH,CAAC","file":"i18n_html_parser.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy, ÉµConsole as Console} from '@angular/core';\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\n\nimport {digest} from './digest';\nimport {mergeTranslations} from './extractor_merger';\nimport {Serializer} from './serializers/serializer';\nimport {Xliff} from './serializers/xliff';\nimport {Xliff2} from './serializers/xliff2';\nimport {Xmb} from './serializers/xmb';\nimport {Xtb} from './serializers/xtb';\nimport {TranslationBundle} from './translation_bundle';\nexport class I18NHtmlParser implements HtmlParser {\n  // @override\n  getTagDefinition: any;\nprivate _translationBundle: TranslationBundle;\n/**\n * @param {?} _htmlParser\n * @param {?=} translations\n * @param {?=} translationsFormat\n * @param {?=} missingTranslation\n * @param {?=} console\n */\nconstructor(\nprivate _htmlParser: HtmlParser, translations?: string, translationsFormat?: string,\n      missingTranslation: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    if (translations) {\n      const /** @type {?} */ serializer = createSerializer(translationsFormat);\n      this._translationBundle =\n          TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n    } else {\n      this._translationBundle =\n          new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n    }\n  }\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ parseResult =\n        this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n\n    if (parseResult.errors.length) {\n      return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n    }\n\n    return mergeTranslations(\n        parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n  }\n}\n\nfunction I18NHtmlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nI18NHtmlParser.prototype.getTagDefinition;\n/** @type {?} */\nI18NHtmlParser.prototype._translationBundle;\n/** @type {?} */\nI18NHtmlParser.prototype._htmlParser;\n}\n\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format?: string): Serializer {\n  format = (format || 'xlf').toLowerCase();\n\n  switch (format) {\n    case 'xmb':\n      return new Xmb();\n    case 'xtb':\n      return new Xtb();\n    case 'xliff2':\n    case 'xlf2':\n      return new Xliff2();\n    case 'xliff':\n    case 'xlf':\n    default:\n      return new Xliff();\n  }\n}\n"]}