{"version":3,"sources":["../../../../../../../packages/compiler/src/i18n/serializers/xliff2.ts"],"names":[],"mappings":"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","file":"xliff2.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _VERSION = '2.0';\nconst /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nconst /** @type {?} */ _DEFAULT_SOURCE_LANG = 'en';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _PLACEHOLDER_SPANNING_TAG = 'pc';\n\nconst /** @type {?} */ _XLIFF_TAG = 'xliff';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _TARGET_TAG = 'target';\nconst /** @type {?} */ _UNIT_TAG = 'unit';\nexport class Xliff2 extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string {\n    const /** @type {?} */ visitor = new _WriteVisitor();\n    const /** @type {?} */ units: xml.Node[] = [];\n\n    messages.forEach(message => {\n      const /** @type {?} */ unit = new xml.Tag(_UNIT_TAG, {id: message.id});\n      const /** @type {?} */ notes = new xml.Tag('notes');\n\n      if (message.description || message.meaning) {\n        if (message.description) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'description'}, [new xml.Text(message.description)]));\n        }\n\n        if (message.meaning) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'meaning'}, [new xml.Text(message.meaning)]));\n        }\n      }\n\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        notes.children.push(new xml.CR(8), new xml.Tag('note', {category: 'location'}, [\n          new xml.Text(\n              `${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      notes.children.push(new xml.CR(6));\n      unit.children.push(new xml.CR(6), notes);\n\n      const /** @type {?} */ segment = new xml.Tag('segment');\n\n      segment.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(6));\n\n      unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n\n      units.push(new xml.CR(4), unit);\n    });\n\n    const /** @type {?} */ file =\n        new xml.Tag('file', {'original': 'ng.template', id: 'ngi18n'}, [...units, new xml.CR(2)]);\n\n    const /** @type {?} */ xliff = new xml.Tag(\n        _XLIFF_TAG, {version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG},\n        [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const /** @type {?} */ xliff2Parser = new Xliff2Parser();\n    const {locale, msgIdToHtml, errors} = xliff2Parser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff2 parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: /** @type {?} */(( locale)), i18nNodesByMsgId};\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return decimalDigest(message); }\n}\nclass _WriteVisitor implements i18n.Visitor {\nprivate _nextPlaceholderId: number;\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ type = getTypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      const /** @type {?} */ tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n        id: (this._nextPlaceholderId++).toString(),\n        equiv: ph.startName,\n        type: type,\n        disp: `<${ph.tag}/>`,\n      });\n      return [tagPh];\n    }\n\n    const /** @type {?} */ tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n      id: (this._nextPlaceholderId++).toString(),\n      equivStart: ph.startName,\n      equivEnd: ph.closeName,\n      type: type,\n      dispStart: `<${ph.tag}>`,\n      dispEnd: `</${ph.tag}>`,\n    });\n    const /** @type {?} */ nodes: xml.Node[] = [].concat(...ph.children.map(node => node.visit(this)));\n    if (nodes.length) {\n      nodes.forEach((node: xml.Node) => tagPc.children.push(node));\n    } else {\n      tagPc.children.push(new xml.Text(''));\n    }\n\n    return [tagPc];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(_PLACEHOLDER_TAG, {\n      id: idStr,\n      equiv: ph.name,\n      disp: `{{${ph.value}}}`,\n    })];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ cases = Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ');\n    const /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(\n        _PLACEHOLDER_TAG,\n        {id: idStr, equiv: ph.name, disp: `{${ph.value.expression}, ${ph.value.type}, ${cases}}`})];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    this._nextPlaceholderId = 0;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\nfunction _WriteVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_WriteVisitor.prototype._nextPlaceholderId;\n}\n\nclass Xliff2Parser implements ml.Visitor {\nprivate _unitMlString: string|null;\nprivate _errors: I18nError[];\nprivate _msgIdToHtml: {[msgId: string]: string};\nprivate _locale: string|null = null;\n/**\n * @param {?} xliff\n * @param {?} url\n * @return {?}\n */\nparse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null;\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        const /** @type {?} */ innerTextStart = /** @type {?} */(( element.startSourceSpan)).end.offset;\n        const /** @type {?} */ innerTextEnd = /** @type {?} */(( element.endSourceSpan)).start.offset;\n        const /** @type {?} */ content = /** @type {?} */(( element.startSourceSpan)).start.file.content;\n        const /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _XLIFF_TAG:\n        const /** @type {?} */ localeAttr = element.attrs.find((attr) => attr.name === 'trgLang');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n\n        const /** @type {?} */ versionAttr = element.attrs.find((attr) => attr.name === 'version');\n        if (versionAttr) {\n          const /** @type {?} */ version = versionAttr.value;\n          if (version !== '2.0') {\n            this._addError(\n                element,\n                `The XLIFF file version ${version} is not compatible with XLIFF 2.0 serializer`);\n          } else {\n            ml.visitAll(this, element.children, null);\n          }\n        }\n        break;\n      default:\n        ml.visitAll(this, element.children, null);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction Xliff2Parser_tsickle_Closure_declarations() {\n/** @type {?} */\nXliff2Parser.prototype._unitMlString;\n/** @type {?} */\nXliff2Parser.prototype._errors;\n/** @type {?} */\nXliff2Parser.prototype._msgIdToHtml;\n/** @type {?} */\nXliff2Parser.prototype._locale;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} message\n * @param {?} url\n * @return {?}\n */\nconvert(message: string, url: string) {\n    const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Node[]|null {\n    switch (el.name) {\n      case _PLACEHOLDER_TAG:\n        const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'equiv');\n        if (nameAttr) {\n          return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n        }\n\n        this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equiv\" attribute`);\n        break;\n      case _PLACEHOLDER_SPANNING_TAG:\n        const /** @type {?} */ startAttr = el.attrs.find((attr) => attr.name === 'equivStart');\n        const /** @type {?} */ endAttr = el.attrs.find((attr) => attr.name === 'equivEnd');\n\n        if (!startAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivStart\" attribute`);\n        } else if (!endAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivEnd\" attribute`);\n        } else {\n          const /** @type {?} */ startId = startAttr.value;\n          const /** @type {?} */ endId = endAttr.value;\n\n          const /** @type {?} */ nodes: i18n.Node[] = [];\n\n          return nodes.concat(\n              new i18n.Placeholder('', startId, el.sourceSpan),\n              ...el.children.map(node => node.visit(this, null)),\n              new i18n.Placeholder('', endId, el.sourceSpan));\n        }\n        break;\n      default:\n        this._addError(el, `Unexpected tag`);\n    }\n\n    return null;\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: [].concat(...ml.visitAll(this, icuCase.expression)),\n    };\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n    case 'b':\n    case 'i':\n    case 'u':\n      return 'fmt';\n    case 'img':\n      return 'image';\n    case 'a':\n      return 'link';\n    default:\n      return 'other';\n  }\n}\n"]}