{"version":3,"sources":["../../../../../../../packages/compiler/src/i18n/serializers/xmb.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,aAAE,EAAa,MAAA,WAAA,CAAA;AAQtB,OALO,EAAoB,UAAA,EAAY,uBAAA,EAAwB,MAAA,cAAA,CAAA;AAM/D,OALO,KAAK,GAAA,MAAA,cAAA,CAAA;AAOZ,IAAM,gBAAgB,CALhB,aAAA,GAAgB,eAAA,CAAgB;AAMtC,IAAM,gBAAgB,CALhB,YAAA,GAAe,KAAA,CAAM;AAM3B,IAAM,gBAAgB,CALhB,gBAAA,GAAmB,IAAA,CAAK;AAM9B,IAAM,gBAAgB,CALhB,YAAA,GAAe,IAAA,CAAK;AAM1B,IAAM,gBAAgB,CALhB,WAAA,GAAc,QAAA,CAAS;AAO7B,IAAM,gBAAgB,CALhB,QAAA,GAAW,ujBAuBO,CALC;AAMzB;IAJyB,+BAAA;IAIzB;;IAmEA,CAlBC;IAhDD;;;;OAIG;IACH,mBATG,GASH,UATQ,QAAuB,EAAG,MAAgB;QAU9C,IAAM,gBAAgB,CAThB,cAAA,GAAiB,IAAI,cAAA,EAAe,CAAE;QAU5C,IAAM,gBAAgB,CAThB,OAAA,GAAU,IAAI,QAAA,EAAS,CAAE;QAU/B,IAAI,gBAAgB,CAThB,QAAA,GAAW,IAAI,GAAA,CAAI,GAAC,CAAG,aAAC,CAAa,CAAC;QAW1C,QAAQ,CATC,OAAC,CAAO,UAAA,OAAC;YAUhB,IAAM,gBAAgB,CAThB,KAAA,GAA+B,EAAA,EAAE,EAAG,OAAA,CAAQ,EAAC,EAAE,CAAC;YAWtD,EAAE,CAAC,CAAC,OATC,CAAO,WAAC,CAAW,CAAC,CAAA;gBAUvB,KAAK,CATC,MAAC,CAAM,GAAG,OAAA,CAAQ,WAAC,CAAW;YAUtC,CAAC;YAED,EAAE,CAAC,CAAC,OATC,CAAO,OAAC,CAAO,CAAC,CAAA;gBAUnB,KAAK,CATC,SAAC,CAAS,GAAG,OAAA,CAAQ,OAAC,CAAO;YAUrC,CAAC;YAED,IAAI,gBAAgB,CAThB,UAAA,GAAwB,EAAA,CAAG;YAU/B,OAAO,CATC,OAAC,CAAO,OAAC,CAAO,UAAC,MAAc;gBAUrC,UAAU,CATC,IAAC,CAAI,IAAI,GAAA,CAAI,GAAC,CAAG,WAAC,EAAY,EAAA,EAAI;oBAU3C,IATI,GAAA,CAAI,IAAC,CAUF,MATC,CAAM,QAAC,SAAQ,MAAI,CAAM,SAAC,IAAS,MAAG,CAAM,OAAC,KAAW,MAAA,CAAO,SAAC,GAAW,GAAA,GAAM,MAAA,CAAO,OAAC,GAAS,EAAA,CAAG,CAAE;iBAUhH,CATC,CAAC,CAAC;YAUN,CAAC,CATC,CAAC;YAWH,QAAQ,CATC,QAAC,CAAQ,IAAC,CAUf,IATI,GAAA,CAAI,EAAC,CAAE,CAAC,CAAC,EAUb,IATI,GAAA,CAAI,GAAC,CAAG,YAAC,EAAa,KAAA,EAAS,UAAG,QAAW,OAAI,CAAO,SAAC,CAAS,OAAC,CAAO,KAAC,CAAK,EAAE,CAAC,CAAC;QAU9F,CAAC,CATC,CAAC;QAWH,QAAQ,CATC,QAAC,CAAQ,IAAC,CAAI,IAAI,GAAA,CAAI,EAAC,EAAE,CAAE,CAAC;QAWrC,MAAM,CATC,GAAA,CAAI,SAAC,CAAS;YAUnB,IATI,GAAA,CAAI,WAAC,CAAW,EAAC,OAAC,EAAQ,KAAA,EAAO,QAAA,EAAU,OAAA,EAAQ,CAAC;YAUxD,IATI,GAAA,CAAI,EAAC,EAAE;YAUX,IATI,GAAA,CAAI,OAAC,CAAO,aAAC,EAAc,QAAA,CAAS;YAUxC,IATI,GAAA,CAAI,EAAC,EAAE;YAUX,cAAc,CATC,kBAAC,CAAkB,QAAC,CAAQ;YAU3C,IATI,GAAA,CAAI,EAAC,EAAE;SAUZ,CATC,CAAC;IAUL,CAAC;IACH;;;;OAIG;IACH,kBAbG,GAaH,UAbO,OAAS,EAAQ,GAAK;QAezB,MAbM,IAAI,KAAA,CAAM,aAAC,CAAa,CAAC;IAcjC,CAAC;IACH;;;OAGG;IACH,oBAhBG,GAgBH,UAhBS,OAAe,IAAkB,MAAA,CAAO,MAAA,CAAO,OAAC,CAAO,CAAC,CAAC,CAAA;IAiBlE;;;OAGG;IACH,8BAlBG,GAkBH,UAlBmB,OAAe;QAmB9B,MAAM,CAlBC,IAAI,uBAAA,CAAwB,OAAC,EAAQ,YAAA,CAAa,CAAC;IAmB5D,CAAC;IACH,UAlBC;AAkBD,CAnEA,AAiDC,CArDwB,UAAA,GAqDxB;;AAmBD;IAAA;IA+EA,CA7CC;IAjCD;;;;OAIG;IACH,4BAtBG,GAsBH,UAtBY,IAAY,EAAK,OAAU,IAAmB,MAAA,CAAO,CAAA,IAAK,GAAA,CAAI,IAAC,CAAI,IAAC,CAAI,KAAC,CAAK,CAAC,CAAC,CAAC,CAAA;IAuB7F;;;;OAIG;IACH,iCA1BG,GA0BH,UA1BiB,SAAiB,EAAU,OAAS;QA0BrD,iBAIG;QAHC,IAAM,gBAAgB,CA1BhB,KAAA,GAAoB,EAAA,CAAG;QA2B7B,SAAS,CA1BC,QAAC,CAAQ,OAAC,CAAO,UAAC,IAAY,IAAQ,OAAA,KAAA,CAAM,IAAC,OAAP,KAAA,EAAY,IAAG,CAAI,KAAC,CAAK,KAAC,CAAI,GAA9B,CAA+B,CAAC,CAAC;QA2BjF,MAAM,CA1BC,KAAA,CAAM;IA2Bf,CAAC;IACH;;;;OAIG;IACH,2BA9BG,GA8BH,UA9BW,GAAW,EAAI,OAAU;QA8BpC,iBAUG;QATC,IAAM,gBAAgB,CA9BhB,KAAA,GAAQ,CAAA,IAAK,GAAA,CAAI,IAAC,CAAI,MAAC,GAAI,CAAG,qBAAC,UAAqB,GAAK,CAAG,IAAC,OAAI,CAAI,CAAC,CAAC;QAgC7E,MAAM,CA9BC,IAAC,CAAI,GAAC,CAAG,KAAC,CAAK,CAAC,OAAC,CAAO,UAAC,CAAG;YA+BjC,KAAK,CA9BC,IAAC,OA8BP,KAAK,GA9BM,IAAI,GAAA,CAAI,IAAC,CAAK,CAAG,OAAC,CAAI,SAAE,GAAI,CAAG,KAAC,CAAK,CAAC,CAAC,CAAC,KAAC,CAAK,KAAC,CAAI,GAAE,IAAI,GAAA,CAAI,IAAC,CAAI,IAAC,CAAI,IAAE;QA+BtF,CAAC,CA9BC,CAAC;QAgCH,KAAK,CA9BC,IAAC,CAAI,IAAI,GAAA,CAAI,IAAC,CAAI,GAAC,CAAG,CAAC,CAAC;QAgC9B,MAAM,CA9BC,KAAA,CAAM;IA+Bf,CAAC;IACH;;;;OAIG;IACH,sCAlCG,GAkCH,UAlCsB,EAAU,EAAe,OAAU;QAmCrD,IAAM,gBAAgB,CAlChB,OAAA,GAAU,IAAI,GAAA,CAAI,GAAC,CAAG,YAAC,EAAa,EAAA,EAAI,CAAA,IAAK,GAAA,CAAI,IAAC,CAAI,MAAC,EAAI,CAAE,GAAC,MAAG,CAAG,CAAC,CAAC,CAAC;QAmC7E,IAAM,gBAAgB,CAlChB,UAAA,GAAa,IAAI,GAAA,CAAI,GAAC,CAAG,gBAAC,EAAiB,EAAA,IAAE,EAAK,EAAA,CAAG,SAAC,EAAS,EAAE,CAAA,OAAE,CAAO,CAAC,CAAC;QAmClF,EAAE,CAAC,CAAC,EAlCC,CAAE,MAAC,CAAM,CAAC,CAAA;YAmCb,8CAA8C;YAC9C,MAAM,CAlCC,CAAA,UAAE,CAAU,CAAC;QAmCtB,CAAC;QAED,IAAM,gBAAgB,CAlChB,OAAA,GAAU,IAAI,GAAA,CAAI,GAAC,CAAG,YAAC,EAAa,EAAA,EAAI,CAAA,IAAK,GAAA,CAAI,IAAC,CAAI,OAAC,EAAK,CAAE,GAAC,MAAG,CAAG,CAAC,CAAC,CAAC;QAmC9E,IAAM,gBAAgB,CAlChB,UAAA,GAAa,IAAI,GAAA,CAAI,GAAC,CAAG,gBAAC,EAAiB,EAAA,IAAE,EAAK,EAAA,CAAG,SAAC,EAAS,EAAE,CAAA,OAAE,CAAO,CAAC,CAAC;QAoClF,MAAM,EAlCC,UAAE,SAAW,IAAI,CAAI,SAAC,CAAS,EAAC,CAAE,QAAC,CAAQ,GAAE,UAAA,GAAY;IAmClE,CAAC;IACH;;;;OAIG;IACH,mCAtCG,GAsCH,UAtCmB,EAAU,EAAY,OAAU;QAuC/C,IAAM,gBAAgB,CAtChB,KAAA,GAAQ,IAAI,GAAA,CAAI,GAAC,CAAG,YAAC,EAAa,EAAA,EAAI,CAAA,IAAK,GAAA,CAAI,IAAC,CAAI,OAAC,EAAK,CAAE,KAAC,OAAK,CAAI,CAAC,CAAC,CAAC;QAuC/E,MAAM,CAtCC,CAAA,IAAK,GAAA,CAAI,GAAC,CAAG,gBAAC,EAAiB,EAAA,IAAE,EAAK,EAAA,CAAG,IAAC,EAAI,EAAE,CAAA,KAAE,CAAK,CAAC,CAAC,CAAC;IAuCnE,CAAC;IACH;;;;OAIG;IACH,sCA1CG,GA0CH,UA1CsB,EAAU,EAAe,OAAU;QA2CrD,IAAM,gBAAgB,CA1ChB,KAAA,GAAQ,IAAI,GAAA,CAAI,GAAC,CAAG,YAAC,EAAa,EAAA,EAAI;YA2C1C,IA1CI,GAAA,CAAI,IAAC,CA2CL,MAAI,EA1CC,CAAE,KAAC,CAAK,UAAC,UAAU,EAAK,CAAE,KAAC,CAAK,IAAC,UAAI,MAAK,CAAM,IAAC,CAAI,EAAC,CAAE,KAAC,CAAK,KAAC,CAAK,CAAC,GAAC,CAAG,UAAC,KAAO,IAAW,OAAA,KAAA,GAAQ,QAAA,EAAR,CAAQ,CAAS,CAAC,IAAC,CAAI,GAAC,CAAG,MAAC,CAAG;SA2CrI,CA1CC,CAAC;QA2CH,MAAM,CA1CC,CAAA,IAAK,GAAA,CAAI,GAAC,CAAG,gBAAC,EAAiB,EAAA,IAAE,EAAK,EAAA,CAAG,IAAC,EAAI,EAAE,CAAA,KAAE,CAAK,CAAC,CAAC,CAAC;IA2CnE,CAAC;IACH;;;OAGG;IACH,4BA7CG,GA6CH,UA7CY,KAAiB;QA6C7B,iBAEG;QADC,MAAM,CA7CC,EAAA,CAAG,MAAC,OAAJ,EAAA,EAAW,KAAG,CAAK,GAAC,CAAG,UAAA,IAAC,IAAO,OAAA,IAAA,CAAK,KAAC,CAAK,KAAC,CAAI,EAAhB,CAAgB,CAAC,EAAE;IA8C3D,CAAC;IACH,eA7CC;AA6CD,CA/EA,AAkCC,IAAA;AA8CD;;;GAGG;AACH,MAhDC,iBAAsB,OAAe;IAiDpC,MAAM,CAhDC,aAAA,CAAc,OAAC,CAAO,CAAC;AAiDhC,CAAC;AACD;IAAA;IAsCA,CAhEC;IA2BD;;;OAGG;IACH,2CAlDG,GAkDH,UAlDqB,IAAW;QAmD5B,IAAI,CAlDC,KAAC,CAAK,IAAC,CAAI,CAAC;QAmDjB,MAAM,CAlDC,IAAA,CAAK;IAmDd,CAAC;IACH;;;OAGG;IACH,iCArDG,GAqDH,UArDW,GAAU;QAqDrB,iBASG;QARC,EAAE,CAAC,CAAC,GArDC,CAAG,IAAC,KAAQ,gBAAA,CAAiB,CAAC,CAAA;YAsDjC,EAAE,CAAC,CAAC,CArDC,GAAC,CAAG,QAAC,IAAW,GAAA,CAAI,QAAC,CAAQ,MAAC,IAAS,CAAA,CAAE,CAAC,CAAA;gBAsD7C,IAAM,gBAAgB,CArDhB,MAAA,GAAS,IAAI,GAAA,CAAI,IAAC,CAAI,GAAC,CAAG,KAAC,CAAK,MAAC,CAAM,IAAI,KAAA,CAAM,CAAC;gBAsDxD,GAAG,CArDC,QAAC,GAAU,CAAA,IAAK,GAAA,CAAI,GAAC,CAAG,YAAC,EAAa,EAAA,EAAI,CAAA,MAAE,CAAM,CAAC,CAAC,CAAC;YAsD3D,CAAC;QACH,CAAC;QArDC,IAAA,CAAK,EAAA,CAAA,CAAA,GAAK,CAAG,QAAC,CAAQ,CAAC,CAAA;YAsDvB,GAAG,CArDC,QAAC,CAAQ,OAAC,CAAO,UAAA,IAAC,IAAO,OAAA,IAAA,CAAK,KAAC,CAAK,KAAC,CAAI,EAAhB,CAAgB,CAAC,CAAC;QAsDjD,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,kCAxDG,GAwDH,UAxDY,IAAW,IAAW,CAAA;IAyDlC;;;OAGG;IACH,yCA5DG,GA4DH,UA5DmB,IAAW,IAAkB,CAAA;IA6DhD;;;OAGG;IACH,qCAhEG,GAgEH,UAhEe,OAAc,IAAc,CAAA;IAiE3C,qBAhEC;AAgED,CAtCA,AA1BC,IAAA;AAiED;;;GAGG;AACH,MAlEC,uBAA4B,YAAc;IAmEzC,MAAM,CAlEC,YAAA,CAAa,WAAC,EAAW,CAAE,OAAC,CAAO,aAAC,EAAc,GAAA,CAAI,CAAC;AAmEhE,CAAC","file":"xmb.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\n\nimport {PlaceholderMapper, Serializer, SimplePlaceholderMapper} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _MESSAGES_TAG = 'messagebundle';\nconst /** @type {?} */ _MESSAGE_TAG = 'msg';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _EXEMPLE_TAG = 'ex';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\n\nconst /** @type {?} */ _DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\nexport class Xmb extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string {\n    const /** @type {?} */ exampleVisitor = new ExampleVisitor();\n    const /** @type {?} */ visitor = new _Visitor();\n    let /** @type {?} */ rootNode = new xml.Tag(_MESSAGES_TAG);\n\n    messages.forEach(message => {\n      const /** @type {?} */ attrs: {[k: string]: string} = {id: message.id};\n\n      if (message.description) {\n        attrs['desc'] = message.description;\n      }\n\n      if (message.meaning) {\n        attrs['meaning'] = message.meaning;\n      }\n\n      let /** @type {?} */ sourceTags: xml.Tag[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        sourceTags.push(new xml.Tag(_SOURCE_TAG, {}, [\n          new xml.Text(\n              `${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      rootNode.children.push(\n          new xml.CR(2),\n          new xml.Tag(_MESSAGE_TAG, attrs, [...sourceTags, ...visitor.serialize(message.nodes)]));\n    });\n\n    rootNode.children.push(new xml.CR());\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}),\n      new xml.CR(),\n      new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n      new xml.CR(),\n      exampleVisitor.addDefaultExamples(rootNode),\n      new xml.CR(),\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    throw new Error('Unsupported');\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new SimplePlaceholderMapper(message, toPublicName);\n  }\n}\nclass _Visitor implements i18n.Visitor {\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ startEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`<${ph.tag}>`)]);\n    const /** @type {?} */ startTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name: ph.startName}, [startEx]);\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const /** @type {?} */ closeEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`</${ph.tag}>`)]);\n    const /** @type {?} */ closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name: ph.closeName}, [closeEx]);\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const /** @type {?} */ exTag = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`{{${ph.value}}}`)]);\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name}, [exTag])];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ exTag = new xml.Tag(_EXEMPLE_TAG, {}, [\n      new xml.Text(\n          `{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ')}}`)\n    ]);\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name}, [exTag])];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message: i18n.Message): string {\n  return decimalDigest(message);\n}\nclass ExampleVisitor implements xml.IVisitor {\n/**\n * @param {?} node\n * @return {?}\n */\naddDefaultExamples(node: xml.Node): xml.Node {\n    node.visit(this);\n    return node;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nvisitTag(tag: xml.Tag): void {\n    if (tag.name === _PLACEHOLDER_TAG) {\n      if (!tag.children || tag.children.length == 0) {\n        const /** @type {?} */ exText = new xml.Text(tag.attrs['name'] || '...');\n        tag.children = [new xml.Tag(_EXEMPLE_TAG, {}, [exText])];\n      }\n    } else if (tag.children) {\n      tag.children.forEach(node => node.visit(this));\n    }\n  }\n/**\n * @param {?} text\n * @return {?}\n */\nvisitText(text: xml.Text): void {}\n/**\n * @param {?} decl\n * @return {?}\n */\nvisitDeclaration(decl: xml.Declaration): void {}\n/**\n * @param {?} doctype\n * @return {?}\n */\nvisitDoctype(doctype: xml.Doctype): void {}\n}\n/**\n * @param {?} internalName\n * @return {?}\n */\nexport function toPublicName(internalName: string): string {\n  return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n"]}