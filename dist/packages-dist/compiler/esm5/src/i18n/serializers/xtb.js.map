{"version":3,"sources":["../../../../../../../packages/compiler/src/i18n/serializers/xtb.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH;;;;;;GAMG;AAEH,OALO,KAAK,EAAA,MAAA,qBAAA,CAAA;AAMZ,OALO,EAAA,SAAE,EAAS,MAAA,4BAAA,CAAA;AAMlB,OALO,KAAK,IAAA,MAAA,aAAA,CAAA;AAMZ,OALO,EAAA,SAAE,EAAS,MAAA,eAAA,CAAA;AAOlB,OALO,EAAoB,UAAA,EAAY,uBAAA,EAAwB,MAAA,cAAA,CAAA;AAM/D,OALO,EAAA,MAAE,EAAO,YAAA,EAAa,MAAA,OAAA,CAAA;AAO7B,IAAM,gBAAgB,CALhB,iBAAA,GAAoB,mBAAA,CAAoB;AAM9C,IAAM,gBAAgB,CALhB,gBAAA,GAAmB,aAAA,CAAc;AAMvC,IAAM,gBAAgB,CALhB,gBAAA,GAAmB,IAAA,CAAK;AAM9B;IAJyB,+BAAA;IAIzB;;IAsDA,CAnBC;IAlCD;;;;OAIG;IACH,mBATG,GASH,UATQ,QAAuB,EAAG,MAAgB,IAAe,MAAM,IAAI,KAAA,CAAM,aAAC,CAAa,CAAC,CAAC,CAAA;IAUjG;;;;OAIG;IACH,kBAbG,GAaH,UAbO,OAAS,EAAQ,GAAK;QAezB,mBAAmB;QACnB,IAAM,gBAAgB,CAbhB,SAAA,GAAY,IAAI,SAAA,EAAU,CAAE;QAC5B,IAAA,kCAA6D,EAA7D,kBAAE,EAAO,4BAAA,EAAa,kBAAA,CAAwC;QAepE,0BAA0B;QAC1B,IAAM,gBAAgB,CAbhB,gBAAA,GAAmD,EAAA,CAAG;QAc5D,IAAM,gBAAgB,CAbhB,SAAA,GAAY,IAAI,SAAA,EAAU,CAAE;QAelC,8FAA8F;QAC9F,6FAA6F;QAC7F,YAAY;QACZ,MAAM,CAbC,IAAC,CAAI,WAAC,CAAW,CAAC,OAAC,CAAO,UAAA,KAAC;YAchC,IAAM,gBAAgB,CAbhB,OAAA,GAAU;gBACR,IAAA,+CAAgE,EAAhE,wBAAE,EAAU,kBAAA,CAAqD;gBAcvE,EAAE,CAAC,CAAC,MAbC,CAAM,MAAC,CAAM,CAAC,CAAA;oBAcjB,MAbM,IAAI,KAAA,CAAM,wBAAC,MAAsB,CAAM,IAAC,CAAI,IAAC,CAAK,CAAE,CAAC;gBAc7D,CAAC;gBACD,MAAM,CAbC,SAAA,CAAU;YAcnB,CAAC,CAbC;YAcF,kBAAkB,CAbC,gBAAC,EAAiB,KAAA,EAAO,OAAA,CAAQ,CAAC;QAcvD,CAAC,CAbC,CAAC;QAeH,EAAE,CAAC,CAAC,MAbC,CAAM,MAAC,CAAM,CAAC,CAAA;YAcjB,MAbM,IAAI,KAAA,CAAM,wBAAC,MAAsB,CAAM,IAAC,CAAI,IAAC,CAAK,CAAE,CAAC;QAc7D,CAAC;QAED,MAAM,CAbC,EAAA,MAAE,EAAM,gBAAA,CAAA,CAAA,CAAC,MAAA,CAAA,CAAA,EAAU,gBAAA,kBAAA,EAAiB,CAAC;IAc9C,CAAC;IACH;;;OAGG;IACH,oBAhBG,GAgBH,UAhBS,OAAe,IAAkB,MAAA,CAAO,MAAA,CAAO,OAAC,CAAO,CAAC,CAAC,CAAA;IAiBlE;;;OAGG;IACH,8BAnBG,GAmBH,UAnBmB,OAAe;QAoB9B,MAAM,CAnBC,IAAI,uBAAA,CAAwB,OAAC,EAAQ,YAAA,CAAa,CAAC;IAoB5D,CAAC;IACH,UAnBC;AAmBD,CAtDA,AAmCC,CAvCwB,UAAA,GAuCxB;;AAoBD;;;;;GAKG;AACH,4BAxB4B,QAAU,EAAK,EAAI,EAAQ,OAAe;IAyBpE,MAAM,CAxBC,cAAC,CAAc,QAAC,EAAS,EAAA,EAAI;QAyBlC,YAAY,EAxBE,IAAA;QAyBd,UAAU,EAxBE,IAAA;QAyBZ,GAAG,EAxBE;YAyBH,IAAM,gBAAgB,CAxBhB,KAAA,GAAQ,OAAA,EAAQ,CAAE;YAyBxB,MAAM,CAxBC,cAAC,CAAc,QAAC,EAAS,EAAA,EAAI,EAAA,UAAE,EAAW,IAAA,EAAM,KAAA,OAAA,EAAM,CAAC,CAAC;YAyB/D,MAAM,CAxBC,KAAA,CAAM;QAyBf,CAAC;QACD,GAAG,EAxBE,UAAA,CAAA,IAAO,MAAM,IAAI,KAAA,CAAM,wCAAC,CAAwC,CAAC,CAAC,CAAA;KAyBxE,CAxBC,CAAC;AAyBL,CAAC;AACD;IAAA;QAlBU,YAAA,GAAuB,IAAA,CAAK;IA8HtC,CAvDC;IAhDD;;;;OAIG;IACH,yBA1BG,GA0BH,UA1BQ,GAAK,EAAQ,GAAK;QA2BtB,IAAI,CA1BC,YAAC,GAAc,CAAA,CAAE;QA2BtB,IAAI,CA1BC,YAAC,GAAc,EAAA,CAAG;QA4BvB,uFAAuF;QACvF,wCAAwC;QACxC,IAAM,gBAAgB,CA1BhB,GAAA,GAAM,IAAI,SAAA,EAAU,CAAE,KAAC,CAAK,GAAC,EAAI,GAAA,EAAK,KAAA,CAAM,CAAC;QA4BnD,IAAI,CA1BC,OAAC,GAAS,GAAA,CAAI,MAAC,CAAM;QA2B1B,EAAE,CA1BC,QAAC,CAAQ,IAAC,EAAK,GAAA,CAAI,SAAC,CAAS,CAAC;QA4BjC,MAAM,CA1BC;YA2BL,WAAW,EA1BE,IAAA,CAAK,YAAC;YA2BnB,MAAM,EA1BE,IAAA,CAAK,OAAC;YA2Bd,MAAM,EA1BE,IAAA,CAAK,OAAC;SA2Bf,CA1BC;IA2BJ,CAAC;IACH;;;;OAIG;IACH,gCA9BG,GA8BH,UA9Be,OAAa,EAAQ,OAAS;QA+BzC,MAAM,CAAC,CAAC,OA9BC,CAAO,IAAC,CAAI,CAAC,CAAA;YA+BpB,KA9BK,iBAAA;gBA+BH,IAAI,CA9BC,YAAC,EAAY,CAAE;gBA+BpB,EAAE,CAAC,CAAC,IA9BC,CAAI,YAAC,GAAc,CAAA,CAAE,CAAC,CAAA;oBA+BzB,IAAI,CA9BC,SAAC,CAAS,OAAC,EAAQ,MAAA,iBAAK,iCAAiB,CAA8B,CAAC;gBA+B/E,CAAC;gBACD,IAAM,gBAAgB,CA9BhB,QAAA,GAAW,OAAA,CAAQ,KAAC,CAAK,IAAC,CAAI,UAAC,IAAC,IAAQ,OAAA,IAAA,CAAK,IAAC,KAAQ,MAAA,EAAd,CAAc,CAAO,CAAC;gBA+BpE,EAAE,CAAC,CAAC,QA9BC,CAAQ,CAAC,CAAA;oBA+BZ,IAAI,CA9BC,OAAC,GAAS,QAAA,CAAS,KAAC,CAAK;gBA+BhC,CAAC;gBACD,EAAE,CA9BC,QAAC,CAAQ,IAAC,EAAK,OAAA,CAAQ,QAAC,EAAS,IAAA,CAAK,CAAC;gBA+B1C,IAAI,CA9BC,YAAC,EAAY,CAAE;gBA+BpB,KAAK,CAAC;YAER,KA9BK,gBAAA;gBA+BH,IAAM,gBAAgB,CA9BhB,MAAA,GAAS,OAAA,CAAQ,KAAC,CAAK,IAAC,CAAI,UAAC,IAAC,IAAQ,OAAA,IAAA,CAAK,IAAC,KAAQ,IAAA,EAAd,CAAc,CAAK,CAAC;gBA+BhE,EAAE,CAAC,CAAC,CA9BC,MAAC,CAAM,CAAC,CAAA;oBA+BX,IAAI,CA9BC,SAAC,CAAS,OAAC,EAAQ,MAAA,gBAAK,kCAAgB,CAA6B,CAAC;gBA+B7E,CAAC;gBA9BC,IAAA,CAAK,CAAA;oBA+BL,IAAM,gBAAgB,CA9BhB,EAAA,GAAK,MAAA,CAAO,KAAC,CAAK;oBA+BxB,EAAE,CAAC,CAAC,IA9BC,CAAI,YAAC,CAAY,cAAC,CAAc,EAAC,CAAE,CAAC,CAAC,CAAA;wBA+BxC,IAAI,CA9BC,SAAC,CAAS,OAAC,EAAQ,qCAAA,EAAsC,CAAE,CAAC;oBA+BnE,CAAC;oBA9BC,IAAA,CAAK,CAAA;wBA+BL,IAAM,gBAAgB,CA9BhB,cAAA,GAAe,CAAA,CAAE,OAAA,CAAQ,eAAC,CAAA,CAAA,CAAiB,GAAC,CAAG,MAAC,CAAM;wBA+B5D,IAAM,gBAAgB,CA9BhB,YAAA,GAAa,CAAA,CAAE,OAAA,CAAQ,aAAC,CAAA,CAAA,CAAe,KAAC,CAAK,MAAC,CAAM;wBA+B1D,IAAM,gBAAgB,CA9BhB,OAAA,GAAQ,CAAA,CAAE,OAAA,CAAQ,eAAC,CAAA,CAAA,CAAiB,KAAC,CAAK,IAAC,CAAI,OAAC,CAAO;wBA+B7D,IAAM,gBAAgB,CA9BhB,SAAA,GAAY,OAAA,CAAQ,KAAC,CAAK,gBAAA,CAAA,CAAA,CAAA,cAAC,CAAA,CAAA,EAAgB,gBAAA,CAAA,CAAA,CAAC,YAAA,CAAA,CAAA,CAAe,CAAC;wBA+BlE,IAAI,CA9BC,YAAC,CAAY,EAAC,CAAE,GAAG,SAAA,CAAU;oBA+BpC,CAAC;gBACH,CAAC;gBACD,KAAK,CAAC;YAER;gBACE,IAAI,CA9BC,SAAC,CAAS,OAAC,EAAQ,gBAAA,CAAiB,CAAC;QA+B9C,CAAC;IACH,CAAC;IACH;;;;OAIG;IACH,kCAlCG,GAkCH,UAlCiB,SAAe,EAAU,OAAS,IAAU,CAAA;IAmC7D;;;;OAIG;IACH,6BAtCG,GAsCH,UAtCY,IAAU,EAAK,OAAS,IAAU,CAAA;IAuC9C;;;;OAIG;IACH,gCA1CG,GA0CH,UA1Ce,OAAa,EAAQ,OAAS,IAAU,CAAA;IA2CvD;;;;OAIG;IACH,kCA9CG,GA8CH,UA9CiB,SAAe,EAAU,OAAS,IAAU,CAAA;IA+C7D;;;;OAIG;IACH,sCAlDG,GAkDH,UAlDqB,aAAmB,EAAc,OAAS,IAAU,CAAA;IAmDzE;;;;OAIG;IArDO,6BAAA,GAuDV,UAvDoB,IAAU,EAAK,OAAS;QAwDxC,IAAI,CAvDC,OAAC,CAAO,IAAC,CAAI,IAAI,SAAA,CAAU,gBAAA,CAAA,CAAA,CAAA,IAAC,CAAI,UAAC,CAAA,CAAA,EAAa,OAAA,CAAQ,CAAC,CAAC;IAwD/D,CAAC;IACH,gBAvDC;AAuDD,CA5GA,AAqDC,IAAA;AAyDD;IACA,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;IACjC,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;IAC5B,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;IACjC,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;AAC5B,CAAC;AAED;IAAA;IA0FA,CAlGC;IAUD;;;;OAIG;IACH,2BArEG,GAqEH,UArEU,OAAS,EAAQ,GAAK;QAsE5B,IAAM,gBAAgB,CArEhB,MAAA,GAAS,IAAI,SAAA,EAAU,CAAE,KAAC,CAAK,OAAC,EAAQ,GAAA,EAAK,IAAA,CAAK,CAAC;QAsEzD,IAAI,CArEC,OAAC,GAAS,MAAA,CAAO,MAAC,CAAM;QAuE7B,IAAM,gBAAgB,CArEhB,SAAA,GAAY,IAAA,CAAK,OAAC,CAAO,MAAC,GAAQ,CAAA,IAAK,MAAA,CAAO,SAAC,CAAS,MAAC,IAAS,CAAA;YAsEpE,EAAE;YACF,EAAE,CArEC,QAAC,CAAQ,IAAC,EAAK,MAAA,CAAO,SAAC,CAAS,CAAC;QAuExC,MAAM,CArEC;YAsEL,SAAS,WAAA;YACT,MAAM,EArEE,IAAA,CAAK,OAAC;SAsEf,CArEC;IAsEJ,CAAC;IACH;;;;OAIG;IACH,6BAzEG,GAyEH,UAzEY,IAAU,EAAK,OAAS,IAAO,MAAA,CAAO,IAAI,IAAA,CAAK,IAAC,CAAI,IAAC,CAAI,KAAC,EAAK,gBAAA,CAAA,CAAA,CAAC,IAAA,CAAK,UAAC,CAAA,CAAA,CAAY,CAAC,CAAC,CAAA;IA0EhG;;;;OAIG;IACH,kCA7EG,GA6EH,UA7EiB,GAAS,EAAU,OAAS;QA8EzC,IAAM,gBAAgB,CA7EhB,OAAA,GAAwC,EAAA,CAAG;QA+EjD,EAAE,CA7EC,QAAC,CAAQ,IAAC,EAAK,GAAA,CAAI,KAAC,CAAK,CAAC,OAAC,CAAO,UAAA,CAAC;YA8EpC,OAAO,CA7EC,CAAC,CAAC,KAAC,CAAK,GAAG,IAAI,IAAA,CAAK,SAAC,CAAS,CAAC,CAAC,KAAC,EAAM,GAAA,CAAI,UAAC,CAAU,CAAC;QA8EjE,CAAC,CA7EC,CAAC;QA+EH,MAAM,CA7EC,IAAI,IAAA,CAAK,GAAC,CAAG,GAAC,CAAG,WAAC,EAAY,GAAA,CAAI,IAAC,EAAK,OAAA,EAAS,GAAA,CAAI,UAAC,CAAU,CAAC;IA8E1E,CAAC;IACH;;;;OAIG;IACH,sCAjFG,GAiFH,UAjFqB,OAAa,EAAc,OAAS;QAkFrD,MAAM,CAjFC;YAkFL,KAAK,EAjFE,OAAA,CAAQ,KAAC;YAkFhB,KAAK,EAjFE,EAAA,CAAG,QAAC,CAAQ,IAAC,EAAK,OAAA,CAAQ,UAAC,CAAU;SAkF7C,CAjFC;IAkFJ,CAAC;IACH;;;;OAIG;IACH,gCArFG,GAqFH,UArFe,EAAQ,EAAQ,OAAS;QAsFpC,EAAE,CAAC,CAAC,EArFC,CAAE,IAAC,KAAQ,gBAAA,CAAiB,CAAC,CAAA;YAsFhC,IAAM,gBAAgB,CArFhB,QAAA,GAAW,EAAA,CAAG,KAAC,CAAK,IAAC,CAAI,UAAC,IAAC,IAAQ,OAAA,IAAA,CAAK,IAAC,KAAQ,MAAA,EAAd,CAAc,CAAO,CAAC;YAsF/D,EAAE,CAAC,CAAC,QArFC,CAAQ,CAAC,CAAA;gBAsFZ,MAAM,CArFC,IAAI,IAAA,CAAK,WAAC,CAAW,EAAC,EAAG,QAAA,CAAS,KAAC,EAAK,gBAAA,CAAA,CAAA,CAAC,EAAA,CAAG,UAAC,CAAA,CAAA,CAAY,CAAC;YAsFnE,CAAC;YAED,IAAI,CArFC,SAAC,CAAS,EAAC,EAAG,MAAA,gBAAK,oCAAgB,CAA+B,CAAC;QAsF1E,CAAC;QArFC,IAAA,CAAK,CAAA;YAsFL,IAAI,CArFC,SAAC,CAAS,EAAC,EAAG,gBAAA,CAAiB,CAAC;QAsFvC,CAAC;QACD,MAAM,CArFC,IAAA,CAAK;IAsFd,CAAC;IACH;;;;OAIG;IACH,gCAzFG,GAyFH,UAzFe,OAAa,EAAQ,OAAS,IAAK,CAAA;IA0FlD;;;;OAIG;IACH,kCA7FG,GA6FH,UA7FiB,SAAe,EAAU,OAAS,IAAK,CAAA;IA8FxD;;;;OAIG;IAhGO,6BAAA,GAkGV,UAlGoB,IAAU,EAAK,OAAS;QAmGxC,IAAI,CAlGC,OAAC,CAAO,IAAC,CAAI,IAAI,SAAA,CAAU,gBAAA,CAAA,CAAA,CAAA,IAAC,CAAI,UAAC,CAAA,CAAA,EAAa,OAAA,CAAQ,CAAC,CAAC;IAmG/D,CAAC;IACH,gBAlGC;AAkGD,CA1FA,AARC,IAAA;AAoGD;IACA,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC;AAC5B,CAAC","file":"xtb.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {PlaceholderMapper, Serializer, SimplePlaceholderMapper} from './serializer';\nimport {digest, toPublicName} from './xmb';\n\nconst /** @type {?} */ _TRANSLATIONS_TAG = 'translationbundle';\nconst /** @type {?} */ _TRANSLATION_TAG = 'translation';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nexport class Xtb extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string { throw new Error('Unsupported'); }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xtb to xml nodes\n    const /** @type {?} */ xtbParser = new XtbParser();\n    const {locale, msgIdToHtml, errors} = xtbParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n\n    // Because we should be able to load xtb files that rely on features not supported by angular,\n    // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n    // converted\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const /** @type {?} */ valueFn = function() {\n        const {i18nNodes, errors} = converter.convert(msgIdToHtml[msgId], url);\n        if (errors.length) {\n          throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n        }\n        return i18nNodes;\n      };\n      createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n    });\n\n    if (errors.length) {\n      throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: /** @type {?} */(( locale)), i18nNodesByMsgId};\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new SimplePlaceholderMapper(message, toPublicName);\n  }\n}\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages: any, id: string, valueFn: () => any) {\n  Object.defineProperty(messages, id, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      const /** @type {?} */ value = valueFn();\n      Object.defineProperty(messages, id, {enumerable: true, value});\n      return value;\n    },\n    set: _ => { throw new Error('Could not overwrite an XTB translation'); },\n  });\n}\nclass XtbParser implements ml.Visitor {\nprivate _bundleDepth: number;\nprivate _errors: I18nError[];\nprivate _msgIdToHtml: {[msgId: string]: string};\nprivate _locale: string|null = null;\n/**\n * @param {?} xtb\n * @param {?} url\n * @return {?}\n */\nparse(xtb: string, url: string) {\n    this._bundleDepth = 0;\n    this._msgIdToHtml = {};\n\n    // We can not parse the ICU messages at this point as some messages might not originate\n    // from Angular that could not be lex'd.\n    const /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _TRANSLATIONS_TAG:\n        this._bundleDepth++;\n        if (this._bundleDepth > 1) {\n          this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n        }\n        const /** @type {?} */ langAttr = element.attrs.find((attr) => attr.name === 'lang');\n        if (langAttr) {\n          this._locale = langAttr.value;\n        }\n        ml.visitAll(this, element.children, null);\n        this._bundleDepth--;\n        break;\n\n      case _TRANSLATION_TAG:\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            const /** @type {?} */ innerTextStart = /** @type {?} */(( element.startSourceSpan)).end.offset;\n            const /** @type {?} */ innerTextEnd = /** @type {?} */(( element.endSourceSpan)).start.offset;\n            const /** @type {?} */ content = /** @type {?} */(( element.startSourceSpan)).start.file.content;\n            const /** @type {?} */ innerText = content.slice( /** @type {?} */((innerTextStart)), /** @type {?} */(( innerTextEnd)));\n            this._msgIdToHtml[id] = innerText;\n          }\n        }\n        break;\n\n      default:\n        this._addError(element, 'Unexpected tag');\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XtbParser_tsickle_Closure_declarations() {\n/** @type {?} */\nXtbParser.prototype._bundleDepth;\n/** @type {?} */\nXtbParser.prototype._errors;\n/** @type {?} */\nXtbParser.prototype._msgIdToHtml;\n/** @type {?} */\nXtbParser.prototype._locale;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} message\n * @param {?} url\n * @return {?}\n */\nconvert(message: string, url: string) {\n    const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        ml.visitAll(this, xmlIcu.rootNodes);\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, /** @type {?} */(( text.sourceSpan))); }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach(c => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Placeholder|null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'name');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, /** @type {?} */(( el.sourceSpan)));\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n    return null;\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n"]}