{"version":3,"sources":["../../../../../../packages/compiler/src/i18n/message_bundle.ts"],"names":[],"mappings":"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","file":"message_bundle.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseError} from '../parse_util';\n\nimport {extractMessages} from './extractor_merger';\nimport * as i18n from './i18n_ast';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\nprivate _messages: i18n.Message[] = [];\n/**\n * @param {?} _htmlParser\n * @param {?} _implicitTags\n * @param {?} _implicitAttrs\n * @param {?=} _locale\n */\nconstructor(\nprivate _htmlParser: HtmlParser,\nprivate _implicitTags: string[],\nprivate _implicitAttrs: {[k: string]: string[]},\nprivate _locale: string|null = null) {}\n/**\n * @param {?} html\n * @param {?} url\n * @param {?} interpolationConfig\n * @return {?}\n */\nupdateFromTemplate(html: string, url: string, interpolationConfig: InterpolationConfig):\n      ParseError[] {\n    const /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n\n    if (htmlParserResult.errors.length) {\n      return htmlParserResult.errors;\n    }\n\n    const /** @type {?} */ i18nParserResult = extractMessages(\n        htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\n    if (i18nParserResult.errors.length) {\n      return i18nParserResult.errors;\n    }\n\n    this._messages.push(...i18nParserResult.messages);\n    return [];\n  }\n/**\n * @return {?}\n */\ngetMessages(): i18n.Message[] { return this._messages; }\n/**\n * @param {?} serializer\n * @param {?=} filterSources\n * @return {?}\n */\nwrite(serializer: Serializer, filterSources?: (path: string) => string): string {\n    const /** @type {?} */ messages: {[id: string]: i18n.Message} = {};\n    const /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n\n    // Deduplicate messages based on their ID\n    this._messages.forEach(message => {\n      const /** @type {?} */ id = serializer.digest(message);\n      if (!messages.hasOwnProperty(id)) {\n        messages[id] = message;\n      } else {\n        messages[id].sources.push(...message.sources);\n      }\n    });\n\n    // Transform placeholder names using the serializer mapping\n    const /** @type {?} */ msgList = Object.keys(messages).map(id => {\n      const /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n      const /** @type {?} */ src = messages[id];\n      const /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n      let /** @type {?} */ transformedMessage = new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n      transformedMessage.sources = src.sources;\n      if (filterSources) {\n        transformedMessage.sources.forEach(\n            (source: i18n.MessageSpan) => source.filePath = filterSources(source.filePath));\n      }\n      return transformedMessage;\n    });\n\n    return serializer.write(msgList, this._locale);\n  }\n}\n\nfunction MessageBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageBundle.prototype._messages;\n/** @type {?} */\nMessageBundle.prototype._htmlParser;\n/** @type {?} */\nMessageBundle.prototype._implicitTags;\n/** @type {?} */\nMessageBundle.prototype._implicitAttrs;\n/** @type {?} */\nMessageBundle.prototype._locale;\n}\n\nclass MapPlaceholderNames extends i18n.CloneVisitor {\n/**\n * @param {?} nodes\n * @param {?} mapper\n * @return {?}\n */\nconvert(nodes: i18n.Node[], mapper: PlaceholderMapper): i18n.Node[] {\n    return mapper ? nodes.map(n => n.visit(this, mapper)) : nodes;\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, mapper: PlaceholderMapper): i18n.TagPlaceholder {\n    const /** @type {?} */ startName = /** @type {?} */(( mapper.toPublicName(ph.startName)));\n    const /** @type {?} */ closeName = ph.closeName ? /** @type {?} */(( mapper.toPublicName(ph.closeName))) : ph.closeName;\n    const /** @type {?} */ children = ph.children.map(n => n.visit(this, mapper));\n    return new i18n.TagPlaceholder(\n        ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, mapper: PlaceholderMapper): i18n.Placeholder {\n    return new i18n.Placeholder(ph.value, /** @type {?} */(( mapper.toPublicName(ph.name))), ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, mapper: PlaceholderMapper): i18n.IcuPlaceholder {\n    return new i18n.IcuPlaceholder(ph.value, /** @type {?} */(( mapper.toPublicName(ph.name))), ph.sourceSpan);\n  }\n}\n"]}