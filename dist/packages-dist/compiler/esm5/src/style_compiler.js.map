{"version":3,"sources":["../../../../../packages/compiler/src/style_compiler.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,iBAAE,EAAiB,MAAA,eAAA,CAAA;AAO1B,OALO,EAAsD,yBAAA,EAA2B,mBAAA,EAAqB,cAAA,EAAe,MAAA,oBAAA,CAAA;AAM5H,OALO,EAAA,kBAAE,EAAkB,MAAA,cAAA,CAAA;AAM3B,OALO,KAAK,CAAA,MAAA,qBAAA,CAAA;AAMZ,OALO,EAAA,SAAE,EAAS,MAAA,cAAA,CAAA;AAMlB,OALO,EAAA,WAAE,EAAW,MAAA,gBAAA,CAAA;AAQpB,IAAM,gBAAS,CALT,kBAAA,GAAqB,QAAA,CAAS;AAMpC,IAAM,gBAAa,CALb,SAAA,GAAY,aAAA,kBAA8B,CAAE;AAMlD,IAAE,gBAAA,CALI,YAAA,GAAe,gBAAA,kBAAiC,CAAE;AAMxD;IACA;;;;OAIG;IACH,iCARa,IAAM,EAAe,SAAW,EAAe,QAA0B;QAAzE,SAAA,GAAA,IAAA,CAAM;QAAe,cAAA,GAAA,SAAA,CAAW;QAAe,aAAA,GAAA,QAAA,CAA0B;IAAM,CAAA;IAY5F,8BAXC;AAWD,CAVA,AADC,IAAA;;AAaD;IACA,gBAAgB;IAChB,uBAAoB,CAAA,SAAU,CAAA,IAAA,CAAA;IAC9B,gBAAU;IACV,uBAAiB,CAAA,SAAe,CAAA,SAAA,CAAA;IAChC,gBAAgB;IAChB,uBAAkB,CAAA,SAAU,CAAM,QAAC,CAAA;AACnC,CAAC;AAED;IACA;;;;;;OAMG;IACH,4BA1Ba,SAAW,EAAsB,SAAW,EAC5C,YAAsC,EAAU,SAAW,EAC3D,IAAM;QAFN,cAAA,GAAA,SAAA,CAAW;QAAsB,cAAA,GAAA,SAAA,CAAW;QAC5C,iBAAA,GAAA,YAAA,CAAsC;QAAU,cAAA,GAAA,SAAA,CAAW;QAC3D,SAAA,GAAA,IAAA,CAAM;IAA2B,CAAA;IA8B9C,yBA7BC;AA6BD,CAdA,AAfC,IAAA;;AA+BD;IACA,gBAAe;IACf,kBAAU,CAAA,SAAkB,CAAA,SAAG,CAAA;IAC/B,gBAAgB;IAChB,kBAAU,CAAA,SAAc,CAAA,SAAA,CAAA;IACxB,gBAAgB;IAChB,kBAAY,CAAA,SAAY,CAAA,YAAiB,CAAC;IAC1C,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,SAAQ,CAAA;IACrC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAA,IAAK,CAAC;AAClC,CAAC;AAED;IAEA;;OAEG;IACH,uBA3CsB,YAAc;QAAd,iBAAA,GAAA,YAAA,CAAc;QAF1B,eAAA,GAAwB,IAAI,SAAA,EAAU,CAAE;IAED,CAAA;IA4CjD;;;;OAIG;IACH,wCA/CG,GA+CH,UA/CmB,SAAW,EAAe,IAAM;QAgD/C,IAAM,gBAAgB,CA/ChB,QAAA,GAAS,CAAA,CAAE,IAAA,CAAK,QAAC,CAAA,CAAA,CAAU;QAgDjC,MAAM,CA/CC,IAAA,CAAK,cAAC,CAgDT,SAAQ,EA/CG,IAAA,EAAM,IAAI,yBAAA,CAA0B;YAgDnD,MAAA,EA/Cc,QAAA,CAAS,MAAC;YAgDlB,SAAS,EA/CE,QAAA,CAAS,SAAC;YAX7B,SAAA,EAYmB,mBAAA,CAAoB,IAAC,CAAI,IAAC,CAAI;SAgD1C,CA/CC,EAgDF,IAAI,CA/CC,CAAC;IAgDZ,CAAC;IACH;;;;;OAKG;IACH,qCApDG,GAoDH,UACM,SApDW,EAAe,IAAM,EA8ClC,UA7Cc;QAqDd,MAPK,CA7CE,IAAA,CAAK,cAAC,CAAc,SAAC,EAAU,IAAA,EAAM,UAAA,EAAY,KAAA,CAAM,CAAC;IA8CjE,CAAA;IAQF;;;OAGG;IACH,sCAvDG,GAuDH,UAvDiB,IAAM;QAwDnB,MAAM,CAAiB,CAAC,CAvDjB,IAAA,CAAK,QAAC,CAAA,CAAA,CAAU,aAAC,KAAiB,iBAAA,CAAkB,QAAC,CAAQ;IAwDtE,CAAC;IACH;;;;;;OAMG;IA5DO,sCAAA,GA8DV,UACM,SA9DW,EAAe,IAAM,EA+DhC,UA9DY,EAA2B,qBAAuB;QA4DpE,iBA0BG;QAvBC,IAAM,gBAAgB,CA9DhB,IAAA,GAAO,IAAA,CAAK,cAAC,CAAc,IAAC,CAAI,CAAC;QA+DvC,IAAM,gBAAgB,CA9DhB,gBAAA,GA+DF,UAAU,CA9DC,MAAC,CAAM,GAAC,CAAG,UAAA,UAAC,IAAa,OAAA,CAAA,CAAE,OAAC,CAAO,KAAC,CAAI,aAAC,CAAa,UAAC,EAAW,IAAA,CAAK,CAAC,EAA/C,CAA+C,CAAC,CAAC;QA+DzF,IAAM,gBAAgB,CA9DhB,YAAA,GAA0C,EAAA,CAAG;QA+DnD,UAAU,CA9DC,SAAC,CAAS,OAAC,CAAO,UAAC,QAAC;YA+D7B,IAAM,gBAAgB,CA9DhB,SAAA,GAAY,gBAAA,CAAiB,MAAC,CAAM;YA+D1C,+CAA+C;YAC/C,gBAAgB,CA9DC,IAAC,CAAI,gBAAA,CAAA,CAAA,CAAA,IAAC,CAAA,CAAA,CAAM,CAAC;YA+D9B,YAAY,CA9DC,IAAC,CAAI,IAAI,uBAAA,CA+DlB,gBAAgB,CA9DC,IAAC,CAAI,EAAE,QAAA,EA+DxB,UAAC,KA9DC,IAAS,OAAA,gBAAA,CAAiB,SAAC,CAAS,GAAG,SAAA,CAAU,UAAC,CAAU,KAAC,CAAK,EAAzD,CAAyD,CAAC,CAAC,CAAC;QA+D7E,CAAC,CA9DC,CAAC;QA+DH,wFAAwF;QACxF,iCAAiC;QACjC,IAAM,gBAAgB,CA9DhB,SAAA,GAAY,gBAAA,CAAiB,qBAAC,GAAuB,IAAA,GAAO,IAAA,CAAK,CAAC;QA+DxE,IAAM,gBAAgB,CA9DhB,IAAA,GAAO,CAAA,CAAE,QAAC,CAAQ,SAAC,CAAS;aA+DhB,GA9DC,CAAG,CAAC,CAAC,UAAC,CA+DJ,gBAAgB,EA9DE,IAAI,CAAA,CAAE,SAAC,CAAS,CAAC,CAAC,YAAC,EAAa,CAAA,CAAE,CAAC,YAAC,CAAY,KAAC,CAAK,CAAC,CAAC,CAAC;aA+D9E,UA9DC,CAAU,IAAC,EAAK,qBAAA,GAAwB,CAAA,CAAE,CAAC,YAAC,CAAY,KAAC,CAAK,GAAG;YA+DjE,CAAC,CA9DC,YAAC,CAAY,KAAC,EAAM,CAAA,CAAE,YAAC,CAAY,QAAC;SA+DvC,CA9DC,CAAC;QA+DpB,SAAS,CA9DC,UAAC,CAAU,IAAC,CAAI,IAAC,CAAI,CAAC;QA+DhC,MAAM,CA9DC,IAAI,kBAAA,CAAmB,SAAC,EAAU,SAAA,EAAW,YAAA,EAAc,IAAA,EAAM,UAAA,CAAW,CAAC;IA+DtF,CAAC;IACH;;;;OAIG;IAjEO,qCAAA,GAmEV,UAnEwB,KAAO,EAAQ,IAAM;QAoEzC,MAAM,CAnEC,IAAA,GAAO,IAAA,CAAK,UAAC,CAAU,WAAC,CAAW,KAAC,EAAM,YAAA,EAAc,SAAA,CAAU,GAAG,KAAA,CAAM;IAoEpF,CAAC;IAQH,oBA1EC;AA0ED,CA1FA,AAgBC;;AAAM,wBAAA,GAA+C;IAoEtD,EAnEE,IAAA,EAAM,kBAAA,EA3DN;CA+HD,CAnEC;AAoEF,kBAAkB;AAlEX,4BAAA,GAA4F,cAAM,OAAA;IAoEzG,EAAC,IAnEC,EAAK,WAAA,GAAY;CAoElB,EArEwG,CAqExG,CAnEC;AAsEF;IACA,gBAAgB;IAChB,aAAa,CAAC,UAAU,CAAC;IACzB;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;IAC7B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;IACnC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC;AACrC,CAAC;AAED;;;GAGG;AACH,0BA5F0B,SAAsC;IA6F9D,IAAI,gBAAgB,CA5FhB,MAAA,GAAS,QAAA,CAAS;IA6FtB,EAAE,CAAC,CAAC,SA5FC,CAAS,CAAC,CAAA;QA6Fb,MAAM,IA5FI,MAAA,cAAK,CAAc,SAAC,CAAS,IAAC,CAAK,CAAE;IA6FjD,CAAC;IACD,MAAM,CA5FC,MAAA,CAAO;AA6FhB,CAAC","file":"style_compiler.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileStylesheetMetadata, identifierModuleUrl, identifierName} from './compile_metadata';\nimport {CompilerInjectable} from './injectable';\nimport * as o from './output/output_ast';\nimport {ShadowCss} from './shadow_css';\nimport {UrlResolver} from './url_resolver';\nimport {OutputContext} from './util';\n\nconst /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\nconst /** @type {?} */ HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst /** @type {?} */ CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nexport class StylesCompileDependency {\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} setValue\n */\nconstructor(\npublic name: string,\npublic moduleUrl: string,\npublic setValue: (value: any) => void) {}\n}\n\nfunction StylesCompileDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCompileDependency.prototype.name;\n/** @type {?} */\nStylesCompileDependency.prototype.moduleUrl;\n/** @type {?} */\nStylesCompileDependency.prototype.setValue;\n}\n\nexport class CompiledStylesheet {\n/**\n * @param {?} outputCtx\n * @param {?} stylesVar\n * @param {?} dependencies\n * @param {?} isShimmed\n * @param {?} meta\n */\nconstructor(\npublic outputCtx: OutputContext,\npublic stylesVar: string,\npublic dependencies: StylesCompileDependency[],\npublic isShimmed: boolean,\npublic meta: CompileStylesheetMetadata) {}\n}\n\nfunction CompiledStylesheet_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiledStylesheet.prototype.outputCtx;\n/** @type {?} */\nCompiledStylesheet.prototype.stylesVar;\n/** @type {?} */\nCompiledStylesheet.prototype.dependencies;\n/** @type {?} */\nCompiledStylesheet.prototype.isShimmed;\n/** @type {?} */\nCompiledStylesheet.prototype.meta;\n}\n\nexport class StyleCompiler {\nprivate _shadowCss: ShadowCss = new ShadowCss();\n/**\n * @param {?} _urlResolver\n */\nconstructor(private _urlResolver: UrlResolver) {}\n/**\n * @param {?} outputCtx\n * @param {?} comp\n * @return {?}\n */\ncompileComponent(outputCtx: OutputContext, comp: CompileDirectiveMetadata): CompiledStylesheet {\n    const /** @type {?} */ template = /** @type {?} */(( comp.template));\n    return this._compileStyles(\n        outputCtx, comp, new CompileStylesheetMetadata({\n          styles: template.styles,\n          styleUrls: template.styleUrls,\n          moduleUrl: identifierModuleUrl(comp.type)\n        }),\n        true);\n  }\n/**\n * @param {?} outputCtx\n * @param {?} comp\n * @param {?} stylesheet\n * @return {?}\n */\ncompileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata): CompiledStylesheet {\n    return this._compileStyles(outputCtx, comp, stylesheet, false);\n  }\n/**\n * @param {?} comp\n * @return {?}\n */\nneedsStyleShim(comp: CompileDirectiveMetadata): boolean {\n    return /** @type {?} */(( comp.template)).encapsulation === ViewEncapsulation.Emulated;\n  }\n/**\n * @param {?} outputCtx\n * @param {?} comp\n * @param {?} stylesheet\n * @param {?} isComponentStylesheet\n * @return {?}\n */\n\nprivate _compileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata, isComponentStylesheet: boolean): CompiledStylesheet {\n    const /** @type {?} */ shim = this.needsStyleShim(comp);\n    const /** @type {?} */ styleExpressions: o.Expression[] =\n        stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n    const /** @type {?} */ dependencies: StylesCompileDependency[] = [];\n    stylesheet.styleUrls.forEach((styleUrl) => {\n      const /** @type {?} */ exprIndex = styleExpressions.length;\n      // Note: This placeholder will be filled later.\n      styleExpressions.push( /** @type {?} */((null)));\n      dependencies.push(new StylesCompileDependency(\n          getStylesVarName(null), styleUrl,\n          (value) => styleExpressions[exprIndex] = outputCtx.importExpr(value)));\n    });\n    // styles variable contains plain strings and arrays of other styles arrays (recursive),\n    // so we set its type to dynamic.\n    const /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n    const /** @type {?} */ stmt = o.variable(stylesVar)\n                     .set(o.literalArr(\n                         styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n                     .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n                       o.StmtModifier.Final, o.StmtModifier.Exported\n                     ]);\n    outputCtx.statements.push(stmt);\n    return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n  }\n/**\n * @param {?} style\n * @param {?} shim\n * @return {?}\n */\n\nprivate _shimIfNeeded(style: string, shim: boolean): string {\n    return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: UrlResolver, },\n];\n}\n\nfunction StyleCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStyleCompiler.ctorParameters;\n/** @type {?} */\nStyleCompiler.prototype._shadowCss;\n/** @type {?} */\nStyleCompiler.prototype._urlResolver;\n}\n\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component: CompileDirectiveMetadata | null): string {\n  let /** @type {?} */ result = `styles`;\n  if (component) {\n    result += `_${identifierName(component.type)}`;\n  }\n  return result;\n}\n"]}