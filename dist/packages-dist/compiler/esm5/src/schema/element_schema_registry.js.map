{"version":3,"sources":["../../../../../../packages/compiler/src/schema/element_schema_registry.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAWH;;GAEG;AACH;IAAA;IAcA,CAPC;IAOD,4BAPC;AAOD,CAdA,AAOC,IAAA;;AASD;IAEA;;;;;;OAMG;IACH,qBAAqB,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,OAAO,EAAE,QAAQ,EAAE,WAAW,IAAG,CAAC,CAAC;IAE1F;;;;;OAKG;IACH,qBAAqB,CAAC,SAAS,CAAC,UAAU,GAAG,UAAS,OAAO,EAAE,WAAW,IAAG,CAAC,CAAC;IAE/E;;;;;;OAMG;IACH,qBAAqB,CAAC,SAAS,CAAC,eAAe,GAAG,UAAS,WAAW,EAAE,QAAQ,EAAE,WAAW,IAAG,CAAC,CAAC;IAElG;;;OAGG;IACH,qBAAqB,CAAC,SAAS,CAAC,oBAAoB,GAAG,cAAY,CAAC,CAAC;IAErE;;;;OAIG;IACH,qBAAqB,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAS,QAAQ,IAAG,CAAC,CAAC;IAE1E;;;OAGG;IACH,qBAAqB,CAAC,SAAS,CAAC,8BAA8B,GAAG,cAAY,CAAC,CAAC;IAE/E;;;;OAIG;IACH,qBAAqB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,IAAI,IAAG,CAAC,CAAC;IAErE;;;;OAIG;IACH,qBAAqB,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAS,IAAI,IAAG,CAAC,CAAC;IAEtE;;;;OAIG;IACH,qBAAqB,CAAC,SAAS,CAAC,+BAA+B,GAAG,UAAS,QAAQ,IAAG,CAAC,CAAC;IAExF;;;;;;OAMG;IACH,qBAAqB,CAAC,SAAS,CAAC,4BAA4B,GAAG,UAAS,aAAa,EAAE,gBAAgB,EAAE,GAAG,IAAG,CAAC,CAAC;AACjH,CAAC","file":"element_schema_registry.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SchemaMetadata, SecurityContext} from '@angular/core';\n/**\n * @abstract\n */\nexport abstract class ElementSchemaRegistry {\n  abstract hasProperty(tagName: string, propName: string, schemaMetas: SchemaMetadata[]): boolean;\n  abstract hasElement(tagName: string, schemaMetas: SchemaMetadata[]): boolean;\n  abstract securityContext(elementName: string, propName: string, isAttribute: boolean):\n      SecurityContext;\n  abstract allKnownElementNames(): string[];\n  abstract getMappedPropName(propName: string): string;\n  abstract getDefaultComponentElementName(): string;\n  abstract validateProperty(name: string): {error: boolean, msg?: string};\n  abstract validateAttribute(name: string): {error: boolean, msg?: string};\n  abstract normalizeAnimationStyleProperty(propName: string): string;\n  abstract normalizeAnimationStyleValue(\n      camelCaseProp: string, userProvidedProp: string,\n      val: string|number): {error: string, value: string};\n}\n\nfunction ElementSchemaRegistry_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} tagName\n * @param {?} propName\n * @param {?} schemaMetas\n * @return {?}\n */\nElementSchemaRegistry.prototype.hasProperty = function(tagName, propName, schemaMetas) {};\n\n/**\n * @abstract\n * @param {?} tagName\n * @param {?} schemaMetas\n * @return {?}\n */\nElementSchemaRegistry.prototype.hasElement = function(tagName, schemaMetas) {};\n\n/**\n * @abstract\n * @param {?} elementName\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nElementSchemaRegistry.prototype.securityContext = function(elementName, propName, isAttribute) {};\n\n/**\n * @abstract\n * @return {?}\n */\nElementSchemaRegistry.prototype.allKnownElementNames = function() {};\n\n/**\n * @abstract\n * @param {?} propName\n * @return {?}\n */\nElementSchemaRegistry.prototype.getMappedPropName = function(propName) {};\n\n/**\n * @abstract\n * @return {?}\n */\nElementSchemaRegistry.prototype.getDefaultComponentElementName = function() {};\n\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nElementSchemaRegistry.prototype.validateProperty = function(name) {};\n\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nElementSchemaRegistry.prototype.validateAttribute = function(name) {};\n\n/**\n * @abstract\n * @param {?} propName\n * @return {?}\n */\nElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function(propName) {};\n\n/**\n * @abstract\n * @param {?} camelCaseProp\n * @param {?} userProvidedProp\n * @param {?} val\n * @return {?}\n */\nElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function(camelCaseProp, userProvidedProp, val) {};\n}\n\n"]}