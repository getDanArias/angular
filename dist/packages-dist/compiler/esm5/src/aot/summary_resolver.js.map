{"version":3,"sources":["../../../../../../packages/compiler/src/aot/summary_resolver.ts"],"names":[],"mappings":"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","file":"summary_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Summary, SummaryResolver} from '../summary_resolver';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {deserializeSummaries} from './summary_serializer';\nimport {ngfactoryFilePath, stripGeneratedFileSuffix, summaryFileName} from './util';\n/**\n * @record\n */\nexport function AotSummaryResolverHost() {}\n\n\nfunction AotSummaryResolverHost_tsickle_Closure_declarations() {\n/**\n * Loads an NgModule/Directive/Pipe summary file\n * @type {?}\n */\nAotSummaryResolverHost.prototype.loadSummary;\n/**\n * Returns whether a file is a source file or not.\n * @type {?}\n */\nAotSummaryResolverHost.prototype.isSourceFile;\n/**\n * Returns the output file path of a source file.\n * E.g.\n * `some_file.ts` -> `some_file.d.ts`\n * @type {?}\n */\nAotSummaryResolverHost.prototype.getOutputFileName;\n}\n\n\nexport interface AotSummaryResolverHost {\n  /**\n   * Loads an NgModule/Directive/Pipe summary file\n   */\n  loadSummary(filePath: string): string|null;\n\n  /**\n   * Returns whether a file is a source file or not.\n   */\n  isSourceFile(sourceFilePath: string): boolean;\n  /**\n   * Returns the output file path of a source file.\n   * E.g.\n   * `some_file.ts` -> `some_file.d.ts`\n   */\n  getOutputFileName(sourceFilePath: string): string;\n}\nexport class AotSummaryResolver implements SummaryResolver<StaticSymbol> {\nprivate summaryCache = new Map<StaticSymbol, Summary<StaticSymbol>>();\nprivate loadedFilePaths = new Set<string>();\nprivate importAs = new Map<StaticSymbol, StaticSymbol>();\n/**\n * @param {?} host\n * @param {?} staticSymbolCache\n */\nconstructor(private host: AotSummaryResolverHost,\nprivate staticSymbolCache: StaticSymbolCache) {}\n/**\n * @param {?} filePath\n * @return {?}\n */\nisLibraryFile(filePath: string): boolean {\n    // Note: We need to strip the .ngfactory. file path,\n    // so this method also works for generated files\n    // (for which host.isSourceFile will always return false).\n    return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\ngetLibraryFileName(filePath: string) { return this.host.getOutputFileName(filePath); }\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nresolveSummary(staticSymbol: StaticSymbol): Summary<StaticSymbol> {\n    staticSymbol.assertNoMembers();\n    let /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n    if (!summary) {\n      this._loadSummaryFile(staticSymbol.filePath);\n      summary = /** @type {?} */(( this.summaryCache.get(staticSymbol)));\n    }\n    return summary;\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\ngetSymbolsOf(filePath: string): StaticSymbol[] {\n    this._loadSummaryFile(filePath);\n    return Array.from(this.summaryCache.keys()).filter((symbol) => symbol.filePath === filePath);\n  }\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\ngetImportAs(staticSymbol: StaticSymbol): StaticSymbol {\n    staticSymbol.assertNoMembers();\n    return /** @type {?} */(( this.importAs.get(staticSymbol)));\n  }\n/**\n * @param {?} summary\n * @return {?}\n */\naddSummary(summary: Summary<StaticSymbol>) { this.summaryCache.set(summary.symbol, summary); }\n/**\n * @param {?} filePath\n * @return {?}\n */\n\nprivate _loadSummaryFile(filePath: string) {\n    if (this.loadedFilePaths.has(filePath)) {\n      return;\n    }\n    this.loadedFilePaths.add(filePath);\n    if (this.isLibraryFile(filePath)) {\n      const /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n      let /** @type {?} */ json: string|null;\n      try {\n        json = this.host.loadSummary(summaryFilePath);\n      } catch ( /** @type {?} */e) {\n        console.error(`Error loading summary file ${summaryFilePath}`);\n        throw e;\n      }\n      if (json) {\n        const {summaries, importAs} = deserializeSummaries(this.staticSymbolCache, json);\n        summaries.forEach((summary) => this.summaryCache.set(summary.symbol, summary));\n        importAs.forEach((importAs) => {\n          this.importAs.set(\n              importAs.symbol,\n              this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n        });\n      }\n    }\n  }\n}\n\nfunction AotSummaryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nAotSummaryResolver.prototype.summaryCache;\n/** @type {?} */\nAotSummaryResolver.prototype.loadedFilePaths;\n/** @type {?} */\nAotSummaryResolver.prototype.importAs;\n/** @type {?} */\nAotSummaryResolver.prototype.host;\n/** @type {?} */\nAotSummaryResolver.prototype.staticSymbolCache;\n}\n\n"]}