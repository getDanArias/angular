{"version":3,"sources":["../../../../../../packages/compiler/src/aot/static_reflector.ts"],"names":[],"mappings":"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","file":"static_reflector.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Component, ContentChild, ContentChildren, Directive, Host, HostBinding, HostListener, Inject, Injectable, Input, NgModule, Optional, Output, Pipe, Self, SkipSelf, ViewChild, ViewChildren, animate, group, keyframes, sequence, state, style, transition, trigger} from '@angular/core';\n\nimport {CompileSummaryKind} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport * as o from '../output/output_ast';\nimport {SummaryResolver} from '../summary_resolver';\nimport {syntaxError} from '../util';\n\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\n\nconst /** @type {?} */ ANGULAR_CORE = '@angular/core';\nconst /** @type {?} */ ANGULAR_ROUTER = '@angular/router';\n\nconst /** @type {?} */ HIDDEN_KEY = /^\\$.*\\$$/;\n\nconst /** @type {?} */ IGNORE = {\n  __symbolic: 'ignore'\n};\n\nconst /** @type {?} */ USE_VALUE = 'useValue';\nconst /** @type {?} */ PROVIDE = 'provide';\nconst /** @type {?} */ REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value: any): boolean {\n  return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector implements CompileReflector {\nprivate annotationCache = new Map<StaticSymbol, any[]>();\nprivate propertyCache = new Map<StaticSymbol, {[key: string]: any[]}>();\nprivate parameterCache = new Map<StaticSymbol, any[]>();\nprivate methodCache = new Map<StaticSymbol, {[key: string]: boolean}>();\nprivate conversionMap = new Map<StaticSymbol, (context: StaticSymbol, args: any[]) => any>();\nprivate injectionToken: StaticSymbol;\nprivate opaqueToken: StaticSymbol;\nprivate ROUTES: StaticSymbol;\nprivate ANALYZE_FOR_ENTRY_COMPONENTS: StaticSymbol;\nprivate annotationForParentClassWithSummaryKind = new Map<CompileSummaryKind, any[]>();\nprivate annotationNames = new Map<any, string>();\n/**\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?=} knownMetadataClasses\n * @param {?=} knownMetadataFunctions\n * @param {?=} errorRecorder\n */\nconstructor(\nprivate summaryResolver: SummaryResolver<StaticSymbol>,\nprivate symbolResolver: StaticSymbolResolver,\n      knownMetadataClasses: {name: string, filePath: string, ctor: any}[] = [],\n      knownMetadataFunctions: {name: string, filePath: string, fn: any}[] = [],\nprivate errorRecorder?: (error: any, fileName?: string) => void) {\n    this.initializeConversionMap();\n    knownMetadataClasses.forEach(\n        (kc) => this._registerDecoratorOrConstructor(\n            this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n    knownMetadataFunctions.forEach(\n        (kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Directive, [Directive, Component]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [Pipe]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [NgModule]);\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Injectable, [Injectable, Pipe, Directive, Component, NgModule]);\n    this.annotationNames.set(Directive, 'Directive');\n    this.annotationNames.set(Component, 'Component');\n    this.annotationNames.set(Pipe, 'Pipe');\n    this.annotationNames.set(NgModule, 'NgModule');\n    this.annotationNames.set(Injectable, 'Injectable');\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\ncomponentModuleUrl(typeOrFunc: StaticSymbol): string {\n    const /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n    return this.symbolResolver.getResourcePath(staticSymbol);\n  }\n/**\n * @param {?} ref\n * @return {?}\n */\nresolveExternalReference(ref: o.ExternalReference): StaticSymbol {\n    const /** @type {?} */ importSymbol = this.getStaticSymbol( /** @type {?} */((ref.moduleName)), /** @type {?} */(( ref.name)));\n    const /** @type {?} */ rootSymbol = this.findDeclaration( /** @type {?} */((ref.moduleName)), /** @type {?} */(( ref.name)));\n    if (importSymbol != rootSymbol) {\n      this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n    }\n    return rootSymbol;\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} name\n * @param {?=} containingFile\n * @return {?}\n */\nfindDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.findSymbolDeclaration(\n        this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} name\n * @return {?}\n */\ntryFindDeclaration(moduleUrl: string, name: string): StaticSymbol {\n    return this.symbolResolver.ignoreErrorsFor(() => this.findDeclaration(moduleUrl, name));\n  }\n/**\n * @param {?} symbol\n * @return {?}\n */\nfindSymbolDeclaration(symbol: StaticSymbol): StaticSymbol {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n    if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n      return this.findSymbolDeclaration(resolvedSymbol.metadata);\n    } else {\n      return symbol;\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\npublic annotations(type: StaticSymbol): any[] {\n    let /** @type {?} */ annotations = this.annotationCache.get(type);\n    if (!annotations) {\n      annotations = [];\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const /** @type {?} */ parentAnnotations = this.annotations(parentType);\n        annotations.push(...parentAnnotations);\n      }\n      let /** @type {?} */ ownAnnotations: any[] = [];\n      if (classMetadata['decorators']) {\n        ownAnnotations = this.simplify(type, classMetadata['decorators']);\n        annotations.push(...ownAnnotations);\n      }\n      if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n          this.summaryResolver.isLibraryFile(parentType.filePath)) {\n        const /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n        if (summary && summary.type) {\n          const /** @type {?} */ requiredAnnotationTypes = /** @type {?} */((\n              this.annotationForParentClassWithSummaryKind.get( /** @type {?} */((summary.type.summaryKind)))));\n          const /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(\n              (requiredType: any) => ownAnnotations.some(ann => ann instanceof requiredType));\n          if (!typeHasRequiredAnnotation) {\n            this.reportError(\n                syntaxError(\n                    `Class ${type.name} in ${type.filePath} extends from a ${CompileSummaryKind[( /** @type {?} */((summary.type.summaryKind)))]} in another compilation unit without duplicating the decorator. ` +\n                    `Please add a ${requiredAnnotationTypes.map((type: any) => this.annotationNames.get(type)).join(' or ')} decorator to the class.`),\n                type);\n          }\n        }\n      }\n      this.annotationCache.set(type, annotations.filter(ann => !!ann));\n    }\n    return annotations;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\npublic propMetadata(type: StaticSymbol): {[key: string]: any[]} {\n    let /** @type {?} */ propMetadata = this.propertyCache.get(type);\n    if (!propMetadata) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      propMetadata = {};\n      const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const /** @type {?} */ parentPropMetadata = this.propMetadata(parentType);\n        Object.keys(parentPropMetadata).forEach((parentProp) => { /** @type {?} */((\n          propMetadata))[parentProp] = parentPropMetadata[parentProp];\n        });\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ prop = ( /** @type {?} */((<any[]>propData)))\n                         .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n        const /** @type {?} */ decorators: any[] = [];\n        if ( /** @type {?} */((propMetadata))[propName]) {\n          decorators.push(... /** @type {?} */((propMetadata))[propName]);\n        } /** @type {?} */((\n        propMetadata))[propName] = decorators;\n        if (prop && prop['decorators']) {\n          decorators.push(...this.simplify(type, prop['decorators']));\n        }\n      });\n      this.propertyCache.set(type, propMetadata);\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\npublic parameters(type: StaticSymbol): any[] {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n      return [];\n    }\n    try {\n      let /** @type {?} */ parameters = this.parameterCache.get(type);\n      if (!parameters) {\n        const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n        const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n        const /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n        const /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n        if (ctorData) {\n          const /** @type {?} */ ctor = ( /** @type {?} */((<any[]>ctorData))).find(a => a['__symbolic'] == 'constructor');\n          const /** @type {?} */ rawParameterTypes = /** @type {?} */(( <any[]>ctor['parameters'])) || [];\n          const /** @type {?} */ parameterDecorators = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameterDecorators'] || [])));\n          parameters = [];\n          rawParameterTypes.forEach((rawParamType, index) => {\n            const /** @type {?} */ nestedResult: any[] = [];\n            const /** @type {?} */ paramType = this.trySimplify(type, rawParamType);\n            if (paramType) nestedResult.push(paramType);\n            const /** @type {?} */ decorators = parameterDecorators ? parameterDecorators[index] : null;\n            if (decorators) {\n              nestedResult.push(...decorators);\n            } /** @type {?} */((\n            parameters)).push(nestedResult);\n          });\n        } else if (parentType) {\n          parameters = this.parameters(parentType);\n        }\n        if (!parameters) {\n          parameters = [];\n        }\n        this.parameterCache.set(type, parameters);\n      }\n      return parameters;\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _methodNames(type: any): {[key: string]: boolean} {\n    let /** @type {?} */ methodNames = this.methodCache.get(type);\n    if (!methodNames) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      methodNames = {};\n      const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const /** @type {?} */ parentMethodNames = this._methodNames(parentType);\n        Object.keys(parentMethodNames).forEach((parentProp) => { /** @type {?} */((\n          methodNames))[parentProp] = parentMethodNames[parentProp];\n        });\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ isMethod = ( /** @type {?} */((<any[]>propData))).some(a => a['__symbolic'] == 'method'); /** @type {?} */((\n        methodNames))[propName] = /** @type {?} */(( methodNames))[propName] || isMethod;\n      });\n      this.methodCache.set(type, methodNames);\n    }\n    return methodNames;\n  }\n/**\n * @param {?} type\n * @param {?} classMetadata\n * @return {?}\n */\n\nprivate findParentType(type: StaticSymbol, classMetadata: any): StaticSymbol|undefined {\n    const /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n    if (parentType instanceof StaticSymbol) {\n      return parentType;\n    }\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(\n              `hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n    }\n    try {\n      return !!this._methodNames(type)[lcProperty];\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @param {?} ctor\n * @return {?}\n */\n\nprivate _registerDecoratorOrConstructor(type: StaticSymbol, ctor: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => new ctor(...args));\n  }\n/**\n * @param {?} type\n * @param {?} fn\n * @return {?}\n */\n\nprivate _registerFunction(type: StaticSymbol, fn: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => fn.apply(undefined, args));\n  }\n/**\n * @return {?}\n */\n\nprivate initializeConversionMap(): void {\n    this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n    this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n    this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n    this.ANALYZE_FOR_ENTRY_COMPONENTS =\n        this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), Host);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Injectable'), Injectable);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), Inject);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), Optional);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Attribute'), Attribute);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChild'), ContentChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), ContentChildren);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChild'), ViewChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), ViewChildren);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), Input);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), Output);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), Pipe);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostBinding'), HostBinding);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostListener'), HostListener);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Directive'), Directive);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Component'), Component);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), NgModule);\n\n    // Note: Some metadata classes can be used directly with Provider.deps.\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), Host);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), Optional);\n\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), trigger);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), state);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), transition);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), style);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), animate);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), keyframes);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), sequence);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), group);\n  }\n/**\n * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n * All types passed to the StaticResolver should be pseudo-types returned by this method.\n * \n * @param {?} declarationFile the absolute path of the file where the symbol is declared\n * @param {?} name the name of the type.\n * @param {?=} members\n * @return {?}\n */\ngetStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n  }\n/**\n * @param {?} error\n * @param {?} context\n * @param {?=} path\n * @return {?}\n */\n\nprivate reportError(error: Error, context: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(error, (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n/**\n * Simplify but discard any errors\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\n\nprivate trySimplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName: string) => {};\n    const /** @type {?} */ result = this.simplify(context, value);\n    this.errorRecorder = originalRecorder;\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\n\npublic simplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ self = this;\n    let /** @type {?} */ scope = BindingScope.empty;\n    const /** @type {?} */ calling = new Map<StaticSymbol, boolean>();\n/**\n * @param {?} context\n * @param {?} value\n * @param {?} depth\n * @param {?} references\n * @return {?}\n */\nfunction simplifyInContext(\n        context: StaticSymbol, value: any, depth: number, references: number): any {\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nfunction resolveReferenceValue(staticSymbol: StaticSymbol): any {\n        const /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n        return resolvedSymbol ? resolvedSymbol.metadata : null;\n      }\n/**\n * @param {?} functionSymbol\n * @param {?} targetFunction\n * @param {?} args\n * @return {?}\n */\nfunction simplifyCall(functionSymbol: StaticSymbol, targetFunction: any, args: any[]) {\n        if (targetFunction && targetFunction['__symbolic'] == 'function') {\n          if (calling.get(functionSymbol)) {\n            throw new Error('Recursion not supported');\n          }\n          try {\n            const /** @type {?} */ value = targetFunction['value'];\n            if (value && (depth != 0 || value.__symbolic != 'error')) {\n              const /** @type {?} */ parameters: string[] = targetFunction['parameters'];\n              const /** @type {?} */ defaults: any[] = targetFunction.defaults;\n              args = args.map(arg => simplifyInContext(context, arg, depth + 1, references))\n                         .map(arg => shouldIgnore(arg) ? undefined : arg);\n              if (defaults && defaults.length > args.length) {\n                args.push(...defaults.slice(args.length).map((value: any) => simplify(value)));\n              }\n              calling.set(functionSymbol, true);\n              const /** @type {?} */ functionScope = BindingScope.build();\n              for (let /** @type {?} */ i = 0; i < parameters.length; i++) {\n                functionScope.define(parameters[i], args[i]);\n              }\n              const /** @type {?} */ oldScope = scope;\n              let /** @type {?} */ result: any;\n              try {\n                scope = functionScope.done();\n                result = simplifyInContext(functionSymbol, value, depth + 1, references);\n              } finally {\n                scope = oldScope;\n              }\n              return result;\n            }\n          } finally {\n            calling.delete(functionSymbol);\n          }\n        }\n\n        if (depth === 0) {\n          // If depth is 0 we are evaluating the top level expression that is describing element\n          // decorator. In this case, it is a decorator we don't understand, such as a custom\n          // non-angular decorator, and we should just ignore it.\n          return IGNORE;\n        }\n        return simplify(\n            {__symbolic: 'error', message: 'Function call not supported', context: functionSymbol});\n      }\n/**\n * @param {?} expression\n * @return {?}\n */\nfunction simplify(expression: any): any {\n        if (isPrimitive(expression)) {\n          return expression;\n        }\n        if (expression instanceof Array) {\n          const /** @type {?} */ result: any[] = [];\n          for (const /** @type {?} */ item of ( /** @type {?} */((<any>expression)))) {\n            // Check for a spread expression\n            if (item && item.__symbolic === 'spread') {\n              const /** @type {?} */ spreadArray = simplify(item.expression);\n              if (Array.isArray(spreadArray)) {\n                for (const /** @type {?} */ spreadItem of spreadArray) {\n                  result.push(spreadItem);\n                }\n                continue;\n              }\n            }\n            const /** @type {?} */ value = simplify(item);\n            if (shouldIgnore(value)) {\n              continue;\n            }\n            result.push(value);\n          }\n          return result;\n        }\n        if (expression instanceof StaticSymbol) {\n          // Stop simplification at builtin symbols or if we are in a reference context\n          if (expression === self.injectionToken || expression === self.opaqueToken ||\n              self.conversionMap.has(expression) || references > 0) {\n            return expression;\n          } else {\n            const /** @type {?} */ staticSymbol = expression;\n            const /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n            if (declarationValue) {\n              return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n            } else {\n              return staticSymbol;\n            }\n          }\n        }\n        if (expression) {\n          if (expression['__symbolic']) {\n            let /** @type {?} */ staticSymbol: StaticSymbol;\n            switch (expression['__symbolic']) {\n              case 'binop':\n                let /** @type {?} */ left = simplify(expression['left']);\n                if (shouldIgnore(left)) return left;\n                let /** @type {?} */ right = simplify(expression['right']);\n                if (shouldIgnore(right)) return right;\n                switch (expression['operator']) {\n                  case '&&':\n                    return left && right;\n                  case '||':\n                    return left || right;\n                  case '|':\n                    return left | right;\n                  case '^':\n                    return left ^ right;\n                  case '&':\n                    return left & right;\n                  case '==':\n                    return left == right;\n                  case '!=':\n                    return left != right;\n                  case '===':\n                    return left === right;\n                  case '!==':\n                    return left !== right;\n                  case '<':\n                    return left < right;\n                  case '>':\n                    return left > right;\n                  case '<=':\n                    return left <= right;\n                  case '>=':\n                    return left >= right;\n                  case '<<':\n                    return left << right;\n                  case '>>':\n                    return left >> right;\n                  case '+':\n                    return left + right;\n                  case '-':\n                    return left - right;\n                  case '*':\n                    return left * right;\n                  case '/':\n                    return left / right;\n                  case '%':\n                    return left % right;\n                }\n                return null;\n              case 'if':\n                let /** @type {?} */ condition = simplify(expression['condition']);\n                return condition ? simplify(expression['thenExpression']) :\n                                   simplify(expression['elseExpression']);\n              case 'pre':\n                let /** @type {?} */ operand = simplify(expression['operand']);\n                if (shouldIgnore(operand)) return operand;\n                switch (expression['operator']) {\n                  case '+':\n                    return operand;\n                  case '-':\n                    return -operand;\n                  case '!':\n                    return !operand;\n                  case '~':\n                    return ~operand;\n                }\n                return null;\n              case 'index':\n                let /** @type {?} */ indexTarget = simplify(expression['expression']);\n                let /** @type {?} */ index = simplify(expression['index']);\n                if (indexTarget && isPrimitive(index)) return indexTarget[index];\n                return null;\n              case 'select':\n                const /** @type {?} */ member = expression['member'];\n                let /** @type {?} */ selectContext = context;\n                let /** @type {?} */ selectTarget = simplify(expression['expression']);\n                if (selectTarget instanceof StaticSymbol) {\n                  const /** @type {?} */ members = selectTarget.members.concat(member);\n                  selectContext =\n                      self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                  const /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                  if (declarationValue) {\n                    return simplifyInContext(\n                        selectContext, declarationValue, depth + 1, references);\n                  } else {\n                    return selectContext;\n                  }\n                }\n                if (selectTarget && isPrimitive(member))\n                  return simplifyInContext(\n                      selectContext, selectTarget[member], depth + 1, references);\n                return null;\n              case 'reference':\n                // Note: This only has to deal with variable references,\n                // as symbol references have been converted into StaticSymbols already\n                // in the StaticSymbolResolver!\n                const /** @type {?} */ name: string = expression['name'];\n                const /** @type {?} */ localValue = scope.resolve(name);\n                if (localValue != BindingScope.missing) {\n                  return localValue;\n                }\n                break;\n              case 'class':\n                return context;\n              case 'function':\n                return context;\n              case 'new':\n              case 'call':\n                // Determine if the function is a built-in conversion\n                staticSymbol = simplifyInContext(\n                    context, expression['expression'], depth + 1, /* references */ 0);\n                if (staticSymbol instanceof StaticSymbol) {\n                  if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                    // if somebody calls new InjectionToken, don't create an InjectionToken,\n                    // but rather return the symbol to which the InjectionToken is assigned to.\n                    return context;\n                  }\n                  const /** @type {?} */ argExpressions: any[] = expression['arguments'] || [];\n                  let /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                  if (converter) {\n                    const /** @type {?} */ args =\n                        argExpressions\n                            .map(arg => simplifyInContext(context, arg, depth + 1, references))\n                            .map(arg => shouldIgnore(arg) ? undefined : arg);\n                    return converter(context, args);\n                  } else {\n                    // Determine if the function is one we can simplify.\n                    const /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                    return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                  }\n                }\n                return IGNORE;\n              case 'error':\n                let /** @type {?} */ message = produceErrorMessage(expression);\n                if (expression['line']) {\n                  message =\n                      `${message} (position ${expression['line']+1}:${expression['character']+1} in the original .ts file)`;\n                  self.reportError(\n                      positionalError(\n                          message, context.filePath, expression['line'], expression['character']),\n                      context);\n                } else {\n                  self.reportError(new Error(message), context);\n                }\n                return IGNORE;\n              case 'ignore':\n                return expression;\n            }\n            return null;\n          }\n          return mapStringMap(expression, (value, name) => {\n            if (REFERENCE_SET.has(name)) {\n              if (name === USE_VALUE && PROVIDE in expression) {\n                // If this is a provider expression, check for special tokens that need the value\n                // during analysis.\n                const /** @type {?} */ provide = simplify(expression.provide);\n                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                  return simplify(value);\n                }\n              }\n              return simplifyInContext(context, value, depth, references + 1);\n            }\n            return simplify(value);\n          });\n        }\n        return IGNORE;\n      }\n\n      try {\n        return simplify(value);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ members = context.members.length ? `.${context.members.join('.')}` : '';\n        const /** @type {?} */ message =\n            `${e.message}, resolving symbol ${context.name}${members} in ${context.filePath}`;\n        if (e.fileName) {\n          throw positionalError(message, e.fileName, e.line, e.column);\n        }\n        throw syntaxError(message);\n      }\n    }\n\n    const /** @type {?} */ recordedSimplifyInContext = (context: StaticSymbol, value: any) => {\n      try {\n        return simplifyInContext(context, value, 0, 0);\n      } catch ( /** @type {?} */e) {\n        this.reportError(e, context);\n      }\n    };\n\n    const /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n                                        simplifyInContext(context, value, 0, 0);\n    if (shouldIgnore(result)) {\n      return undefined;\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate getTypeMetadata(type: StaticSymbol): {[key: string]: any} {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n    return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                                                       {__symbolic: 'class'};\n  }\n}\n\nfunction StaticReflector_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticReflector.prototype.annotationCache;\n/** @type {?} */\nStaticReflector.prototype.propertyCache;\n/** @type {?} */\nStaticReflector.prototype.parameterCache;\n/** @type {?} */\nStaticReflector.prototype.methodCache;\n/** @type {?} */\nStaticReflector.prototype.conversionMap;\n/** @type {?} */\nStaticReflector.prototype.injectionToken;\n/** @type {?} */\nStaticReflector.prototype.opaqueToken;\n/** @type {?} */\nStaticReflector.prototype.ROUTES;\n/** @type {?} */\nStaticReflector.prototype.ANALYZE_FOR_ENTRY_COMPONENTS;\n/** @type {?} */\nStaticReflector.prototype.annotationForParentClassWithSummaryKind;\n/** @type {?} */\nStaticReflector.prototype.annotationNames;\n/** @type {?} */\nStaticReflector.prototype.summaryResolver;\n/** @type {?} */\nStaticReflector.prototype.symbolResolver;\n/** @type {?} */\nStaticReflector.prototype.errorRecorder;\n}\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error: any): string {\n  switch (error.message) {\n    case 'Reference to non-exported class':\n      if (error.context && error.context.className) {\n        return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n      }\n      break;\n    case 'Variable not initialized':\n      return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n    case 'Destructuring not supported':\n      return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n    case 'Could not resolve type':\n      if (error.context && error.context.typeName) {\n        return `Could not resolve type ${error.context.typeName}`;\n      }\n      break;\n    case 'Function call not supported':\n      let /** @type {?} */ prefix =\n          error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n      return prefix +\n          'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n    case 'Reference to a local symbol':\n      if (error.context && error.context.name) {\n        return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n      }\n      break;\n  }\n  return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error: any): string {\n  return `Error encountered resolving symbol values statically. ${expandedMessage(error)}`;\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input: {[key: string]: any}, transform: (value: any, key: string) => any):\n    {[key: string]: any} {\n  if (!input) return {};\n  const /** @type {?} */ result: {[key: string]: any} = {};\n  Object.keys(input).forEach((key) => {\n    const /** @type {?} */ value = transform(input[key], key);\n    if (!shouldIgnore(value)) {\n      if (HIDDEN_KEY.test(key)) {\n        Object.defineProperty(result, key, {enumerable: false, configurable: true, value: value});\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o: any): boolean {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @record\n */\nfunction BindingScopeBuilder() {}\n\n\nfunction BindingScopeBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingScopeBuilder.prototype.define;\n/** @type {?} */\nBindingScopeBuilder.prototype.done;\n}\n\n\ninterface BindingScopeBuilder {\n  define(name: string, value: any): BindingScopeBuilder;\n  done(): BindingScope;\n}\n/**\n * @abstract\n */\nabstract class BindingScope {\n  abstract resolve(name: string): any;\npublic static missing = {};\npublic static empty: BindingScope = {resolve: name => BindingScope.missing};\n/**\n * @return {?}\n */\n\npublic static build(): BindingScopeBuilder {\n    const /** @type {?} */ current = new Map<string, any>();\n    return {\n      define: function(name, value) {\n        current.set(name, value);\n        return this;\n      },\n      done: function() {\n        return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n      }\n    };\n  }\n}\n\nfunction BindingScope_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingScope.missing;\n/** @type {?} */\nBindingScope.empty;\n\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nBindingScope.prototype.resolve = function(name) {};\n}\n\nclass PopulatedScope extends BindingScope {\n/**\n * @param {?} bindings\n */\nconstructor(private bindings: Map<string, any>) { super(); }\n/**\n * @param {?} name\n * @return {?}\n */\nresolve(name: string): any {\n    return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n  }\n}\n\nfunction PopulatedScope_tsickle_Closure_declarations() {\n/** @type {?} */\nPopulatedScope.prototype.bindings;\n}\n\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message: string, fileName: string, line: number, column: number): Error {\n  const /** @type {?} */ result = new Error(message);\n  ( /** @type {?} */((result as any))).fileName = fileName;\n  ( /** @type {?} */((result as any))).line = line;\n  ( /** @type {?} */((result as any))).column = column;\n  return result;\n}\n"]}