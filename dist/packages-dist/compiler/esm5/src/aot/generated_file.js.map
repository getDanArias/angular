{"version":3,"sources":["../../../../../../packages/compiler/src/aot/generated_file.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,SAAE,EAAS,MAAA,qBAAA,CAAA;AAOlB,OALO,EAAA,iBAAE,EAAiB,MAAA,sBAAA,CAAA;AAM1B;IAGA;;;;OAIG;IACH,uBAPa,UAAY,EAAe,UAAY,EAAQ,aAAgC;QAA/E,eAAA,GAAA,UAAA,CAAY;QAAe,eAAA,GAAA,UAAA,CAAY;QAUhD,EAAE,CAAC,CAAC,OATO,aAAA,KAAkB,QAAA,CAAS,CAAC,CAAA;YAUrC,IAAI,CATC,MAAC,GAAQ,aAAA,CAAc;YAU5B,IAAI,CATC,KAAC,GAAO,IAAA,CAAK;QAUpB,CAAC;QATC,IAAA,CAAK,CAAA;YAUL,IAAI,CATC,MAAC,GAAQ,IAAA,CAAK;YAUnB,IAAI,CATC,KAAC,GAAO,aAAA,CAAc;QAU7B,CAAC;IACH,CAAC;IACH,oBATC;AASD,CAnBA,AAUC,IAAA;;AAWD;IACA,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;IAC/B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC;IAC9B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;IACnC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;AACnC,CAAC;AAED;;;;GAIG;AACH,MAzBC,uBAA4B,IAAM,EAAe,QAAmB;IAAnB,yBAAA,EAAA,aAAmB;IA0BnE,EAAE,CAAC,CAAC,CAzBC,IAAC,CAAI,KAAC,CAAK,CAAC,CAAA;QA0Bf,MAzBM,IAAI,KAAA,CAAM,sDAAC,IAAoD,CAAI,UAAW,CAAE,CAAC;IA0BzF,CAAC;IACD,MAAM,CAzBC,IAAI,iBAAA,EAAkB,CAAE,cAAC,CA0B5B,SAAS,CAzBC,IAAC,CAAI,UAAC,CAAU,EAAE,IAAA,CAAK,UAAC,EAAW,IAAA,CAAK,KAAC,EAAM,QAAA,CAAS,CAAC;AA0BzE,CAAC","file":"generated_file.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {sourceUrl} from '../compile_metadata';\nimport {Statement} from '../output/output_ast';\nimport {TypeScriptEmitter} from '../output/ts_emitter';\nexport class GeneratedFile {\npublic source: string|null;\npublic stmts: Statement[]|null;\n/**\n * @param {?} srcFileUrl\n * @param {?} genFileUrl\n * @param {?} sourceOrStmts\n */\nconstructor(\npublic srcFileUrl: string,\npublic genFileUrl: string, sourceOrStmts: string|Statement[]) {\n    if (typeof sourceOrStmts === 'string') {\n      this.source = sourceOrStmts;\n      this.stmts = null;\n    } else {\n      this.source = null;\n      this.stmts = sourceOrStmts;\n    }\n  }\n}\n\nfunction GeneratedFile_tsickle_Closure_declarations() {\n/** @type {?} */\nGeneratedFile.prototype.source;\n/** @type {?} */\nGeneratedFile.prototype.stmts;\n/** @type {?} */\nGeneratedFile.prototype.srcFileUrl;\n/** @type {?} */\nGeneratedFile.prototype.genFileUrl;\n}\n\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nexport function toTypeScript(file: GeneratedFile, preamble: string = ''): string {\n  if (!file.stmts) {\n    throw new Error(`Illegal state: No stmts present on GeneratedFile ${file.genFileUrl}`);\n  }\n  return new TypeScriptEmitter().emitStatements(\n      sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n"]}