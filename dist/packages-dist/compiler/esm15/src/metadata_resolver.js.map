{"version":3,"sources":["../../../../packages/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","file":"metadata_resolver.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, ChangeDetectionStrategy, Component, ComponentFactory, Directive, Host, Inject, Injectable, InjectionToken, ModuleWithProviders, Optional, Provider, Query, RendererType2, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef, ɵConsole as Console, ɵERROR_COMPONENT_TYPE, ɵccf as createComponentFactory, ɵisPromise as isPromise, ɵstringify as stringify} from '@angular/core';\n\nimport {StaticSymbol, StaticSymbolCache} from './aot/static_symbol';\nimport {ngfactoryFilePath} from './aot/util';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {CompilerConfig} from './config';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {Identifiers} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport {getAllLifecycleHooks} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {SummaryResolver} from './summary_resolver';\nimport {SyncAsync, ValueTransformer, noUndefined, syntaxError, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\nexport const /** @type {?} */ ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\nexport class CompileMetadataResolver {\nprivate _nonNormalizedDirectiveCache =\n      new Map<Type<any>, {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}>();\nprivate _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\nprivate _summaryCache = new Map<Type<any>, cpl.CompileTypeSummary|null>();\nprivate _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\nprivate _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\nprivate _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n/**\n * @param {?} _config\n * @param {?} _ngModuleResolver\n * @param {?} _directiveResolver\n * @param {?} _pipeResolver\n * @param {?} _summaryResolver\n * @param {?} _schemaRegistry\n * @param {?} _directiveNormalizer\n * @param {?} _console\n * @param {?} _staticSymbolCache\n * @param {?} _reflector\n * @param {?=} _errorCollector\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _ngModuleResolver: NgModuleResolver,\nprivate _directiveResolver: DirectiveResolver,\nprivate _pipeResolver: PipeResolver,\nprivate _summaryResolver: SummaryResolver<any>,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _directiveNormalizer: DirectiveNormalizer,\nprivate _console: Console,\nprivate _staticSymbolCache: StaticSymbolCache,\nprivate _reflector: CompileReflector,\nprivate _errorCollector?: ErrorCollector) {}\n/**\n * @return {?}\n */\ngetReflector(): CompileReflector { return this._reflector; }\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._nonNormalizedDirectiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._directiveCache.clear();\n    this._nonNormalizedDirectiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n/**\n * @param {?} baseType\n * @param {?} name\n * @return {?}\n */\n\nprivate _createProxyClass(baseType: any, name: string): cpl.ProxyClass {\n    let /** @type {?} */ delegate: any = null;\n    const /** @type {?} */ proxyClass: cpl.ProxyClass = /** @type {?} */(( <any>function() {\n      if (!delegate) {\n        throw new Error(\n            `Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n      }\n      return delegate.apply(this, arguments);\n    }));\n    proxyClass.setDelegate = (d) => {\n      delegate = d;\n      ( /** @type {?} */((<any>proxyClass))).prototype = d.prototype;\n    };\n    // Make stringify work correctly\n    ( /** @type {?} */((<any>proxyClass))).overriddenName = name;\n    return proxyClass;\n  }\n/**\n * @param {?} dirType\n * @param {?} name\n * @return {?}\n */\n\nprivate getGeneratedClass(dirType: any, name: string): StaticSymbol|cpl.ProxyClass {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n    } else {\n      return this._createProxyClass(dirType, name);\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\n\nprivate getComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentType(dirType: any): StaticSymbol|Type<any> {\n    const /** @type {?} */ name = `${cpl.identifierName({reference: dirType})}_Host`;\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(dirType.filePath, name);\n    } else {\n      const /** @type {?} */ HostClass = /** @type {?} */(( <any>function HostClass() {}));\n      HostClass.overriddenName = name;\n\n      return HostClass;\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\n\nprivate getRendererType(dirType: any): StaticSymbol|RendererType2 {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n    } else {\n      // returning an object as proxy,\n      // that we fill later during runtime compilation.\n      return /** @type {?} */(( <any>{}));\n    }\n  }\n/**\n * @param {?} selector\n * @param {?} dirType\n * @param {?} inputs\n * @param {?} outputs\n * @return {?}\n */\n\nprivate getComponentFactory(\n      selector: string, dirType: any, inputs: {[key: string]: string}|null,\n      outputs: {[key: string]: string}): StaticSymbol|ComponentFactory<any> {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n    } else {\n      const /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n      // Note: ngContentSelectors will be filled later once the template is\n      // loaded.\n      return createComponentFactory(selector, dirType, /** @type {?} */(( <any>hostView)), inputs, outputs, []);\n    }\n  }\n/**\n * @param {?} factory\n * @param {?} ngContentSelectors\n * @return {?}\n */\n\nprivate initComponentFactory(\n      factory: StaticSymbol|ComponentFactory<any>, ngContentSelectors: string[]) {\n    if (!(factory instanceof StaticSymbol)) {\n      factory.ngContentSelectors.push(...ngContentSelectors);\n    }\n  }\n/**\n * @param {?} type\n * @param {?} kind\n * @return {?}\n */\n\nprivate _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary|null {\n    let /** @type {?} */ typeSummary = this._summaryCache.get(type);\n    if (!typeSummary) {\n      const /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n      typeSummary = summary ? summary.type : null;\n      this._summaryCache.set(type, typeSummary || null);\n    }\n    return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n  }\n/**\n * @param {?} ngModuleType\n * @param {?} directiveType\n * @param {?} isSync\n * @return {?}\n */\nloadDirectiveMetadata(ngModuleType: any, directiveType: any, isSync: boolean): SyncAsync<null> {\n    if (this._directiveCache.has(directiveType)) {\n      return null;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = /** @type {?} */(( this.getNonNormalizedDirectiveMetadata(directiveType)));\n\n    const /** @type {?} */ createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata | null) => {\n      const /** @type {?} */ normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        isHost: false,\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        componentViewType: metadata.componentViewType,\n        rendererType: metadata.rendererType,\n        componentFactory: metadata.componentFactory,\n        template: templateMetadata\n      });\n      if (templateMetadata) {\n        this.initComponentFactory( /** @type {?} */((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n      }\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return null;\n    };\n\n    if (metadata.isComponent) {\n      const /** @type {?} */ template = /** @type {?} */(( metadata.template));\n      const /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n        ngModuleType,\n        componentType: directiveType,\n        moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n        encapsulation: template.encapsulation,\n        template: template.template,\n        templateUrl: template.templateUrl,\n        styles: template.styles,\n        styleUrls: template.styleUrls,\n        animations: template.animations,\n        interpolation: template.interpolation\n      });\n      if (isPromise(templateMeta) && isSync) {\n        this._reportError(componentStillLoadingError(directiveType), directiveType);\n        return null;\n      }\n      return SyncAsync.then(templateMeta, createDirectiveMetadata);\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n/**\n * @param {?} directiveType\n * @return {?}\n */\ngetNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}|null {\n    directiveType = resolveForwardRef(directiveType);\n    if (!directiveType) {\n      return null;\n    }\n    let /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    const /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n    if (!dirMeta) {\n      return null;\n    }\n    let /** @type {?} */ nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata = /** @type {?} */(( undefined));\n\n    if (dirMeta instanceof Component) {\n      // component\n      assertArrayOfStrings('styles', dirMeta.styles);\n      assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n      const /** @type {?} */ animations = dirMeta.animations;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: noUndefined(dirMeta.encapsulation),\n        template: noUndefined(dirMeta.template),\n        templateUrl: noUndefined(dirMeta.templateUrl),\n        styles: dirMeta.styles || [],\n        styleUrls: dirMeta.styleUrls || [],\n        animations: animations || [],\n        interpolation: noUndefined(dirMeta.interpolation),\n        isInline: !!dirMeta.template,\n        externalStylesheets: [],\n        ngContentSelectors: []\n      });\n    }\n\n    let /** @type {?} */ changeDetectionStrategy: ChangeDetectionStrategy = /** @type {?} */(( null));\n    let /** @type {?} */ viewProviders: cpl.CompileProviderMetadata[] = [];\n    let /** @type {?} */ entryComponentMetadata: cpl.CompileEntryComponentMetadata[] = [];\n    let /** @type {?} */ selector = dirMeta.selector;\n\n    if (dirMeta instanceof Component) {\n      // Component\n      changeDetectionStrategy = /** @type {?} */(( dirMeta.changeDetection));\n      if (dirMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            dirMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n      }\n      if (dirMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                                     .map((type) => /** @type {?} */(( this._getEntryComponentMetadata(type))))\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            syntaxError(\n                `Directive ${stringifyType(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    if (dirMeta.providers != null) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata,\n          `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n    }\n    let /** @type {?} */ queries: cpl.CompileQueryMetadata[] = [];\n    let /** @type {?} */ viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (dirMeta.queries != null) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const /** @type {?} */ metadata = cpl.CompileDirectiveMetadata.create({\n      isHost: false,\n      selector: selector,\n      exportAs: noUndefined(dirMeta.exportAs),\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs || [],\n      outputs: dirMeta.outputs || [],\n      host: dirMeta.host || {},\n      providers: providers || [],\n      viewProviders: viewProviders || [],\n      queries: queries || [],\n      viewQueries: viewQueries || [],\n      entryComponents: entryComponentMetadata,\n      componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                                                         null,\n      rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n      componentFactory: null\n    });\n    if (nonNormalizedTemplateMetadata) {\n      metadata.componentFactory =\n          this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n    }\n    cacheEntry = {metadata, annotation: dirMeta};\n    this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n    return cacheEntry;\n  }\n/**\n * Gets the metadata for the given directive.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} directiveType\n * @return {?}\n */\ngetDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const /** @type {?} */ dirMeta = /** @type {?} */(( this._directiveCache.get(directiveType)));\n    if (!dirMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (!dirSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n        this._directiveResolver.isDirective(type);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisPipe(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n        this._pipeResolver.isPipe(type);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisNgModule(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n        this._ngModuleResolver.isNgModule(type);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ngetNgModuleSummary(moduleType: any): cpl.CompileNgModuleSummary|null {\n    let /** @type {?} */ moduleSummary: cpl.CompileNgModuleSummary|null = /** @type {?} */((\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule)));\n    if (!moduleSummary) {\n      const /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n/**\n * Loads the declared directives and pipes of an NgModule.\n * @param {?} moduleType\n * @param {?} isSync\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nloadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const /** @type {?} */ promise = this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n/**\n * @param {?} moduleType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\ngetNgModuleMetadata(moduleType: any, throwIfNotFound = true): cpl.CompileNgModuleMetadata|null {\n    moduleType = resolveForwardRef(moduleType);\n    let /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const /** @type {?} */ declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ importedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    const /** @type {?} */ entryComponents: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let /** @type {?} */ importedModuleType: Type<any> = /** @type {?} */(( undefined));\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const /** @type {?} */ moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringifyType(importedModuleType)}'`, [],\n                importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          if (this._checkSelfImport(moduleType, importedModuleType)) return;\n          const /** @type {?} */ importedModuleSummary = this.getNgModuleSummary(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                syntaxError(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'. Please add a @NgModule annotation.`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ exportedModuleSummary = this.getNgModuleSummary(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const /** @type {?} */ exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            syntaxError(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n        return;\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents,\n          `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                               .map(type => /** @type {?} */(( this._getEntryComponentMetadata(type)))));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getIdentifierMetadata(type));\n      });\n    }\n\n    entryComponents.push(\n        ...bootstrapComponents.map(type => /** @type {?} */(( this._getEntryComponentMetadata(type.reference)))));\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id || null,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, /** @type {?} */(( compileMeta)).type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n/**\n * @param {?} moduleType\n * @param {?} importedModuleType\n * @return {?}\n */\n\nprivate _checkSelfImport(moduleType: Type<any>, importedModuleType: Type<any>): boolean {\n    if (moduleType === importedModuleType) {\n      this._reportError(\n          syntaxError(`'${stringifyType(moduleType)}' module can't import itself`), moduleType);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _getTypeDescriptor(type: Type<any>): string {\n    if (this.isDirective(type)) {\n      return 'directive';\n    }\n\n    if (this.isPipe(type)) {\n      return 'pipe';\n    }\n\n    if (this.isNgModule(type)) {\n      return 'module';\n    }\n\n    if (( /** @type {?} */((type as any))).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n/**\n * @param {?} type\n * @param {?} moduleType\n * @return {?}\n */\n\nprivate _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          syntaxError(\n              `Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n              `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`),\n          moduleType);\n      return;\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n/**\n * @param {?} importedModules\n * @param {?} exportedModules\n * @return {?}\n */\n\nprivate _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const /** @type {?} */ result = new cpl.TransitiveCompileNgModuleMetadata();\n    const /** @type {?} */ modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const /** @type {?} */ addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const /** @type {?} */ tokenRef = cpl.tokenReference(entry.provider.token);\n        let /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const /** @type {?} */ moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _getIdentifierMetadata(type: Type<any>): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisInjectable(type: any): boolean {\n    const /** @type {?} */ annotations = this._reflector.annotations(type);\n    // Note: We need an exact check here as @Component / @Directive / ... inherit\n    // from @CompilerInjectable!\n    return annotations.some(ann => ann.constructor === Injectable);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ngetInjectableSummary(type: any): cpl.CompileTypeSummary {\n    return {\n      summaryKind: cpl.CompileSummaryKind.Injectable,\n      type: this._getTypeMetadata(type, null, false)\n    };\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\n\nprivate _getInjectableMetadata(type: Type<any>, dependencies: any[]|null = null):\n      cpl.CompileTypeMetadata {\n    const /** @type {?} */ typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    if (typeSummary) {\n      return typeSummary.type;\n    }\n    return this._getTypeMetadata(type, dependencies);\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @param {?=} throwOnUnknownDeps\n * @return {?}\n */\n\nprivate _getTypeMetadata(\n      type: Type<any>, dependencies: any[]|null = null,\n      throwOnUnknownDeps = true): cpl.CompileTypeMetadata {\n    const /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n      lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n    };\n  }\n/**\n * @param {?} factory\n * @param {?=} dependencies\n * @return {?}\n */\n\nprivate _getFactoryMetadata(factory: Function, dependencies: any[]|null = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n/**\n * Gets the metadata for the given pipe.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeMetadata(pipeType: any): cpl.CompilePipeMetadata|null {\n    const /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta || null;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const /** @type {?} */ pipeSummary = /** @type {?} */((\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe)));\n    if (!pipeSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\n\nprivate _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const /** @type {?} */ pipeAnnotation = /** @type {?} */(( this._pipeResolver.resolve(pipeType)));\n\n    const /** @type {?} */ pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: !!pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @param {?=} throwOnUnknownDeps\n * @return {?}\n */\n\nprivate _getDependenciesMetadata(\n      typeOrFunc: Type<any>|Function, dependencies: any[]|null,\n      throwOnUnknownDeps = true): cpl.CompileDiDependencyMetadata[] {\n    let /** @type {?} */ hasUnknownDeps = false;\n    const /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const /** @type {?} */ dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let /** @type {?} */ isAttribute = false;\n      let /** @type {?} */ isHost = false;\n      let /** @type {?} */ isSelf = false;\n      let /** @type {?} */ isSkipSelf = false;\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (paramEntry instanceof InjectionToken) {\n            token = paramEntry;\n          } else if (isValidType(paramEntry) && token == null) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (token == null) {\n        hasUnknownDeps = true;\n        return /** @type {?} */(( null));\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const /** @type {?} */ depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n      const /** @type {?} */ message =\n          `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`;\n      if (throwOnUnknownDeps) {\n        this._reportError(syntaxError(message), typeOrFunc);\n      } else {\n        this._console.warn(`Warning: ${message} This will become an error in Angular v5.x`);\n      }\n    }\n\n    return dependenciesMetadata;\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let /** @type {?} */ compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n/**\n * @param {?} providers\n * @param {?} targetEntryComponents\n * @param {?=} debugInfo\n * @param {?=} compileProviders\n * @param {?=} type\n * @return {?}\n */\n\nprivate _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileEntryComponentMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let /** @type {?} */ providerMeta: cpl.ProviderMeta = /** @type {?} */(( undefined));\n        if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n          this._validateProvider(provider);\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else if (provider === void 0) {\n          this._reportError(syntaxError(\n              `Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.`));\n          return;\n        } else {\n          const /** @type {?} */ providersInfo =\n              ( /** @type {?} */((<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringifyType(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringifyType(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))))\n                  .join(', ');\n          this._reportError(\n              syntaxError(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n          return;\n        }\n        if (providerMeta.token ===\n            this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\n\nprivate _validateProvider(provider: any): void {\n    if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n      this._reportError(syntaxError(\n          `Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n    }\n  }\n/**\n * @param {?} provider\n * @param {?=} type\n * @return {?}\n */\n\nprivate _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileEntryComponentMetadata[] {\n    const /** @type {?} */ components: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`),\n          type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const /** @type {?} */ entry = this._getEntryComponentMetadata(identifier.reference, false);\n      if (entry) {\n        components.push(entry);\n      }\n    });\n    return components;\n  }\n/**\n * @param {?} dirType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\n\nprivate _getEntryComponentMetadata(dirType: any, throwIfNotFound = true):\n      cpl.CompileEntryComponentMetadata|null {\n    const /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n    if (dirMeta && dirMeta.metadata.isComponent) {\n      return {componentType: dirType, componentFactory: /** @type {?} */(( dirMeta.metadata.componentFactory))};\n    }\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (dirSummary && dirSummary.isComponent) {\n      return {componentType: dirType, componentFactory: /** @type {?} */(( dirSummary.componentFactory))};\n    }\n    if (throwIfNotFound) {\n      throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n    }\n    return null;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ngetProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let /** @type {?} */ compileDeps: cpl.CompileDiDependencyMetadata[] = /** @type {?} */(( undefined));\n    let /** @type {?} */ compileTypeMetadata: cpl.CompileTypeMetadata = /** @type {?} */(( null));\n    let /** @type {?} */ compileFactoryMetadata: cpl.CompileFactoryMetadata = /** @type {?} */(( null));\n    let /** @type {?} */ token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n/**\n * @param {?} queries\n * @param {?} isViewQuery\n * @param {?} directiveType\n * @return {?}\n */\n\nprivate _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const /** @type {?} */ res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const /** @type {?} */ query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\n\nprivate _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n/**\n * @param {?} q\n * @param {?} propertyName\n * @param {?} typeOrFunc\n * @return {?}\n */\n\nprivate _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    let /** @type {?} */ selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            syntaxError(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n        selectors = [];\n      } else {\n        selectors = [this._getTokenMetadata(q.selector)];\n      }\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */(( null))\n    };\n  }\n/**\n * @param {?} error\n * @param {?=} type\n * @param {?=} otherType\n * @return {?}\n */\n\nprivate _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompilerConfig, },\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: SummaryResolver, },\n{type: ElementSchemaRegistry, },\n{type: DirectiveNormalizer, },\n{type: Console, },\n{type: StaticSymbolCache, decorators: [{ type: Optional }, ]},\n{type: CompileReflector, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_COLLECTOR_TOKEN, ] }, ]},\n];\n}\n\nfunction CompileMetadataResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileMetadataResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompileMetadataResolver.ctorParameters;\n/** @type {?} */\nCompileMetadataResolver.prototype._nonNormalizedDirectiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleOfTypes;\n/** @type {?} */\nCompileMetadataResolver.prototype._config;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._schemaRegistry;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveNormalizer;\n/** @type {?} */\nCompileMetadataResolver.prototype._console;\n/** @type {?} */\nCompileMetadataResolver.prototype._staticSymbolCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._reflector;\n/** @type {?} */\nCompileMetadataResolver.prototype._errorCollector;\n}\n\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n      const /** @type {?} */ item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nvisitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type: any): string {\n  if (type instanceof StaticSymbol) {\n    return `${type.name} in ${type.filePath}`;\n  } else {\n    return stringify(type);\n  }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType: Type<any>) {\n  const /** @type {?} */ error =\n      Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  ( /** @type {?} */((error as any)))[ɵERROR_COMPONENT_TYPE] = compType;\n  return error;\n}\n"]}