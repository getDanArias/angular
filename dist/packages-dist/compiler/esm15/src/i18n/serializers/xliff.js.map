{"version":3,"sources":["../../../../../../packages/compiler/src/i18n/serializers/xliff.ts"],"names":[],"mappings":"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","file":"xliff.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {digest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _VERSION = '1.2';\nconst /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst /** @type {?} */ _DEFAULT_SOURCE_LANG = 'en';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'x';\n\nconst /** @type {?} */ _FILE_TAG = 'file';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _TARGET_TAG = 'target';\nconst /** @type {?} */ _UNIT_TAG = 'trans-unit';\nconst /** @type {?} */ _CONTEXT_GROUP_TAG = 'context-group';\nconst /** @type {?} */ _CONTEXT_TAG = 'context';\nexport class Xliff extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string {\n    const /** @type {?} */ visitor = new _WriteVisitor();\n    const /** @type {?} */ transUnits: xml.Node[] = [];\n\n    messages.forEach(message => {\n      let /** @type {?} */ contextTags: xml.Node[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        let /** @type {?} */ contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, {purpose: 'location'});\n        contextGroupTag.children.push(\n            new xml.CR(10),\n            new xml.Tag(\n                _CONTEXT_TAG, {'context-type': 'sourcefile'}, [new xml.Text(source.filePath)]),\n            new xml.CR(10), new xml.Tag(\n                                _CONTEXT_TAG, {'context-type': 'linenumber'},\n                                [new xml.Text(`${source.startLine}`)]),\n            new xml.CR(8));\n        contextTags.push(new xml.CR(8), contextGroupTag);\n      });\n\n      const /** @type {?} */ transUnit = new xml.Tag(_UNIT_TAG, {id: message.id, datatype: 'html'});\n      transUnit.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          ...contextTags);\n\n      if (message.description) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag(\n                'note', {priority: '1', from: 'description'}, [new xml.Text(message.description)]));\n      }\n\n      if (message.meaning) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag('note', {priority: '1', from: 'meaning'}, [new xml.Text(message.meaning)]));\n      }\n\n      transUnit.children.push(new xml.CR(6));\n\n      transUnits.push(new xml.CR(6), transUnit);\n    });\n\n    const /** @type {?} */ body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n    const /** @type {?} */ file = new xml.Tag(\n        'file', {\n          'source-language': locale || _DEFAULT_SOURCE_LANG,\n          datatype: 'plaintext',\n          original: 'ng2.template',\n        },\n        [new xml.CR(4), body, new xml.CR(2)]);\n    const /** @type {?} */ xliff = new xml.Tag(\n        'xliff', {version: _VERSION, xmlns: _XMLNS}, [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const /** @type {?} */ xliffParser = new XliffParser();\n    const {locale, msgIdToHtml, errors} = xliffParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: /** @type {?} */(( locale)), i18nNodesByMsgId};\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n}\nclass _WriteVisitor implements i18n.Visitor {\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [new xml.Tag(\n          _PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}/>`})];\n    }\n\n    const /** @type {?} */ startTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}>`});\n    const /** @type {?} */ closeTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.closeName, ctype, 'equiv-text': `</${ph.tag}>`});\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': `{{${ph.value}}}`})];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ equivText =\n        `{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ')}}`;\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': equivText})];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\nclass XliffParser implements ml.Visitor {\nprivate _unitMlString: string|null;\nprivate _errors: I18nError[];\nprivate _msgIdToHtml: {[msgId: string]: string};\nprivate _locale: string|null = null;\n/**\n * @param {?} xliff\n * @param {?} url\n * @return {?}\n */\nparse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = /** @type {?} */(( null));\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        const /** @type {?} */ innerTextStart = /** @type {?} */(( element.startSourceSpan)).end.offset;\n        const /** @type {?} */ innerTextEnd = /** @type {?} */(( element.endSourceSpan)).start.offset;\n        const /** @type {?} */ content = /** @type {?} */(( element.startSourceSpan)).start.file.content;\n        const /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _FILE_TAG:\n        const /** @type {?} */ localeAttr = element.attrs.find((attr) => attr.name === 'target-language');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n        ml.visitAll(this, element.children, null);\n        break;\n\n      default:\n        // TODO(vicb): assert file structure, xliff version\n        // For now only recurse on unhandled nodes\n        ml.visitAll(this, element.children, null);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XliffParser_tsickle_Closure_declarations() {\n/** @type {?} */\nXliffParser.prototype._unitMlString;\n/** @type {?} */\nXliffParser.prototype._errors;\n/** @type {?} */\nXliffParser.prototype._msgIdToHtml;\n/** @type {?} */\nXliffParser.prototype._locale;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} message\n * @param {?} url\n * @return {?}\n */\nconvert(message: string, url: string) {\n    const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        ml.visitAll(this, xmlIcu.rootNodes);\n\n    return {\n      i18nNodes: i18nNodes,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, /** @type {?} */(( text.sourceSpan))); }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Placeholder|null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'id');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, /** @type {?} */(( el.sourceSpan)));\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n    return null;\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n      return 'lb';\n    case 'img':\n      return 'image';\n    default:\n      return `x-${tag}`;\n  }\n}\n"]}