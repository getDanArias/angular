{"version":3,"sources":["../../../../../packages/compiler/src/ml_parser/html_parser.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,kBAAE,EAAkB,MAAA,eAAA,CAAA;AAO3B,OALO,EAAA,oBAAE,EAAoB,MAAA,aAAA,CAAA;AAM7B,OALO,EAAA,4BAAE,EAAiD,MAAA,wBAAA,CAAA;AAM1D,OALO,EAAkB,MAAA,EAAO,MAAA,UAAA,CAAA;AAOhC,OALO,EAAA,eAAE,EAAgB,SAAA,EAAU,MAAA,UAAA,CAAA;AAMnC,MAHC,iBAAuB,SAAQ,MAAA;IAIhC,gBAHkB,KAAA,CAAM,oBAAC,CAAoB,CAAC,CAAC,CAAA;IAI/C;;;;;;OAMG;IACH,KATG,CAUG,MATQ,EAAQ,GAAK,EAAQ,sBAA+B,KAAA,EAIhE,sBAH+C,4BAAA;QAU7C,MAAM,CATC,KAAA,CAAM,KAAC,CAAK,MAAC,EAAO,GAAA,EAAK,mBAAA,EAAqB,mBAAA,CAAoB,CAAC;IAU5E,CAAC;;AARI,qBAAA,GAA+C;IAUtD,EATE,IAAA,EAAM,kBAAA,EAVN;CAoBD,CATC;AAUF,kBAAkB;AARX,yBAAA,GAA4F,MAAM,EAUxG,CATC;AAYF;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;AAC1B,CAAC","file":"html_parser.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilerInjectable} from '../injectable';\n\nimport {getHtmlTagDefinition} from './html_tags';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport {ParseTreeResult, Parser} from './parser';\n\nexport {ParseTreeResult, TreeError} from './parser';\nexport class HtmlParser extends Parser {\nconstructor() { super(getHtmlTagDefinition); }\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    return super.parse(source, url, parseExpansionForms, interpolationConfig);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction HtmlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nHtmlParser.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHtmlParser.ctorParameters;\n}\n\n"]}