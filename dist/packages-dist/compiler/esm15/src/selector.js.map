{"version":3,"sources":["../../../../packages/compiler/src/selector.ts"],"names":[],"mappings":"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","file":"selector.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst /** @type {?} */ _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +  // \"[name]\", \"[name=value]\",\n                                                                   // \"[name=\"value\"]\",\n                                                                   // \"[name='value']\"\n        '(\\\\))|' +                                                 // \")\"\n        '(\\\\s*,\\\\s*)',                                             // \",\"\n    'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string|null = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n/**\n * @param {?} selector\n * @return {?}\n */\nstatic parse(selector: string): CssSelector[] {\n    const /** @type {?} */ results: CssSelector[] = [];\n    const /** @type {?} */ _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let /** @type {?} */ cssSelector = new CssSelector();\n    let /** @type {?} */ match: string[]|null;\n    let /** @type {?} */ current = cssSelector;\n    let /** @type {?} */ inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[6]);\n      }\n      if (match[7]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[8]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n/**\n * @return {?}\n */\nisElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n/**\n * @return {?}\n */\nhasElementSelector(): boolean { return !!this.element; }\n/**\n * @param {?=} element\n * @return {?}\n */\nsetElement(element: string|null = null) { this.element = element; }\n/**\n * Gets a template string for an element that matches the selector.\n * @return {?}\n */\ngetMatchingElementTemplate(): string {\n    const /** @type {?} */ tagName = this.element || 'div';\n    const /** @type {?} */ classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let /** @type {?} */ attrs = '';\n    for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n      const /** @type {?} */ attrName = this.attrs[i];\n      const /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n/**\n * @param {?} name\n * @param {?=} value\n * @return {?}\n */\naddAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n/**\n * @param {?} name\n * @return {?}\n */\naddClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n/**\n * @return {?}\n */\ntoString(): string {\n    let /** @type {?} */ res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n        const /** @type {?} */ name = this.attrs[i];\n        const /** @type {?} */ value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\nfunction CssSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nCssSelector.prototype.element;\n/** @type {?} */\nCssSelector.prototype.classNames;\n/** @type {?} */\nCssSelector.prototype.attrs;\n/** @type {?} */\nCssSelector.prototype.notSelectors;\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n/**\n * @param {?} notSelectors\n * @return {?}\n */\nstatic createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const /** @type {?} */ notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\nprivate _elementMap = new Map<string, SelectorContext[]>();\nprivate _elementPartialMap = new Map<string, SelectorMatcher>();\nprivate _classMap = new Map<string, SelectorContext[]>();\nprivate _classPartialMap = new Map<string, SelectorMatcher>();\nprivate _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\nprivate _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\nprivate _listContexts: SelectorListContext[] = [];\n/**\n * @param {?} cssSelectors\n * @param {?=} callbackCtxt\n * @return {?}\n */\naddSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let /** @type {?} */ listContext: SelectorListContext = /** @type {?} */(( null));\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n/**\n * Add an object that can be found later on by calling `match`.\n * @param {?} cssSelector A css selector\n * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n * @param {?} listContext\n * @return {?}\n */\n\nprivate _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let /** @type {?} */ matcher: SelectorMatcher = this;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n    const /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const /** @type {?} */ className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ isTerminal = i === attrs.length - 2;\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n        if (isTerminal) {\n          const /** @type {?} */ terminalMap = matcher._attrValueMap;\n          let /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n          let /** @type {?} */ partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @param {?} selectable\n * @return {?}\n */\n\nprivate _addTerminal(\n      map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let /** @type {?} */ terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @return {?}\n */\n\nprivate _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let /** @type {?} */ matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n/**\n * Find the objects that have been added via `addSelectable`\n * whose css selector is contained in the given css selector.\n * @param {?} cssSelector A css selector\n * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n * @return {?} boolean true if a match was found\n */\nmatch(cssSelector: CssSelector, matchedCallback: ((c: CssSelector, a: any) => void)|null):\n      boolean {\n    let /** @type {?} */ result = false;\n    const /** @type {?} */ element = /** @type {?} */(( cssSelector.element));\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n\n    for (let /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n\n        const /** @type {?} */ terminalValuesMap = /** @type {?} */(( this._attrValueMap.get(name)));\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const /** @type {?} */ partialValuesMap = /** @type {?} */(( this._attrValuePartialMap.get(name)));\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchTerminal(\n      map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let /** @type {?} */ selectables: SelectorContext[] = map.get(name) || [];\n    const /** @type {?} */ starSelectables: SelectorContext[] = /** @type {?} */(( map.get('*')));\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let /** @type {?} */ selectable: SelectorContext;\n    let /** @type {?} */ result = false;\n    for (let /** @type {?} */ i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchPartial(\n      map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const /** @type {?} */ nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\nfunction SelectorMatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorMatcher.prototype._elementMap;\n/** @type {?} */\nSelectorMatcher.prototype._elementPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._classMap;\n/** @type {?} */\nSelectorMatcher.prototype._classPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValueMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValuePartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._listContexts;\n}\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n/**\n * @param {?} selectors\n */\nconstructor(public selectors: CssSelector[]) {}\n}\n\nfunction SelectorListContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorListContext.prototype.alreadyMatched;\n/** @type {?} */\nSelectorListContext.prototype.selectors;\n}\n\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n/**\n * @param {?} selector\n * @param {?} cbContext\n * @param {?} listContext\n */\nconstructor(\npublic selector: CssSelector,\npublic cbContext: any,\npublic listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n/**\n * @param {?} cssSelector\n * @param {?} callback\n * @return {?}\n */\nfinalize(cssSelector: CssSelector, callback: ((c: CssSelector, a: any) => void)|null): boolean {\n    let /** @type {?} */ result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n\nfunction SelectorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorContext.prototype.notSelectors;\n/** @type {?} */\nSelectorContext.prototype.selector;\n/** @type {?} */\nSelectorContext.prototype.cbContext;\n/** @type {?} */\nSelectorContext.prototype.listContext;\n}\n\n"]}