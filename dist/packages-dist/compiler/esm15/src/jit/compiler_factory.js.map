{"version":3,"sources":["../../../../../packages/compiler/src/jit/compiler_factory.ts"],"names":[],"mappings":"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","file":"compiler_factory.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {COMPILER_OPTIONS, Compiler, CompilerFactory, CompilerOptions, Inject, InjectionToken, Injector, MissingTranslationStrategy, Optional, PACKAGE_ROOT_URL, PlatformRef, StaticProvider, TRANSLATIONS, TRANSLATIONS_FORMAT, Type, ViewEncapsulation, createPlatformFactory, isDevMode, platformCore, ÉµConsole as Console} from '@angular/core';\n\nimport {StaticSymbolCache} from '../aot/static_symbol';\nimport {CompileReflector} from '../compile_reflector';\nimport {CompilerConfig} from '../config';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveResolver} from '../directive_resolver';\nimport {Lexer} from '../expression_parser/lexer';\nimport {Parser} from '../expression_parser/parser';\nimport * as i18n from '../i18n/index';\nimport {CompilerInjectable} from '../injectable';\nimport {CompileMetadataResolver, ERROR_COLLECTOR_TOKEN} from '../metadata_resolver';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {NgModuleResolver} from '../ng_module_resolver';\nimport {PipeResolver} from '../pipe_resolver';\nimport {ResourceLoader} from '../resource_loader';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {StyleCompiler} from '../style_compiler';\nimport {JitSummaryResolver, SummaryResolver} from '../summary_resolver';\nimport {TEMPLATE_TRANSFORMS, TemplateParser} from '../template_parser/template_parser';\nimport {DEFAULT_PACKAGE_URL_PROVIDER, UrlResolver} from '../url_resolver';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {JitCompiler} from './compiler';\nimport {JitReflector} from './jit_reflector';\n\nconst /** @type {?} */ _NO_RESOURCE_LOADER: ResourceLoader = {\n/**\n * @param {?} url\n * @return {?}\n */\nget(url: string): Promise<string>{\n      throw new Error(\n          `No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);}\n};\n\nconst /** @type {?} */ baseHtmlParser = new InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nexport const /** @type {?} */ COMPILER_PROVIDERS = /** @type {?} */(( <StaticProvider[]>[\n  {provide: CompileReflector, useValue: new JitReflector()},\n  {provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER},\n  {provide: JitSummaryResolver, deps: []},\n  {provide: SummaryResolver, useExisting: JitSummaryResolver},\n  {provide: Console, deps: []},\n  {provide: Lexer, deps: []},\n  {provide: Parser, deps: [Lexer]},\n  {\n    provide: baseHtmlParser,\n    useClass: HtmlParser,\n    deps: [],\n  },\n  {\n    provide: i18n.I18NHtmlParser,\n    useFactory: (parser: HtmlParser, translations: string | null, format: string,\n                 config: CompilerConfig, console: Console) => {\n      translations = translations || '';\n      const /** @type {?} */ missingTranslation =\n          translations ? /** @type {?} */(( config.missingTranslation)) : MissingTranslationStrategy.Ignore;\n      return new i18n.I18NHtmlParser(parser, translations, format, missingTranslation, console);\n    },\n    deps: [\n      baseHtmlParser,\n      [new Optional(), new Inject(TRANSLATIONS)],\n      [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n      [CompilerConfig],\n      [Console],\n    ]\n  },\n  {\n    provide: HtmlParser,\n    useExisting: i18n.I18NHtmlParser,\n  },\n  {\n    provide: TemplateParser, deps: [CompilerConfig, CompileReflector,\n    Parser, ElementSchemaRegistry,\n    i18n.I18NHtmlParser, Console, [Optional, TEMPLATE_TRANSFORMS]]\n  },\n  { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]},\n  { provide: CompileMetadataResolver, deps: [CompilerConfig, NgModuleResolver,\n                      DirectiveResolver, PipeResolver,\n                      SummaryResolver,\n                      ElementSchemaRegistry,\n                      DirectiveNormalizer, Console,\n                      [Optional, StaticSymbolCache],\n                      CompileReflector,\n                      [Optional, ERROR_COLLECTOR_TOKEN]]},\n  DEFAULT_PACKAGE_URL_PROVIDER,\n  { provide: StyleCompiler, deps: [UrlResolver]},\n  { provide: ViewCompiler, deps: [CompilerConfig, CompileReflector, ElementSchemaRegistry]},\n  { provide: NgModuleCompiler, deps: [CompileReflector] },\n  { provide: CompilerConfig, useValue: new CompilerConfig()},\n  { provide: JitCompiler, deps: [Injector, CompileMetadataResolver,\n                                TemplateParser, StyleCompiler,\n                                ViewCompiler, NgModuleCompiler,\n                                SummaryResolver,  CompilerConfig,\n                                Console]},\n  { provide: Compiler, useExisting: JitCompiler},\n  { provide: DomElementSchemaRegistry, deps: []},\n  { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n  { provide: UrlResolver, deps: [PACKAGE_ROOT_URL]},\n  { provide: DirectiveResolver, deps: [CompileReflector]},\n  { provide: PipeResolver, deps: [CompileReflector]},\n  { provide: NgModuleResolver, deps: [CompileReflector]},\n]));\nexport class JitCompilerFactory implements CompilerFactory {\nprivate _defaultOptions: CompilerOptions[];\n/**\n * @param {?} defaultOptions\n */\nconstructor( defaultOptions: CompilerOptions[]) {\n    const /** @type {?} */ compilerOptions: CompilerOptions = {\n      useDebug: isDevMode(),\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning,\n      enableLegacyTemplate: true,\n    };\n\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n/**\n * @param {?=} options\n * @return {?}\n */\ncreateCompiler(options: CompilerOptions[] = []): Compiler {\n    const /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n    const /** @type {?} */ injector = Injector.create([\n      COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            enableLegacyTemplate: opts.enableLegacyTemplate,\n          });\n        },\n        deps: []\n      }, /** @type {?} */((\n      opts.providers))\n    ]);\n    return injector.get(Compiler);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [COMPILER_OPTIONS, ] }, ]},\n];\n}\n\nfunction JitCompilerFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nJitCompilerFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJitCompilerFactory.ctorParameters;\n/** @type {?} */\nJitCompilerFactory.prototype._defaultOptions;\n}\n\n/**\n * A platform that included corePlatform and the compiler.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n  {provide: COMPILER_OPTIONS, useValue: {}, multi: true},\n  {provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS]},\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr: CompilerOptions[]): CompilerOptions {\n  return {\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => /** @type {?} */(( options.providers)))),\n    missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n    enableLegacyTemplate: _lastDefined(optionsArr.map(options => options.enableLegacyTemplate)),\n  };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined<T>(args: T[]): T|undefined {\n  for (let /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts: any[][]): any[] {\n  const /** @type {?} */ result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n"]}