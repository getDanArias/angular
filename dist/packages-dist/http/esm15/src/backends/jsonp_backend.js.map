{"version":3,"sources":["../../../../../packages/http/src/backends/jsonp_backend.ts"],"names":[],"mappings":"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","file":"jsonp_backend.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\n\nimport {ResponseOptions} from '../base_response_options';\nimport {ReadyState, RequestMethod, ResponseType} from '../enums';\nimport {Connection, ConnectionBackend} from '../interfaces';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\n\nimport {BrowserJsonp} from './browser_jsonp';\n\nconst /** @type {?} */ JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nconst /** @type {?} */ JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPConnection implements Connection {\n/**\n * The {\\@link ReadyState} of this request.\n */\nreadyState: ReadyState;\n/**\n * The outgoing HTTP request.\n */\nrequest: Request;\n/**\n * An observable that completes with the response, when the request is finished.\n */\nresponse: Observable<Response>;\n\n  /**\n   * Callback called when the JSONP request completes, to notify the application\n   * of the new data.\n   */\n  abstract finished(data?: any): void;\n}\n\nfunction JSONPConnection_tsickle_Closure_declarations() {\n/**\n * The {\\@link ReadyState} of this request.\n * @type {?}\n */\nJSONPConnection.prototype.readyState;\n/**\n * The outgoing HTTP request.\n * @type {?}\n */\nJSONPConnection.prototype.request;\n/**\n * An observable that completes with the response, when the request is finished.\n * @type {?}\n */\nJSONPConnection.prototype.response;\n\n/**\n * Callback called when the JSONP request completes, to notify the application\n * of the new data.\n * @abstract\n * @param {?=} data\n * @return {?}\n */\nJSONPConnection.prototype.finished = function(data) {};\n}\n\nexport class JSONPConnection_ extends JSONPConnection {\nprivate _id: string;\nprivate _script: Element;\nprivate _responseData: any;\nprivate _finished: boolean = false;\n/**\n * @param {?} req\n * @param {?} _dom\n * @param {?=} baseResponseOptions\n */\nconstructor(\n      req: Request,\nprivate _dom: BrowserJsonp,\nprivate baseResponseOptions?: ResponseOptions) {\n    super();\n    if (req.method !== RequestMethod.Get) {\n      throw new TypeError(JSONP_ERR_WRONG_METHOD);\n    }\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n\n      this.readyState = ReadyState.Loading;\n      const /** @type {?} */ id = this._id = _dom.nextRequestID();\n\n      _dom.exposeConnection(id, this);\n\n      // Workaround Dart\n      // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n      const /** @type {?} */ callback = _dom.requestCallback(this._id);\n      let /** @type {?} */ url: string = req.url;\n      if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n        url = url.replace('=JSONP_CALLBACK&', `=${callback}&`);\n      } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n        url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n      }\n\n      const /** @type {?} */ script = this._script = _dom.build(url);\n\n      const /** @type {?} */ onLoad = (event: Event) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        if (!this._finished) {\n          let /** @type {?} */ responseOptions =\n              new ResponseOptions({body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url});\n          if (baseResponseOptions) {\n            responseOptions = baseResponseOptions.merge(responseOptions);\n          }\n          responseObserver.error(new Response(responseOptions));\n          return;\n        }\n\n        let /** @type {?} */ responseOptions = new ResponseOptions({body: this._responseData, url});\n        if (this.baseResponseOptions) {\n          responseOptions = this.baseResponseOptions.merge(responseOptions);\n        }\n\n        responseObserver.next(new Response(responseOptions));\n        responseObserver.complete();\n      };\n\n      const /** @type {?} */ onError = (error: Error) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        let /** @type {?} */ responseOptions = new ResponseOptions({body: error.message, type: ResponseType.Error});\n        if (baseResponseOptions) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      script.addEventListener('load', onLoad);\n      script.addEventListener('error', onError);\n\n      _dom.send(script);\n\n      return () => {\n        this.readyState = ReadyState.Cancelled;\n        script.removeEventListener('load', onLoad);\n        script.removeEventListener('error', onError);\n        this._dom.cleanup(script);\n      };\n    });\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nfinished(data?: any) {\n    // Don't leak connections\n    this._finished = true;\n    this._dom.removeConnection(this._id);\n    if (this.readyState === ReadyState.Cancelled) return;\n    this._responseData = data;\n  }\n}\n\nfunction JSONPConnection__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPConnection_.prototype._id;\n/** @type {?} */\nJSONPConnection_.prototype._script;\n/** @type {?} */\nJSONPConnection_.prototype._responseData;\n/** @type {?} */\nJSONPConnection_.prototype._finished;\n/** @type {?} */\nJSONPConnection_.prototype._dom;\n/** @type {?} */\nJSONPConnection_.prototype.baseResponseOptions;\n}\n\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPBackend extends ConnectionBackend {}\nexport class JSONPBackend_ extends JSONPBackend {\n/**\n * @param {?} _browserJSONP\n * @param {?} _baseResponseOptions\n */\nconstructor(private _browserJSONP: BrowserJsonp,\nprivate _baseResponseOptions: ResponseOptions) {\n    super();\n  }\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: Request): JSONPConnection {\n    return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: BrowserJsonp, },\n{type: ResponseOptions, },\n];\n}\n\nfunction JSONPBackend__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPBackend_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJSONPBackend_.ctorParameters;\n/** @type {?} */\nJSONPBackend_.prototype._browserJSONP;\n/** @type {?} */\nJSONPBackend_.prototype._baseResponseOptions;\n}\n\n"]}