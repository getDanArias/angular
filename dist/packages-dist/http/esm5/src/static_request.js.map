{"version":3,"sources":["../../../../../packages/http/src/static_request.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH;;;;;;GAMG;AAEH,OALO,EAAA,IAAE,EAAI,MAAA,QAAA,CAAA;AAMb,OALO,EAAA,WAAE,EAA+C,MAAA,SAAA,CAAA;AAMxD,OALO,EAAA,OAAE,EAAO,MAAA,WAAA,CAAA;AAMhB,OALO,EAAA,mBAAE,EAAmB,MAAA,cAAA,CAAA;AAO5B,OALO,EAAA,eAAE,EAAe,MAAA,qBAAA,CAAA;AAMxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCG;AACH;IAF6B,mCAAA;IA4B7B;;OAEG;IACH,iBAdG,cAA2B;QAc9B,YACI,iBAdM,SA2CP;QA5BC,mCAAmC;QACnC,IAAM,gBAAgB,CAdhB,GAAA,GAAM,cAAA,CAAe,GAAC,CAAG;QAe/B,KAAI,CAdC,GAAC,GAAG,CAAA,CAAE,cAAA,CAAe,GAAC,CAAA,CAAA,CAAK;QAehC,IAAM,gBAAgB,CAdhB,SAAA,GAAY,cAAA,CAAe,MAAC,IAAS,cAAA,CAAe,MAAC,CAAM;QAejE,EAAE,CAAC,CAAC,SAdC,CAAS,CAAC,CAAA;YAeb,IAAI,gBAAgB,CAdhB,MAAA,SAAQ,CAAO;YAenB,EAAE,CAAC,CAAC,OAdO,SAAA,KAAc,QAAA,IAAY,CAAA,CAAE,SAAC,YAAoB,eAAA,CAAgB,CAAC,CAAC,CAAA;gBAe5E,MAAM,GAdG,eAAA,CAAgB,SAAC,CAAS,CAAC,QAAC,EAAQ,CAAE;YAejD,CAAC;YAdC,IAAA,CAAK,CAAA;gBAeL,MAAM,GAdG,SAAA,CAAU,QAAC,EAAQ,CAAE;YAehC,CAAC;YACD,EAAE,CAAC,CAAC,MAdC,CAAM,MAAC,GAAQ,CAAA,CAAE,CAAC,CAAA;gBAerB,IAAI,gBAAgB,CAdhB,MAAA,GAAS,GAAA,CAAI;gBAejB,EAAE,CAAC,CAAC,KAdC,CAAI,GAAC,CAAG,OAAC,CAAO,GAAC,CAAG,IAAI,CAAA,CAAE,CAAC,CAAC,CAAA;oBAe/B,MAAM,GAdG,CAAA,KAAE,CAAI,GAAC,CAAG,KAAC,CAAI,GAAC,CAAG,MAAC,GAAQ,CAAA,CAAE,IAAI,GAAA,CAAI,GAAG,EAAA,GAAK,GAAA,CAAI;gBAe7D,CAAC;gBACD,wDAAwD;gBACxD,KAAI,CAdC,GAAC,GAAK,GAAA,GAAM,MAAA,GAAS,MAAA,CAAO;YAenC,CAAC;QACH,CAAC;QACD,KAAI,CAdC,KAAC,GAAO,cAAA,CAAe,IAAC,CAAI;QAejC,KAAI,CAdC,MAAC,GAAQ,mBAAA,CAAoB,gBAAA,CAAA,CAAA,CAAA,cAAC,CAAc,MAAC,CAAA,CAAA,CAAQ,CAAC;QAe3D,uCAAuC;QACvC,8CAA8C;QAC9C,KAAI,CAdC,OAAC,GAAS,IAAI,OAAA,CAAQ,cAAC,CAAc,OAAC,CAAO,CAAC;QAenD,KAAI,CAdC,WAAC,GAAa,KAAA,CAAK,iBAAC,EAAiB,CAAE;QAe5C,KAAI,CAdC,eAAC,GAAe,CAAA,CAAE,cAAA,CAAe,eAAC,CAAA,CAAA,CAAiB;QAexD,KAAI,CAdC,YAAC,GAAY,CAAA,CAAE,cAAA,CAAe,YAAC,CAAA,CAAA,CAAc;;IAepD,CAAC;IACH;;;OAGG;IACH,mCAdG,GAcH;QACI,MAAM,CAAC,CAAC,IAdC,CAAI,OAAC,CAAO,GAAC,CAAG,cAAC,CAAc,CAAC,CAAC,CAAA;YAexC,KAdK,kBAAA;gBAeH,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;YAe1B,KAdK,mCAAA;gBAeH,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;YAe1B,KAdK,qBAAA;gBAeH,MAAM,CAdC,WAAA,CAAY,SAAC,CAAS;YAe/B,KAdK,YAAA,CAAa;YAelB,KAdK,WAAA;gBAeH,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;YAe1B,KAdK,0BAAA;gBAeH,MAAM,CAdC,IAAA,CAAK,KAAC,YAAgB,WAAA,GAAc,WAAA,CAAY,YAAC,GAAc,WAAA,CAAY,IAAC,CAAI;YAezF;gBACE,MAAM,CAdC,IAAA,CAAK,yBAAC,EAAyB,CAAE;QAe5C,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,2CAdG,GAcH;QACI,EAAE,CAAC,CAAC,IAdC,CAAI,KAAC,IAAQ,IAAA,CAAK,CAAC,CAAA;YAetB,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;QAe1B,CAAC;QAdC,IAAA,CAAK,EAAA,CAAA,CAAA,IAAK,CAAI,KAAC,YAAgB,eAAA,CAAgB,CAAC,CAAA;YAehD,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;QAe1B,CAAC;QAdC,IAAA,CAAK,EAAA,CAAA,CAAA,IAAK,CAAI,KAAC,YAAgB,QAAA,CAAS,CAAC,CAAA;YAezC,MAAM,CAdC,WAAA,CAAY,SAAC,CAAS;QAe/B,CAAC;QAdC,IAAA,CAAK,EAAA,CAAA,CAAA,IAAK,CAAI,KAAC,YAAgB,IAAA,CAAK,CAAC,CAAA;YAerC,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;QAe1B,CAAC;QAdC,IAAA,CAAK,EAAA,CAAA,CAAA,IAAK,CAAI,KAAC,YAAgB,WAAA,CAAY,CAAC,CAAA;YAe5C,MAAM,CAdC,WAAA,CAAY,YAAC,CAAY;QAelC,CAAC;QAdC,IAAA,CAAK,EAAA,CAAA,CAAA,IAAK,CAAI,KAAC,IAAQ,OAAO,IAAA,CAAK,KAAC,KAAS,QAAA,CAAS,CAAC,CAAA;YAevD,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;QAe1B,CAAC;QAdC,IAAA,CAAK,CAAA;YAeL,MAAM,CAdC,WAAA,CAAY,IAAC,CAAI;QAe1B,CAAC;IACH,CAAC;IACH;;;;OAIG;IACH,yBAdG,GAcH;QACI,MAAM,CAAC,CAAC,IAdC,CAAI,WAAC,CAAW,CAAC,CAAA;YAexB,KAdK,WAAA,CAAY,IAAC;gBAehB,MAAM,CAdC,IAAA,CAAK,IAAC,EAAI,CAAE;YAerB,KAdK,WAAA,CAAY,IAAC;gBAehB,MAAM,CAdC,IAAA,CAAK,IAAC,EAAI,CAAE;YAerB,KAdK,WAAA,CAAY,SAAC;gBAehB,MAAM,CAdC,IAAA,CAAK,KAAC,CAAK;YAepB,KAdK,WAAA,CAAY,IAAC;gBAehB,MAAM,CAdC,IAAA,CAAK,IAAC,EAAI,CAAE;YAerB,KAdK,WAAA,CAAY,IAAC;gBAehB,MAAM,CAdC,IAAA,CAAK,IAAC,EAAI,CAAE;YAerB,KAdK,WAAA,CAAY,YAAC;gBAehB,MAAM,CAdC,IAAA,CAAK,WAAC,EAAW,CAAE;YAe5B;gBACE,MAAM,CAdC,IAAA,CAAK;QAehB,CAAC;IACH,CAAC;IACH,cAdC;AAcD,CA7HA,AA+GC,CAjH4B,IAAA,GAiH5B;;AAgBD;IACA;;;OAGG;IACH,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;IACzB;;;OAGG;IACH,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;IAC1B;;;OAGG;IACH,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;IACtB;;;OAGG;IACH,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC;IAC9B;;;OAGG;IACH,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC;IAClC;;;OAGG;IACH,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC;AAC/B,CAAC;AAED;;;GAGG;AACH,yBAnDyB,MAA4B;IAoDnD,IAAM,gBAAgB,CAnDhB,YAAA,GAAe,IAAI,eAAA,EAAgB,CAAE;IAoD3C,MAAM,CAnDC,IAAC,CAAI,MAAC,CAAM,CAAC,OAAC,CAAO,UAAA,GAAC;QAoD3B,IAAM,gBAAgB,CAnDhB,KAAA,GAAQ,MAAA,CAAO,GAAC,CAAG,CAAC;QAoD1B,EAAE,CAAC,CAAC,KAnDC,IAAQ,KAAA,CAAM,OAAC,CAAO,KAAC,CAAK,CAAC,CAAC,CAAA;YAoDjC,KAAK,CAnDC,OAAC,CAAO,UAAA,OAAC,IAAU,OAAA,YAAA,CAAa,MAAC,CAAM,GAAC,EAAI,OAAA,CAAQ,QAAC,EAAQ,CAAE,EAA5C,CAA4C,CAAC,CAAC;QAoDzE,CAAC;QAnDC,IAAA,CAAK,CAAA;YAoDL,YAAY,CAnDC,MAAC,CAAM,GAAC,EAAI,KAAA,CAAM,QAAC,EAAQ,CAAE,CAAC;QAoD7C,CAAC;IACH,CAAC,CAnDC,CAAC;IAoDH,MAAM,CAnDC,YAAA,CAAa;AAoDtB,CAAC;AAED,IAAM,gBAAgB,CAnDhB,IAAA,GAAO,cAAW,CAAA,CAAG;AAoD3B,IAAM,gBAAgB,CAnDhB,CAAA,GAAI,OAAO,MAAA,IAAU,QAAA,GAAW,MAAA,GAAS,IAAA,CAAK;AAoDpD,IAAM,gBAAgB,CAnDhB,QAAA,GAAW,CAAA,CAAA,CAAM,CAAA,CAAI,iBAAA,CAAA,CAAmB,UAAC,CAAU,IAAI,IAAA,CAAK;AAoDlE,IAAM,gBAAgB,CAnDhB,IAAA,GAAO,CAAA,CAAA,CAAM,CAAA,CAAI,iBAAA,CAAA,CAAmB,MAAC,CAAM,IAAI,IAAA,CAAK;AAoD1D,MAAM,CAnDC,IAAA,gBAAA,CAAM,WAAA,GAoDT,CAAkB,CAAE,CAnDd,CAAA,CAAI,iBAAA,CAAA,CAAmB,aAAC,CAAa,IAAI,IAAA,CAAK","file":"static_request.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Body} from './body';\nimport {ContentType, RequestMethod, ResponseContentType} from './enums';\nimport {Headers} from './headers';\nimport {normalizeMethodName} from './http_utils';\nimport {RequestArgs} from './interfaces';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Creates `Request` instances from provided values.\n * \n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n * \n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n * \n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n * \n * \\@Injectable() \n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n * \n * \\@experimental\n */\nexport class Request extends Body {\n/**\n * Http method with which to perform the request.\n */\nmethod: RequestMethod;\n/**\n * {\\@link Headers} instance\n */\nheaders: Headers;\n/**\n * Url of the remote resource\n */\nurl: string;\n/**\n * Type of the request body *\n */\n\nprivate contentType: ContentType;\n/**\n * Enable use credentials\n */\nwithCredentials: boolean;\n/**\n * Buffer to store the response\n */\nresponseType: ResponseContentType;\n/**\n * @param {?} requestOptions\n */\nconstructor(requestOptions: RequestArgs) {\n    super();\n    // TODO: assert that url is present\n    const /** @type {?} */ url = requestOptions.url;\n    this.url = /** @type {?} */(( requestOptions.url));\n    const /** @type {?} */ paramsArg = requestOptions.params || requestOptions.search;\n    if (paramsArg) {\n      let /** @type {?} */ params: string;\n      if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n        params = urlEncodeParams(paramsArg).toString();\n      } else {\n        params = paramsArg.toString();\n      }\n      if (params.length > 0) {\n        let /** @type {?} */ prefix = '?';\n        if (this.url.indexOf('?') != -1) {\n          prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n        }\n        // TODO: just delete search-query-looking string in url?\n        this.url = url + prefix + params;\n      }\n    }\n    this._body = requestOptions.body;\n    this.method = normalizeMethodName( /** @type {?} */((requestOptions.method)));\n    // TODO(jeffbcross): implement behavior\n    // Defaults to 'omit', consistent with browser\n    this.headers = new Headers(requestOptions.headers);\n    this.contentType = this.detectContentType();\n    this.withCredentials = /** @type {?} */(( requestOptions.withCredentials));\n    this.responseType = /** @type {?} */(( requestOptions.responseType));\n  }\n/**\n * Returns the content type enum based on header options.\n * @return {?}\n */\ndetectContentType(): ContentType {\n    switch (this.headers.get('content-type')) {\n      case 'application/json':\n        return ContentType.JSON;\n      case 'application/x-www-form-urlencoded':\n        return ContentType.FORM;\n      case 'multipart/form-data':\n        return ContentType.FORM_DATA;\n      case 'text/plain':\n      case 'text/html':\n        return ContentType.TEXT;\n      case 'application/octet-stream':\n        return this._body instanceof ArrayBuffer ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n      default:\n        return this.detectContentTypeFromBody();\n    }\n  }\n/**\n * Returns the content type of request's body based on its type.\n * @return {?}\n */\ndetectContentTypeFromBody(): ContentType {\n    if (this._body == null) {\n      return ContentType.NONE;\n    } else if (this._body instanceof URLSearchParams) {\n      return ContentType.FORM;\n    } else if (this._body instanceof FormData) {\n      return ContentType.FORM_DATA;\n    } else if (this._body instanceof Blob) {\n      return ContentType.BLOB;\n    } else if (this._body instanceof ArrayBuffer) {\n      return ContentType.ARRAY_BUFFER;\n    } else if (this._body && typeof this._body === 'object') {\n      return ContentType.JSON;\n    } else {\n      return ContentType.TEXT;\n    }\n  }\n/**\n * Returns the request's body according to its type. If body is undefined, return\n * null.\n * @return {?}\n */\ngetBody(): any {\n    switch (this.contentType) {\n      case ContentType.JSON:\n        return this.text();\n      case ContentType.FORM:\n        return this.text();\n      case ContentType.FORM_DATA:\n        return this._body;\n      case ContentType.TEXT:\n        return this.text();\n      case ContentType.BLOB:\n        return this.blob();\n      case ContentType.ARRAY_BUFFER:\n        return this.arrayBuffer();\n      default:\n        return null;\n    }\n  }\n}\n\nfunction Request_tsickle_Closure_declarations() {\n/**\n * Http method with which to perform the request.\n * @type {?}\n */\nRequest.prototype.method;\n/**\n * {\\@link Headers} instance\n * @type {?}\n */\nRequest.prototype.headers;\n/**\n * Url of the remote resource\n * @type {?}\n */\nRequest.prototype.url;\n/**\n * Type of the request body *\n * @type {?}\n */\nRequest.prototype.contentType;\n/**\n * Enable use credentials\n * @type {?}\n */\nRequest.prototype.withCredentials;\n/**\n * Buffer to store the response\n * @type {?}\n */\nRequest.prototype.responseType;\n}\n\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params: {[key: string]: any}): URLSearchParams {\n  const /** @type {?} */ searchParams = new URLSearchParams();\n  Object.keys(params).forEach(key => {\n    const /** @type {?} */ value = params[key];\n    if (value && Array.isArray(value)) {\n      value.forEach(element => searchParams.append(key, element.toString()));\n    } else {\n      searchParams.append(key, value.toString());\n    }\n  });\n  return searchParams;\n}\n\nconst /** @type {?} */ noop = function() {};\nconst /** @type {?} */ w = typeof window == 'object' ? window : noop;\nconst /** @type {?} */ FormData = ( /** @type {?} */((w as any)) /** TODO #9100 */)['FormData'] || noop;\nconst /** @type {?} */ Blob = ( /** @type {?} */((w as any)) /** TODO #9100 */)['Blob'] || noop;\nexport const /** @type {?} */ ArrayBuffer: ArrayBufferConstructor =\n    ( /** @type {?} */((w as any)) /** TODO #9100 */)['ArrayBuffer'] || noop;\n"]}