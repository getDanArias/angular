{"version":3,"sources":["../../../../../packages/http/src/interfaces.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAcH;;;;;;;;GAQG;AACH;IAAA;IAL+F,CAAC;IAAD,wBAAC;AAAD,CAK/F,AALgG,IAAA;;AAOhG;IAEA;;;;OAIG;IACH,iBAAiB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,OAAO,IAAG,CAAC,CAAC;AACpE,CAAC;AAED;;;;;GAKG;AACH;IAAA;IAIA,CAhBC;IAgBD,iBAhBC;AAgBD,CAJA,AAZC,IAAA;;AAkBD;IACA,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;IAChC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;IAC7B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC9B,CAAC;AAED;;;;;GAKG;AACH;IAAA;IA1BoF,CAAC;IAAD,mBAAC;AAAD,CA0BpF,AA1BqF,IAAA;;AA4BrF;IAEA;;;;OAIG;IACH,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,GAAG,IAAG,CAAC,CAAC;AAC3D,CAAC;AAED;;;;;;GAMG;AACH,MAAM,iCAAgC,CAAC;AAGvC;IACA,0BAA0B;IAC1B,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC;IACjC,0BAA0B;IAC1B,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC;IACpC;;;OAGG;IACH,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC;IACpC,0BAA0B;IAC1B,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC;IACpC,0BAA0B;IAC1B,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC;IACrC,0BAA0B;IAC1B,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC;IAClC,0BAA0B;IAC1B,kBAAkB,CAAC,SAAS,CAAC,eAAe,CAAC;IAC7C,0BAA0B;IAC1B,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC;AAC1C,CAAC;AAoBD;;;GAGG;AACH,MAAM,0BAAyB,CAAC;AAGhC;IACA,gBAAgB;IAChB,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC;AAC1B,CAAC;AAOD;;;;;;GAMG;AACH,MAAM,kCAAiC,CAAC;AAGxC;IACA,0BAA0B;IAC1B,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC;IACnC,0BAA0B;IAC1B,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC;IACrC,0BAA0B;IAC1B,mBAAmB,CAAC,SAAS,CAAC,UAAU,CAAC;IACzC,0BAA0B;IAC1B,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,0BAA0B;IAC1B,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC;IACnC,0BAA0B;IAC1B,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC;AAClC,CAAC","file":"interfaces.js","sourceRoot":"","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReadyState, RequestMethod, ResponseContentType, ResponseType} from './enums';\nimport {Headers} from './headers';\nimport {Request} from './static_request';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Abstract class from which real backends are derived.\n * \n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class ConnectionBackend { abstract createConnection(request: any): Connection; }\n\nfunction ConnectionBackend_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} request\n * @return {?}\n */\nConnectionBackend.prototype.createConnection = function(request) {};\n}\n\n/**\n * Abstract class from which real connections are derived.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class Connection {\n  readyState: ReadyState;\n  request: Request;\n  response: any;  // TODO: generic of <Response>;\n}\n\nfunction Connection_tsickle_Closure_declarations() {\n/** @type {?} */\nConnection.prototype.readyState;\n/** @type {?} */\nConnection.prototype.request;\n/** @type {?} */\nConnection.prototype.response;\n}\n\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class XSRFStrategy { abstract configureRequest(req: Request): void; }\n\nfunction XSRFStrategy_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} req\n * @return {?}\n */\nXSRFStrategy.prototype.configureRequest = function(req) {};\n}\n\n/**\n * Interface for options to construct a RequestOptions, based on\n * [RequestInit](https://fetch.spec.whatwg.org/#requestinit) from the Fetch spec.\n * \n * \\@experimental\n * @record\n */\nexport function RequestOptionsArgs() {}\n\n\nfunction RequestOptionsArgs_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nRequestOptionsArgs.prototype.url;\n/** @type {?|undefined} */\nRequestOptionsArgs.prototype.method;\n/**\n * @deprecated from 4.0.0. Use params instead.\n * @type {?|undefined}\n */\nRequestOptionsArgs.prototype.search;\n/** @type {?|undefined} */\nRequestOptionsArgs.prototype.params;\n/** @type {?|undefined} */\nRequestOptionsArgs.prototype.headers;\n/** @type {?|undefined} */\nRequestOptionsArgs.prototype.body;\n/** @type {?|undefined} */\nRequestOptionsArgs.prototype.withCredentials;\n/** @type {?|undefined} */\nRequestOptionsArgs.prototype.responseType;\n}\n\n\n/**\n * Interface for options to construct a RequestOptions, based on\n * [RequestInit](https://fetch.spec.whatwg.org/#requestinit) from the Fetch spec.\n *\n * @experimental\n */\nexport interface RequestOptionsArgs {\n  url?: string|null;\n  method?: string|RequestMethod|null;\n  /** @deprecated from 4.0.0. Use params instead. */\n  search?: string|URLSearchParams|{[key: string]: any | any[]}|null;\n  params?: string|URLSearchParams|{[key: string]: any | any[]}|null;\n  headers?: Headers|null;\n  body?: any;\n  withCredentials?: boolean|null;\n  responseType?: ResponseContentType|null;\n}\n/**\n * Required structure when constructing new Request();\n * @record\n */\nexport function RequestArgs() {}\n\n\nfunction RequestArgs_tsickle_Closure_declarations() {\n/** @type {?} */\nRequestArgs.prototype.url;\n}\n\n\n/**\n * Required structure when constructing new Request();\n */\nexport interface RequestArgs extends RequestOptionsArgs { url: string|null; }\n/**\n * Interface for options to construct a Response, based on\n * [ResponseInit](https://fetch.spec.whatwg.org/#responseinit) from the Fetch spec.\n * \n * \\@experimental\n * @record\n */\nexport function ResponseOptionsArgs() {}\n\n\nfunction ResponseOptionsArgs_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nResponseOptionsArgs.prototype.body;\n/** @type {?|undefined} */\nResponseOptionsArgs.prototype.status;\n/** @type {?|undefined} */\nResponseOptionsArgs.prototype.statusText;\n/** @type {?|undefined} */\nResponseOptionsArgs.prototype.headers;\n/** @type {?|undefined} */\nResponseOptionsArgs.prototype.type;\n/** @type {?|undefined} */\nResponseOptionsArgs.prototype.url;\n}\n\n\n/**\n * Interface for options to construct a Response, based on\n * [ResponseInit](https://fetch.spec.whatwg.org/#responseinit) from the Fetch spec.\n *\n * @experimental\n */\nexport interface ResponseOptionsArgs {\n  body?: string|Object|FormData|ArrayBuffer|Blob|null;\n  status?: number|null;\n  statusText?: string|null;\n  headers?: Headers|null;\n  type?: ResponseType|null;\n  url?: string|null;\n}\n"]}