{"version":3,"file":"language-service.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../packages/core/src/di/injection_token.ts","../../../../packages/core/src/util/decorators.ts","../../../../packages/core/src/metadata/di.ts","../../../../packages/core/src/change_detection/constants.ts","../../../../packages/core/src/metadata/directives.ts","../../../../packages/core/src/metadata/lifecycle_hooks.ts","../../../../packages/core/src/metadata/ng_module.ts","../../../../packages/core/src/metadata/view.ts","../../../../packages/core/src/metadata.ts","../../../../packages/core/src/version.ts","../../../../packages/core/src/di/metadata.ts","../../../../packages/core/src/util.ts","../../../../packages/core/src/di/forward_ref.ts","../../../../packages/core/src/di/injector.ts","../../../../packages/core/src/errors.ts","../../../../packages/core/src/error_handler.ts","../../../../packages/core/src/di/reflective_errors.ts","../../../../packages/core/src/di/reflective_key.ts","../../../../packages/core/src/type.ts","../../../../packages/core/src/reflection/reflection_capabilities.ts","../../../../packages/core/src/reflection/platform_reflection_capabilities.ts","../../../../packages/core/src/reflection/reflector.ts","../../../../packages/core/src/reflection/reflection.ts","../../../../packages/core/src/di/reflective_provider.ts","../../../../packages/core/src/di/reflective_injector.ts","../../../../packages/core/src/di/provider.ts","../../../../packages/core/src/di.ts","../../../../node_modules/rxjs/src/util/root.ts","../../../../node_modules/rxjs/src/util/isFunction.ts","../../../../node_modules/rxjs/src/util/isArray.ts","../../../../node_modules/rxjs/src/util/isObject.ts","../../../../node_modules/rxjs/src/util/errorObject.ts","../../../../node_modules/rxjs/src/util/tryCatch.ts","../../../../node_modules/rxjs/src/util/UnsubscriptionError.ts","../../../../node_modules/rxjs/src/Subscription.ts","../../../../node_modules/rxjs/src/Observer.ts","../../../../node_modules/rxjs/src/symbol/rxSubscriber.ts","../../../../node_modules/rxjs/src/Subscriber.ts","../../../../node_modules/rxjs/src/util/toSubscriber.ts","../../../../node_modules/rxjs/src/symbol/observable.ts","../../../../node_modules/rxjs/src/Observable.ts","../../../../node_modules/rxjs/src/observable/ScalarObservable.ts","../../../../node_modules/rxjs/src/observable/EmptyObservable.ts","../../../../node_modules/rxjs/src/util/isScheduler.ts","../../../../node_modules/rxjs/src/observable/ArrayObservable.ts","../../../../node_modules/rxjs/src/OuterSubscriber.ts","../../../../node_modules/rxjs/src/util/isPromise.ts","../../../../node_modules/rxjs/src/symbol/iterator.ts","../../../../node_modules/rxjs/src/InnerSubscriber.ts","../../../../node_modules/rxjs/src/util/subscribeToResult.ts","../../../../node_modules/rxjs/src/operator/mergeAll.ts","../../../../node_modules/rxjs/src/operator/merge.ts","../../../../node_modules/rxjs/src/observable/merge.ts","../../../../node_modules/rxjs/src/util/ObjectUnsubscribedError.ts","../../../../node_modules/rxjs/src/SubjectSubscription.ts","../../../../node_modules/rxjs/src/Subject.ts","../../../../node_modules/rxjs/src/observable/ConnectableObservable.ts","../../../../node_modules/rxjs/src/operator/multicast.ts","../../../../node_modules/rxjs/src/operator/share.ts","../../../../packages/core/src/util/lang.ts","../../../../packages/core/src/application_init.ts","../../../../packages/core/src/application_tokens.ts","../../../../packages/core/src/console.ts","../../../../packages/core/src/linker/compiler.ts","../../../../packages/core/src/linker/component_factory.ts","../../../../packages/core/src/linker/component_factory_resolver.ts","../../../../packages/core/src/linker/ng_module_factory.ts","../../../../packages/core/src/profile/wtf_impl.ts","../../../../packages/core/src/profile/profile.ts","../../../../packages/core/src/event_emitter.ts","../../../../packages/core/src/zone/ng_zone.ts","../../../../packages/core/src/testability/testability.ts","../../../../packages/core/src/application_ref.ts","../../../../packages/core/src/zone.ts","../../../../packages/core/src/render/api.ts","../../../../packages/core/src/render.ts","../../../../packages/core/src/linker/element_ref.ts","../../../../packages/core/src/linker/ng_module_factory_loader.ts","../../../../packages/core/src/linker/query_list.ts","../../../../packages/core/src/linker/system_js_ng_module_factory_loader.ts","../../../../packages/core/src/linker/template_ref.ts","../../../../packages/core/src/linker/view_container_ref.ts","../../../../packages/core/src/change_detection/change_detector_ref.ts","../../../../packages/core/src/linker/view_ref.ts","../../../../packages/core/src/linker.ts","../../../../packages/core/src/debug/debug_node.ts","../../../../packages/core/src/change_detection/change_detection_util.ts","../../../../packages/core/src/change_detection/differs/default_iterable_differ.ts","../../../../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","../../../../packages/core/src/change_detection/differs/iterable_differs.ts","../../../../packages/core/src/change_detection/differs/keyvalue_differs.ts","../../../../packages/core/src/change_detection/pipe_transform.ts","../../../../packages/core/src/change_detection/change_detection.ts","../../../../packages/core/src/change_detection.ts","../../../../packages/core/src/platform_core_providers.ts","../../../../packages/core/src/i18n/tokens.ts","../../../../packages/core/src/application_module.ts","../../../../packages/core/src/security.ts","../../../../packages/core/src/view/types.ts","../../../../packages/core/src/view/errors.ts","../../../../packages/core/src/view/util.ts","../../../../packages/core/src/view/element.ts","../../../../packages/core/src/view/ng_module.ts","../../../../packages/core/src/view/view_attach.ts","../../../../packages/core/src/view/refs.ts","../../../../packages/core/src/view/provider.ts","../../../../packages/core/src/view/query.ts","../../../../packages/core/src/view/ng_content.ts","../../../../packages/core/src/view/pure_expression.ts","../../../../packages/core/src/view/text.ts","../../../../packages/core/src/view/view.ts","../../../../packages/core/src/view/services.ts","../../../../packages/core/src/view/entrypoint.ts","../../../../packages/core/src/view/index.ts","../../../../packages/core/src/core_private_export.ts","../../../../packages/core/src/codegen_private_exports.ts","../../../../packages/core/src/animation/dsl.ts","../../../../packages/core/src/animation/animation_metadata_wrapped.ts","../../../../packages/core/src/core.ts","../../../../packages/core/public_api.ts","../../../../packages/core/index.ts","../../../../packages/compiler/src/version.ts","../../../../packages/compiler/src/template_parser/template_ast.ts","../../../../packages/compiler/src/aot/static_symbol.ts","../../../../packages/compiler/src/ml_parser/tags.ts","../../../../packages/compiler/src/ml_parser/html_tags.ts","../../../../packages/compiler/src/selector.ts","../../../../packages/compiler/src/util.ts","../../../../packages/compiler/src/compile_metadata.ts","../../../../packages/compiler/src/compile_reflector.ts","../../../../packages/compiler/src/config.ts","../../../../packages/compiler/src/expression_parser/ast.ts","../../../../packages/compiler/src/chars.ts","../../../../packages/compiler/src/injectable.ts","../../../../packages/compiler/src/assertions.ts","../../../../packages/compiler/src/ml_parser/interpolation_config.ts","../../../../packages/compiler/src/expression_parser/lexer.ts","../../../../packages/compiler/src/expression_parser/parser.ts","../../../../packages/compiler/src/parse_util.ts","../../../../packages/compiler/src/ast_path.ts","../../../../packages/compiler/src/ml_parser/ast.ts","../../../../packages/compiler/src/ml_parser/lexer.ts","../../../../packages/compiler/src/ml_parser/parser.ts","../../../../packages/compiler/src/i18n/digest.ts","../../../../packages/compiler/src/i18n/i18n_ast.ts","../../../../packages/compiler/src/i18n/serializers/placeholder.ts","../../../../packages/compiler/src/i18n/i18n_parser.ts","../../../../packages/compiler/src/i18n/parse_util.ts","../../../../packages/compiler/src/i18n/extractor_merger.ts","../../../../packages/compiler/src/ml_parser/xml_tags.ts","../../../../packages/compiler/src/ml_parser/xml_parser.ts","../../../../packages/compiler/src/i18n/serializers/serializer.ts","../../../../packages/compiler/src/i18n/serializers/xml_helper.ts","../../../../packages/compiler/src/i18n/serializers/xliff.ts","../../../../packages/compiler/src/i18n/serializers/xliff2.ts","../../../../packages/compiler/src/i18n/serializers/xmb.ts","../../../../packages/compiler/src/i18n/serializers/xtb.ts","../../../../packages/compiler/src/ml_parser/html_parser.ts","../../../../packages/compiler/src/i18n/translation_bundle.ts","../../../../packages/compiler/src/i18n/i18n_html_parser.ts","../../../../packages/compiler/src/identifiers.ts","../../../../packages/compiler/src/ml_parser/icu_ast_expander.ts","../../../../packages/compiler/src/provider_analyzer.ts","../../../../packages/compiler/src/schema/element_schema_registry.ts","../../../../packages/compiler/src/style_url_resolver.ts","../../../../packages/compiler/src/template_parser/binding_parser.ts","../../../../packages/compiler/src/template_parser/template_preparser.ts","../../../../packages/compiler/src/template_parser/template_parser.ts","../../../../packages/compiler/src/resource_loader.ts","../../../../packages/compiler/src/url_resolver.ts","../../../../packages/compiler/src/directive_normalizer.ts","../../../../packages/compiler/src/directive_resolver.ts","../../../../packages/compiler/src/aot/util.ts","../../../../packages/compiler/src/lifecycle_reflector.ts","../../../../packages/compiler/src/ng_module_resolver.ts","../../../../packages/compiler/src/pipe_resolver.ts","../../../../packages/compiler/src/summary_resolver.ts","../../../../packages/compiler/src/metadata_resolver.ts","../../../../packages/compiler/src/output/output_ast.ts","../../../../packages/compiler/src/output/value_util.ts","../../../../packages/compiler/src/view_compiler/provider_compiler.ts","../../../../packages/compiler/src/ng_module_compiler.ts","../../../../packages/compiler/src/output/source_map.ts","../../../../packages/compiler/src/output/abstract_emitter.ts","../../../../packages/compiler/src/output/ts_emitter.ts","../../../../packages/compiler/src/schema/dom_security_schema.ts","../../../../packages/compiler/src/schema/dom_element_schema_registry.ts","../../../../packages/compiler/src/shadow_css.ts","../../../../packages/compiler/src/style_compiler.ts","../../../../packages/compiler/src/compiler_util/expression_converter.ts","../../../../packages/compiler/src/view_compiler/view_compiler.ts","../../../../packages/compiler/src/aot/generated_file.ts","../../../../packages/compiler/src/aot/summary_serializer.ts","../../../../packages/compiler/src/aot/compiler.ts","../../../../packages/compiler/src/aot/static_reflector.ts","../../../../packages/compiler/src/aot/static_symbol_resolver.ts","../../../../packages/compiler/src/aot/summary_resolver.ts","../../../../packages/compiler/src/aot/compiler_factory.ts","../../../../packages/compiler/src/aot/compiler_options.ts","../../../../packages/compiler/src/aot/compiler_host.ts","../../../../packages/compiler/src/output/output_interpreter.ts","../../../../packages/compiler/src/output/abstract_js_emitter.ts","../../../../packages/compiler/src/output/output_jit.ts","../../../../packages/compiler/src/jit/compiler.ts","../../../../packages/compiler/src/i18n/message_bundle.ts","../../../../packages/compiler/src/i18n/extractor.ts","../../../../packages/compiler/src/i18n/index.ts","../../../../packages/compiler/src/jit/jit_reflector.ts","../../../../packages/compiler/src/jit/compiler_factory.ts","../../../../packages/compiler/src/compiler.ts","../../../../packages/compiler/public_api.ts","../../../../packages/compiler/index.ts","../../../../packages/tsc-wrapped/src/schema.ts","../../../../packages/tsc-wrapped/src/evaluator.ts","../../../../packages/tsc-wrapped/src/symbols.ts","../../../../packages/tsc-wrapped/src/collector.ts","../../../../packages/compiler-cli/src/compiler_host.ts","../../../../packages/compiler-cli/src/path_mapped_compiler_host.ts","../../../../packages/compiler-cli/src/codegen.ts","../../../../packages/compiler-cli/src/extractor.ts","../../../../packages/compiler-cli/src/version.ts","../../../../packages/compiler-cli/src/diagnostics/symbols.ts","../../../../packages/compiler-cli/src/diagnostics/expression_type.ts","../../../../packages/compiler-cli/src/diagnostics/expression_diagnostics.ts","../../../../packages/compiler-cli/src/diagnostics/typescript_symbols.ts","../../../../packages/compiler-cli/src/transformers/api.ts","../../../../packages/compiler-cli/src/transformers/module_filename_resolver.ts","../../../../packages/compiler-cli/src/diagnostics/check_types.ts","../../../../packages/compiler-cli/src/transformers/lower_expressions.ts","../../../../packages/compiler-cli/src/transformers/node_emitter.ts","../../../../packages/compiler-cli/src/transformers/node_emitter_transform.ts","../../../../packages/compiler-cli/src/transformers/program.ts","../../../../packages/compiler-cli/src/transformers/entry_points.ts","../../../../packages/compiler-cli/src/perform-compile.ts","../../../../packages/compiler-cli/src/ngtools_impl.ts","../../../../packages/compiler-cli/src/ngtools_api.ts","../../../../packages/compiler-cli/index.ts","../../../../packages/language-service/src/types.ts","../../../../packages/language-service/src/utils.ts","../../../../packages/language-service/src/expressions.ts","../../../../packages/language-service/src/html_info.ts","../../../../packages/language-service/src/completions.ts","../../../../packages/language-service/src/locate_symbol.ts","../../../../packages/language-service/src/definitions.ts","../../../../packages/language-service/src/diagnostics.ts","../../../../packages/language-service/src/hover.ts","../../../../packages/language-service/src/language_service.ts","../../../../packages/language-service/src/reflector_host.ts","../../../../packages/language-service/src/typescript_host.ts","../../../../packages/language-service/src/ts_plugin.ts","../../../../packages/language-service/src/version.ts","../../../../packages/language-service/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n * \n * ```typescript\n * var t = new OpaqueToken(\"value\");\n * \n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n * \n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n * \n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n * \n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nexport class OpaqueToken {\n/**\n * @param {?} _desc\n */\nconstructor(protected _desc: string) {}\n/**\n * @return {?}\n */\ntoString(): string { return `Token ${this._desc}`; }\n}\n\nfunction OpaqueToken_tsickle_Closure_declarations() {\n/** @type {?} */\nOpaqueToken.prototype._desc;\n}\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n * \n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n * \n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n * \n * \\@stable\n */\nexport class InjectionToken<T> extends OpaqueToken {\nprivate _differentiate_from_OpaqueToken_structurally: any;\n/**\n * @param {?} desc\n */\nconstructor(desc: string) { super(desc); }\n/**\n * @return {?}\n */\ntoString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nfunction InjectionToken_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionToken.prototype._differentiate_from_OpaqueToken_structurally;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n * \n * ES7 syntax:\n * \n * ```\n * \\@ng.Component({...}) \n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\nexport function TypeDecorator() {}\n\n\nfunction TypeDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n<T extends Type<any>>(type: T): T;\n*/\n/* TODO: handle strange member:\n(target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n*/\n}\n\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const /** @type {?} */ ANNOTATIONS = '__annotations__';\nexport const /** @type {?} */ PARAMETERS = '__paramaters__';\nexport const /** @type {?} */ PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    chainFn?: (fn: Function) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>DecoratorFactory)))(objOrType);\n    const /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n          ( /** @type {?} */((cls as any)))[ANNOTATIONS] :\n          Object.defineProperty(cls, ANNOTATIONS, {value: []})[ANNOTATIONS];\n      annotations.push(annotationInstance);\n      return cls;\n    }));\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = DecoratorFactory;\n  return /** @type {?} */(( DecoratorFactory as any));\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const /** @type {?} */ values = props(...args);\n      for (const /** @type {?} */ propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>ParamDecoratorFactory)))(...args);\n\n    ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n    return ParamDecorator;\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n          ( /** @type {?} */((cls as any)))[PARAMETERS] :\n          Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      (parameters[index] = parameters[index] || []).push(annotationInstance);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const /** @type {?} */ decoratorInstance = new ( /** @type {?} */((<any>PropDecoratorFactory)))(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const /** @type {?} */ constructor = target.constructor;\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n          ( /** @type {?} */((constructor as any)))[PROP_METADATA] :\n          Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n * \n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n * \n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n * \n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n * \n * \\@NgModule({ \n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n * \n * \\@experimental\n */\nexport const /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function AttributeDecorator() {}\n\n\nfunction AttributeDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(name: string): any;\n*/\n/* TODO: handle strange member:\nnew (name: string): Attribute;\n*/\n}\n\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @stable\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @stable\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n/**\n * Attribute decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n *\n * @stable\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n/**\n * Base class for query metadata.\n * \n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Query {}\n/**\n * Type of the ContentChildren decorator / constructor function.\n * \n * See {\\@link ContentChildren}.\n * \n * \\@stable\n * @record\n */\nexport function ContentChildrenDecorator() {}\n\n\nfunction ContentChildrenDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n*/\n}\n\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {@link ContentChildren}.\n *\n * @stable\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChildren to get the {@link QueryList} of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n * @stable\n * @Annotation\n */\nexport type ContentChildren = Query;\n/**\n * ContentChildren decorator and metadata.\n * \n *  \\@stable\n *  \\@Annotation\n */\nexport const /** @type {?} */ ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n    Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n * \n * \n * \\@stable\n * @record\n */\nexport function ContentChildDecorator() {}\n\n\nfunction ContentChildDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n*/\n}\n\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * @stable\n */\nexport interface ContentChildDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * See {@link ContentChild}.\n *\n * @stable\n */\nexport type ContentChild = Query;\n/**\n * ContentChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n * \n * See {\\@link ViewChildren}.\n * \n * \\@stable\n * @record\n */\nexport function ViewChildrenDecorator() {}\n\n\nfunction ViewChildrenDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n*/\n}\n\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {@link ViewChildren}.\n *\n * @stable\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @stable\n */\nexport type ViewChildren = Query;\n/**\n * ViewChildren decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n * \n * See {\\@link ViewChild}\n * \n * \\@stable\n * @record\n */\nexport function ViewChildDecorator() {}\n\n\nfunction ViewChildDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(selector: Type<any>|Function|string, opts?: {read?: any}): any;\n*/\n/* TODO: handle strange member:\nnew (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n*/\n}\n\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {@link ViewChild}\n *\n * @stable\n */\nexport interface ViewChildDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChild to get the first element or the directive matching the selector from the\n   * view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @stable\n */\nexport type ViewChild = Query;\n/**\n * ViewChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport type ChangeDetectionStrategy = number;\nexport let ChangeDetectionStrategy: any = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\nexport type ChangeDetectorStatus = number;\nexport let ChangeDetectorStatus: any = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\n\nimport {ViewEncapsulation} from './view';\n/**\n * Type of the Directive decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function DirectiveDecorator() {}\n\n\nfunction DirectiveDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj: Directive): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj: Directive): Directive;\n*/\n}\n\n\n\n/**\n * Type of the Directive decorator / constructor function.\n *\n * @stable\n */\nexport interface DirectiveDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular directive and collects directive configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * }\n   * ```\n   *\n   * @description\n   *\n   * Directive decorator allows you to mark a class as an Angular directive and provide additional\n   * metadata that determines how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directives allow you to attach behavior to elements in the DOM..\n   *\n   * A directive must belong to an NgModule in order for it to be usable\n   * by another directive, component, or application. To specify that a directive is a member of an\n   * NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Directive decorator,\n   * directives can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   * attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **outputs** - list of class property names that expose output events that others can\n   * subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the {@link Directive} decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\nexport interface Directive {\n  /**\n   * The CSS selector that triggers the instantiation of a directive.\n   *\n   * Angular only allows directives to trigger on CSS selectors that do not cross element\n   * boundaries.\n   *\n   * `selector` may be declared as one of the following:\n   *\n   * - `element-name`: select by element name.\n   * - `.class`: select by class name.\n   * - `[attribute]`: select by attribute name.\n   * - `[attribute=value]`: select by attribute name and value.\n   * - `:not(sub_selector)`: select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: select if either `selector1` or `selector2` matches.\n   *\n   *\n   * ### Example\n   *\n   * Suppose we have a directive with an `input[type=text]` selector.\n   *\n   * And the following HTML:\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   * The directive would only be instantiated on the `<input type=\"text\">` element.\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   *\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ivhfXY?p=preview))\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   * class App {}\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/d5CNq7?p=preview))\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   *   outputs: ['everySecond', 'five5Secs: everyFiveSeconds']\n   * })\n   * class IntervalDir {\n   *   everySecond = new EventEmitter();\n   *   five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Specify the events, actions, properties and attributes related to the host element.\n   *\n   * ## Host Listeners\n   *\n   * Specifies which DOM events a directive listens to via a set of `(event)` to `method`\n   * key-value pairs:\n   *\n   * - `event`: the DOM event that the directive listens to.\n   * - `statement`: the statement to execute when the event occurs.\n   * If the evaluation of the statement returns `false`, then `preventDefault`is applied on the DOM\n   * event.\n   *\n   * To listen to global events, a target must be added to the event name.\n   * The target can be `window`, `document` or `body`.\n   *\n   * When writing a directive event binding, you can also refer to the $event local variable.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/DlA5KU?p=preview))\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'button[counting]',\n   *   host: {\n   *     '(click)': 'onClick($event.target)'\n   *   }\n   * })\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   onClick(btn) {\n   *     console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<button counting>Increment</button>`\n   * })\n   * class App {}\n   * ```\n   *\n   * ## Host Property Bindings\n   *\n   * Specifies which DOM properties a directive updates.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/gNg0ED?p=preview))\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[ngModel]',\n   *   host: {\n   *     '[class.valid]': 'valid',\n   *     '[class.invalid]': 'invalid'\n   *   }\n   * })\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   get valid { return this.control.valid; }\n   *   get invalid { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   * ## Attributes\n   *\n   * Specifies static attributes that should be propagated to a host element.\n   *\n   * ### Example\n   *\n   * In this example using `my-button` directive (ex.: `<div my-button></div>`) on a host element\n   * (here: `<div>` ) will ensure that this element will get the \"button\" role.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[my-button]',\n   *   host: {\n   *     'role': 'button'\n   *   }\n   * })\n   * class MyButton {\n   * }\n   * ```\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * Defines the set of injectable objects that are visible to a Directive and its light DOM\n   * children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'greet',\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   *\n   * ```\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * ### Example\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   */\n  queries?: {[key: string]: any};\n}\n/**\n * Directive decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Directive: DirectiveDecorator =\n    makeDecorator('Directive', (dir: Directive = {}) => dir);\n/**\n * Type of the Component decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function ComponentDecorator() {}\n\n\nfunction ComponentDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj: Component): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj: Component): Component;\n*/\n}\n\n\n/**\n * Type of the Component decorator / constructor function.\n *\n * @stable\n */\nexport interface ComponentDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular component and collects component configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @description\n   * Component decorator allows you to mark a class as an Angular component and provide additional\n   * metadata that determines how the component should be processed, instantiated and used at\n   * runtime.\n   *\n   * Components are the most basic building block of an UI in an Angular application.\n   * An Angular application is a tree of Angular components.\n   * Angular components are a subset of directives. Unlike directives, components always have\n   * a template and only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be usable\n   * by another component or application. To specify that a component is a member of an NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Component decorator,\n   * components can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **animations** - list of animations of this component\n   * * **changeDetection** - change detection strategy used by this component\n   * * **encapsulation** - style encapsulation strategy used by this component\n   * * **entryComponents** - list of components that are dynamically inserted into the view of this\n   *   component\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   *   attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **interpolation** - custom interpolation markers used in this component's template\n   * * **moduleId** - ES/CommonJS module id of the file in which this component is defined\n   * * **outputs** - list of class property names that expose output events that others can\n   *   subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   * * **styleUrls** - list of urls to stylesheets to be applied to this component's view\n   * * **styles** - inline-defined styles to be applied to this component's view\n   * * **template** - inline-defined template for the view\n   * * **templateUrl** - url to an external file containing a template for the view\n   * * **viewProviders** - list of providers available to this component and its view children\n   *\n   * ### Example\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the {@link Component} decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Type of the Component metadata.\n *\n * @stable\n */\nexport interface Component extends Directive {\n  /**\n   * Defines the used change detection strategy.\n   *\n   * When a component is instantiated, Angular creates a change detector, which is responsible for\n   * propagating the component's bindings.\n   *\n   * The `changeDetection` property defines, whether the change detection will be checked every time\n   * or only when the component tells it to do so.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module id of the module that contains the component.\n   * Needed to be able to resolve relative urls for templates and styles.\n   * In CommonJS, this can always be set to `module.id`, similarly SystemJS exposes `__moduleName`\n   * variable within each module.\n   *\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'someDir',\n   *   moduleId: module.id\n   * })\n   * class SomeDir {\n   * }\n   *\n   * ```\n   */\n  moduleId?: string;\n\n  /**\n   * Specifies a template URL for an Angular component.\n   *\n   *Only one of `templateUrl` or `template` can be defined per View.\n   */\n  templateUrl?: string;\n\n  /**\n   * Specifies an inline template for an Angular component.\n   *\n   * Only one of `templateUrl` or `template` can be defined per Component.\n   */\n  template?: string;\n\n  /**\n   * Specifies stylesheet URLs for an Angular component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * Specifies inline stylesheets for an Angular component.\n   */\n  styles?: string[];\n\n  /**\n   * Animations are defined on components via an animation-like DSL. This DSL approach to describing\n   * animations allows for a flexibility that both benefits developers and the framework.\n   *\n   * Animations work by listening on state changes that occur on an element within\n   * the template. When a state change occurs, Angular can then take advantage and animate the\n   * arc in between. This works similar to how CSS transitions work, however, by having a\n   * programmatic DSL, animations are not limited to environments that are DOM-specific.\n   * (Angular can also perform optimizations behind the scenes to make animations more performant.)\n   *\n   * For animations to be available for use, animation state changes are placed within\n   * {@link trigger animation triggers} which are housed inside of the `animations` annotation\n   * metadata. Within a trigger both {@link state state} and {@link transition transition} entries\n   * can be placed.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'animation-cmp',\n   *   templateUrl: 'animation-cmp.html',\n   *   animations: [\n   *     // this here is our animation trigger that\n   *     // will contain our state change animations.\n   *     trigger('myTriggerName', [\n   *       // the styles defined for the `on` and `off`\n   *       // states declared below are persisted on the\n   *       // element once the animation completes.\n   *       state('on', style({ opacity: 1 }),\n   *       state('off', style({ opacity: 0 }),\n   *\n   *       // this here is our animation that kicks off when\n   *       // this state change jump is true\n   *       transition('on => off', [\n   *         animate(\"1s\")\n   *       ])\n   *     ])\n   *   ]\n   * })\n   * ```\n   *\n   * As depicted in the code above, a group of related animation states are all contained within\n   * an animation `trigger` (the code example above called the trigger `myTriggerName`).\n   * When a trigger is created then it can be bound onto an element within the component's\n   * template via a property prefixed by an `@` symbol followed by trigger name and an expression\n   * that\n   * is used to determine the state value for that trigger.\n   *\n   * ```html\n   * <!-- animation-cmp.html -->\n   * <div @myTriggerName=\"expression\">...</div>\n   * ```\n   *\n   * For state changes to be executed, the `expression` value must change value from its existing\n   * value\n   * to something that we have set an animation to animate on (in the example above we are listening\n   * to a change of state between `on` and `off`). The `expression` value attached to the trigger\n   * must be something that can be evaluated with the template/component context.\n   *\n   * ### DSL Animation Functions\n   *\n   * Please visit each of the animation DSL functions listed below to gain a better understanding\n   * of how and why they are used for crafting animations in Angular:\n   *\n   * - {@link trigger trigger()}\n   * - {@link state state()}\n   * - {@link transition transition()}\n   * - {@link group group()}\n   * - {@link sequence sequence()}\n   * - {@link style style()}\n   * - {@link animate animate()}\n   * - {@link keyframes keyframes()}\n   */\n  animations?: any[];\n\n  /**\n   * Specifies how the template and the styles should be encapsulated:\n   * - {@link ViewEncapsulation#Native `ViewEncapsulation.Native`} to use shadow roots - only works\n   *   if natively available on the platform,\n   * - {@link ViewEncapsulation#Emulated `ViewEncapsulation.Emulated`} to use shimmed CSS that\n   *   emulates the native behavior,\n   * - {@link ViewEncapsulation#None `ViewEncapsulation.None`} to use global CSS without any\n   *   encapsulation.\n   *\n   * When no `encapsulation` is defined for the component, the default value from the\n   * {@link CompilerOptions} is used. The default is `ViewEncapsulation.Emulated`}. Provide a new\n   * `CompilerOptions` to override this value.\n   *\n   * If the encapsulation is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * nor `styleUrls` the encapsulation will automatically be switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (respectively `{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * Defines the components that should be compiled as well when\n   * this component is defined. For each components listed here,\n   * Angular will create a {@link ComponentFactory} and store it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n}\n/**\n * Component decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function PipeDecorator() {}\n\n\nfunction PipeDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj: Pipe): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj: Pipe): Pipe;\n*/\n}\n\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @stable\n */\nexport interface PipeDecorator {\n  /**\n   * Declare reusable pipe function.\n   *\n   * A \"pure\" pipe is only re-evaluated when either the input or any of the arguments change.\n   *\n   * When not specified, pipes default to being pure.\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the {@link Pipe} decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @stable\n */\nexport interface Pipe {\n  name: string;\n  pure?: boolean;\n}\n/**\n * Pipe decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Pipe: PipeDecorator = makeDecorator('Pipe', (p: Pipe) => ({pure: true, ...p}));\n/**\n * Type of the Input decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function InputDecorator() {}\n\n\nfunction InputDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(bindingPropertyName?: string): any;\n*/\n/* TODO: handle strange member:\nnew (bindingPropertyName?: string): any;\n*/\n}\n\n\n\n/**\n * Type of the Input decorator / constructor function.\n *\n * @stable\n */\nexport interface InputDecorator {\n  /**\n   * Declares a data-bound input property.\n   *\n   * Angular automatically updates data-bound properties during change detection.\n   *\n   * `Input` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * The following example creates a component with two input properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   @Input() bankName: string;\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Input metadata.\n *\n * @stable\n */\nexport interface Input {\n  /**\n   * Name used when instantiating a component in the template.\n   */\n  bindingPropertyName?: string;\n}\n/**\n * Input decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Input: InputDecorator =\n    makePropDecorator('Input', (bindingPropertyName?: string) => ({bindingPropertyName}));\n/**\n * Type of the Output decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function OutputDecorator() {}\n\n\nfunction OutputDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(bindingPropertyName?: string): any;\n*/\n/* TODO: handle strange member:\nnew (bindingPropertyName?: string): any;\n*/\n}\n\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @stable\n */\nexport interface OutputDecorator {\n  /**\n   * Declares an event-bound output property.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * `Output` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   * })\n   * class IntervalDir {\n   *   @Output() everySecond = new EventEmitter();\n   *   @Output('everyFiveSeconds') five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @stable\n */\nexport interface Output { bindingPropertyName?: string; }\n/**\n * Output decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Output: OutputDecorator =\n    makePropDecorator('Output', (bindingPropertyName?: string) => ({bindingPropertyName}));\n/**\n * Type of the HostBinding decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function HostBindingDecorator() {}\n\n\nfunction HostBindingDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(hostPropertyName?: string): any;\n*/\n/* TODO: handle strange member:\nnew (hostPropertyName?: string): any;\n*/\n}\n\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @stable\n */\nexport interface HostBindingDecorator {\n  /**\n   * Declares a host property binding.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * `HostBinding` takes an optional parameter that specifies the property\n   * name of the host element that will be updated. When not provided,\n   * the class property name is used.\n   *\n   * ### Example\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   * @stable\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @stable\n */\nexport interface HostBinding { hostPropertyName?: string; }\n/**\n * HostBinding decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n/**\n * Type of the HostListener decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function HostListenerDecorator() {}\n\n\nfunction HostListenerDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(eventName: string, args?: string[]): any;\n*/\n/* TODO: handle strange member:\nnew (eventName: string, args?: string[]): any;\n*/\n}\n\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @stable\n */\nexport interface HostListenerDecorator {\n  /**\n   * Declares a host listener.\n   *\n   * Angular will invoke the decorated method when the host element emits the specified event.\n   *\n   * If the decorated method returns `false`, then `preventDefault` is applied on the DOM event.\n   *\n   * ### Example\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({selector: 'button[counting]'})\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   @HostListener('click', ['$event.target'])\n   *   onClick(btn) {\n   *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: '<button counting>Increment</button>',\n   * })\n   * class App {}\n   * ```\n   * @stable\n   * @Annotation\n   */\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @stable\n */\nexport interface HostListener {\n  eventName?: string;\n  args?: string[];\n}\n/**\n * HostListener decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../change_detection/change_detection_util';\n/**\n * A `changes` object whose keys are property names and\n * values are instances of {\\@link SimpleChange}. See {\\@link OnChanges}\n * \\@stable\n * @record\n */\nexport function SimpleChanges() {}\n\n\nfunction SimpleChanges_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n[propName: string]: SimpleChange;\n*/\n}\n\n\n\n/**\n * A `changes` object whose keys are property names and\n * values are instances of {@link SimpleChange}. See {@link OnChanges}\n * @stable\n */\nexport interface SimpleChanges { [propName: string]: SimpleChange; }\n/**\n * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n * \n * \\@description \n * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n * and content children are checked if at least one of them has changed.\n * The `changes` parameter contains the changed properties.\n * \n * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function OnChanges() {}\n\n\nfunction OnChanges_tsickle_Closure_declarations() {\n/** @type {?} */\nOnChanges.prototype.ngOnChanges;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n *\n * @description\n * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n * and content children are checked if at least one of them has changed.\n * The `changes` parameter contains the changed properties.\n *\n * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnChanges { ngOnChanges(changes: SimpleChanges): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n * initialized.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n * \n * \\@description \n * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n * first time, and before any of its children have been checked. It is invoked only once when the\n * directive is instantiated.\n * \n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function OnInit() {}\n\n\nfunction OnInit_tsickle_Closure_declarations() {\n/** @type {?} */\nOnInit.prototype.ngOnInit;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n *\n * @description\n * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n * first time, and before any of its children have been checked. It is invoked only once when the\n * directive is instantiated.\n *\n * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnInit { ngOnInit(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n * \n * \\@description \n * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n * algorithm. The default change detection algorithm looks for differences by comparing\n * bound-property values by reference across change detection runs.\n * \n * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n * detector detects changes.\n * \n * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n * for collections.\n * \n * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function DoCheck() {}\n\n\nfunction DoCheck_tsickle_Closure_declarations() {\n/** @type {?} */\nDoCheck.prototype.ngDoCheck;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n *\n * @description\n * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n * algorithm. The default change detection algorithm looks for differences by comparing\n * bound-property values by reference across change detection runs.\n *\n * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n * detector detects changes.\n *\n * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n * for collections.\n *\n * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface DoCheck { ngDoCheck(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n * \n * \\@description \n * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n * instance is destroyed.\n * \n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function OnDestroy() {}\n\n\nfunction OnDestroy_tsickle_Closure_declarations() {\n/** @type {?} */\nOnDestroy.prototype.ngOnDestroy;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n *\n * @description\n * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n * instance is destroyed.\n *\n * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnDestroy { ngOnDestroy(): void; }\n/**\n *\n * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n * initialized.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterContentInit() {}\n\n\nfunction AfterContentInit_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterContentInit.prototype.ngAfterContentInit;\n}\n\n\n/**\n *\n * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterContentInit { ngAfterContentInit(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterContentChecked() {}\n\n\nfunction AfterContentChecked_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterContentChecked.prototype.ngAfterContentChecked;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterContentChecked { ngAfterContentChecked(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n * initialized.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterViewInit() {}\n\n\nfunction AfterViewInit_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterViewInit.prototype.ngAfterViewInit;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterViewInit { ngAfterViewInit(): void; }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n * \\@howToUse \n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n * \n * \\@description \n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n * \n * \\@stable\n * @record\n */\nexport function AfterViewChecked() {}\n\n\nfunction AfterViewChecked_tsickle_Closure_declarations() {\n/** @type {?} */\nAfterViewChecked.prototype.ngAfterViewChecked;\n}\n\n\n/**\n * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterViewChecked { ngAfterViewChecked(): void; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n/**\n * A wrapper around a module that also includes the providers.\n * \n * \\@stable\n * @record\n */\nexport function ModuleWithProviders() {}\n\n\nfunction ModuleWithProviders_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithProviders.prototype.ngModule;\n/** @type {?|undefined} */\nModuleWithProviders.prototype.providers;\n}\n\n\n/**\n * A wrapper around a module that also includes the providers.\n *\n * @stable\n */\nexport interface ModuleWithProviders {\n  ngModule: Type<any>;\n  providers?: Provider[];\n}\n/**\n * Interface for schema definitions in \\@NgModules.\n * \n * \\@experimental\n * @record\n */\nexport function SchemaMetadata() {}\n\n\nfunction SchemaMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nSchemaMetadata.prototype.name;\n}\n\n\n/**\n * Interface for schema definitions in @NgModules.\n *\n * @experimental\n */\nexport interface SchemaMetadata { name: string; }\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n * \n * \\@stable\n */\nexport const /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function NgModuleDecorator() {}\n\n\nfunction NgModuleDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(obj?: NgModule): TypeDecorator;\n*/\n/* TODO: handle strange member:\nnew (obj?: NgModule): NgModule;\n*/\n}\n\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * @stable\n */\nexport interface NgModuleDecorator {\n  /**\n   * Defines an NgModule.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @stable\n */\nexport interface NgModule {\n  /**\n   * Defines the set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Specifies a list of directives/pipes that belong to this module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of modules whose exported directives/pipes\n   * should be available to templates in this module.\n   * This can also contain {@link ModuleWithProviders}.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   */\n  imports?: Array<Type<any>|ModuleWithProviders|any[]>;\n\n  /**\n   * Specifies a list of directives/pipes/modules that can be used within the template\n   * of any component that is part of an Angular module\n   * that imports this Angular module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of components that should be compiled when this module is defined.\n   * For each component listed here, Angular will create a {@link ComponentFactory}\n   * and store it in the {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * Defines the components that should be bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * will automatically be added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * Elements and properties that are not Angular components nor directives have to be declared in\n   * the schema.\n   *\n   * Available schemas:\n   * - `NO_ERRORS_SCHEMA`: any elements and properties are allowed,\n   * - `CUSTOM_ELEMENTS_SCHEMA`: any custom elements (tag name has \"-\") with any properties are\n   *   allowed.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA` we're trusting that\n   * allowed elements (and its properties) securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * An opaque ID for this module, e.g. a name or a path. Used to identify modules in\n   * `getModuleFactory`. If left `undefined`, the `NgModule` will not be registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n}\n/**\n * NgModule decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ NgModule: NgModuleDecorator =\n    makeDecorator('NgModule', (ngModule: NgModule) => ngModule);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport type ViewEncapsulation = number;\nexport let ViewEncapsulation: any = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * Metadata properties available for configuring Views.\n * \n * For details on the `\\@Component` annotation, see {\\@link Component}.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n * \n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n * \n * @deprecated Use Component instead.\n * \n * {\\@link Component}\n */\nexport class ViewMetadata {\n/**\n * {\\@link Component#templateUrl}\n */\ntemplateUrl: string|undefined;\n/**\n * {\\@link Component#template}\n */\ntemplate: string|undefined;\n/**\n * {\\@link Component#stylesUrl}\n */\nstyleUrls: string[]|undefined;\n/**\n * {\\@link Component#styles}\n */\nstyles: string[]|undefined;\n/**\n * {\\@link Component#encapsulation}\n */\nencapsulation: ViewEncapsulation|undefined;\n/**\n * {\\@link Component#animation}\n */\nanimations: any[]|undefined;\n/**\n * {\\@link Component#interpolation}\n */\ninterpolation: [string, string]|undefined;\n/**\n * @param {?=} opts\n */\nconstructor(opts: {\n    templateUrl?: string,\n    template?: string,\n    encapsulation?: ViewEncapsulation,\n    styles?: string[],\n    styleUrls?: string[],\n    animations?: any[],\n    interpolation?: [string, string]\n  } = {}) {\n    this.templateUrl = opts.templateUrl;\n    this.template = opts.template;\n    this.styleUrls = opts.styleUrls;\n    this.styles = opts.styles;\n    this.encapsulation = opts.encapsulation;\n    this.animations = opts.animations;\n    this.interpolation = opts.interpolation;\n  }\n}\n\nfunction ViewMetadata_tsickle_Closure_declarations() {\n/**\n * {\\@link Component#templateUrl}\n * @type {?}\n */\nViewMetadata.prototype.templateUrl;\n/**\n * {\\@link Component#template}\n * @type {?}\n */\nViewMetadata.prototype.template;\n/**\n * {\\@link Component#stylesUrl}\n * @type {?}\n */\nViewMetadata.prototype.styleUrls;\n/**\n * {\\@link Component#styles}\n * @type {?}\n */\nViewMetadata.prototype.styles;\n/**\n * {\\@link Component#encapsulation}\n * @type {?}\n */\nViewMetadata.prototype.encapsulation;\n/**\n * {\\@link Component#animation}\n * @type {?}\n */\nViewMetadata.prototype.animations;\n/**\n * {\\@link Component#interpolation}\n * @type {?}\n */\nViewMetadata.prototype.interpolation;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This indirection is needed to free up Component, etc symbols in the public API\n * to be used by the decorator versions of these annotations.\n */\n\nimport {Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren} from './metadata/di';\nimport {Component, Directive, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nimport {ModuleWithProviders, NgModule, SchemaMetadata} from './metadata/ng_module';\nimport {ViewEncapsulation} from './metadata/view';\n\nexport {ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildDecorator, ContentChildren, ContentChildrenDecorator, Query, ViewChild, ViewChildDecorator, ViewChildren, ViewChildrenDecorator} from './metadata/di';\nexport {Component, ComponentDecorator, Directive, DirectiveDecorator, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nexport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit} from './metadata/lifecycle_hooks';\nexport {CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NO_ERRORS_SCHEMA, NgModule, SchemaMetadata} from './metadata/ng_module';\nexport {ViewEncapsulation} from './metadata/view';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@whatItDoes Represents the version of Angular\n * \n * \\@stable\n */\nexport class Version {\n/**\n * @param {?} full\n */\nconstructor(public full: string) {}\n/**\n * @return {?}\n */\nget major(): string { return this.full.split('.')[0]; }\n/**\n * @return {?}\n */\nget minor(): string { return this.full.split('.')[1]; }\n/**\n * @return {?}\n */\nget patch(): string { return this.full.split('.').slice(2).join('.'); }\n}\n\nfunction Version_tsickle_Closure_declarations() {\n/** @type {?} */\nVersion.prototype.full;\n}\n\n/**\n * \\@stable\n */\nexport const /** @type {?} */ VERSION = new Version('5.0.0-beta.3-14502f5b34');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\n/**\n * Type of the Inject decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function InjectDecorator() {}\n\n\nfunction InjectDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(token: any): any;\n*/\n/* TODO: handle strange member:\nnew (token: any): Inject;\n*/\n}\n\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectDecorator {\n  /**\n   * @whatItDoes A parameter decorator that specifies a dependency.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Inject(\"MyEngine\") public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, {@link Injector} will use the type annotation of the\n   * parameter.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   *\n   * @stable\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @stable\n */\nexport interface Inject { token: any; }\n/**\n * Inject decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n/**\n * Type of the Optional decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function OptionalDecorator() {}\n\n\nfunction OptionalDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Optional;\n*/\n}\n\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @stable\n */\nexport interface OptionalDecorator {\n  /**\n   * @whatItDoes A parameter metadata that marks a dependency as optional.\n   * {@link Injector} provides `null` if the dependency is not found.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Optional() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @stable\n */\nexport interface Optional {}\n/**\n * Optional decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Optional: OptionalDecorator = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function InjectableDecorator() {}\n\n\nfunction InjectableDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Injectable;\n*/\n}\n\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectableDecorator {\n  /**\n   * @whatItDoes A marker metadata that marks a class as available to {@link Injector} for creation.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {}\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * {@link Injector} will throw an error when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @stable\n */\nexport interface Injectable {}\n/**\n * Injectable decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Injectable: InjectableDecorator = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function SelfDecorator() {}\n\n\nfunction SelfDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Self;\n*/\n}\n\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @stable\n */\nexport interface SelfDecorator {\n  /**\n   * @whatItDoes Specifies that an {@link Injector} should retrieve a dependency only from itself.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Self() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @stable\n */\nexport interface Self {}\n/**\n * Self decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Self: SelfDecorator = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function SkipSelfDecorator() {}\n\n\nfunction SkipSelfDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): SkipSelf;\n*/\n}\n\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @stable\n */\nexport interface SkipSelfDecorator {\n  /**\n   * @whatItDoes Specifies that the dependency resolution should start from the parent injector.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@SkipSelf() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @stable\n */\nexport interface SkipSelf {}\n/**\n * SkipSelf decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n * \n * \\@stable\n * @record\n */\nexport function HostDecorator() {}\n\n\nfunction HostDecorator_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n/* TODO: handle strange member:\nnew (): Host;\n*/\n}\n\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @stable\n */\nexport interface HostDecorator {\n  /**\n   * @whatItDoes Specifies that an injector should retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Host() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @stable\n */\nexport interface Host {}\n/**\n * Host decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const /** @type {?} */ Host: HostDecorator = makeParamDecorator('Host');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst /** @type {?} */ __window = typeof window !== 'undefined' && window;\nconst /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst /** @type {?} */ __global = typeof global !== 'undefined' && global;\nconst /** @type {?} */ _global: {[name: string]: any} = __window || __global || __self;\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const /** @type {?} */ Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n * \n * ### Example\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\nexport function ForwardRefFn() {}\n\n\nfunction ForwardRefFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): any;\n*/\n}\n\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @experimental\n */\nexport interface ForwardRefFn { (): any; }\n/**\n * Allows to refer to references which are not yet defined.\n * \n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n * \n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  ( /** @type {?} */((<any>forwardRefFn))).__forward_ref__ = forwardRef;\n  ( /** @type {?} */((<any>forwardRefFn))).toString = function() { return stringify(this()); };\n  return ( /** @type {?} */((<Type<any>> /** @type {?} */((<any>forwardRefFn)))));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * \n * Acts as the identity function when given a non-forward-ref value.\n * \n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n * \n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return ( /** @type {?} */((<ForwardRefFn>type)))();\n  } else {\n    return type;\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ConstructorProvider, ExistingProvider, FactoryProvider, StaticClassProvider, StaticProvider, ValueProvider} from './provider';\n\nconst /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\nexport const /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector implements Injector {\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse \n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new _NullInjector();\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * If not found:\n   * - Throws an error if no `notFoundValue` that is not equal to\n   * Injector.THROW_IF_NOT_FOUND is given\n   * - Returns the `notFoundValue` otherwise\n   */\n  abstract get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T): T;\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n/**\n * Create a new Injector which is configure using `StaticProvider`s.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic create(providers: StaticProvider[], parent?: Injector): Injector {\n    return new StaticInjector(providers, parent);\n  }\n}\n\nfunction Injector_tsickle_Closure_declarations() {\n/** @type {?} */\nInjector.THROW_IF_NOT_FOUND;\n/** @type {?} */\nInjector.NULL;\n\n/**\n * Retrieves an instance from the injector based on the provided token.\n * If not found:\n * - Throws an error if no `notFoundValue` that is not equal to\n * Injector.THROW_IF_NOT_FOUND is given\n * - Returns the `notFoundValue` otherwise\n * @abstract\n * @template T\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nInjector.prototype.get = function(token, notFoundValue) {};\n\n/**\n * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n * @suppress {duplicate}\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nInjector.prototype.get = function(token, notFoundValue) {};\n}\n\n\n\n\nconst /** @type {?} */ IDENT = function<T>(value: T): T {\n  return value;\n};\nconst /** @type {?} */ EMPTY = /** @type {?} */(( <any[]>[]));\nconst /** @type {?} */ CIRCULAR = IDENT;\nconst /** @type {?} */ MULTI_PROVIDER_FN = function(): any[] {\n  return Array.prototype.slice.call(arguments);\n};\nconst /** @type {?} */ GET_PROPERTY_NAME = /** @type {?} */(( {} as any));\nconst /** @type {?} */ USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: GET_PROPERTY_NAME});\nconst /** @type {?} */ NG_TOKEN_PATH = 'ngTokenPath';\nconst /** @type {?} */ NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst enum OptionFlags {\n  Optional = 1 << 0,\n  CheckSelf = 1 << 1,\n  CheckParent = 1 << 2,\n  Default = CheckSelf | CheckParent\n}\nconst /** @type {?} */ NULL_INJECTOR = Injector.NULL;\nconst /** @type {?} */ NEW_LINE = /\\n/gm;\nconst /** @type {?} */ NO_NEW_LINE = 'ɵ';\nexport class StaticInjector implements Injector {\n  readonly parent: Injector;\nprivate _records: Map<any, Record>;\n/**\n * @param {?} providers\n * @param {?=} parent\n */\nconstructor(providers: StaticProvider[], parent: Injector = NULL_INJECTOR) {\n    this.parent = parent;\n    const /** @type {?} */ records = this._records = new Map<any, Record>();\n    records.set(\n        Injector, /** @type {?} */(( <Record>{token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false})));\n    recursivelyProcessProviders(records, providers);\n  }\n\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T): T;\n  get(token: any, notFoundValue?: any): any;\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any): any {\n    const /** @type {?} */ record = this._records.get(token);\n    try {\n      return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n    } catch ( /** @type {?} */e) {\n      const /** @type {?} */ tokenPath: any[] = e[NG_TEMP_TOKEN_PATH];\n      e.message = formatError('\\n' + e.message, tokenPath);\n      e[NG_TOKEN_PATH] = tokenPath;\n      e[NG_TEMP_TOKEN_PATH] = null;\n      throw e;\n    }\n  }\n/**\n * @return {?}\n */\ntoString() {\n    const /** @type {?} */ tokens = /** @type {?} */(( <string[]>[])), /** @type {?} */ records = this._records;\n    records.forEach((v, token) => tokens.push(stringify(token)));\n    return `StaticInjector[${tokens.join(', ')}]`;\n  }\n}\n\nfunction StaticInjector_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticInjector.prototype.parent;\n/** @type {?} */\nStaticInjector.prototype._records;\n}\n\n\ntype SupportedProvider =\n    ValueProvider | ExistingProvider | StaticClassProvider | ConstructorProvider | FactoryProvider;\n/**\n * @record\n */\nfunction Record() {}\n\n\nfunction Record_tsickle_Closure_declarations() {\n/** @type {?} */\nRecord.prototype.fn;\n/** @type {?} */\nRecord.prototype.useNew;\n/** @type {?} */\nRecord.prototype.deps;\n/** @type {?} */\nRecord.prototype.value;\n}\n\n\ninterface Record {\n  fn: Function;\n  useNew: boolean;\n  deps: DependencyRecord[];\n  value: any;\n}\n/**\n * @record\n */\nfunction DependencyRecord() {}\n\n\nfunction DependencyRecord_tsickle_Closure_declarations() {\n/** @type {?} */\nDependencyRecord.prototype.token;\n/** @type {?} */\nDependencyRecord.prototype.options;\n}\n\n\ninterface DependencyRecord {\n  token: any;\n  options: number;\n}\n\ntype TokenPath = Array<any>;\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider: SupportedProvider): Record {\n  const /** @type {?} */ deps = computeDeps(provider);\n  let /** @type {?} */ fn: Function = IDENT;\n  let /** @type {?} */ value: any = EMPTY;\n  let /** @type {?} */ useNew: boolean = false;\n  let /** @type {?} */ provide = resolveForwardRef(provider.provide);\n  if (USE_VALUE in provider) {\n    // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n    value = ( /** @type {?} */((provider as ValueProvider))).useValue;\n  } else if (( /** @type {?} */((provider as FactoryProvider))).useFactory) {\n    fn = ( /** @type {?} */((provider as FactoryProvider))).useFactory;\n  } else if (( /** @type {?} */((provider as ExistingProvider))).useExisting) {\n    // Just use IDENT\n  } else if (( /** @type {?} */((provider as StaticClassProvider))).useClass) {\n    useNew = true;\n    fn = resolveForwardRef(( /** @type {?} */((provider as StaticClassProvider))).useClass);\n  } else if (typeof provide == 'function') {\n    useNew = true;\n    fn = provide;\n  } else {\n    throw staticError(\n        'StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',\n        provider);\n  }\n  return {deps, fn, useNew, value};\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token: any) {\n  return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records: Map<any, Record>, provider: StaticProvider) {\n  if (provider) {\n    provider = resolveForwardRef(provider);\n    if (provider instanceof Array) {\n      // if we have an array recurse into the array\n      for (let /** @type {?} */ i = 0; i < provider.length; i++) {\n        recursivelyProcessProviders(records, provider[i]);\n      }\n    } else if (typeof provider === 'function') {\n      // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n      // error messages\n      throw staticError('Function/Class not supported', provider);\n    } else if (provider && typeof provider === 'object' && provider.provide) {\n      // At this point we have what looks like a provider: {provide: ?, ....}\n      let /** @type {?} */ token = resolveForwardRef(provider.provide);\n      const /** @type {?} */ resolvedProvider = resolveProvider(provider);\n      if (provider.multi === true) {\n        // This is a multi provider.\n        let /** @type {?} */ multiProvider: Record|undefined = records.get(token);\n        if (multiProvider) {\n          if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n            throw multiProviderMixError(token);\n          }\n        } else {\n          // Create a placeholder factory which will look up the constituents of the multi provider.\n          records.set(token, multiProvider = /** @type {?} */(( <Record>{\n            token: provider.provide,\n            deps: [],\n            useNew: false,\n            fn: MULTI_PROVIDER_FN,\n            value: EMPTY\n          })));\n        }\n        // Treat the provider as the token.\n        token = provider;\n        multiProvider.deps.push({token, options: OptionFlags.Default});\n      }\n      const /** @type {?} */ record = records.get(token);\n      if (record && record.fn == MULTI_PROVIDER_FN) {\n        throw multiProviderMixError(token);\n      }\n      records.set(token, resolvedProvider);\n    } else {\n      throw staticError('Unexpected provider', provider);\n    }\n  }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any): any {\n  try {\n    return resolveToken(token, record, records, parent, notFoundValue);\n  } catch ( /** @type {?} */e) {\n    // ensure that 'e' is of type Error.\n    if (!(e instanceof Error)) {\n      e = new Error(e);\n    }\n    const /** @type {?} */ path: any[] = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n    path.unshift(token);\n    if (record && record.value == CIRCULAR) {\n      // Reset the Circular flag.\n      record.value = EMPTY;\n    }\n    throw e;\n  }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any): any {\n  let /** @type {?} */ value;\n  if (record) {\n    // If we don't have a record, this implies that we don't own the provider hence don't know how\n    // to resolve it.\n    value = record.value;\n    if (value == CIRCULAR) {\n      throw Error(NO_NEW_LINE + 'Circular dependency');\n    } else if (value === EMPTY) {\n      record.value = CIRCULAR;\n      let /** @type {?} */ obj = undefined;\n      let /** @type {?} */ useNew = record.useNew;\n      let /** @type {?} */ fn = record.fn;\n      let /** @type {?} */ depRecords = record.deps;\n      let /** @type {?} */ deps = EMPTY;\n      if (depRecords.length) {\n        deps = [];\n        for (let /** @type {?} */ i = 0; i < depRecords.length; i++) {\n          const /** @type {?} */ depRecord: DependencyRecord = depRecords[i];\n          const /** @type {?} */ options = depRecord.options;\n          const /** @type {?} */ childRecord =\n              options & OptionFlags.CheckSelf ? records.get(depRecord.token) : undefined;\n          deps.push(tryResolveToken(\n              // Current Token to resolve\n              depRecord.token,\n              // A record which describes how to resolve the token.\n              // If undefined, this means we don't have such a record\n              childRecord,\n              // Other records we know about.\n              records,\n              // If we don't know how to resolve dependency and we should not check parent for it,\n              // than pass in Null injector.\n              !childRecord && !(options & OptionFlags.CheckParent) ? NULL_INJECTOR : parent,\n              options & OptionFlags.Optional ? null : Injector.THROW_IF_NOT_FOUND));\n        }\n      }\n      record.value = value = useNew ? new ( /** @type {?} */((fn as any)))(...deps) : fn.apply(obj, deps);\n    }\n  } else {\n    value = parent.get(token, notFoundValue);\n  }\n  return value;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider: StaticProvider): DependencyRecord[] {\n  let /** @type {?} */ deps: DependencyRecord[] = EMPTY;\n  const /** @type {?} */ providerDeps: any[] =\n      ( /** @type {?} */((provider as ExistingProvider & StaticClassProvider & ConstructorProvider))).deps;\n  if (providerDeps && providerDeps.length) {\n    deps = [];\n    for (let /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n      let /** @type {?} */ options = OptionFlags.Default;\n      let /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n      if (token instanceof Array) {\n        for (let /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n          const /** @type {?} */ annotation = annotations[j];\n          if (annotation instanceof Optional || annotation == Optional) {\n            options = options | OptionFlags.Optional;\n          } else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n            options = options & ~OptionFlags.CheckSelf;\n          } else if (annotation instanceof Self || annotation == Self) {\n            options = options & ~OptionFlags.CheckParent;\n          } else if (annotation instanceof Inject) {\n            token = ( /** @type {?} */((annotation as Inject))).token;\n          } else {\n            token = resolveForwardRef(annotation);\n          }\n        }\n      }\n      deps.push({token, options});\n    }\n  } else if (( /** @type {?} */((provider as ExistingProvider))).useExisting) {\n    const /** @type {?} */ token = resolveForwardRef(( /** @type {?} */((provider as ExistingProvider))).useExisting);\n    deps = [{token, options: OptionFlags.Default}];\n  } else if (!providerDeps && !(USE_VALUE in provider)) {\n    // useValue & useExisting are the only ones which are exempt from deps all others need it.\n    throw staticError('\\'deps\\' required', provider);\n  }\n  return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text: string, obj: any): string {\n  text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n  let /** @type {?} */ context = stringify(obj);\n  if (obj instanceof Array) {\n    context = obj.map(stringify).join(' -> ');\n  } else if (typeof obj === 'object') {\n    let /** @type {?} */ parts = /** @type {?} */(( <string[]>[]));\n    for (let /** @type {?} */ key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let /** @type {?} */ value = obj[key];\n        parts.push(\n            key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n      }\n    }\n    context = `{${parts.join(', ')}}`;\n  }\n  return `StaticInjectorError[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text: string, obj: any): Error {\n  return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let /** @type {?} */ key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n      return key;\n    }\n  }\n  throw Error('!prop');\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view';\n\nexport const /** @type {?} */ ERROR_TYPE = 'ngType';\nexport const /** @type {?} */ ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport const /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error: Error): Function {\n  return ( /** @type {?} */((error as any)))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error: Error): DebugContext {\n  return ( /** @type {?} */((error as any)))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error: Error): Error {\n  return ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return ( /** @type {?} */((error as any)))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  ( /** @type {?} */((<any>console.error)))(...values);\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n * \n * \\@description \n * \n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n * \n * ### Example\n * \n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n * \n * \\@NgModule({ \n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n * \n * \\@stable\n */\nexport class ErrorHandler {\n/**\n * \\@internal\n */\n_console: Console = console;\n/**\n * @param {?=} deprecatedParameter\n */\nconstructor(\n      /**\n       * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n       * rethrow.\n       */\n      deprecatedParameter?: boolean) {}\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any): void {\n    const /** @type {?} */ originalError = this._findOriginalError(error);\n    const /** @type {?} */ context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const /** @type {?} */ errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findOriginalError(error: Error): any {\n    let /** @type {?} */ e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nfunction ErrorHandler_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nErrorHandler.prototype._console;\n}\n\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message: string, originalError: any): Error {\n  const /** @type {?} */ msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const /** @type {?} */ error = Error(msg);\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const /** @type {?} */ res: any[] = [];\n  for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n/**\n * @record\n */\nexport function InjectionError() {}\n\n\nfunction InjectionError_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionError.prototype.keys;\n/** @type {?} */\nInjectionError.prototype.injectors;\n/** @type {?} */\nInjectionError.prototype.constructResolvingMessage;\n/** @type {?} */\nInjectionError.prototype.addKey;\n}\n\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const /** @type {?} */ keys = [key];\n  const /** @type {?} */ errMsg = constructResolvingMessage(keys);\n  const /** @type {?} */ error = /** @type {?} */((\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError));\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n * \n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when dependencies form a cycle.\n * \n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n * \n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n * \n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n * \n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n * \n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n * \n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n * \n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n * \n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n * \n * ```typescript\n * class B {}\n * \n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n * \n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const /** @type {?} */ signature: string[] = [];\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n    const /** @type {?} */ parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n * \n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n * \n * ```typescript\n * class A {}\n * \n * var injector = Injector.resolveAndCreate([A]);\n * \n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n * \n * ### Example\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n * \n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n * \n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n * \n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nexport class ReflectiveKey {\n/**\n * Private\n * @param {?} token\n * @param {?} id\n */\nconstructor(public token: Object,\npublic id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n  }\n/**\n * Returns a stringified token.\n * @return {?}\n */\nget displayName(): string { return stringify(this.token); }\n/**\n * Retrieves a `Key` for a token.\n * @param {?} token\n * @return {?}\n */\nstatic get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n/**\n * @return {?} the number of keys registered in the system.\n */\nstatic get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nfunction ReflectiveKey_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveKey.prototype.token;\n/** @type {?} */\nReflectiveKey.prototype.id;\n}\n\n/**\n * \\@internal\n */\nexport class KeyRegistry {\nprivate _allKeys = new Map<Object, ReflectiveKey>();\n/**\n * @param {?} token\n * @return {?}\n */\nget(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return /** @type {?} */(( this._allKeys.get(token)));\n    }\n\n    const /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n/**\n * @return {?}\n */\nget numberOfKeys(): number { return this._allKeys.size; }\n}\n\nfunction KeyRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyRegistry.prototype._allKeys;\n}\n\n\nconst /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n * \n * \\@description \n * \n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n * \n * \\@stable\n */\nexport const /** @type {?} */ Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const /** @type {?} */ DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @template T\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && ( /** @type {?} */((type as any)))[PARAMETERS];\n    const /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return ( /** @type {?} */((typeOrFunc as any)))[ANNOTATIONS];\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\n\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return ( /** @type {?} */((typeOrFunc as any)))[PROP_METADATA];\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return `./${stringify(type)}`; }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * @record\n */\nexport function PlatformReflectionCapabilities() {}\n\n\nfunction PlatformReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.isReflectionEnabled;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.factory;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.hasLifecycleHook;\n/**\n * Return a list of annotations/types for constructor parameters\n * @type {?}\n */\nPlatformReflectionCapabilities.prototype.parameters;\n/**\n * Return a list of annotations declared on the class\n * @type {?}\n */\nPlatformReflectionCapabilities.prototype.annotations;\n/**\n * Return a object literal which describes the annotations on Class fields/properties.\n * @type {?}\n */\nPlatformReflectionCapabilities.prototype.propMetadata;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.getter;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.setter;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.method;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.importUri;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resourceUri;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resolveIdentifier;\n/** @type {?} */\nPlatformReflectionCapabilities.prototype.resolveEnum;\n}\n\n\nexport interface PlatformReflectionCapabilities {\n  isReflectionEnabled(): boolean;\n  factory(type: Type<any>): Function;\n  hasLifecycleHook(type: any, lcProperty: string): boolean;\n\n  /**\n   * Return a list of annotations/types for constructor parameters\n   */\n  parameters(type: Type<any>): any[][];\n\n  /**\n   * Return a list of annotations declared on the class\n   */\n  annotations(type: Type<any>): any[];\n\n  /**\n   * Return a object literal which describes the annotations on Class fields/properties.\n   */\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]};\n  getter(name: string): GetterFn;\n  setter(name: string): SetterFn;\n  method(name: string): MethodFn;\n  importUri(type: Type<any>): string;\n  resourceUri(type: Type<any>): string;\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any;\n  resolveEnum(enumIdentifier: any, name: string): any;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n/**\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction Reflector_tsickle_Closure_declarations() {\n/** @type {?} */\nReflector.prototype.reflectionCapabilities;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @record\n */\nfunction NormalizedProvider() {}\n\n\nfunction NormalizedProvider_tsickle_Closure_declarations() {\n}\n\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n/**\n * @param {?} key\n * @param {?} optional\n * @param {?} visibility\n */\nconstructor(\npublic key: ReflectiveKey,\npublic optional: boolean,\npublic visibility: Self|SkipSelf|null) {}\n/**\n * @param {?} key\n * @return {?}\n */\nstatic fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nfunction ReflectiveDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveDependency.prototype.key;\n/** @type {?} */\nReflectiveDependency.prototype.optional;\n/** @type {?} */\nReflectiveDependency.prototype.visibility;\n}\n\n\nconst /** @type {?} */ _EMPTY_LIST: any[] = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n * \n * It is usually created automatically by `Injector.resolveAndCreate`.\n * \n * It can be created manually, as follows:\n * \n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n * \n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n * \n * expect(injector.get('message')).toEqual('Hello');\n * ```\n * \n * \\@experimental\n * @record\n */\nexport function ResolvedReflectiveProvider() {}\n\n\nfunction ResolvedReflectiveProvider_tsickle_Closure_declarations() {\n/**\n * A key, usually a `Type<any>`.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.key;\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.resolvedFactories;\n/**\n * Indicates if the provider is a multi-provider or a regular provider.\n * @type {?}\n */\nResolvedReflectiveProvider.prototype.multiProvider;\n}\n\n\n/**\n * An internal resolved representation of a {@link Provider} used by the {@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @experimental\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n/**\n * @param {?} key\n * @param {?} resolvedFactories\n * @param {?} multiProvider\n */\nconstructor(\npublic key: ReflectiveKey,\npublic resolvedFactories: ResolvedReflectiveFactory[],\npublic multiProvider: boolean) {}\n/**\n * @return {?}\n */\nget resolvedFactory(): ResolvedReflectiveFactory { return this.resolvedFactories[0]; }\n}\n\nfunction ResolvedReflectiveProvider__tsickle_Closure_declarations() {\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.key;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.resolvedFactories;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.multiProvider;\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nexport class ResolvedReflectiveFactory {\n/**\n * @param {?} factory\n * @param {?} dependencies\n */\nconstructor(\npublic factory: Function,\npublic dependencies: ReflectiveDependency[]) {}\n}\n\nfunction ResolvedReflectiveFactory_tsickle_Closure_declarations() {\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.factory;\n/**\n * Arguments (dependencies) to the `factory` function.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.dependencies;\n}\n\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let /** @type {?} */ factoryFn: Function;\n  let /** @type {?} */ resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n * \n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const /** @type {?} */ normalized = _normalizeProviders(providers, []);\n  const /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n  const /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    const /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let /** @type {?} */ resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && ( /** @type {?} */((b as any))).provide !== undefined) {\n      res.push( /** @type {?} */((b as NormalizedProvider)));\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const /** @type {?} */ params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let /** @type {?} */ token: any = null;\n  let /** @type {?} */ optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let /** @type {?} */ visibility: Self|SkipSelf|null = null;\n\n  for (let /** @type {?} */ i = 0; i < metadata.length; ++i) {\n    const /** @type {?} */ paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf | null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst /** @type {?} */ UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n * \n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n * \n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n * \n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n * \n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n * \n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n * \n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nexport abstract class ReflectiveInjector implements Injector {\n/**\n * Turns an array of provider definitions into an array of resolved providers.\n * \n * A resolution is a process of flattening multiple nested arrays and converting individual\n * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n * \n * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n * \n * expect(providers.length).toEqual(2);\n * \n * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n * expect(providers[0].key.displayName).toBe(\"Car\");\n * expect(providers[0].dependencies.length).toEqual(1);\n * expect(providers[0].factory).toBeDefined();\n * \n * expect(providers[1].key.displayName).toBe(\"Engine\");\n * });\n * ```\n * \n * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n * @param {?} providers\n * @return {?}\n */\nstatic resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n/**\n * Resolves an array of providers and creates an injector from those providers.\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \n * This function is slower than the corresponding `fromResolvedProviders`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n/**\n * Creates an injector from previously resolved providers.\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, Engine]);\n * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \\@experimental\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n\n\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n   *\n   * ```typescript\n   * var parent = ReflectiveInjector.resolveAndCreate([]);\n   * var child = parent.resolveAndCreateChild([]);\n   * expect(child.parent).toBe(parent);\n   * ```\n   */\n  abstract get parent(): Injector|null;\n\n  /**\n   * Resolves an array of providers and creates a child injector from those providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * The passed-in providers can be an array of `Type`, {@link Provider},\n   * or a recursive array of more providers.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n   * var child = parent.resolveAndCreateChild([ChildProvider]);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   *\n   * This function is slower than the corresponding `createChildFromResolved`\n   * because it needs to resolve the passed-in providers first.\n   * See {@link ReflectiveInjector#resolve} and {@link ReflectiveInjector#createChildFromResolved}.\n   */\n  abstract resolveAndCreateChild(providers: Provider[]): ReflectiveInjector;\n\n  /**\n   * Creates a child injector from previously resolved providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n   * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n   *\n   * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n   * var child = parent.createChildFromResolved(childProviders);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector;\n\n  /**\n   * Resolves a provider and instantiates an object in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   *\n   * var car = injector.resolveAndInstantiate(Car);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n   * ```\n   */\n  abstract resolveAndInstantiate(provider: Provider): any;\n\n  /**\n   * Instantiates an object using a resolved provider in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   * var carProvider = ReflectiveInjector.resolve([Car])[0];\n   * var car = injector.instantiateResolved(carProvider);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n   * ```\n   */\n  abstract instantiateResolved(provider: ResolvedReflectiveProvider): any;\n\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nfunction ReflectiveInjector_tsickle_Closure_declarations() {\n\n/**\n * Parent of this injector.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n * \n * ```typescript\n * var parent = ReflectiveInjector.resolveAndCreate([]);\n * var child = parent.resolveAndCreateChild([]);\n * expect(child.parent).toBe(parent);\n * ```\n * @abstract\n * @return {?}\n */\nReflectiveInjector.prototype.parent = function() {};\n\n/**\n * Resolves an array of providers and creates a child injector from those providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n * var child = parent.resolveAndCreateChild([ChildProvider]);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * \n * This function is slower than the corresponding `createChildFromResolved`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#createChildFromResolved}.\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nReflectiveInjector.prototype.resolveAndCreateChild = function(providers) {};\n\n/**\n * Creates a child injector from previously resolved providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n * \n * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n * var child = parent.createChildFromResolved(childProviders);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nReflectiveInjector.prototype.createChildFromResolved = function(providers) {};\n\n/**\n * Resolves a provider and instantiates an object in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * \n * var car = injector.resolveAndInstantiate(Car);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nReflectiveInjector.prototype.resolveAndInstantiate = function(provider) {};\n\n/**\n * Instantiates an object using a resolved provider in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * var carProvider = ReflectiveInjector.resolve([Car])[0];\n * var car = injector.instantiateResolved(carProvider);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nReflectiveInjector.prototype.instantiateResolved = function(provider) {};\n\n/**\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nReflectiveInjector.prototype.get = function(token, notFoundValue) {};\n}\n\nexport class ReflectiveInjector_ implements ReflectiveInjector {\nprivate static INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * \\@internal\n */\n_constructionCounter: number = 0;\n/**\n * \\@internal\n */\n\npublic _providers: ResolvedReflectiveProvider[];\n/**\n * \\@internal\n */\n\npublic _parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n/**\n * Private\n * @param {?} _providers\n * @param {?=} _parent\n */\nconstructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this._parent = _parent || null;\n\n    const /** @type {?} */ len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget parent(): Injector|null { return this._parent; }\n/**\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n/**\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const /** @type {?} */ inj = new ReflectiveInjector_(providers);\n    inj._parent = this;\n    return inj;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n/**\n * \\@internal\n * @param {?} provider\n * @return {?}\n */\n_new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n/**\n * @return {?}\n */\n\nprivate _getMaxNumberOfObjects(): number { return this.objs.length; }\n/**\n * @param {?} provider\n * @return {?}\n */\n\nprivate _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n      for (let /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n/**\n * @param {?} provider\n * @param {?} ResolvedReflectiveFactory\n * @return {?}\n */\n\nprivate _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\n    let /** @type {?} */ deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch ( /** @type {?} */e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let /** @type {?} */ obj: any;\n    try {\n      obj = factory(...deps);\n    } catch ( /** @type {?} */e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\n\nprivate _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n/**\n * @param {?} key\n * @param {?} visibility\n * @param {?} notFoundValue\n * @return {?}\n */\n\nprivate _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === ReflectiveInjector_.INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\n\nprivate _getObjByKeyId(keyId: number): any {\n    for (let /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const /** @type {?} */ obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @param {?} visibility\n * @return {?}\n */\n_getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let /** @type {?} */ inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const /** @type {?} */ inj_ = /** @type {?} */(( <ReflectiveInjector_>inj));\n      const /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n/**\n * @return {?}\n */\nget displayName(): string {\n    const /** @type {?} */ providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.displayName; }\n}\n\nfunction ReflectiveInjector__tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveInjector_.INJECTOR_KEY;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._constructionCounter;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._providers;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._parent;\n/** @type {?} */\nReflectiveInjector_.prototype.keyIds;\n/** @type {?} */\nReflectiveInjector_.prototype.objs;\n}\n\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const /** @type {?} */ res: any[] = new Array(injector._providers.length);\n  for (let /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value for a token.\n * \\@howToUse \n * ```\n * const provider: ValueProvider = {provide: 'someToken', useValue: 'someValue'};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ValueProvider'}\n * \n * \\@stable\n * @record\n */\nexport function ValueProvider() {}\n\n\nfunction ValueProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nValueProvider.prototype.provide;\n/**\n * The value to inject.\n * @type {?}\n */\nValueProvider.prototype.useValue;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nValueProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return a value for a token.\n * @howToUse\n * ```\n * const provider: ValueProvider = {provide: 'someToken', useValue: 'someValue'};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='ValueProvider'}\n *\n * @stable\n */\nexport interface ValueProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * The value to inject.\n   */\n  useValue: any;\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `useClass` for a token.\n * \\@howToUse \n * ```\n * \\@Injectable() \n * class MyService {}\n * \n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService, deps: []};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='StaticClassProvider'}\n * \n * Note that following two providers are not equal:\n * {\\@example core/di/ts/provider_spec.ts region='StaticClassProviderDifference'}\n * \n * \\@stable\n * @record\n */\nexport function StaticClassProvider() {}\n\n\nfunction StaticClassProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nStaticClassProvider.prototype.provide;\n/**\n * An optional class to instantiate for the `token`. (If not provided `provide` is assumed to be a\n * class to\n * instantiate)\n * @type {?}\n */\nStaticClassProvider.prototype.useClass;\n/**\n * A list of `token`s which need to be resolved by the injector. The list of values is then\n * used as arguments to the `useClass` constructor.\n * @type {?}\n */\nStaticClassProvider.prototype.deps;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nStaticClassProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return an instance of `useClass` for a token.\n * @howToUse\n * ```\n * @Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService, deps: []};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='StaticClassProvider'}\n *\n * Note that following two providers are not equal:\n * {@example core/di/ts/provider_spec.ts region='StaticClassProviderDifference'}\n *\n * @stable\n */\nexport interface StaticClassProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * An optional class to instantiate for the `token`. (If not provided `provide` is assumed to be a\n   * class to\n   * instantiate)\n   */\n  useClass: Type<any>;\n\n  /**\n   * A list of `token`s which need to be resolved by the injector. The list of values is then\n   * used as arguments to the `useClass` constructor.\n   */\n  deps: any[];\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of a token.\n * \\@howToUse \n * ```\n * \\@Injectable() \n * class MyService {}\n * \n * const provider: ClassProvider = {provide: MyClass, deps: []};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n * \n * \\@stable\n * @record\n */\nexport function ConstructorProvider() {}\n\n\nfunction ConstructorProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nConstructorProvider.prototype.provide;\n/**\n * A list of `token`s which need to be resolved by the injector. The list of values is then\n * used as arguments to the `useClass` constructor.\n * @type {?}\n */\nConstructorProvider.prototype.deps;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nConstructorProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return an instance of a token.\n * @howToUse\n * ```\n * @Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: MyClass, deps: []};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n *\n * @stable\n */\nexport interface ConstructorProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: Type<any>;\n\n  /**\n   * A list of `token`s which need to be resolved by the injector. The list of values is then\n   * used as arguments to the `useClass` constructor.\n   */\n  deps: any[];\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value of another `useExisting` token.\n * \\@howToUse \n * ```\n * const provider: ExistingProvider = {provide: 'someToken', useExisting: 'someOtherToken'};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ExistingProvider'}\n * \n * \\@stable\n * @record\n */\nexport function ExistingProvider() {}\n\n\nfunction ExistingProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nExistingProvider.prototype.provide;\n/**\n * Existing `token` to return. (equivalent to `injector.get(useExisting)`)\n * @type {?}\n */\nExistingProvider.prototype.useExisting;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nExistingProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return a value of another `useExisting` token.\n * @howToUse\n * ```\n * const provider: ExistingProvider = {provide: 'someToken', useExisting: 'someOtherToken'};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='ExistingProvider'}\n *\n * @stable\n */\nexport interface ExistingProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * Existing `token` to return. (equivalent to `injector.get(useExisting)`)\n   */\n  useExisting: any;\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value by invoking a `useFactory`\n * function.\n * \\@howToUse \n * ```\n * function serviceFactory() { ... }\n * \n * const provider: FactoryProvider = {provide: 'someToken', useFactory: serviceFactory, deps: []};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='FactoryProvider'}\n * \n * Dependencies can also be marked as optional:\n * {\\@example core/di/ts/provider_spec.ts region='FactoryProviderOptionalDeps'}\n * \n * \\@stable\n * @record\n */\nexport function FactoryProvider() {}\n\n\nfunction FactoryProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nFactoryProvider.prototype.provide;\n/**\n * A function to invoke to create a value for this `token`. The function is invoked with\n * resolved values of `token`s in the `deps` field.\n * @type {?}\n */\nFactoryProvider.prototype.useFactory;\n/**\n * A list of `token`s which need to be resolved by the injector. The list of values is then\n * used as arguments to the `useFactory` function.\n * @type {?|undefined}\n */\nFactoryProvider.prototype.deps;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nFactoryProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return a value by invoking a `useFactory`\n * function.\n * @howToUse\n * ```\n * function serviceFactory() { ... }\n *\n * const provider: FactoryProvider = {provide: 'someToken', useFactory: serviceFactory, deps: []};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='FactoryProvider'}\n *\n * Dependencies can also be marked as optional:\n * {@example core/di/ts/provider_spec.ts region='FactoryProviderOptionalDeps'}\n *\n * @stable\n */\nexport interface FactoryProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * A function to invoke to create a value for this `token`. The function is invoked with\n   * resolved values of `token`s in the `deps` field.\n   */\n  useFactory: Function;\n\n  /**\n   * A list of `token`s which need to be resolved by the injector. The list of values is then\n   * used as arguments to the `useFactory` function.\n   */\n  deps?: any[];\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n\n/**\n * @whatItDoes Describes how the {@link Injector} should be configured in a static way (Without\n * reflection).\n * @howToUse\n * See {@link ValueProvider}, {@link ExistingProvider}, {@link FactoryProvider}.\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * @stable\n */\nexport type StaticProvider = ValueProvider | ExistingProvider | StaticClassProvider |\n    ConstructorProvider | FactoryProvider | any[];\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `Type` when `Type' is used\n * as token.\n * \\@howToUse \n * ```\n * \\@Injectable() \n * class MyService {}\n * \n * const provider: TypeProvider = MyService;\n * ```\n * \n * \\@description \n * \n * Create an instance by invoking the `new` operator and supplying additional arguments.\n * This form is a short form of `TypeProvider`;\n * \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='TypeProvider'}\n * \n * \\@stable\n * @record\n */\nexport function TypeProvider() {}\n\n\nfunction TypeProvider_tsickle_Closure_declarations() {\n}\n\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return an instance of `Type` when `Type' is used\n * as token.\n * @howToUse\n * ```\n * @Injectable()\n * class MyService {}\n *\n * const provider: TypeProvider = MyService;\n * ```\n *\n * @description\n *\n * Create an instance by invoking the `new` operator and supplying additional arguments.\n * This form is a short form of `TypeProvider`;\n *\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='TypeProvider'}\n *\n * @stable\n */\nexport interface TypeProvider extends Type<any> {}\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `useClass` for a token.\n * \\@howToUse \n * ```\n * \\@Injectable() \n * class MyService {}\n * \n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService};\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='ClassProvider'}\n * \n * Note that following two providers are not equal:\n * {\\@example core/di/ts/provider_spec.ts region='ClassProviderDifference'}\n * \n * \\@stable\n * @record\n */\nexport function ClassProvider() {}\n\n\nfunction ClassProvider_tsickle_Closure_declarations() {\n/**\n * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n * @type {?}\n */\nClassProvider.prototype.provide;\n/**\n * Class to instantiate for the `token`.\n * @type {?}\n */\nClassProvider.prototype.useClass;\n/**\n * If true, then injector returns an array of instances. This is useful to allow multiple\n * providers spread across many files to provide configuration information to a common token.\n * \n * ### Example\n * \n * {\\@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n * @type {?|undefined}\n */\nClassProvider.prototype.multi;\n}\n\n\n/**\n * @whatItDoes Configures the {@link Injector} to return an instance of `useClass` for a token.\n * @howToUse\n * ```\n * @Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService};\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/provider_spec.ts region='ClassProvider'}\n *\n * Note that following two providers are not equal:\n * {@example core/di/ts/provider_spec.ts region='ClassProviderDifference'}\n *\n * @stable\n */\nexport interface ClassProvider {\n  /**\n   * An injection token. (Typically an instance of `Type` or `InjectionToken`, but can be `any`).\n   */\n  provide: any;\n\n  /**\n   * Class to instantiate for the `token`.\n   */\n  useClass: Type<any>;\n\n  /**\n   * If true, then injector returns an array of instances. This is useful to allow multiple\n   * providers spread across many files to provide configuration information to a common token.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='MultiProviderAspect'}\n   */\n  multi?: boolean;\n}\n\n/**\n * @whatItDoes Describes how the {@link Injector} should be configured.\n * @howToUse\n * See {@link TypeProvider}, {@link ClassProvider}, {@link StaticProvider}.\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * @stable\n */\nexport type Provider =\n    TypeProvider | ValueProvider | ClassProvider | ExistingProvider | FactoryProvider | any[];\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di/metadata';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {StaticProvider, ValueProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ClassProvider} from './di/provider';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {InjectionToken, OpaqueToken} from './di/injection_token';\n","declare let global: NodeJS.Global;\n\ndeclare module NodeJS {\n  interface Global {\n    window: any;\n    global: any;\n  }\n}\n\n/**\n * window: browser in DOM main thread\n * self: browser in WebWorker\n * global: Node.js/other\n */\nexport const root: any = (\n     typeof window == 'object' && window.window === window && window\n  || typeof self == 'object' && self.self === self && self\n  || typeof global == 'object' && global.global === global && global\n);\n\nif (!root) {\n  throw new Error('RxJS could not find any global context (window, self, global)');\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport var errorObject: any = { e: {} };","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const { _unsubscribe, _subscriptions } = (<any> this);\n\n    (<any> this)._subscriptions = null;\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        (errors = errors || []).push(errorObject.e);\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      let index = -1;\n      const len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(err.errors);\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let sub = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        sub = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (sub.closed || typeof sub.unsubscribe !== 'function') {\n          break;\n        } else if (this.closed) {\n          sub.unsubscribe();\n        } else {\n          ((<any> this)._subscriptions || ((<any> this)._subscriptions = [])).push(sub);\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    return sub;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n\n    // HACK: This might be redundant because of the logic in `add()`\n    if (subscription == null   || (\n        subscription === this) || (\n        subscription === Subscription.EMPTY)) {\n      return;\n    }\n\n    const subscriptions = (<any> this)._subscriptions;\n\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const $$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { $$rxSubscriber } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [$$rxSubscriber]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parent: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      context = observerOrNext;\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (isFunction(context.unsubscribe)) {\n        this.add(<() => void> context.unsubscribe.bind(context));\n      }\n      context.unsubscribe = this.unsubscribe.bind(this);\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parent } = this;\n      if (!_parent.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parent, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parent } = this;\n      if (this._error) {\n        if (!_parent.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parent, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parent.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parent.syncErrorValue = err;\n        _parent.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parent } = this;\n      if (this._complete) {\n        if (!_parent.syncErrorThrowable) {\n          this.__tryOrUnsub(this._complete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parent, this._complete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parent } = this;\n    this._context = null;\n    this._parent = null;\n    _parent.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { $$rxSubscriber } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[$$rxSubscriber]) {\n      return nextOrObserver[$$rxSubscriber]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const $$observable = getSymbolObservable(root);","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { $$observable } from './symbol/observable';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is  called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: <R>(this: Observable<T>, subscriber: Subscriber<R>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: <R>(subscriber: Subscriber<R>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  /**\n   * Registers handlers for handling emitted values, error and completions from the observable, and\n   *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n   * @method subscribe\n   * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n   * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled\n   * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   */\n  subscribe(): Subscription;\n  subscribe(observer: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this._subscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      const subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [$$observable]() {\n    return this;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: Scheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: Scheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: Scheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: Scheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Scheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: Scheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: Scheduler): Observable<T>;\n  static of<T>(...array: Array<T | Scheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` Scheduler, which means the `next`\n   * notifications are sent synchronously, although with a different Scheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | Scheduler>): Observable<T> {\n    let scheduler = <Scheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: Scheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const $$iterator = symbolIteratorPonyfill(root);","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from './root';\nimport { isArray } from './isArray';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { $$iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { $$observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      return result.subscribe(destination);\n    }\n  } else if (isArray(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[$$iterator] === 'function') {\n    const iterator = <any>result[$$iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[$$observable] === 'function') {\n    const obs = result[$$observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(this: Observable<T>, concurrent: number = Number.POSITIVE_INFINITY): T {\n  return <any>this.lift<any>(new MergeAllOperator<T>(concurrent));\n}\n\nexport class MergeAllOperator<T> implements Operator<Observable<T>, T> {\n  constructor(private concurrent: number) {\n  }\n\n  call(observer: Observer<T>, source: any): any {\n    return source.subscribe(new MergeAllSubscriber(observer, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeAllSubscriber<T> extends OuterSubscriber<Observable<T>, T> {\n  private hasCompleted: boolean = false;\n  private buffer: Observable<T>[] = [];\n  private active: number = 0;\n\n  constructor(destination: Observer<T>, private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(observable: Observable<T>) {\n    if (this.active < this.concurrent) {\n      this.active++;\n      this.add(subscribeToResult<Observable<T>, T>(this, observable));\n    } else {\n      this.buffer.push(observable);\n    }\n  }\n\n  protected _complete() {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Scheduler } from '../Scheduler';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { MergeAllOperator } from './mergeAll';\nimport { isScheduler } from '../util/isScheduler';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(this: Observable<T>, scheduler?: Scheduler): Observable<T>;\nexport function merge<T>(this: Observable<T>, concurrent?: number, scheduler?: Scheduler): Observable<T>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(this: Observable<T>, ...observables: Array<ObservableInput<T> | Scheduler | number>): Observable<T>;\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R>;\n/* tslint:disable:max-line-length */\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R> {\n  return this.lift.call(mergeStatic<T, R>(this, ...observables));\n}\n\n/* tslint:disable:max-line-length */\nexport function mergeStatic<T>(v1: ObservableInput<T>, scheduler?: Scheduler): Observable<T>;\nexport function mergeStatic<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: Scheduler): Observable<T>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: Scheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: Scheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T>(...observables: (ObservableInput<T> | Scheduler | number)[]): Observable<T>;\nexport function mergeStatic<T, R>(...observables: (ObservableInput<any> | Scheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will \n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and \n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...Observable} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function mergeStatic<T, R>(...observables: Array<ObservableInput<any> | Scheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: Scheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <Scheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1) {\n    return <Observable<R>>observables[0];\n  }\n\n  return new ArrayObservable(<any>observables, scheduler).lift(new MergeAllOperator<R>(concurrent));\n}\n","import {  mergeStatic  } from '../operator/merge';\n\nexport const merge = mergeStatic;","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { $$rxSubscriber } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [$$rxSubscriber]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  lift<R>(operator: Operator<T, R>): Observable<T> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return this.lift(new RefCountOperator<T>(this));\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subscribe: { value: (<any> ConnectableObservable.prototype)._subscribe },\n  getSubject: { value: (<any> ConnectableObservable.prototype).getSubject },\n  connect: { value: (<any> ConnectableObservable.prototype).connect },\n  refCount: { value: (<any> ConnectableObservable.prototype).refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const { connectable } = this;\n    if (connectable) {\n      this.connectable = null;\n      const connection = (<any> connectable)._connection;\n      (<any> connectable)._refCount = 0;\n      (<any> connectable)._subject = null;\n      (<any> connectable)._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: factoryOrValue<Subject<T>>): ConnectableObservable<T>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: selector<T>): Observable<T>;\n/* tslint:disable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} an Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                             selector?: (source: Observable<T>) => Observable<T>): Observable<T> | ConnectableObservable<T> {\n  let subjectFactory: () => Subject<T>;\n  if (typeof subjectOrSubjectFactory === 'function') {\n    subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n  } else {\n    subjectFactory = function subjectFactory() {\n      return <Subject<T>>subjectOrSubjectFactory;\n    };\n  }\n\n  if (typeof selector === 'function') {\n    return this.lift(new MulticastOperator(subjectFactory, selector));\n  }\n\n  const connectable: any = Object.create(this, connectableObservableDescriptor);\n  connectable.source = this;\n  connectable.subjectFactory = subjectFactory;\n\n  return <ConnectableObservable<T>> connectable;\n}\n\nexport type factoryOrValue<T> = T | (() => T);\nexport type selector<T> = (source: Observable<T>) => Observable<T>;\n\nexport class MulticastOperator<T> implements Operator<T, T> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { Subject } from '../Subject';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return multicast.call(this, shareSubjectFactory).refCount();\n};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nexport const /** @type {?} */ APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate resolve: Function;\nprivate reject: Function;\nprivate initialized = false;\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(\nprivate appInits: (() => any)[]) {\n    this._donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\nrunInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const /** @type {?} */ asyncInitPromises: Promise<any>[] = [];\n\n    const /** @type {?} */ complete = () => {\n      this._done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n        const /** @type {?} */ initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype.resolve;\n/** @type {?} */\nApplicationInitStatus.prototype.reject;\n/** @type {?} */\nApplicationInitStatus.prototype.initialized;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n/** @type {?} */\nApplicationInitStatus.prototype.appInits;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n * \n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nexport const /** @type {?} */ APP_ID = new InjectionToken<string>('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nexport const /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: /** @type {?} */(( <any[]>[])),\n};\n/**\n * @return {?}\n */\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nexport const /** @type {?} */ PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nexport const /** @type {?} */ PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n * \n * `(componentRef: ComponentRef) => void`.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nexport const /** @type {?} */ PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\nexport class Console {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction Console_tsickle_Closure_declarations() {\n/** @type {?} */\nConsole.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConsole.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, StaticProvider} from '../di';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n * \n * \\@experimental\n */\nexport class ModuleWithComponentFactories<T> {\n/**\n * @param {?} ngModuleFactory\n * @param {?} componentFactories\n */\nconstructor(\npublic ngModuleFactory: NgModuleFactory<T>,\npublic componentFactories: ComponentFactory<any>[]) {}\n}\n\nfunction ModuleWithComponentFactories_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithComponentFactories.prototype.ngModuleFactory;\n/** @type {?} */\nModuleWithComponentFactories.prototype.componentFactories;\n}\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * \n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nexport class Compiler {\n/**\n * Compiles the given NgModule and all of its components. All templates of the components listed\n * in `entryComponents` have to be inlined.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n/**\n * Compiles the given NgModule and all of its components\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n/**\n * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n/**\n * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n/**\n * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n * the template of the given component.\n * This is used by the `upgrade` library to compile the appropriate transclude content\n * in the AngularJS wrapper component.\n * \n * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] { throw _throwError(); }\n/**\n * Clears all caches.\n * @return {?}\n */\nclearCache(): void {}\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {}\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction Compiler_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompiler.ctorParameters;\n}\n\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  /**\n   * @deprecated since v4 this option has no effect anymore.\n   */\n  useDebug?: boolean,\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: StaticProvider[],\n  missingTranslation?: MissingTranslationStrategy,\n  // Whether to support the `<template>` tag and the `template` attribute to define angular\n  // templates. They have been deprecated in 4.x, `<ng-template>` should be used instead.\n  enableLegacyTemplate?: boolean,\n};\n/**\n * Token to provide CompilerOptions in the platform injector.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n/**\n * A factory for creating a Compiler\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n\nfunction CompilerFactory_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?=} options\n * @return {?}\n */\nCompilerFactory.prototype.createCompiler = function(options) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n * \n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * Location of the Host Element of this Component Instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The injector on which the component instance exists.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The instance of the Component.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The {@link ViewRef} of the Host View of this Component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The {@link ChangeDetectorRef} of the Component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The component type.\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the component is destroyed.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\nfunction ComponentRef_tsickle_Closure_declarations() {\n\n/**\n * Location of the Host Element of this Component Instance.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.location = function() {};\n\n/**\n * The injector on which the component instance exists.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.injector = function() {};\n\n/**\n * The instance of the Component.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.instance = function() {};\n\n/**\n * The {\\@link ViewRef} of the Host View of this Component instance.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.hostView = function() {};\n\n/**\n * The {\\@link ChangeDetectorRef} of the Component instance.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.changeDetectorRef = function() {};\n\n/**\n * The component type.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.componentType = function() {};\n\n/**\n * Destroys the component instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\nComponentRef.prototype.destroy = function() {};\n\n/**\n * Allows to register a callback that will be called when the component is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nComponentRef.prototype.onDestroy = function(callback) {};\n}\n\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactory<C> {\n  abstract get selector(): string;\n  abstract get componentType(): Type<any>;\n  /**\n   * selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * the inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * the outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C>;\n}\n\nfunction ComponentFactory_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.selector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.componentType = function() {};\n\n/**\n * selector for all <ng-content> elements in the component.\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.ngContentSelectors = function() {};\n\n/**\n * the inputs of the component.\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.inputs = function() {};\n\n/**\n * the outputs of the component.\n * @abstract\n * @return {?}\n */\nComponentFactory.prototype.outputs = function() {};\n\n/**\n * Creates a new component.\n * @abstract\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\nComponentFactory.prototype.create = function(injector, projectableNodes, rootSelectorOrNode, ngModule) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n\n/**\n * @abstract\n * @template T\n * @param {?} component\n * @return {?}\n */\nComponentFactoryResolver.prototype.resolveComponentFactory = function(component) {};\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n * @param {?} _ngModule\n */\nconstructor(\n      factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver,\nprivate _ngModule: NgModuleRef<any>) {\n    for (let /** @type {?} */ i = 0; i < factories.length; i++) {\n      const /** @type {?} */ factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._ngModule;\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n/**\n * @param {?} factory\n * @param {?} ngModule\n */\nconstructor(private factory: ComponentFactory<C>,\nprivate ngModule: NgModuleRef<any>) { super(); }\n/**\n * @return {?}\n */\nget selector() { return this.factory.selector; }\n/**\n * @return {?}\n */\nget componentType() { return this.factory.componentType; }\n/**\n * @return {?}\n */\nget ngContentSelectors() { return this.factory.ngContentSelectors; }\n/**\n * @return {?}\n */\nget inputs() { return this.factory.inputs; }\n/**\n * @return {?}\n */\nget outputs() { return this.factory.outputs; }\n/**\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.factory;\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.ngModule;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n * \n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The NgModule instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nfunction NgModuleRef_tsickle_Closure_declarations() {\n\n/**\n * The injector that contains all of the providers of the NgModule.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.injector = function() {};\n\n/**\n * The ComponentFactoryResolver to get hold of the ComponentFactories\n * declared in the `entryComponents` property of the module.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.componentFactoryResolver = function() {};\n\n/**\n * The NgModule instance.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.instance = function() {};\n\n/**\n * Destroys the module instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\nNgModuleRef.prototype.destroy = function() {};\n\n/**\n * Allows to register a callback that will be called when the module is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nNgModuleRef.prototype.onDestroy = function(callback) {};\n}\n\n/**\n * @record\n */\nexport function InternalNgModuleRef() {}\n\n\nfunction InternalNgModuleRef_tsickle_Closure_declarations() {\n/** @type {?} */\nInternalNgModuleRef.prototype._bootstrapComponents;\n}\n\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n\nfunction NgModuleFactory_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nNgModuleFactory.prototype.moduleType = function() {};\n\n/**\n * @abstract\n * @param {?} parentInjector\n * @return {?}\n */\nNgModuleFactory.prototype.create = function(parentInjector) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n/**\n * A scope function for the Web Tracing Framework (WTF).\n * \n * \\@experimental\n * @record\n */\nexport function WtfScopeFn() {}\n\n\nfunction WtfScopeFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(arg0?: any, arg1?: any): any;\n*/\n}\n\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n/**\n * @record\n */\nfunction WTF() {}\n\n\nfunction WTF_tsickle_Closure_declarations() {\n/** @type {?} */\nWTF.prototype.trace;\n}\n\n\ninterface WTF {\n  trace: Trace;\n}\n/**\n * @record\n */\nfunction Trace() {}\n\n\nfunction Trace_tsickle_Closure_declarations() {\n/** @type {?} */\nTrace.prototype.events;\n/** @type {?} */\nTrace.prototype.leaveScope;\n/** @type {?} */\nTrace.prototype.beginTimeRange;\n/** @type {?} */\nTrace.prototype.endTimeRange;\n}\n\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n/**\n * @record\n */\nexport function Range() {}\n\n\nfunction Range_tsickle_Closure_declarations() {\n}\n\n\nexport interface Range {}\n/**\n * @record\n */\nfunction Events() {}\n\n\nfunction Events_tsickle_Closure_declarations() {\n/** @type {?} */\nEvents.prototype.createScope;\n}\n\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n/**\n * @record\n */\nexport function Scope() {}\n\n\nfunction Scope_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(...args: any[] __* TODO #9100 __): any;\n*/\n}\n\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n/**\n * True if WTF is enabled.\n */\nexport const /** @type {?} */ wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n/**\n * Create trace scope.\n * \n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n * \n * Used to mark scope entry. The return value is used to leave the scope.\n * \n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n * \n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n * \n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n/**\n * Used to mark end of Scope.\n * \n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n * \n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nexport const /** @type {?} */ wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n * \n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nexport const /** @type {?} */ wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nexport const /** @type {?} */ wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Use by directives and components to emit custom Events.\n * \n * ### Examples\n * \n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n * \n * ```\n * \\@Component({ \n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n * \n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n * \n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n * \n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n * \n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n * \n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  // tslint:disable-next-line\n  __isAsync: boolean;\n/**\n * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n * delivers events synchronously or asynchronously.\n * \n * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n * Set to `true` for asynchronous event delivery.\n */\nconstructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n/**\n * @param {?=} value\n * @return {?}\n */\nemit(value?: T) { super.next(value); }\n/**\n * @param {?=} generatorOrNext\n * @param {?=} error\n * @param {?=} complete\n * @return {?}\n */\nsubscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let /** @type {?} */ schedulerFn: (t: any) => any;\n    let /** @type {?} */ errorFn = (err: any): any => null;\n    let /** @type {?} */ completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n\nfunction EventEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nEventEmitter.prototype.__isAsync;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\nimport {EventEmitter} from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n * \n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n * \n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n * \n * ### Example\n * \n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n * \n * \\@Component({ \n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n * \n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n * \n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n * \n *   constructor(private _ngZone: NgZone) {}\n * \n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n * \n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n * \n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n * \n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n */\nreadonly isStable: boolean = true;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n */\nreadonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n */\nreadonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n */\nreadonly onStable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies that an error has been delivered.\n */\nreadonly onError: EventEmitter<any> = new EventEmitter(false);\n/**\n * @param {?} __0\n */\nconstructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n\n    Zone.assertZonePatched();\n    const /** @type {?} */ self = /** @type {?} */(( /** @type {?} */(( this as any)) as NgZonePrivate));\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if (( /** @type {?} */((Zone as any)))['wtfZoneSpec']) {\n      self._inner = self._inner.fork(( /** @type {?} */((Zone as any)))['wtfZoneSpec']);\n    }\n\n    if (enableLongStackTrace && ( /** @type {?} */((Zone as any)))['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork(( /** @type {?} */((Zone as any)))['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n/**\n * @return {?}\n */\nstatic isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n/**\n * @return {?}\n */\nstatic assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n/**\n * @return {?}\n */\nstatic assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n * the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @template T\n * @param {?} fn\n * @param {?=} applyThis\n * @param {?=} applyArgs\n * @return {?}\n */\nrun<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return /** @type {?} */(( ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.run(fn, applyThis, applyArgs) as T));\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n * returned by the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @template T\n * @param {?} fn\n * @param {?=} applyThis\n * @param {?=} applyArgs\n * @param {?=} name\n * @return {?}\n */\nrunTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const /** @type {?} */ zone = ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner;\n    const /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return /** @type {?} */(( zone.runTask(task, applyThis, applyArgs) as T));\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n/**\n * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n * rethrown.\n * @template T\n * @param {?} fn\n * @param {?=} applyThis\n * @param {?=} applyArgs\n * @return {?}\n */\nrunGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return /** @type {?} */(( ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.runGuarded(fn, applyThis, applyArgs) as T));\n  }\n/**\n * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n * the function.\n * \n * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n * work that\n * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * outside of the Angular zone.\n * \n * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n * @template T\n * @param {?} fn\n * @return {?}\n */\nrunOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return /** @type {?} */(( ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._outer.run(fn) as T));\n  }\n}\n\nfunction NgZone_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZone.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZone.prototype.hasPendingMacrotasks;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n * @type {?}\n */\nNgZone.prototype.isStable;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n * @type {?}\n */\nNgZone.prototype.onUnstable;\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n * @type {?}\n */\nNgZone.prototype.onMicrotaskEmpty;\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n * @type {?}\n */\nNgZone.prototype.onStable;\n/**\n * Notifies that an error has been delivered.\n * @type {?}\n */\nNgZone.prototype.onError;\n}\n\n/**\n * @return {?}\n */\nfunction noop(){};\nconst /** @type {?} */ EMPTY_PAYLOAD = {};\n/**\n * @record\n */\nfunction NgZonePrivate() {}\n\n\nfunction NgZonePrivate_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZonePrivate.prototype._outer;\n/** @type {?} */\nNgZonePrivate.prototype._inner;\n/** @type {?} */\nNgZonePrivate.prototype._nesting;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.hasPendingMacrotasks;\n/** @type {?} */\nNgZonePrivate.prototype.isStable;\n}\n\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: /** @type {?} */(( <any>{'isAngularZone': true})),\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @experimental\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nexport class Testability implements PublicTestability {\n/**\n * \\@internal\n */\n_pendingCount: number = 0;\n/**\n * \\@internal\n */\n_isZoneStable: boolean = true;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n */\n_didWork: boolean = false;\n/**\n * \\@internal\n */\n_callbacks: Function[] = [];\n/**\n * @param {?} _ngZone\n */\nconstructor(private _ngZone: NgZone) { this._watchAngularEvents(); }\n/**\n * \\@internal\n * @return {?}\n */\n_watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n/**\n * @return {?}\n */\nincreasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\ndecreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\nisStable(): boolean {\n    return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          ( /** @type {?} */((this._callbacks.pop())))(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Not Ready\n      this._didWork = true;\n    }\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nwhenStable(callback: Function): void {\n    this._callbacks.push(callback);\n    this._runCallbacksIfReady();\n  }\n/**\n * @return {?}\n */\ngetPendingRequestCount(): number { return this._pendingCount; }\n/**\n * @deprecated use findProviders\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindBindings(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n/**\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: NgZone, },\n];\n}\n\nfunction Testability_tsickle_Closure_declarations() {\n/** @type {?} */\nTestability.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestability.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._pendingCount;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._isZoneStable;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n * @type {?}\n */\nTestability.prototype._didWork;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._callbacks;\n/** @type {?} */\nTestability.prototype._ngZone;\n}\n\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nexport class TestabilityRegistry {\n/**\n * \\@internal\n */\n_applications = new Map<any, Testability>();\nconstructor() { _testabilityGetter.addToWindow(this); }\n/**\n * @param {?} token\n * @param {?} testability\n * @return {?}\n */\nregisterApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\ngetTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n/**\n * @return {?}\n */\ngetAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n/**\n * @return {?}\n */\ngetAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n/**\n * @param {?} elem\n * @param {?=} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction TestabilityRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nTestabilityRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestabilityRegistry.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestabilityRegistry.prototype._applications;\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n * \n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\nexport function GetTestability() {}\n\n\nfunction GetTestability_tsickle_Closure_declarations() {\n/** @type {?} */\nGetTestability.prototype.addToWindow;\n/** @type {?} */\nGetTestability.prototype.findTestabilityInTree;\n}\n\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\nclass _NoopGetTestability implements GetTestability {\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {}\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet /** @type {?} */ _testabilityGetter: GetTestability = new _NoopGetTestability();\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {share} from 'rxjs/operator/share';\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {scheduleMicroTask, stringify} from '../src/util';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, StaticProvider} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone} from './zone/ng_zone';\n\nlet /** @type {?} */ _devMode: boolean = true;\nlet /** @type {?} */ _runModeLocked: boolean = false;\nlet /** @type {?} */ _platform: PlatformRef;\n\nexport const /** @type {?} */ ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n * \n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n * \n * \\@stable\n * @return {?}\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n * \n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n * \n * \\@experimental\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n/**\n * Creates a factory for a platform\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: StaticProvider[]) => PlatformRef) | null,\n    name: string, providers: StaticProvider[] = []): (extraProviders?: StaticProvider[]) =>\n    PlatformRef {\n  const /** @type {?} */ marker = new InjectionToken(`Platform: ${name}`);\n  return (extraProviders: StaticProvider[] = []) => {\n    let /** @type {?} */ platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(Injector.create(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const /** @type {?} */ platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n/**\n * Destroy the existing platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n/**\n * Returns the current platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * \n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformRef {\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   *\n   * @experimental APIs related to application bootstrap are currently under review.\n   */\n  abstract bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>>;\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   * @stable\n   */\n  abstract bootstrapModule<M>(\n      moduleType: Type<M>,\n      compilerOptions?: CompilerOptions|CompilerOptions[]): Promise<NgModuleRef<M>>;\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  abstract onDestroy(callback: () => void): void;\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  abstract destroy(): void;\n\n  abstract get destroyed(): boolean;\n}\n\nfunction PlatformRef_tsickle_Closure_declarations() {\n\n/**\n * Creates an instance of an `\\@NgModule` for the given platform\n * for offline compilation.\n * \n * ## Simple Example\n * \n * ```typescript\n * my_module.ts:\n * \n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * main.ts:\n * import {MyModuleNgFactory} from './my_module.ngfactory';\n * import {platformBrowser} from '\\@angular/platform-browser';\n * \n * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n * ```\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @abstract\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nPlatformRef.prototype.bootstrapModuleFactory = function(moduleFactory) {};\n\n/**\n * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n * \n * ## Simple Example\n * \n * ```typescript\n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n * ```\n * \\@stable\n * @abstract\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nPlatformRef.prototype.bootstrapModule = function(moduleType, compilerOptions) {};\n\n/**\n * Register a listener to be called when the platform is disposed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nPlatformRef.prototype.onDestroy = function(callback) {};\n\n/**\n * Retrieve the platform {\\@link Injector}, which is the parent injector for\n * every Angular application on the page and provides singleton providers.\n * @abstract\n * @return {?}\n */\nPlatformRef.prototype.injector = function() {};\n\n/**\n * Destroy the Angular platform and all Angular applications on the page.\n * @abstract\n * @return {?}\n */\nPlatformRef.prototype.destroy = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nPlatformRef.prototype.destroyed = function() {};\n}\n\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const /** @type {?} */ result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch ( /** @type {?} */e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class PlatformRef_ extends PlatformRef {\nprivate _modules: NgModuleRef<any>[] = [];\nprivate _destroyListeners: Function[] = [];\nprivate _destroyed: boolean = false;\n/**\n * @param {?} _injector\n */\nconstructor(private _injector: Injector) { super(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory);\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @param {?=} ngZone\n * @return {?}\n */\n\nprivate _bootstrapModuleFactoryWithZone<M>(moduleFactory: NgModuleFactory<M>, ngZone?: NgZone):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const /** @type {?} */ ngZoneInjector = Injector.create([{provide: NgZone, useValue: ngZone}], this.injector);\n      const /** @type {?} */ moduleRef = /** @type {?} */(( <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector)));\n      const /** @type {?} */ exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */((\n      ngZone)).runOutsideAngular(\n          () => /** @type {?} */(( ngZone)).onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */(( ngZone)), () => {\n        const /** @type {?} */ initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @param {?=} ngZone\n * @return {?}\n */\n\nprivate _bootstrapModuleWithZone<M>(\n      moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = [],\n      ngZone?: NgZone): Promise<NgModuleRef<M>> {\n    const /** @type {?} */ compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const /** @type {?} */ compiler = compilerFactory.createCompiler(\n        Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n/**\n * @param {?} moduleRef\n * @return {?}\n */\n\nprivate _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const /** @type {?} */ appRef = /** @type {?} */(( moduleRef.injector.get(ApplicationRef) as ApplicationRef));\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction PlatformRef__tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformRef_.ctorParameters;\n/** @type {?} */\nPlatformRef_.prototype._modules;\n/** @type {?} */\nPlatformRef_.prototype._destroyListeners;\n/** @type {?} */\nPlatformRef_.prototype._destroyed;\n/** @type {?} */\nPlatformRef_.prototype._injector;\n}\n\n/**\n * A reference to an Angular application running on a page.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ApplicationRef {\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the [componentType]'s\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * [componentType]'s selector.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  abstract bootstrap<C>(\n      componentFactory: ComponentFactory<C>|Type<C>,\n      rootSelectorOrNode?: string|any): ComponentRef<C>;\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  abstract tick(): void;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  abstract get componentTypes(): Type<any>[];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  abstract get components(): ComponentRef<any>[];\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  abstract attachView(view: ViewRef): void;\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  abstract detachView(view: ViewRef): void;\n\n  /**\n   * Returns the number of attached views.\n   */\n  abstract get viewCount(): number;\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   */\n  abstract get isStable(): Observable<boolean>;\n}\n\nfunction ApplicationRef_tsickle_Closure_declarations() {\n\n/**\n * Bootstrap a new component at the root level of the application.\n * \n * ### Bootstrap process\n * \n * When bootstrapping a new root component into an application, Angular mounts the\n * specified application component onto DOM elements identified by the [componentType]'s\n * selector and kicks off automatic change detection to finish initializing the component.\n * \n * Optionally, a component can be mounted onto a DOM element that does not match the\n * [componentType]'s selector.\n * \n * ### Example\n * {\\@example core/ts/platform/platform.ts region='longform'}\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nApplicationRef.prototype.bootstrap = function(componentFactory, rootSelectorOrNode) {};\n\n/**\n * Invoke this method to explicitly process change detection and its side-effects.\n * \n * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n * further changes are detected. If additional changes are picked up during this second cycle,\n * bindings in the app have side-effects that cannot be resolved in a single change detection\n * pass.\n * In this case, Angular throws an error, since an Angular application can only have one change\n * detection pass during which all change detection must complete.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.tick = function() {};\n\n/**\n * Get a list of component types registered to this application.\n * This list is populated even before the component is created.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.componentTypes = function() {};\n\n/**\n * Get a list of components registered to this application.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.components = function() {};\n\n/**\n * Attaches a view so that it will be dirty checked.\n * The view will be automatically detached when it is destroyed.\n * This will throw if the view is already attached to a ViewContainer.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nApplicationRef.prototype.attachView = function(view) {};\n\n/**\n * Detaches a view from dirty checking again.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nApplicationRef.prototype.detachView = function(view) {};\n\n/**\n * Returns the number of attached views.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.viewCount = function() {};\n\n/**\n * Returns an Observable that indicates when the application is stable or unstable.\n * @abstract\n * @return {?}\n */\nApplicationRef.prototype.isStable = function() {};\n}\n\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class ApplicationRef_ extends ApplicationRef {\n/**\n * \\@internal\n */\nstatic _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\nprivate _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\nprivate _rootComponents: ComponentRef<any>[] = [];\nprivate _rootComponentTypes: Type<any>[] = [];\nprivate _views: InternalViewRef[] = [];\nprivate _runningTick: boolean = false;\nprivate _enforceNoNewChanges: boolean = false;\nprivate _isStable: Observable<boolean>;\nprivate _stable = true;\n/**\n * @param {?} _zone\n * @param {?} _console\n * @param {?} _injector\n * @param {?} _exceptionHandler\n * @param {?} _componentFactoryResolver\n * @param {?} _initStatus\n */\nconstructor(\nprivate _zone: NgZone,\nprivate _console: Console,\nprivate _injector: Injector,\nprivate _exceptionHandler: ErrorHandler,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _initStatus: ApplicationInitStatus) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const /** @type {?} */ isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const /** @type {?} */ isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      const /** @type {?} */ stableSub: Subscription = this._zone.onStable.subscribe(() => {\n        NgZone.assertNotInAngularZone();\n\n        // Check whether there are no pending macro/micro tasks in the next tick\n        // to allow for NgZone to update the state.\n        scheduleMicroTask(() => {\n          if (!this._stable && !this._zone.hasPendingMacrotasks &&\n              !this._zone.hasPendingMicrotasks) {\n            this._stable = true;\n            observer.next(true);\n          }\n        });\n      });\n\n      const /** @type {?} */ unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    this._isStable = merge(isCurrentlyStable, share.call(isStable));\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nattachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\ndetachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n/**\n * @template C\n * @param {?} componentOrFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nbootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let /** @type {?} */ componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = /** @type {?} */((\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const /** @type {?} */ testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\n\nprivate _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const /** @type {?} */ listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\n\nprivate _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this._rootComponents, componentRef);\n  }\n/**\n * @return {?}\n */\ntick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const /** @type {?} */ scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n/**\n * @return {?}\n */\nget viewCount() { return this._views.length; }\n/**\n * @return {?}\n */\nget componentTypes(): Type<any>[] { return this._rootComponentTypes; }\n/**\n * @return {?}\n */\nget components(): ComponentRef<any>[] { return this._rootComponents; }\n/**\n * @return {?}\n */\nget isStable(): Observable<boolean> { return this._isStable; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ErrorHandler, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationInitStatus, },\n];\n}\n\nfunction ApplicationRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nApplicationRef_._tickScope;\n/** @type {?} */\nApplicationRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationRef_.ctorParameters;\n/** @type {?} */\nApplicationRef_.prototype._bootstrapListeners;\n/** @type {?} */\nApplicationRef_.prototype._rootComponents;\n/** @type {?} */\nApplicationRef_.prototype._rootComponentTypes;\n/** @type {?} */\nApplicationRef_.prototype._views;\n/** @type {?} */\nApplicationRef_.prototype._runningTick;\n/** @type {?} */\nApplicationRef_.prototype._enforceNoNewChanges;\n/** @type {?} */\nApplicationRef_.prototype._isStable;\n/** @type {?} */\nApplicationRef_.prototype._stable;\n/** @type {?} */\nApplicationRef_.prototype._zone;\n/** @type {?} */\nApplicationRef_.prototype._console;\n/** @type {?} */\nApplicationRef_.prototype._injector;\n/** @type {?} */\nApplicationRef_.prototype._exceptionHandler;\n/** @type {?} */\nApplicationRef_.prototype._componentFactoryResolver;\n/** @type {?} */\nApplicationRef_.prototype._initStatus;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for Zone\nexport {NgZone} from './zone/ng_zone';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: any) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\nfunction RenderDebugInfo_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.component = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.providerTokens = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.references = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderDebugInfo.prototype.source = function() {};\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nexport function DirectRenderer() {}\n\n\nfunction DirectRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectRenderer.prototype.remove;\n/** @type {?} */\nDirectRenderer.prototype.appendChild;\n/** @type {?} */\nDirectRenderer.prototype.insertBefore;\n/** @type {?} */\nDirectRenderer.prototype.nextSibling;\n/** @type {?} */\nDirectRenderer.prototype.parentElement;\n}\n\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nfunction Renderer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.selectRootElement = function(selectorOrNode, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createElement = function(parentElement, name, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\nRenderer.prototype.createViewRoot = function(hostElement) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createTemplateAnchor = function(parentElement, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\nRenderer.prototype.createText = function(parentElement, value, debugInfo) {};\n\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nRenderer.prototype.projectNodes = function(parentElement, nodes) {};\n\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nRenderer.prototype.attachViewAfter = function(node, viewRootNodes) {};\n\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\nRenderer.prototype.detachView = function(viewRootNodes) {};\n\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\nRenderer.prototype.destroyView = function(hostElement, viewAllNodes) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nRenderer.prototype.listen = function(renderElement, name, callback) {};\n\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nRenderer.prototype.listenGlobal = function(target, name, callback) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nRenderer.prototype.setElementProperty = function(renderElement, propertyName, propertyValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nRenderer.prototype.setElementAttribute = function(renderElement, attributeName, attributeValue) {};\n\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nRenderer.prototype.setBindingDebugInfo = function(renderElement, propertyName, propertyValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nRenderer.prototype.setElementClass = function(renderElement, className, isAdd) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nRenderer.prototype.setElementStyle = function(renderElement, styleName, styleValue) {};\n\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\nRenderer.prototype.invokeElementMethod = function(renderElement, methodName, args) {};\n\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nRenderer.prototype.setText = function(renderNode, text) {};\n\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nRenderer.prototype.animate = function(element, startingStyles, keyframes, duration, delay, easing, previousPlayers) {};\n}\n\n\nexport const /** @type {?} */ Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\nfunction RootRenderer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nRootRenderer.prototype.renderComponent = function(componentType) {};\n}\n\n/**\n * \\@experimental\n * @record\n */\nexport function RendererType2() {}\n\n\nfunction RendererType2_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererType2.prototype.id;\n/** @type {?} */\nRendererType2.prototype.encapsulation;\n/** @type {?} */\nRendererType2.prototype.styles;\n/** @type {?} */\nRendererType2.prototype.data;\n}\n\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class RendererFactory2 {\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  abstract begin?(): void;\n  abstract end?(): void;\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\nfunction RendererFactory2_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\nRendererFactory2.prototype.createRenderer = function(hostElement, type) {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.begin = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.end = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRendererFactory2.prototype.whenRenderingDone = function() {};\n}\n\nexport type RendererStyleFlags2 = number;\nexport let RendererStyleFlags2: any = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer2 {\n  /**\n   * This field can be used to store arbitrary data on this renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  abstract destroy(): void;\n  abstract createElement(name: string, namespace?: string|null): any;\n  abstract createComment(value: string): any;\n  abstract createText(value: string): any;\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n */\ndestroyNode: ((node: any) => void)|null;\n  abstract appendChild(parent: any, newChild: any): void;\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  abstract removeChild(parent: any, oldChild: any): void;\n  abstract selectRootElement(selectorOrNode: string|any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract nextSibling(node: any): any;\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  abstract addClass(el: any, name: string): void;\n  abstract removeClass(el: any, name: string): void;\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n  abstract setProperty(el: any, name: string, value: any): void;\n  abstract setValue(node: any, value: string): void;\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n}\n\nfunction Renderer2_tsickle_Closure_declarations() {\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?}\n */\nRenderer2.prototype.destroyNode;\n\n/**\n * This field can be used to store arbitrary data on this renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @abstract\n * @return {?}\n */\nRenderer2.prototype.data = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nRenderer2.prototype.destroy = function() {};\n\n/**\n * @abstract\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.createElement = function(name, namespace) {};\n\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.createComment = function(value) {};\n\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.createText = function(value) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nRenderer2.prototype.appendChild = function(parent, newChild) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\nRenderer2.prototype.insertBefore = function(parent, newChild, refChild) {};\n\n/**\n * @abstract\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nRenderer2.prototype.removeChild = function(parent, oldChild) {};\n\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @return {?}\n */\nRenderer2.prototype.selectRootElement = function(selectorOrNode) {};\n\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nRenderer2.prototype.parentNode = function(node) {};\n\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nRenderer2.prototype.nextSibling = function(node) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.setAttribute = function(el, name, value, namespace) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nRenderer2.prototype.removeAttribute = function(el, name, namespace) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nRenderer2.prototype.addClass = function(el, name) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nRenderer2.prototype.removeClass = function(el, name) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?=} flags\n * @return {?}\n */\nRenderer2.prototype.setStyle = function(el, style, value, flags) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?=} flags\n * @return {?}\n */\nRenderer2.prototype.removeStyle = function(el, style, flags) {};\n\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.setProperty = function(el, name, value) {};\n\n/**\n * @abstract\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nRenderer2.prototype.setValue = function(node, value) {};\n\n/**\n * @abstract\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nRenderer2.prototype.listen = function(target, eventName, callback) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for render\nexport {RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, RootRenderer} from './render/api';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport class ElementRef {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n */\n\npublic nativeElement: any;\n/**\n * @param {?} nativeElement\n */\nconstructor(nativeElement: any) { this.nativeElement = nativeElement; }\n}\n\nfunction ElementRef_tsickle_Closure_declarations() {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n * @type {?}\n */\nElementRef.prototype.nativeElement;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleFactoryLoader {\n  abstract load(path: string): Promise<NgModuleFactory<any>>;\n}\n\nfunction NgModuleFactoryLoader_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} path\n * @return {?}\n */\nNgModuleFactoryLoader.prototype.load = function(path) {};\n}\n\n\nlet /** @type {?} */ moduleFactories = new Map<string, NgModuleFactory<any>>();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nexport function registerModuleFactory(id: string, factory: NgModuleFactory<any>) {\n  const /** @type {?} */ existing = moduleFactories.get(id);\n  if (existing) {\n    throw new Error(`Duplicate module registered for ${id\n                    } - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n  }\n  moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\nexport function clearModulesForTest() {\n  moduleFactories = new Map<string, NgModuleFactory<any>>();\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nexport function getModuleFactory(id: string): NgModuleFactory<any> {\n  const /** @type {?} */ factory = moduleFactories.get(id);\n  if (!factory) throw new Error(`No module with ID ${id} loaded`);\n  return factory;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n * \n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n * \n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n * \n * Changes can be observed by subscribing to the changes `Observable`.\n * \n * NOTE: In the future this class will implement an `Observable` interface.\n * \n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...}) \n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\nprivate _dirty = true;\nprivate _results: Array<T> = [];\nprivate _emitter = new EventEmitter();\n/**\n * @return {?}\n */\nget changes(): Observable<any> { return this._emitter; }\n/**\n * @return {?}\n */\nget length(): number { return this._results.length; }\n/**\n * @return {?}\n */\nget first(): T { return this._results[0]; }\n/**\n * @return {?}\n */\nget last(): T { return this._results[this.length - 1]; }\n/**\n * See\n * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n * @template U\n * @param {?} fn\n * @return {?}\n */\nmap<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n/**\n * See\n * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n * @param {?} fn\n * @return {?}\n */\nfilter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n/**\n * See\n * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n * @param {?} fn\n * @return {?}\n */\nfind(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n/**\n * See\n * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n * @template U\n * @param {?} fn\n * @param {?} init\n * @return {?}\n */\nreduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n/**\n * See\n * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n/**\n * See\n * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n * @param {?} fn\n * @return {?}\n */\nsome(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n/**\n * @return {?}\n */\ntoArray(): T[] { return this._results.slice(); }\n/**\n * @return {?}\n */\n[getSymbolIterator()](): Iterator<T> { return ( /** @type {?} */((this._results as any)))[getSymbolIterator()](); }\n/**\n * @return {?}\n */\ntoString(): string { return this._results.toString(); }\n/**\n * @param {?} res\n * @return {?}\n */\nreset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    this._dirty = false;\n  }\n/**\n * @return {?}\n */\nnotifyOnChanges(): void { this._emitter.emit(this); }\n/**\n * internal\n * @return {?}\n */\nsetDirty() { this._dirty = true; }\n/**\n * internal\n * @return {?}\n */\nget dirty() { return this._dirty; }\n}\n\nfunction QueryList_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryList.prototype._dirty;\n/** @type {?} */\nQueryList.prototype._results;\n/** @type {?} */\nQueryList.prototype._emitter;\n}\n\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n    return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n  }, []);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathPrefix: string;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\n\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\n\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n * \n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n * \n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The location in the View where the Embedded View logically belongs to.\n   *\n   * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new Embedded Views are attached to the View Container of this location, but in\n   * advanced use-cases, the View can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract get elementRef(): ElementRef;\n\n  abstract createEmbeddedView(context: C): EmbeddedViewRef<C>;\n}\n\nfunction TemplateRef_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nTemplateRef.prototype.elementRef = function() {};\n\n/**\n * @abstract\n * @param {?} context\n * @return {?}\n */\nTemplateRef.prototype.createEmbeddedView = function(context) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n/**\n * Represents a container where one or more Views can be attached.\n * \n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n * \n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n * \n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n * \n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing View.\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  abstract get injector(): Injector;\n\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all Views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Returns the {@link ViewRef} for the View located in this container at the specified index.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Returns the number of Views currently attached to this container.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an Embedded View based on the {@link TemplateRef `templateRef`} and inserts it\n   * into this container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the {@link ViewRef} for the newly created View.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single {@link Component} and inserts its Host View into this container at the\n   * specified `index`.\n   *\n   * The component is instantiated using its {@link ComponentFactory} which can be\n   * obtained via {@link ComponentFactoryResolver#resolveComponentFactory}.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * You can optionally specify the {@link Injector} that will be used as parent for the Component.\n   *\n   * Returns the {@link ComponentRef} of the Host View created for the newly instantiated Component.\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a View identified by a {@link ViewRef} into the container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the inserted {@link ViewRef}.\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a View identified by a {@link ViewRef} into the container at the specified `index`.\n   *\n   * Returns the inserted {@link ViewRef}.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of the View, specified via {@link ViewRef}, within the current container or\n   * `-1` if this container doesn't contain the View.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a View attached to this container at the specified `index`.\n   *\n   * If `index` is not specified, the last View in the container will be removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Use along with {@link #insert} to move a View within the current container.\n   *\n   * If the `index` param is omitted, the last {@link ViewRef} is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n}\n\nfunction ViewContainerRef_tsickle_Closure_declarations() {\n\n/**\n * Anchor element that specifies the location of this container in the containing View.\n * <!-- TODO: rename to anchorElement -->\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.element = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.parentInjector = function() {};\n\n/**\n * Destroys all Views in this container.\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.clear = function() {};\n\n/**\n * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n * @abstract\n * @param {?} index\n * @return {?}\n */\nViewContainerRef.prototype.get = function(index) {};\n\n/**\n * Returns the number of Views currently attached to this container.\n * @abstract\n * @return {?}\n */\nViewContainerRef.prototype.length = function() {};\n\n/**\n * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n * into this container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the {\\@link ViewRef} for the newly created View.\n * @abstract\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.createEmbeddedView = function(templateRef, context, index) {};\n\n/**\n * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n * specified `index`.\n * \n * The component is instantiated using its {\\@link ComponentFactory} which can be\n * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n * \n * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModule\n * @return {?}\n */\nViewContainerRef.prototype.createComponent = function(componentFactory, index, injector, projectableNodes, ngModule) {};\n\n/**\n * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.insert = function(viewRef, index) {};\n\n/**\n * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nViewContainerRef.prototype.move = function(viewRef, currentIndex) {};\n\n/**\n * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n * `-1` if this container doesn't contain the View.\n * @abstract\n * @param {?} viewRef\n * @return {?}\n */\nViewContainerRef.prototype.indexOf = function(viewRef) {};\n\n/**\n * Destroys a View attached to this container at the specified `index`.\n * \n * If `index` is not specified, the last View in the container will be removed.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.remove = function(index) {};\n\n/**\n * Use along with {\\@link #insert} to move a View within the current container.\n * \n * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nViewContainerRef.prototype.detach = function(index) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ChangeDetectorRef {\n  /**\n   * Marks all {@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'cmp',\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   * })\n   * class Cmp {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks ++\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   *   template: `\n   *     <cmp><cmp>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches the change detector from the change detector tree.\n   *\n   * The detached change detector will not be checked until it is reattached.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detectChanges} to implement\n   * local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks the change detector and its children.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detach} to implement local\n   * change detection\n   * checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check\n   * every five seconds.\n   *\n   * See {@link ChangeDetectorRef#detach} for more information.\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Reattach the change detector to the change detector tree.\n   *\n   * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n   * checked during the next change detection run.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value)\n   *       this.ref.reattach();\n   *     else\n   *       this.ref.detach();\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class App {\n   *   live = true;\n   * }\n   * ```\n   */\n  abstract reattach(): void;\n}\n\nfunction ChangeDetectorRef_tsickle_Closure_declarations() {\n\n/**\n * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n * \n * <!-- TODO: Add a link to a chapter on OnPush components -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n * \n * ```typescript\n * \\@Component({ \n *   selector: 'cmp',\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n *   template: `Number of ticks: {{numberOfTicks}}`\n * })\n * class Cmp {\n *   numberOfTicks = 0;\n * \n *   constructor(private ref: ChangeDetectorRef) {\n *     setInterval(() => {\n *       this.numberOfTicks ++\n *       // the following is required, otherwise the view will not be updated\n *       this.ref.markForCheck();\n *     }, 1000);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n *   template: `\n *     <cmp><cmp>\n *   `,\n * })\n * class App {\n * }\n * ```\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.markForCheck = function() {};\n\n/**\n * Detaches the change detector from the change detector tree.\n * \n * The detached change detector will not be checked until it is reattached.\n * \n * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n * local change\n * detection checks.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n * \n * ### Example\n * \n * The following example defines a component with a large list of readonly data.\n * Imagine the data changes constantly, many times per second. For performance reasons,\n * we want to check and update the list every five seconds. We can do that by detaching\n * the component's change detector and doing a local check every five seconds.\n * \n * ```typescript\n * class DataProvider {\n *   // in a real application the returned data will be different every time\n *   get data() {\n *     return [1,2,3,4,5];\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'giant-list',\n *   template: `\n *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n *   `,\n * })\n * class GiantList {\n *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n *     ref.detach();\n *     setInterval(() => {\n *       this.ref.detectChanges();\n *     }, 5000);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   providers: [DataProvider],\n *   template: `\n *     <giant-list><giant-list>\n *   `,\n * })\n * class App {\n * }\n * ```\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.detach = function() {};\n\n/**\n * Checks the change detector and its children.\n * \n * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n * change detection\n * checks.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n * \n * ### Example\n * \n * The following example defines a component with a large list of readonly data.\n * Imagine, the data changes constantly, many times per second. For performance reasons,\n * we want to check and update the list every five seconds.\n * \n * We can do that by detaching the component's change detector and doing a local change detection\n * check\n * every five seconds.\n * \n * See {\\@link ChangeDetectorRef#detach} for more information.\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.detectChanges = function() {};\n\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n * \n * This is used in development mode to verify that running change detection doesn't introduce\n * other changes.\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.checkNoChanges = function() {};\n\n/**\n * Reattach the change detector to the change detector tree.\n * \n * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n * checked during the next change detection run.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n * \n * The following example creates a component displaying `live` data. The component will detach\n * its change detector from the main change detector tree when the component's live property\n * is set to false.\n * \n * ```typescript\n * class DataProvider {\n *   data = 1;\n * \n *   constructor() {\n *     setInterval(() => {\n *       this.data = this.data * 2;\n *     }, 500);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'live-data',\n *   inputs: ['live'],\n *   template: 'Data: {{dataProvider.data}}'\n * })\n * class LiveData {\n *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n * \n *   set live(value) {\n *     if (value)\n *       this.ref.reattach();\n *     else\n *       this.ref.detach();\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   providers: [DataProvider],\n *   template: `\n *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n *     <live-data [live]=\"live\"><live-data>\n *   `,\n * })\n * class App {\n *   live = true;\n * }\n * ```\n * @abstract\n * @return {?}\n */\nChangeDetectorRef.prototype.reattach = function() {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n  /**\n   * Destroys the view and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  abstract get destroyed(): boolean;\n\n  abstract onDestroy(callback: Function): any /** TODO #9100 */;\n}\n\nfunction ViewRef_tsickle_Closure_declarations() {\n\n/**\n * Destroys the view and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\nViewRef.prototype.destroy = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nViewRef.prototype.destroyed = function() {};\n\n/**\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nViewRef.prototype.onDestroy = function(callback) {};\n}\n\n/**\n * Represents an Angular View.\n * \n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n * \n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n * \n * ### Example\n * \n * Given this template...\n * \n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n * \n * We have two {\\@link TemplateRef}s:\n * \n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n * \n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n * \n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n * \n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n * \n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n  abstract get context(): C;\n\n  abstract get rootNodes(): any[];\n}\n\nfunction EmbeddedViewRef_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nEmbeddedViewRef.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nEmbeddedViewRef.prototype.rootNodes = function() {};\n}\n\n/**\n * @record\n */\nexport function InternalViewRef() {}\n\n\nfunction InternalViewRef_tsickle_Closure_declarations() {\n/** @type {?} */\nInternalViewRef.prototype.detachFromAppRef;\n/** @type {?} */\nInternalViewRef.prototype.attachToAppRef;\n}\n\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for compiler\nexport {COMPILER_OPTIONS, Compiler, CompilerFactory, CompilerOptions, ModuleWithComponentFactories} from './linker/compiler';\nexport {ComponentFactory, ComponentRef} from './linker/component_factory';\nexport {ComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {ElementRef} from './linker/element_ref';\nexport {NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nexport {NgModuleFactoryLoader, getModuleFactory} from './linker/ng_module_factory_loader';\nexport {QueryList} from './linker/query_list';\nexport {SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig} from './linker/system_js_ng_module_factory_loader';\nexport {TemplateRef} from './linker/template_ref';\nexport {ViewContainerRef} from './linker/view_container_ref';\nexport {EmbeddedViewRef, ViewRef} from './linker/view_ref';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function){}; }\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement|null;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: DebugNode|null,\nprivate _debugContext: DebugContext) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugContext.injector; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugContext.component; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugContext.context; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} { return this._debugContext.references; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] { return this._debugContext.providerTokens; }\n/**\n * @deprecated since v4\n * @return {?}\n */\nget source(): string { return 'Deprecated since v4'; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugContext;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string | null};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string | null};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n/**\n * @param {?} refChild\n * @param {?} newChild\n * @return {?}\n */\ninsertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n * \n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\nexport function Predicate() {}\n\n\nfunction Predicate_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(value: T): boolean;\n*/\n}\n\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @experimental All debugging apis are currently experimental.\n */\nexport interface Predicate<T> { (value: T): boolean; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a: any, b: any): boolean {\n  const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n * \n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n * \n * Example:\n * \n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport class WrappedValue {\n/**\n * @param {?} wrapped\n */\nconstructor(public wrapped: any) {}\n/**\n * @param {?} value\n * @return {?}\n */\nstatic wrap(value: any): WrappedValue { return new WrappedValue(value); }\n}\n\nfunction WrappedValue_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedValue.prototype.wrapped;\n}\n\n/**\n * Helper class for unwrapping WrappedValue s\n */\nexport class ValueUnwrapper {\npublic hasWrappedValue = false;\n/**\n * @param {?} value\n * @return {?}\n */\nunwrap(value: any): any {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n/**\n * @return {?}\n */\nreset() { this.hasWrappedValue = false; }\n}\n\nfunction ValueUnwrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nValueUnwrapper.prototype.hasWrappedValue;\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport class SimpleChange {\n/**\n * @param {?} previousValue\n * @param {?} currentValue\n * @param {?} firstChange\n */\nconstructor(public previousValue: any,\npublic currentValue: any,\npublic firstChange: boolean) {}\n/**\n * Check whether the new value is the first value assigned.\n * @return {?}\n */\nisFirstChange(): boolean { return this.firstChange; }\n}\n\nfunction SimpleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleChange.prototype.previousValue;\n/** @type {?} */\nSimpleChange.prototype.currentValue;\n/** @type {?} */\nSimpleChange.prototype.firstChange;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template V\n * @param {?=} cdRefOrTrackBy\n * @param {?=} trackByFn\n * @return {?}\n */\ncreate<V>(cdRefOrTrackBy?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn || /** @type {?} */(( <TrackByFunction<any>>cdRefOrTrackBy)));\n  }\n}\n\nconst /** @type {?} */ trackByIdentity = (index: number, item: any) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\nprivate _length: number = 0;\nprivate _collection: NgIterable<V>|null = null;\nprivate _linkedRecords: _DuplicateMap<V>|null = null;\nprivate _unlinkedRecords: _DuplicateMap<V>|null = null;\nprivate _previousItHead: IterableChangeRecord_<V>|null = null;\nprivate _itHead: IterableChangeRecord_<V>|null = null;\nprivate _itTail: IterableChangeRecord_<V>|null = null;\nprivate _additionsHead: IterableChangeRecord_<V>|null = null;\nprivate _additionsTail: IterableChangeRecord_<V>|null = null;\nprivate _movesHead: IterableChangeRecord_<V>|null = null;\nprivate _movesTail: IterableChangeRecord_<V>|null = null;\nprivate _removalsHead: IterableChangeRecord_<V>|null = null;\nprivate _removalsTail: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesHead: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesTail: IterableChangeRecord_<V>|null = null;\nprivate _trackByFn: TrackByFunction<V>;\n/**\n * @param {?=} trackByFn\n */\nconstructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n/**\n * @return {?}\n */\nget collection() { return this._collection; }\n/**\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let /** @type {?} */ nextIt = this._itHead;\n    let /** @type {?} */ nextRemove = this._removalsHead;\n    let /** @type {?} */ addRemoveOffset = 0;\n    let /** @type {?} */ moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const /** @type {?} */ record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt && /** @type {?} */((\n                  nextIt.currentIndex)) <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */((\n          nextIt)) :\n          nextRemove;\n      const /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const /** @type {?} */ currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = /** @type {?} */(( nextIt))._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const /** @type {?} */ localCurrentIndex = /** @type {?} */(( currentIndex)) - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n              const /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const /** @type {?} */ index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const /** @type {?} */ previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} collection\n * @return {?}\n */\ndiff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} collection\n * @return {?}\n */\ncheck(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null = this._itHead;\n    let /** @type {?} */ mayBeDirty: boolean = false;\n    let /** @type {?} */ index: number;\n    let /** @type {?} */ item: V;\n    let /** @type {?} */ itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      this._length = collection.length;\n\n      for (let /** @type {?} */ index = 0; index < this._length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n/**\n * Reset the state of the change objects to show no changes. This means set previousKey to\n * currentKey, and clear all of the queues (additions, moves, removals).\n * Set the previousIndexes of moved and added items to their currentIndexes\n * Reset the list of additions, moves and removals\n * \n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n      let /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // todo(vicb) when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n/**\n * This is the core function which handles differences between collections.\n * \n * - `record` is the record which we saw at this position last time. If null then it is a new\n *   item.\n * - `item` is the current item in the collection\n * - `index` is the position of the item in the collection\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let /** @type {?} */ previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n/**\n * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n * \n * Use case: `[a, a]` => `[b, a, a]`\n * \n * If we did not have this check then the insertion of `b` would:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) leave `a` at index `1` as is. <-- this is wrong!\n *   3) reinsert `a` at index 2. <-- this is wrong!\n * \n * The correct behavior is:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) reinsert `a` at index 1.\n *   3) move `a` at from `1` to `2`.\n * \n * \n * Double check that we have not evicted a duplicate item. We need to check if the item type may\n * have already been removed:\n * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n * at the end.\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let /** @type {?} */ reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, /** @type {?} */(( record._prev)), index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n/**\n * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n * \n * - `record` The first excess {\\@link IterableChangeRecord_}.\n * \n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // todo(vicb)\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // todo(vicb)\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const /** @type {?} */ prev = record._prev;\n    const /** @type {?} */ next = record._next;\n\n    // todo(vicb)\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} toIndex\n * @return {?}\n */\n_addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // todo(vicb)\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\n\nprivate _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // todo(vicb)\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // todo(vicb)\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} item\n * @return {?}\n */\n_addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ list: IterableChangeRecord_<V>[] = [];\n    this.forEachItem((record: IterableChangeRecord_<V>) => list.push(record));\n\n    const /** @type {?} */ previous: IterableChangeRecord_<V>[] = [];\n    this.forEachPreviousItem((record: IterableChangeRecord_<V>) => previous.push(record));\n\n    const /** @type {?} */ additions: IterableChangeRecord_<V>[] = [];\n    this.forEachAddedItem((record: IterableChangeRecord_<V>) => additions.push(record));\n\n    const /** @type {?} */ moves: IterableChangeRecord_<V>[] = [];\n    this.forEachMovedItem((record: IterableChangeRecord_<V>) => moves.push(record));\n\n    const /** @type {?} */ removals: IterableChangeRecord_<V>[] = [];\n    this.forEachRemovedItem((record: IterableChangeRecord_<V>) => removals.push(record));\n\n    const /** @type {?} */ identityChanges: IterableChangeRecord_<V>[] = [];\n    this.forEachIdentityChange((record: IterableChangeRecord_<V>) => identityChanges.push(record));\n\n    return 'collection: ' + list.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'moves: ' + moves.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n' +\n        'identityChanges: ' + identityChanges.join(', ') + '\\n';\n  }\n}\n\nfunction DefaultIterableDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultIterableDiffer.prototype._length;\n/** @type {?} */\nDefaultIterableDiffer.prototype._collection;\n/** @type {?} */\nDefaultIterableDiffer.prototype._linkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._unlinkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._previousItHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._trackByFn;\n}\n\n/**\n * \\@stable\n */\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prev: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_next: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextMoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextIdentityChange: IterableChangeRecord_<V>|null = null;\n/**\n * @param {?} item\n * @param {?} trackById\n */\nconstructor(public item: V,\npublic trackById: any) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                                                      stringify(this.item) + '[' +\n            stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\n\nfunction IterableChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nIterableChangeRecord_.prototype.currentIndex;\n/** @type {?} */\nIterableChangeRecord_.prototype.previousIndex;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextMoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextIdentityChange;\n/** @type {?} */\nIterableChangeRecord_.prototype.item;\n/** @type {?} */\nIterableChangeRecord_.prototype.trackById;\n}\n\nclass _DuplicateItemRecordList<V> {\n/**\n * \\@internal\n */\n_head: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_tail: IterableChangeRecord_<V>|null = null;\n/**\n * Append the record to the list of duplicates.\n * \n * Note: by design all records in the list of duplicates hold the same value in record.item.\n * @param {?} record\n * @return {?}\n */\nadd(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else { /** @type {?} */((\n      // todo(vicb)\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail))._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n/**\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */(( record.currentIndex))) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n/**\n * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * Returns whether the list of duplicates is empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): boolean {\n    // todo(vicb)\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const /** @type {?} */ prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nfunction _DuplicateItemRecordList_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._head;\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._tail;\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n/**\n * @param {?} record\n * @return {?}\n */\nput(record: IterableChangeRecord_<V>) {\n    const /** @type {?} */ key = record.trackById;\n\n    let /** @type {?} */ duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n/**\n * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n * \n * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n * have any more `a`s needs to return the second `a`.\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const /** @type {?} */ key = trackById;\n    const /** @type {?} */ recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n/**\n * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * The list of duplicates also is removed from the map if it gets empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = record.trackById;\n    const /** @type {?} */ recordList: _DuplicateItemRecordList<V> = /** @type {?} */(( this.map.get(key)));\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\nget isEmpty(): boolean { return this.map.size === 0; }\n/**\n * @return {?}\n */\nclear() { this.map.clear(); }\n/**\n * @return {?}\n */\ntoString(): string { return '_DuplicateMap(' + stringify(this.map) + ')'; }\n}\n\nfunction _DuplicateMap_tsickle_Closure_declarations() {\n/** @type {?} */\n_DuplicateMap.prototype.map;\n}\n\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const /** @type {?} */ previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let /** @type {?} */ moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): DefaultKeyValueDiffer<K, V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template K, V\n * @param {?=} cd\n * @return {?}\n */\ncreate<K, V>(cd?: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records = new Map<K, KeyValueChangeRecord_<K, V>>();\nprivate _mapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?=} map\n * @return {?}\n */\ndiff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * Check the current state of the map vs the previous.\n * The algorithm is optimised for when the keys do no change.\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let /** @type {?} */ insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const /** @type {?} */ record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n/**\n * Inserts a record before `before` or append at the end of the list when `before` is null.\n * \n * Notes:\n * - This method appends at `this._appendAfter`,\n * - This method updates `this._appendAfter`,\n * - The return value is the new value for the insertion pointer.\n * @param {?} before\n * @param {?} record\n * @return {?}\n */\n\nprivate _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const /** @type {?} */ prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\n\nprivate _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const /** @type {?} */ record = /** @type {?} */(( this._records.get(key)));\n      this._maybeAddToChanges(record, value);\n      const /** @type {?} */ prev = record._prev;\n      const /** @type {?} */ next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const /** @type {?} */ record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\n\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\n\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else { /** @type {?} */((\n      this._additionsTail))._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\n\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else { /** @type {?} */((\n      this._changesTail))._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * \\@internal\n * @template K, V\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\n\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._appendAfter;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_next: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_prev: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n\n/**\n * A type describing supported iterable types.\n *\n * @stable\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n * \n * \\@stable\n * @record\n */\nexport function IterableDiffer() {}\n\n\nfunction IterableDiffer_tsickle_Closure_declarations() {\n/**\n * Compute a difference between the previous state and the new `object` state.\n * \n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nIterableDiffer.prototype.diff;\n}\n\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @stable\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n * \n * \\@stable\n * @record\n */\nexport function IterableChanges() {}\n\n\nfunction IterableChanges_tsickle_Closure_declarations() {\n/**\n * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nIterableChanges.prototype.forEachItem;\n/**\n * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n * new `Iterable`.\n * \n * NOTE: These are not necessarily the actual operations which were applied to the original\n * `Iterable`, rather these are a set of computed operations which may not be the same as the\n * ones applied.\n * \n * \\@param record A change which needs to be applied\n * \\@param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n *        original `Iterable` location, where as `previousIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * \\@param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n *        original `Iterable` location, where as `currentIndex` refers to the transient location\n *        of the item, after applying the operations up to this point.\n * @type {?}\n */\nIterableChanges.prototype.forEachOperation;\n/**\n * Iterate over changes in the order of original `Iterable` showing where the original items\n * have moved.\n * @type {?}\n */\nIterableChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nIterableChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all moved items.\n * @type {?}\n */\nIterableChanges.prototype.forEachMovedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nIterableChanges.prototype.forEachRemovedItem;\n/**\n * Iterate over all items which had their identity (as computed by the `trackByFn`) changed.\n * @type {?}\n */\nIterableChanges.prototype.forEachIdentityChange;\n}\n\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn: (record: IterableChangeRecord<V>, previousIndex: number, currentIndex: number) => void):\n      void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `trackByFn`) changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n/**\n * Record representing the item change information.\n * \n * \\@stable\n * @record\n */\nexport function IterableChangeRecord() {}\n\n\nfunction IterableChangeRecord_tsickle_Closure_declarations() {\n/**\n * Current index of the item in `Iterable` or null if removed.\n * @type {?}\n */\nIterableChangeRecord.prototype.currentIndex;\n/**\n * Previous index of the item in `Iterable` or null if added.\n * @type {?}\n */\nIterableChangeRecord.prototype.previousIndex;\n/**\n * The item.\n * @type {?}\n */\nIterableChangeRecord.prototype.item;\n/**\n * Track by identity as computed by the `trackByFn`.\n * @type {?}\n */\nIterableChangeRecord.prototype.trackById;\n}\n\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `trackByFn`. */\n  readonly trackById: any;\n}\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\nexport function CollectionChangeRecord() {}\n\n\nfunction CollectionChangeRecord_tsickle_Closure_declarations() {\n}\n\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n/**\n * Nolonger used.\n * \n * @deprecated v4.0.0 - Use TrackByFunction instead\n * @record\n */\nexport function TrackByFn() {}\n\n\nfunction TrackByFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(index: number, item: any): any;\n*/\n}\n\n\n\n/**\n * Nolonger used.\n *\n * @deprecated v4.0.0 - Use TrackByFunction instead\n */\nexport interface TrackByFn { (index: number, item: any): any; }\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n * \n * \\@stable\n * @record\n */\nexport function TrackByFunction() {}\n\n\nfunction TrackByFunction_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(index: number, item: T): any;\n*/\n}\n\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @stable\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n * \n * \\@stable\n * @record\n */\nexport function IterableDifferFactory() {}\n\n\nfunction IterableDifferFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nIterableDifferFactory.prototype.supports;\n/** @type {?} */\nIterableDifferFactory.prototype.create;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @type {?}\n */\nIterableDifferFactory.prototype.create;\n}\n\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @stable\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<V>(_cdr?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      IterableDiffer<V>;\n}\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nexport class IterableDiffers {\n/**\n * @deprecated v4.0.0 - Should be private\n */\nfactories: IterableDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n/**\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n      return new IterableDiffers(factories);\n    } else {\n      return new IterableDiffers(factories);\n    }\n  }\n/**\n * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n * {\\@link IterableDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link IterableDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     IterableDiffers.extend([new ImmutableListDiffer()])\n *   ]\n * })\n * ```\n * @param {?} factories\n * @return {?}\n */\nstatic extend(factories: IterableDifferFactory[]): StaticProvider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} iterable\n * @return {?}\n */\nfind(iterable: any): IterableDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nfunction IterableDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private\n * @type {?}\n */\nIterableDiffers.prototype.factories;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n/**\n * A differ that tracks changes made to an object over time.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueDiffer() {}\n\n\nfunction KeyValueDiffer_tsickle_Closure_declarations() {\n/**\n * Compute a difference between the previous state and the new `object` state.\n * \n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n/**\n * Compute a difference between the previous state and the new `object` state.\n * \n * \\@param object containing the new value.\n * \\@return an object describing the difference. The return value is only valid until the next\n * `diff()` invocation.\n * @type {?}\n */\nKeyValueDiffer.prototype.diff;\n}\n\n\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @stable\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueChanges() {}\n\n\nfunction KeyValueChanges_tsickle_Closure_declarations() {\n/**\n * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n * to each item.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachItem;\n/**\n * Iterate over changes in the order of original Map showing where the original items\n * have moved.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachPreviousItem;\n/**\n * Iterate over all keys for which values have changed.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachChangedItem;\n/**\n * Iterate over all added items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachAddedItem;\n/**\n * Iterate over all removed items.\n * @type {?}\n */\nKeyValueChanges.prototype.forEachRemovedItem;\n}\n\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n/**\n * Record representing the item change information.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueChangeRecord() {}\n\n\nfunction KeyValueChangeRecord_tsickle_Closure_declarations() {\n/**\n * Current key in the Map.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.key;\n/**\n * Current value for the key or `null` if removed.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.currentValue;\n/**\n * Previous value for the key or `null` if added.\n * @type {?}\n */\nKeyValueChangeRecord.prototype.previousValue;\n}\n\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n * \n * \\@stable\n * @record\n */\nexport function KeyValueDifferFactory() {}\n\n\nfunction KeyValueDifferFactory_tsickle_Closure_declarations() {\n/**\n * Test to see if the differ knows how to diff this kind of object.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.supports;\n/**\n * Create a `KeyValueDiffer`.\n * @type {?}\n */\nKeyValueDifferFactory.prototype.create;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @type {?}\n */\nKeyValueDifferFactory.prototype.create;\n}\n\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @stable\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<K, V>(_cdr?: ChangeDetectorRef): KeyValueDiffer<K, V>;\n}\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nexport class KeyValueDiffers {\n/**\n * @deprecated v4.0.0 - Should be private.\n */\nfactories: KeyValueDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n/**\n * @template S\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n/**\n * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n * {\\@link KeyValueDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n *   ]\n * })\n * ```\n * @template S\n * @param {?} factories\n * @return {?}\n */\nstatic extend<S>(factories: KeyValueDifferFactory[]): StaticProvider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} kv\n * @return {?}\n */\nfind(kv: any): KeyValueDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n\nfunction KeyValueDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private.\n * @type {?}\n */\nKeyValueDiffers.prototype.factories;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * To create a Pipe, you must implement this interface.\n * \n * Angular invokes the `transform` method with the value of a binding\n * as the first argument, and any parameters as the second argument in list form.\n * \n * ## Syntax\n * \n * `value | pipeName[:arg0[:arg1...]]`\n * \n * ### Example ([live demo](http://plnkr.co/edit/f5oyIked9M2cKzvZNKHV?p=preview))\n * \n * The `RepeatPipe` below repeats the value as many times as indicated by the first argument:\n * \n * ```\n * import {Pipe, PipeTransform} from '\\@angular/core';\n * \n * \\@Pipe({name: 'repeat'})\n * export class RepeatPipe implements PipeTransform {\n *   transform(value: any, times: number) {\n *     return value.repeat(times);\n *   }\n * }\n * ```\n * \n * Invoking `{{ 'ok' | repeat:3 }}` in a template produces `okokok`.\n * \n * \\@stable\n * @record\n */\nexport function PipeTransform() {}\n\n\nfunction PipeTransform_tsickle_Closure_declarations() {\n/** @type {?} */\nPipeTransform.prototype.transform;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * To create a Pipe, you must implement this interface.\n *\n * Angular invokes the `transform` method with the value of a binding\n * as the first argument, and any parameters as the second argument in list form.\n *\n * ## Syntax\n *\n * `value | pipeName[:arg0[:arg1...]]`\n *\n * ### Example ([live demo](http://plnkr.co/edit/f5oyIked9M2cKzvZNKHV?p=preview))\n *\n * The `RepeatPipe` below repeats the value as many times as indicated by the first argument:\n *\n * ```\n * import {Pipe, PipeTransform} from '@angular/core';\n *\n * @Pipe({name: 'repeat'})\n * export class RepeatPipe implements PipeTransform {\n *   transform(value: any, times: number) {\n *     return value.repeat(times);\n *   }\n * }\n * ```\n *\n * Invoking `{{ 'ok' | repeat:3 }}` in a template produces `okokok`.\n *\n * @stable\n */\nexport interface PipeTransform { transform(value: any, ...args: any[]): any; }\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, ValueUnwrapper, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFn, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst /** @type {?} */ keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst /** @type {?} */ iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\nexport {ChangeDetectionStrategy, ChangeDetectorRef, CollectionChangeRecord, DefaultIterableDiffer, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers, NgIterable, PipeTransform, SimpleChange, SimpleChanges, TrackByFn, TrackByFunction, WrappedValue} from './change_detection/change_detection';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, PlatformRef_, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Injector, StaticProvider} from './di';\nimport {TestabilityRegistry} from './testability/testability';\n\nconst /** @type {?} */ _CORE_PLATFORM_PROVIDERS: StaticProvider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  {provide: PlatformRef_, deps: [Injector]},\n  {provide: PlatformRef, useExisting: PlatformRef_},\n  {provide: TestabilityRegistry, deps: []},\n  {provide: Console, deps: []},\n];\n/**\n * This platform has to be included in any other platform\n * \n * \\@experimental\n */\nexport const /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const /** @type {?} */ LOCALE_ID = new InjectionToken<string>('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const /** @type {?} */ TRANSLATIONS = new InjectionToken<string>('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const /** @type {?} */ TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\nexport type MissingTranslationStrategy = number;\nexport let MissingTranslationStrategy: any = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationInitStatus} from './application_init';\nimport {ApplicationRef, ApplicationRef_} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n * \n * \\@experimental\n */\nexport class ApplicationModule {\n/**\n * @param {?} appRef\n */\nconstructor(appRef: ApplicationRef) {}\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  providers: [\n    ApplicationRef_,\n    {provide: ApplicationRef, useExisting: ApplicationRef_},\n    ApplicationInitStatus,\n    Compiler,\n    APP_ID_RANDOM_PROVIDER,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory},\n    {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ApplicationRef, },\n];\n}\n\nfunction ApplicationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationModule.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport type SecurityContext = number;\nexport let SecurityContext: any = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n}\n\nfunction Sanitizer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nSanitizer.prototype.sanitize = function(context, value) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\nexport function DefinitionFactory() {}\n\n\nfunction DefinitionFactory_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(logger: NodeLogger): D;\n*/\n}\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\nexport function NodeLogger() {}\n\n\nfunction NodeLogger_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): () => void;\n*/\n}\n\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n/**\n * @record\n */\nexport function Definition() {}\n\n\nfunction Definition_tsickle_Closure_declarations() {\n/** @type {?} */\nDefinition.prototype.factory;\n}\n\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n/**\n * @record\n */\nexport function NgModuleDefinition() {}\n\n\nfunction NgModuleDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleDefinition.prototype.providers;\n/** @type {?} */\nNgModuleDefinition.prototype.providersByKey;\n}\n\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n}\n/**\n * @record\n */\nexport function NgModuleDefinitionFactory() {}\n\n\nfunction NgModuleDefinitionFactory_tsickle_Closure_declarations() {\n}\n\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n;\n/**\n * @record\n */\nexport function ViewDefinition() {}\n\n\nfunction ViewDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nViewDefinition.prototype.flags;\n/** @type {?} */\nViewDefinition.prototype.updateDirectives;\n/** @type {?} */\nViewDefinition.prototype.updateRenderer;\n/** @type {?} */\nViewDefinition.prototype.handleEvent;\n/**\n * Order: Depth first.\n * Especially providers are before elements / anchors.\n * @type {?}\n */\nViewDefinition.prototype.nodes;\n/**\n * aggregated NodeFlags for all nodes *\n * @type {?}\n */\nViewDefinition.prototype.nodeFlags;\n/** @type {?} */\nViewDefinition.prototype.rootNodeFlags;\n/** @type {?} */\nViewDefinition.prototype.lastRenderRootNode;\n/** @type {?} */\nViewDefinition.prototype.bindingCount;\n/** @type {?} */\nViewDefinition.prototype.outputCount;\n/**\n * Binary or of all query ids that are matched by one of the nodes.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nViewDefinition.prototype.nodeMatchedQueries;\n}\n\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n/**\n * @record\n */\nexport function ViewDefinitionFactory() {}\n\n\nfunction ViewDefinitionFactory_tsickle_Closure_declarations() {\n}\n\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n/**\n * @record\n */\nexport function ViewUpdateFn() {}\n\n\nfunction ViewUpdateFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(check: NodeCheckFn, view: ViewData): void;\n*/\n}\n\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n/**\n * @record\n */\nexport function NodeCheckFn() {}\n\n\nfunction NodeCheckFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n*/\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n*/\n}\n\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline, Dynamic}\n/**\n * @record\n */\nexport function ViewHandleEventFn() {}\n\n\nfunction ViewHandleEventFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n*/\n}\n\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n/**\n * A node definition in the view.\n * \n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\nexport function NodeDef() {}\n\n\nfunction NodeDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeDef.prototype.flags;\n/** @type {?} */\nNodeDef.prototype.index;\n/** @type {?} */\nNodeDef.prototype.parent;\n/** @type {?} */\nNodeDef.prototype.renderParent;\n/**\n * this is checked against NgContentDef.index to find matched nodes\n * @type {?}\n */\nNodeDef.prototype.ngContentIndex;\n/**\n * number of transitive children\n * @type {?}\n */\nNodeDef.prototype.childCount;\n/**\n * aggregated NodeFlags for all transitive children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.childFlags;\n/**\n * aggregated NodeFlags for all direct children (does not include self) *\n * @type {?}\n */\nNodeDef.prototype.directChildFlags;\n/** @type {?} */\nNodeDef.prototype.bindingIndex;\n/** @type {?} */\nNodeDef.prototype.bindings;\n/** @type {?} */\nNodeDef.prototype.bindingFlags;\n/** @type {?} */\nNodeDef.prototype.outputIndex;\n/** @type {?} */\nNodeDef.prototype.outputs;\n/**\n * references that the user placed on the element\n * @type {?}\n */\nNodeDef.prototype.references;\n/**\n * ids and value types of all queries that are matched by this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueries;\n/**\n * Binary or of all matched query ids of this node.\n * @type {?}\n */\nNodeDef.prototype.matchedQueryIds;\n/**\n * Binary or of all query ids that are matched by one of the children.\n * This includes query ids from templates as well.\n * Used as a bloom filter.\n * @type {?}\n */\nNodeDef.prototype.childMatchedQueries;\n/** @type {?} */\nNodeDef.prototype.element;\n/** @type {?} */\nNodeDef.prototype.provider;\n/** @type {?} */\nNodeDef.prototype.text;\n/** @type {?} */\nNodeDef.prototype.query;\n/** @type {?} */\nNodeDef.prototype.ngContent;\n}\n\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  index: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n/**\n * @record\n */\nexport function BindingDef() {}\n\n\nfunction BindingDef_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingDef.prototype.flags;\n/** @type {?} */\nBindingDef.prototype.ns;\n/** @type {?} */\nBindingDef.prototype.name;\n/** @type {?} */\nBindingDef.prototype.nonMinifiedName;\n/** @type {?} */\nBindingDef.prototype.securityContext;\n/** @type {?} */\nBindingDef.prototype.suffix;\n}\n\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n/**\n * @record\n */\nexport function OutputDef() {}\n\n\nfunction OutputDef_tsickle_Closure_declarations() {\n/** @type {?} */\nOutputDef.prototype.type;\n/** @type {?} */\nOutputDef.prototype.target;\n/** @type {?} */\nOutputDef.prototype.eventName;\n/** @type {?} */\nOutputDef.prototype.propName;\n}\n\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef,\n  RenderElement,\n  TemplateRef,\n  ViewContainerRef,\n  Provider\n}\n/**\n * @record\n */\nexport function ElementDef() {}\n\n\nfunction ElementDef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementDef.prototype.name;\n/** @type {?} */\nElementDef.prototype.ns;\n/**\n * ns, name, value\n * @type {?}\n */\nElementDef.prototype.attrs;\n/** @type {?} */\nElementDef.prototype.template;\n/** @type {?} */\nElementDef.prototype.componentProvider;\n/** @type {?} */\nElementDef.prototype.componentRendererType;\n/** @type {?} */\nElementDef.prototype.componentView;\n/**\n * visible public providers for DI in the view,\n * as see from this element. This does not include private providers.\n * @type {?}\n */\nElementDef.prototype.publicProviders;\n/**\n * same as visiblePublicProviders, but also includes private providers\n * that are located on this element.\n * @type {?}\n */\nElementDef.prototype.allProviders;\n/** @type {?} */\nElementDef.prototype.handleEvent;\n}\n\n\nexport interface ElementDef {\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n/**\n * @record\n */\nexport function ElementHandleEventFn() {}\n\n\nfunction ElementHandleEventFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(view: ViewData, eventName: string, event: any): boolean;\n*/\n}\n\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n/**\n * @record\n */\nexport function ProviderDef() {}\n\n\nfunction ProviderDef_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderDef.prototype.token;\n/** @type {?} */\nProviderDef.prototype.value;\n/** @type {?} */\nProviderDef.prototype.deps;\n}\n\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n/**\n * @record\n */\nexport function NgModuleProviderDef() {}\n\n\nfunction NgModuleProviderDef_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleProviderDef.prototype.flags;\n/** @type {?} */\nNgModuleProviderDef.prototype.index;\n/** @type {?} */\nNgModuleProviderDef.prototype.token;\n/** @type {?} */\nNgModuleProviderDef.prototype.value;\n/** @type {?} */\nNgModuleProviderDef.prototype.deps;\n}\n\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n/**\n * @record\n */\nexport function DepDef() {}\n\n\nfunction DepDef_tsickle_Closure_declarations() {\n/** @type {?} */\nDepDef.prototype.flags;\n/** @type {?} */\nDepDef.prototype.token;\n/** @type {?} */\nDepDef.prototype.tokenKey;\n}\n\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Value = 2 << 2,\n}\n/**\n * @record\n */\nexport function TextDef() {}\n\n\nfunction TextDef_tsickle_Closure_declarations() {\n/** @type {?} */\nTextDef.prototype.prefix;\n}\n\n\nexport interface TextDef { prefix: string; }\n/**\n * @record\n */\nexport function QueryDef() {}\n\n\nfunction QueryDef_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryDef.prototype.id;\n/** @type {?} */\nQueryDef.prototype.filterId;\n/** @type {?} */\nQueryDef.prototype.bindings;\n}\n\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n/**\n * @record\n */\nexport function QueryBindingDef() {}\n\n\nfunction QueryBindingDef_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryBindingDef.prototype.propName;\n/** @type {?} */\nQueryBindingDef.prototype.bindingType;\n}\n\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First, All}\n/**\n * @record\n */\nexport function NgContentDef() {}\n\n\nfunction NgContentDef_tsickle_Closure_declarations() {\n/**\n * this index is checked against NodeDef.ngContentIndex to find the nodes\n * that are matched by this ng-content.\n * Note that a NodeDef with an ng-content can be reprojected, i.e.\n * have a ngContentIndex on its own.\n * @type {?}\n */\nNgContentDef.prototype.index;\n}\n\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n/**\n * @record\n */\nexport function NgModuleData() {}\n\n\nfunction NgModuleData_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleData.prototype._def;\n/** @type {?} */\nNgModuleData.prototype._parent;\n/** @type {?} */\nNgModuleData.prototype._providers;\n}\n\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ViewData() {}\n\n\nfunction ViewData_tsickle_Closure_declarations() {\n/** @type {?} */\nViewData.prototype.def;\n/** @type {?} */\nViewData.prototype.root;\n/** @type {?} */\nViewData.prototype.renderer;\n/** @type {?} */\nViewData.prototype.parentNodeDef;\n/** @type {?} */\nViewData.prototype.parent;\n/** @type {?} */\nViewData.prototype.viewContainerParent;\n/** @type {?} */\nViewData.prototype.component;\n/** @type {?} */\nViewData.prototype.context;\n/** @type {?} */\nViewData.prototype.nodes;\n/** @type {?} */\nViewData.prototype.state;\n/** @type {?} */\nViewData.prototype.oldValues;\n/** @type {?} */\nViewData.prototype.disposables;\n}\n\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges\n}\n/**\n * @record\n */\nexport function DisposableFn() {}\n\n\nfunction DisposableFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(): void;\n*/\n}\n\n\nexport interface DisposableFn { (): void; }\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n/**\n * Data for an instantiated NodeType.Text.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function TextData() {}\n\n\nfunction TextData_tsickle_Closure_declarations() {\n/** @type {?} */\nTextData.prototype.renderText;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.Element.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ElementData() {}\n\n\nfunction ElementData_tsickle_Closure_declarations() {\n/** @type {?} */\nElementData.prototype.renderElement;\n/** @type {?} */\nElementData.prototype.componentView;\n/** @type {?} */\nElementData.prototype.viewContainer;\n/** @type {?} */\nElementData.prototype.template;\n}\n\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n/**\n * @record\n */\nexport function ViewContainerData() {}\n\n\nfunction ViewContainerData_tsickle_Closure_declarations() {\n/** @type {?} */\nViewContainerData.prototype._embeddedViews;\n}\n\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n/**\n * @record\n */\nexport function TemplateData() {}\n\n\nfunction TemplateData_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateData.prototype._projectedViews;\n}\n\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.Provider.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function ProviderData() {}\n\n\nfunction ProviderData_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderData.prototype.instance;\n}\n\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n * \n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\nexport function PureExpressionData() {}\n\n\nfunction PureExpressionData_tsickle_Closure_declarations() {\n/** @type {?} */\nPureExpressionData.prototype.value;\n}\n\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * @record\n */\nexport function RootData() {}\n\n\nfunction RootData_tsickle_Closure_declarations() {\n/** @type {?} */\nRootData.prototype.injector;\n/** @type {?} */\nRootData.prototype.ngModule;\n/** @type {?} */\nRootData.prototype.projectableNodes;\n/** @type {?} */\nRootData.prototype.selectorOrNode;\n/** @type {?} */\nRootData.prototype.renderer;\n/** @type {?} */\nRootData.prototype.rendererFactory;\n/** @type {?} */\nRootData.prototype.errorHandler;\n/** @type {?} */\nRootData.prototype.sanitizer;\n}\n\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\nfunction DebugContext_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.view = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.nodeIndex = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.injector = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.component = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.providerTokens = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.references = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.context = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.componentRenderElement = function() {};\n\n/**\n * @abstract\n * @return {?}\n */\nDebugContext.prototype.renderNode = function() {};\n\n/**\n * @abstract\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nDebugContext.prototype.logError = function(console, values) {};\n}\n\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n/**\n * @record\n */\nexport function ProviderOverride() {}\n\n\nfunction ProviderOverride_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderOverride.prototype.token;\n/** @type {?} */\nProviderOverride.prototype.flags;\n/** @type {?} */\nProviderOverride.prototype.value;\n/** @type {?} */\nProviderOverride.prototype.deps;\n}\n\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  clearProviderOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const /** @type {?} */ Services: Services = {\n  setCurrentNode: /** @type {?} */(( undefined)),\n  createRootView: /** @type {?} */(( undefined)),\n  createEmbeddedView: /** @type {?} */(( undefined)),\n  createComponentView: /** @type {?} */(( undefined)),\n  createNgModuleRef: /** @type {?} */(( undefined)),\n  overrideProvider: /** @type {?} */(( undefined)),\n  clearProviderOverrides: /** @type {?} */(( undefined)),\n  checkAndUpdateView: /** @type {?} */(( undefined)),\n  checkNoChangesView: /** @type {?} */(( undefined)),\n  destroyView: /** @type {?} */(( undefined)),\n  resolveDep: /** @type {?} */(( undefined)),\n  createDebugContext: /** @type {?} */(( undefined)),\n  handleEvent: /** @type {?} */(( undefined)),\n  updateDirectives: /** @type {?} */(( undefined)),\n  updateRenderer: /** @type {?} */(( undefined)),\n  dirtyParentQueries: /** @type {?} */(( undefined)),\n};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let /** @type {?} */ msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const /** @type {?} */ err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  ( /** @type {?} */((err as any)))[ERROR_DEBUG_CONTEXT] = context;\n  ( /** @type {?} */((err as any)))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\n\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const /** @type {?} */ NOOP: any = () => {};\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    let /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    let /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst /** @type {?} */ UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst /** @type {?} */ EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const /** @type {?} */ isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.index), oldValue, value,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean|undefined {\n  try {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    const /** @type {?} */ startView = nodeDef.flags & NodeFlags.ComponentView ?\n        asElementData(view, nodeIndex).componentView :\n        view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n  } catch ( /** @type {?} */e) {\n    // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n    view.root.errorHandler.handleError(e);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const /** @type {?} */ parentView = view.parent;\n    return asElementData(parentView, /** @type {?} */(( view.parentNodeDef)).index);\n  }\n  return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const /** @type {?} */ parentView = view.parent;\n  if (parentView) {\n    return /** @type {?} */(( view.parentNodeDef)).parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.index).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.index).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const /** @type {?} */ matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let /** @type {?} */ matchedQueryIds = 0;\n  const /** @type {?} */ references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[]): DepDef[] {\n  return deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let /** @type {?} */ renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        ( /** @type {?} */((renderParent.element)).componentRendererType && /** @type {?} */(( /** @type {?} */((\n         renderParent.element)).componentRendererType)).encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, /** @type {?} */(( def.renderParent)).index).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst /** @type {?} */ DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let /** @type {?} */ value = /** @type {?} */(( /** @type {?} */(( DEFINITION_CACHE.get(factory)))as D));\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view: ViewData): any[] {\n  const /** @type {?} */ renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */(( view.def.lastRenderRootNode))));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let /** @type {?} */ compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */ hostView = /** @type {?} */(( compView)).parent;\n  const /** @type {?} */ hostElDef = viewParentEl( /** @type {?} */((compView)));\n  const /** @type {?} */ startIndex = /** @type {?} */(( hostElDef)).index + 1;\n  const /** @type {?} */ endIndex = /** @type {?} */(( hostElDef)).index + /** @type {?} */(( hostElDef)).childCount;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = /** @type {?} */(( hostView)).def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode( /** @type {?} */((hostView)), nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (! /** @type {?} */((hostView)).parent) {\n    // a root view\n    const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, /** @type {?} */(( nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */ rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, nodeDef.index).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && ! /** @type {?} */((nodeDef.element)).name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const /** @type {?} */ renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect: /** @type {?} */((\n      target)).push(renderNode);\n      break;\n  }\n}\n\nconst /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const /** @type {?} */ match = /** @type {?} */(( name.match(NS_PREFIX_RE)));\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let /** @type {?} */ flags = 0;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let /** @type {?} */ result = '';\n  for (let /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const /** @type {?} */ EMPTY_ARRAY: any[] = [];\nexport const /** @type {?} */ EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, handleEvent?: ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, namespaceAndName: string,\n    fixedAttrs: [string, string][] = [],\n    bindings?: [BindingFlags, string, string | SecurityContext][], outputs?: ([string, string])[],\n    handleEvent?: ElementHandleEventFn, componentView?: ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ ns: string = /** @type {?} */(( null));\n  let /** @type {?} */ name: string = /** @type {?} */(( null));\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */ bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let /** @type {?} */ securityContext: SecurityContext = /** @type {?} */(( undefined));\n    let /** @type {?} */ suffix: string = /** @type {?} */(( undefined));\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = /** @type {?} */(( <string>suffixOrSecurityContext));\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = /** @type {?} */(( <SecurityContext>suffixOrSecurityContext));\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const /** @type {?} */ outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: /** @type {?} */(( <any>target)), eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */ attrs = /** @type {?} */(( <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  })));\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const /** @type {?} */ elDef = /** @type {?} */(( def.element));\n  const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */ renderer = view.renderer;\n  let /** @type {?} */ el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n    const /** @type {?} */ output = def.outputs[i];\n    const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(\n        view, def.index, elementEventFullName(output.target, output.eventName));\n    let /** @type {?} */ listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let /** @type {?} */ listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const /** @type {?} */ disposable = /** @type {?} */((\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure))); /** @type {?} */((\n    view.disposables))[def.outputIndex + i] = disposable;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindLen = def.bindings.length;\n  let /** @type {?} */ changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ elData = asElementData(view, def.index);\n  const /** @type {?} */ renderNode = elData.renderElement;\n  const /** @type {?} */ name = /** @type {?} */(( binding.name));\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const /** @type {?} */ bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */ renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const /** @type {?} */ renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let /** @type {?} */ renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */(( value as{} | string)));\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */ unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */ renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {NgModuleRef} from '../linker/ng_module_factory';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\nconst /** @type {?} */ NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const /** @type {?} */ providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers\n  };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data: NgModuleData) {\n  const /** @type {?} */ def = data._def;\n  const /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    providers[i] = provDef.flags & NodeFlags.LazyProvider ? NOT_CREATED :\n                                                            _createProviderInstance(data, provDef);\n  }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  if (depDef.flags & DepFlags.SkipSelf) {\n    return data._parent.get(depDef.token, notFoundValue);\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n  switch (tokenKey) {\n    case InjectorRefTokenKey:\n    case NgModuleRefTokenKey:\n      return data;\n  }\n  const /** @type {?} */ providerDef = data._def.providersByKey[tokenKey];\n  if (providerDef) {\n    let /** @type {?} */ providerInstance = data._providers[providerDef.index];\n    if (providerInstance === NOT_CREATED) {\n      providerInstance = data._providers[providerDef.index] =\n          _createProviderInstance(data, providerDef);\n    }\n    return providerInstance;\n  }\n  return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let /** @type {?} */ injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]));\n      break;\n    case 2:\n      injectable =\n          new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveNgModuleDep(ngModule, deps[0]));\n      break;\n    case 2:\n      injectable =\n          factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const /** @type {?} */ def = ngModule._def;\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const /** @type {?} */ instance = ngModule._providers[i];\n      if (instance && instance !== NOT_CREATED) {\n        instance.ngOnDestroy();\n      }\n    }\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, /** @type {?} */(( viewIndex)), view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const /** @type {?} */ prevView = /** @type {?} */(( viewIndex)) > 0 ? embeddedViews[ /** @type {?} */((viewIndex)) - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even accross component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate( /** @type {?} */((view.parent)).def, /** @type {?} */(( view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let /** @type {?} */ parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const /** @type {?} */ view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  const /** @type {?} */ view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */(( prevView.def.lastRenderRootNode))) :\n                                    elementData.renderElement;\n  const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return ( /** @type {?} */((componentFactory as ComponentFactory_))).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * \\@internal\n */\nviewDefFactory: ViewDefinitionFactory;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} _inputs\n * @param {?} _outputs\n * @param {?} ngContentSelectors\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory,\nprivate _inputs: {[propName: string]: string}|null,\nprivate _outputs: {[propName: string]: string},\npublic ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n/**\n * @return {?}\n */\nget inputs() {\n    const /** @type {?} */ inputsArr: {propName: string, templateName: string}[] = [];\n    const /** @type {?} */ inputs = /** @type {?} */(( this._inputs));\n    for (let /** @type {?} */ propName in inputs) {\n      const /** @type {?} */ templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n/**\n * @return {?}\n */\nget outputs() {\n    const /** @type {?} */ outputsArr: {propName: string, templateName: string}[] = [];\n    for (let /** @type {?} */ propName in this._outputs) {\n      const /** @type {?} */ templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n    const /** @type {?} */ componentNodeIndex = /** @type {?} */(( /** @type {?} */(( viewDef.nodes[0].element)).componentProvider)).index;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype.viewDefFactory;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n/** @type {?} */\nComponentFactory_.prototype._inputs;\n/** @type {?} */\nComponentFactory_.prototype._outputs;\n/** @type {?} */\nComponentFactory_.prototype.ngContentSelectors;\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ implements ViewContainerData {\n/**\n * \\@internal\n */\n_embeddedViews: ViewData[] = [];\n/**\n * @param {?} _view\n * @param {?} _elDef\n * @param {?} _data\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef,\nprivate _data: ElementData) {}\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = /** @type {?} */(( view.parent));\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = /** @type {?} */(( detachEmbeddedView(this._data, i)));\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef|null {\n    const /** @type {?} */ view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._embeddedViews.length; };\n/**\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModuleRef\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const /** @type {?} */ componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef|null {\n    const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewContainerRef_.prototype._embeddedViews;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n/** @type {?} */\nViewContainerRef_.prototype._data;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n/**\n * \\@internal\n */\n_view: ViewData;\nprivate _viewContainerRef: ViewContainerRef|null;\nprivate _appRef: ApplicationRef|null;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { markParentViewsForCheck(this._view); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.Attached; }\n/**\n * @return {?}\n */\ndetectChanges(): void {\n    const /** @type {?} */ fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    Services.checkAndUpdateView(this._view);\n    if (fs.end) {\n      fs.end();\n    }\n  }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.Attached; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n/**\n * \\@internal\n */\n_projectedViews: ViewData[];\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) { super(); }\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, /** @type {?} */(( /** @type {?} */(( this._def.element)).template)), context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTemplateRef_.prototype._projectedViews;\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef|null) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const /** @type {?} */ elData = asElementData(view, def.index);\n    return /** @type {?} */(( def.element)).template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.index).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.index).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) { /** @type {?} */((\n      this.delegate.destroyNode))(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\nprivate _destroyListeners: (() => void)[] = [];\nprivate _destroyed: boolean = false;\n/**\n * \\@internal\n */\n_providers: any[];\n/**\n * @param {?} _moduleType\n * @param {?} _parent\n * @param {?} _bootstrapComponents\n * @param {?} _def\n */\nconstructor(\nprivate _moduleType: Type<any>,\npublic _parent: Injector,\npublic _bootstrapComponents: Type<any>[],\npublic _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: DepFlags.None}, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget instance() { return this.get(this._moduleType); }\n/**\n * @return {?}\n */\nget componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n\nfunction NgModuleRef__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleRef_.prototype._destroyListeners;\n/** @type {?} */\nNgModuleRef_.prototype._destroyed;\n/**\n * \\@internal\n * @type {?}\n */\nNgModuleRef_.prototype._providers;\n/** @type {?} */\nNgModuleRef_.prototype._moduleType;\n/** @type {?} */\nNgModuleRef_.prototype._parent;\n/** @type {?} */\nNgModuleRef_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleRef_.prototype._def;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ RendererV1TokenKey = tokenKey(RendererV1);\nconst /** @type {?} */ Renderer2TokenKey = tokenKey(Renderer2);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], childCount: number,\n    ctor: any, deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    outputs?: {[name: string]: string}): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][] | null,\n    childCount: number, token: any, value: any, deps: ([DepFlags, any] | any)[],\n    bindings?: BindingDef[], outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return def.flags & NodeFlags.LazyProvider ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let /** @type {?} */ compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const /** @type {?} */ allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass( /** @type {?} */((\n      compView.parent)), /** @type {?} */(( viewParentEl(compView))), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */((\n      def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const /** @type {?} */ instance = createClass(\n      view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */(( def.provider)).deps);\n  if (def.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n      const /** @type {?} */ output = def.outputs[i];\n      const /** @type {?} */ subscription = instance[ /** @type {?} */((output.propName))].subscribe(\n          eventHandlerClosure(view, /** @type {?} */(( def.parent)).index, output.eventName)); /** @type {?} */((\n      view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  const /** @type {?} */ bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const /** @type {?} */ providerDef = def.provider;\n  let /** @type {?} */ injectable: any;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = createClass(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = callFactory(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveDep(view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = /** @type {?} */(( providerDef)).value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const /** @type {?} */ NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && /** @type {?} */(( elDef.element)).componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = /** @type {?} */(( elDef.parent));\n  }\n\n  while (view) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(view, elDef.index).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(view, elDef.index).viewContainer;\n        case TemplateRefTokenKey: {\n          if ( /** @type {?} */((elDef.element)).template) {\n            return asElementData(view, elDef.index).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n          return createInjector(view, elDef);\n        default:\n          const /** @type {?} */ providerDef = /** @type {?} */((\n              (allowPrivateServices ? /** @type {?} */(( elDef.element)).allProviders : /** @type {?} */((\n                                      elDef.element)).publicProviders)))[tokenKey];\n          if (providerDef) {\n            const /** @type {?} */ providerData = asProviderData(view, providerDef.index);\n            if (providerData.instance === NOT_CREATED) {\n              providerData.instance = _createProviderInstance(view, providerDef);\n            }\n            return providerData.instance;\n          }\n      }\n    }\n    allowPrivateServices = isComponentView(view);\n    elDef = /** @type {?} */(( viewParentEl(view)));\n    view = /** @type {?} */(( view.parent));\n  }\n\n  const /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let /** @type {?} */ compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.index).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( def.parent)).index).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ propName = /** @type {?} */(( binding.name));\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    let /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    changes[ /** @type {?} */((binding.nonMinifiedName))] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ nodes = view.def.nodes;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ nodeDef = nodes[i];\n    let /** @type {?} */ parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.index + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        callElementProvidersLifecycles(view, parent, lifecycles);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view: ViewData, elDef: NodeDef, lifecycles: NodeFlags) {\n  for (let /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view: ViewData, index: number, lifecycles: NodeFlags) {\n  const /** @type {?} */ provider = asProviderData(view, index).instance;\n  if (provider === NOT_CREATED) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view: ViewData) {\n  const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */ tplDef = /** @type {?} */(( view.parentNodeDef));\n    view = view.parent;\n    // content queries\n    const /** @type {?} */ end = tplDef.index + tplDef.childCount;\n    for (let /** @type {?} */ i = 0; i <= end; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          ( /** @type {?} */((nodeDef.query)).filterId & queryIds) === /** @type {?} */(( nodeDef.query)).filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.index) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */ directiveInstance: any;\n  let /** @type {?} */ newValues: any[] = /** @type {?} */(( undefined));\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const /** @type {?} */ elementDef = /** @type {?} */(( /** @type {?} */(( nodeDef.parent)).parent));\n    newValues = calcQueryValues(\n        view, elementDef.index, elementDef.index + elementDef.childCount, /** @type {?} */(( nodeDef.query)), []);\n    directiveInstance = asProviderData(view, /** @type {?} */(( nodeDef.parent)).index).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */(( nodeDef.query)), []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */ bindings = /** @type {?} */(( nodeDef.query)).bindings;\n  let /** @type {?} */ notify = false;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    let /** @type {?} */ boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && /** @type {?} */(( nodeDef.element)).template &&\n        ( /** @type {?} */(( /** @type {?} */((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      // check embedded views that were attached at the place of their template.\n      const /** @type {?} */ elementData = asElementData(view, i);\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */ embeddedView = embeddedViews[k];\n          const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    let /** @type {?} */ value: any;\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        value = asElementData(view, nodeDef.index).renderElement;\n        break;\n      case QueryValueType.ElementRef:\n        value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n        break;\n      case QueryValueType.TemplateRef:\n        value = asElementData(view, nodeDef.index).template;\n        break;\n      case QueryValueType.ViewContainerRef:\n        value = asElementData(view, nodeDef.index).viewContainer;\n        break;\n      case QueryValueType.Provider:\n        value = asProviderData(view, nodeDef.index).instance;\n        break;\n    }\n    return value;\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex: number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const /** @type {?} */ ngContentIndex = /** @type {?} */(( def.ngContent)).index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, new Array(argCount));\n}\n/**\n * @param {?} propToIndex\n * @return {?}\n */\nexport function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef {\n  const /** @type {?} */ keys = Object.keys(propToIndex);\n  const /** @type {?} */ nbKeys = keys.length;\n  const /** @type {?} */ propertyNames = new Array(nbKeys);\n  for (let /** @type {?} */ i = 0; i < nbKeys; i++) {\n    const /** @type {?} */ key = keys[i];\n    const /** @type {?} */ index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags: NodeFlags, propertyNames: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[ /** @type {?} */((bindings[0].name))] = v0;\n        if (bindLen > 1) value[ /** @type {?} */((bindings[1].name))] = v1;\n        if (bindLen > 2) value[ /** @type {?} */((bindings[2].name))] = v2;\n        if (bindLen > 3) value[ /** @type {?} */((bindings[3].name))] = v3;\n        if (bindLen > 4) value[ /** @type {?} */((bindings[4].name))] = v4;\n        if (bindLen > 5) value[ /** @type {?} */((bindings[5].name))] = v5;\n        if (bindLen > 6) value[ /** @type {?} */((bindings[6].name))] = v6;\n        if (bindLen > 7) value[ /** @type {?} */((bindings[7].name))] = v7;\n        if (bindLen > 8) value[ /** @type {?} */((bindings[8].name))] = v8;\n        if (bindLen > 9) value[ /** @type {?} */((bindings[9].name))] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[ /** @type {?} */((bindings[i].name))] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = values[0];\n        const /** @type {?} */ params = values.slice(1);\n        value = ( /** @type {?} */((<any>pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding, getParentRenderElement} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nexport function textDef(ngContentIndex: number, constants: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(constants.length - 1);\n  for (let /** @type {?} */ i = 1; i < constants.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: constants[i]\n    };\n  }\n  const /** @type {?} */ flags = NodeFlags.TypeText;\n  return {\n    // will bet set by the view definition\n    index: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: constants[0]},\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let /** @type {?} */ renderNode: any;\n  const /** @type {?} */ renderer = view.renderer;\n  renderNode = renderer.createText( /** @type {?} */((def.text)).prefix);\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindings = def.bindings;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let /** @type {?} */ value = /** @type {?} */(( def.text)).prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */ value = '';\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = /** @type {?} */(( def.text)).prefix + value;\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: ViewUpdateFn,\n    updateRenderer?: ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewRootNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef|null = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef|null = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent: NodeDef|null = currentParent.parent;\n      if (newParent) {\n        newParent.childFlags |= /** @type {?} */(( currentParent.childFlags));\n        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ node = nodes[i];\n    node.index = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n\n    // renderParent needs to account for ng-container!\n    let /** @type {?} */ currentRenderParent: NodeDef|null;\n    if (currentParent && currentParent.flags & NodeFlags.TypeElement &&\n        ! /** @type {?} */((currentParent.element)).name) {\n      currentRenderParent = currentParent.renderParent;\n    } else {\n      currentRenderParent = currentParent;\n    }\n    node.renderParent = currentRenderParent;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? /** @type {?} */(( currentParent.element)).publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n    }\n    validateNode(currentParent, node, nodes.length);\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element && node.element.template) {\n      viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true; /** @type {?} */(( /** @type {?} */((\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent)).element)).publicProviders =\n            Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders); /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders = /** @type {?} */(( /** @type {?} */(( currentParent)).element)).publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) { /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).publicProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true; /** @type {?} */(( /** @type {?} */((\n          // Use protoyypical inheritance to not get O(n^2) complexity...\n          currentParent)).element)).allProviders =\n              Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders);\n        } /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      }\n      if (isComponent) { /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).componentProvider = node;\n      }\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = currentParent.parent;\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n    }\n    currentParent = newParent;\n  }\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) => /** @type {?} */(( /** @type {?} */((\n      nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent: handleEvent || NOOP,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.index}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ rendererType = /** @type {?} */(( nodeDef.element)).componentRendererType;\n  let /** @type {?} */ compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, /** @type {?} */(( nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData( /** @type {?} */((view.parent)), /** @type {?} */(( /** @type {?} */(( hostDef)).parent)).index).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */ nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const /** @type {?} */ el = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        let /** @type {?} */ componentView: ViewData = /** @type {?} */(( undefined));\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const /** @type {?} */ compViewDef = resolveDefinition( /** @type {?} */(( /** @type {?} */((nodeDef.element)).componentView)));\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = /** @type {?} */(( <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: /** @type {?} */(( nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n        }));\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        if (nodeDef.flags & NodeFlags.Component) {\n          const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( nodeDef.parent)).index).componentView;\n          initView(compView, instance, instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ i = 0; i < projectedViews.length; i++) {\n          const /** @type {?} */ projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeDirective:\n      changed =\n          checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed =\n          checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeDirective:\n      changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n      break;\n  }\n  if (changed) {\n    // Update oldValues after all bindings have been updated,\n    // as a setter for a property might update other properties.\n    const /** @type {?} */ bindLen = nodeDef.bindings.length;\n    const /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n    const /** @type {?} */ oldValues = view.oldValues;\n    for (let /** @type {?} */ i = 0; i < bindLen; i++) {\n      oldValues[bindingStart + i] = values[i];\n    }\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${( /** @type {?} */((nodeDef.query))).id} not dirty`,\n        `Query ${( /** @type {?} */((nodeDef.query))).id} dirty`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) { /** @type {?} */((\n      view.renderer.destroyNode))(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) { /** @type {?} */((\n      view.renderer.destroyNode))(asTextData(view, i).renderText);\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, i).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../security';\nimport {Type} from '../type';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, DepDef, ElementData, NgModuleDefinition, NgModuleProviderDef, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.clearProviderOverrides = services.clearProviderOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    clearProviderOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    clearProviderOverrides: debugClearProviderOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */ root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null,\n      [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst /** @type {?} */ providerOverrides = new Map<any, ProviderOverride>();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n  providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  for (let /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const /** @type {?} */ elIndicesWithOverwrittenProviders: number[] = [];\n    let /** @type {?} */ lastElementDef: NodeDef|null = null;\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has( /** @type {?} */((nodeDef.provider)).token)) {\n        elIndicesWithOverwrittenProviders.push( /** @type {?} */((lastElementDef)).index);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n/**\n * @param {?} viewDef\n * @param {?} elIndex\n * @return {?}\n */\nfunction applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let /** @type {?} */ i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        // Make all providers lazy, so that we don't get into trouble\n        // with ordering problems of providers on the same element\n        nodeDef.flags |= NodeFlags.LazyProvider;\n        const /** @type {?} */ provider = /** @type {?} */(( nodeDef.provider));\n        const /** @type {?} */ override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction hasOverrrides(def: NgModuleDefinition): boolean {\n    return def.providers.some(\n        node =>\n            !!(node.flags & NodeFlags.CatProviderNoDirective) && providerOverrides.has(node.token));\n  }\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverrides(def: NgModuleDefinition) {\n    for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n      const /** @type {?} */ provider = def.providers[i];\n      // Make all providers lazy, so that we don't get into trouble\n      // with ordering problems of providers on the same element\n      provider.flags |= NodeFlags.LazyProvider;\n      const /** @type {?} */ override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number|null;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const /** @type {?} */ changed = ( /** @type {?} */((<any>checkAndUpdateNode)))(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName( /** @type {?} */((binding.nonMinifiedName)))] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = /** @type {?} */(( nodeDef.parent));\n      const /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n      if (! /** @type {?} */((elDef.element)).name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          const /** @type {?} */ value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  ( /** @type {?} */((<any>checkNoChangesNode)))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let /** @type {?} */ elDef = this.nodeDef;\n    let /** @type {?} */ elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = /** @type {?} */(( elDef.parent));\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = /** @type {?} */(( viewParentEl(elView)));\n        elView = /** @type {?} */(( elView.parent));\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n/**\n * @return {?}\n */\n\nprivate get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.index).componentView || this.view;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any { return this.elOrCompView.component; }\n/**\n * @return {?}\n */\nget context(): any { return this.elOrCompView.context; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push( /** @type {?} */((childDef.provider)).token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {\n    let /** @type {?} */ logViewDef: ViewDefinition;\n    let /** @type {?} */ logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.index;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.index;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let /** @type {?} */ currRenderNodeIndex = -1;\n    let /** @type {?} */ nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    }; /** @type {?} */((\n    logViewDef.factory))(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      ( /** @type {?} */((<any>console.error)))(...values);\n    }\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let /** @type {?} */ renderNodeIndex = -1;\n  for (let /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n    const /** @type {?} */ nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = /** @type {?} */(( view.parent));\n  }\n  if (view.parent) {\n    return asElementData(view.parent, /** @type {?} */(( viewParentEl(view))).index);\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, /** @type {?} */(( getCurrentDebugContext())));\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 implements RendererFactory2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactory2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n/**\n * @return {?}\n */\nbegin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n/**\n * @return {?}\n */\nend() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n/**\n * @return {?}\n */\nwhenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactory2.prototype.delegate;\n}\n\nclass DebugRenderer2 implements Renderer2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex( /** @type {?} */((getDebugNode(node))));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = /** @type {?} */(( getDebugNode(refChild)));\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer2.prototype.delegate;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinitionFactory, ProviderOverride, Services} from './types';\nimport {resolveDefinition} from './util';\n/**\n * @param {?} override\n * @return {?}\n */\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nexport function clearProviderOverrides() {\n  initServicesIfNeeded();\n  return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n/**\n * @param {?} moduleType\n * @param {?} _bootstrapComponents\n * @param {?} _ngModuleDefFactory\n */\nconstructor(\npublic readonly moduleType: Type<any>,\nprivate _bootstrapComponents: Type<any>[],\nprivate _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n/**\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    const /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n\nfunction NgModuleFactory__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleFactory_.prototype.moduleType;\n/** @type {?} */\nNgModuleFactory_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleFactory_.prototype._ngModuleDefFactory;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {anchorDef, elementDef} from './element';\nexport {clearProviderOverrides, createNgModuleFactory, overrideProvider} from './entrypoint';\nexport {ngContentDef} from './ng_content';\nexport {moduleDef, moduleProvideDef} from './ng_module';\nexport {directiveDef, pipeDef, providerDef} from './provider';\nexport {pureArrayDef, pureObjectDef, purePipeDef} from './pure_expression';\nexport {queryDef} from './query';\nexport {ViewRef_, createComponentFactory, getComponentViewDefinitionFactory, nodeValue} from './refs';\nexport {initServicesIfNeeded} from './services';\nexport {textDef} from './text';\nexport {EMPTY_ARRAY, EMPTY_MAP, createRendererType2, elementEventFullName, inlineInterpolate, interpolate, rootRenderNodes, tokenKey, unwrapValue} from './util';\nexport {viewDef} from './view';\nexport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nexport {DefinitionFactory,NodeLogger,Definition,NgModuleDefinition,NgModuleDefinitionFactory,ViewDefinition,ViewDefinitionFactory,ViewUpdateFn,NodeCheckFn,ArgumentType,ViewHandleEventFn,ViewFlags,NodeDef,NodeFlags,BindingDef,BindingFlags,OutputDef,OutputType,QueryValueType,ElementDef,ElementHandleEventFn,ProviderDef,NgModuleProviderDef,DepDef,DepFlags,TextDef,QueryDef,QueryBindingDef,QueryBindingType,NgContentDef,NgModuleData,ViewData,ViewState,DisposableFn,NodeData,TextData,asTextData,ElementData,ViewContainerData,TemplateData,asElementData,ProviderData,asProviderData,PureExpressionData,asPureExpressionData,asQueryList,RootData,DebugContext,CheckType,ProviderOverride,Services} from './types';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS} from './application_ref';\nexport {APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER} from './application_tokens';\nexport {ValueUnwrapper as ɵValueUnwrapper, devModeEqual as ɵdevModeEqual} from './change_detection/change_detection_util';\nexport {isListLikeIterable as ɵisListLikeIterable} from './change_detection/change_detection_util';\nexport {ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy} from './change_detection/constants';\nexport {Console as ɵConsole} from './console';\nexport {ERROR_COMPONENT_TYPE as ɵERROR_COMPONENT_TYPE} from './errors';\nexport {ComponentFactory as ɵComponentFactory} from './linker/component_factory';\nexport {CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {ViewMetadata as ɵViewMetadata} from './metadata/view';\nexport {ReflectionCapabilities as ɵReflectionCapabilities} from './reflection/reflection_capabilities';\nexport {GetterFn as ɵGetterFn, MethodFn as ɵMethodFn, SetterFn as ɵSetterFn} from './reflection/types';\nexport {DirectRenderer as ɵDirectRenderer, RenderDebugInfo as ɵRenderDebugInfo} from './render/api';\nexport {global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify} from './util';\nexport {makeDecorator as ɵmakeDecorator} from './util/decorators';\nexport {isObservable as ɵisObservable, isPromise as ɵisPromise} from './util/lang';\nexport {clearProviderOverrides as ɵclearProviderOverrides, overrideProvider as ɵoverrideProvider} from './view/index';\nexport {NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from './view/provider';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {registerModuleFactory as ɵregisterModuleFactory} from './linker/ng_module_factory_loader';\nexport {ArgumentType as ɵArgumentType, BindingFlags as ɵBindingFlags, DepFlags as ɵDepFlags, EMPTY_ARRAY as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, NodeFlags as ɵNodeFlags, QueryBindingType as ɵQueryBindingType, QueryValueType as ɵQueryValueType, ViewDefinition as ɵViewDefinition, ViewFlags as ɵViewFlags, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid} from './view/index';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\nexport function ɵStyleData() {}\n\n\nfunction ɵStyleData_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n[key: string]: string|number;\n*/\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport interface ɵStyleData { [key: string]: string|number; }\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are created internally\n * within the Angular animation DSL.\n *\n * @experimental Animation support is experimental.\n */\nexport declare type AnimateTimings = {\n  duration: number,\n  delay: number,\n  easing: string | null\n};\n\n/**\n * `AnimationOptions` represents options that can be passed into most animation DSL methods.\n * When options are provided, the delay value of an animation can be changed and animation input\n * parameters can be passed in to change styling and timing data when an animation is started.\n *\n * The following animation DSL functions are able to accept animation option data:\n *\n * - {@link transition transition()}\n * - {@link sequence sequence()}\n * - {@link group group()}\n * - {@link query query()}\n * - {@link animation animation()}\n * - {@link useAnimation useAnimation()}\n * - {@link animateChild animateChild()}\n *\n * Programmatic animations built using {@link AnimationBuilder the AnimationBuilder service} also\n * make use of AnimationOptions.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimationOptions {\n  delay?: number|string;\n  params?: {[name: string]: any};\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are created internally\n * within the Angular animation DSL when {@link animateChild animateChild()} is used.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimateChildOptions extends AnimationOptions { duration?: number|string; }\n\n/**\n * Metadata representing the entry of animations. Usages of this enum are created\n * each time an animation DSL function is used.\n *\n * @experimental Animation support is experimental.\n */\nexport const enum AnimationMetadataType {\n  State = 0,\n  Transition = 1,\n  Sequence = 2,\n  Group = 3,\n  Animate = 4,\n  Keyframes = 5,\n  Style = 6,\n  Trigger = 7,\n  Reference = 8,\n  AnimateChild = 9,\n  AnimateRef = 10,\n  Query = 11,\n  Stagger = 12\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nexport const /** @type {?} */ AUTO_STYLE = '*';\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationMetadata() {}\n\n\nfunction AnimationMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationMetadata.prototype.type;\n}\n\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationTriggerMetadata() {}\n\n\nfunction AnimationTriggerMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTriggerMetadata.prototype.name;\n/** @type {?} */\nAnimationTriggerMetadata.prototype.definitions;\n/** @type {?} */\nAnimationTriggerMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link trigger trigger animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTriggerMetadata extends AnimationMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n  options: {params?: {[name: string]: any}}|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationStateMetadata() {}\n\n\nfunction AnimationStateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStateMetadata.prototype.name;\n/** @type {?} */\nAnimationStateMetadata.prototype.styles;\n/** @type {?|undefined} */\nAnimationStateMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link state state animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n  options?: {params: {[name: string]: any}};\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationTransitionMetadata() {}\n\n\nfunction AnimationTransitionMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionMetadata.prototype.expr;\n/** @type {?} */\nAnimationTransitionMetadata.prototype.animation;\n/** @type {?} */\nAnimationTransitionMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link transition transition animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string;\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationReferenceMetadata() {}\n\n\nfunction AnimationReferenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationReferenceMetadata.prototype.animation;\n/** @type {?} */\nAnimationReferenceMetadata.prototype.options;\n}\n\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationReferenceMetadata extends AnimationMetadata {\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationQueryMetadata() {}\n\n\nfunction AnimationQueryMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationQueryMetadata.prototype.selector;\n/** @type {?} */\nAnimationQueryMetadata.prototype.animation;\n/** @type {?} */\nAnimationQueryMetadata.prototype.options;\n}\n\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationQueryMetadata extends AnimationMetadata {\n  selector: string;\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationQueryOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationKeyframesSequenceMetadata() {}\n\n\nfunction AnimationKeyframesSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationKeyframesSequenceMetadata.prototype.steps;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link keyframes keyframes animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationStyleMetadata() {}\n\n\nfunction AnimationStyleMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStyleMetadata.prototype.styles;\n/** @type {?} */\nAnimationStyleMetadata.prototype.offset;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link style style animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: '*'|{[key: string]: string | number}|Array<{[key: string]: string | number}|'*'>;\n  offset: number|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationAnimateMetadata() {}\n\n\nfunction AnimationAnimateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateMetadata.prototype.timings;\n/** @type {?} */\nAnimationAnimateMetadata.prototype.styles;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link animate animate animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationAnimateChildMetadata() {}\n\n\nfunction AnimationAnimateChildMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateChildMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link animateChild animateChild animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateChildMetadata extends AnimationMetadata {\n  options: AnimationOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationAnimateRefMetadata() {}\n\n\nfunction AnimationAnimateRefMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateRefMetadata.prototype.animation;\n/** @type {?} */\nAnimationAnimateRefMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link useAnimation useAnimation animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateRefMetadata extends AnimationMetadata {\n  animation: AnimationReferenceMetadata;\n  options: AnimationOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationSequenceMetadata() {}\n\n\nfunction AnimationSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationSequenceMetadata.prototype.steps;\n/** @type {?} */\nAnimationSequenceMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link sequence sequence animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata {\n  steps: AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationGroupMetadata() {}\n\n\nfunction AnimationGroupMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationGroupMetadata.prototype.steps;\n/** @type {?} */\nAnimationGroupMetadata.prototype.options;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link group group animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata {\n  steps: AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link query query animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimationQueryOptions extends AnimationOptions {\n  optional?: boolean;\n  limit?: number;\n}\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n * \n * \\@experimental Animation support is experimental.\n * @record\n */\nexport function AnimationStaggerMetadata() {}\n\n\nfunction AnimationStaggerMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStaggerMetadata.prototype.timings;\n/** @type {?} */\nAnimationStaggerMetadata.prototype.animation;\n}\n\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link stagger stagger animation function} is called.\n *\n* @experimental Animation support is experimental.\n*/\nexport interface AnimationStaggerMetadata extends AnimationMetadata {\n  timings: string|number;\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n * \n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n * \n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n * \n * ### Usage\n * \n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n * \n * ```typescript\n * \\@Component({ \n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n * \n * ## Disable Child Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element.\n * \n * When true, the `\\@.disabled` binding will prevent inner animations from rendering. The example\n * below shows how to use this feature:\n * \n * ```ts\n * \\@Component({ \n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n * \n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n * \n * Note that `\\@.disbled` will only disable inner animations (any animations running on the same\n * element will not be disabled).\n * \n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n * \n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n * \n * \\@Component({ \n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n * \n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return {type: AnimationMetadataType.Trigger, name, definitions, options: {}};\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n * \n * ### Usage\n * \n * The `animate` function accepts two input parameters: `timing` and `styles`:\n * \n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n * \n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n * \n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles: AnimationStyleMetadata | AnimationKeyframesSequenceMetadata |\n        null = null): AnimationAnimateMetadata {\n  return {type: AnimationMetadataType.Animate, styles, timings};\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n * \n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n * \n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function group(\n    steps: AnimationMetadata[], options: AnimationOptions | null = null): AnimationGroupMetadata {\n  return {type: AnimationMetadataType.Group, steps, options};\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n * \n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n * \n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n * \n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[], options: AnimationOptions | null = null):\n    AnimationSequenceMetadata {\n  return {type: AnimationMetadataType.Sequence, steps, options};\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n * \n * ### Usage\n * \n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n * \n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n * \n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n * \n * #### Auto-styles (using `*`)\n * \n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n * \n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n * \n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: '*' | {[key: string]: string | number} |\n    Array<'*'|{[key: string]: string | number}>): AnimationStyleMetadata {\n  return {type: AnimationMetadataType.Style, styles: tokens, offset: null};\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n * \n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n * \n * #### The `void` state\n * \n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n * \n * #### The `*` (default) state\n * \n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n * \n * ### Usage\n * \n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n * \n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n * \n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n * \n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nexport function state(\n    name: string, styles: AnimationStyleMetadata,\n    options?: {params: {[name: string]: any}}): AnimationStateMetadata {\n  return {type: AnimationMetadataType.State, name, styles, options};\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n * \n * ### Usage\n * \n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n * \n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n * \n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n * \n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n * \n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return {type: AnimationMetadataType.Keyframes, steps};\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n * \n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n * \n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n * \n * ### Usage\n * \n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n * \n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n * \n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n * \n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n * \n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n * \n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n * \n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n * \n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n * \n * #### The final `animate` call\n * \n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n * \n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n * \n * ### Using :enter and :leave\n * \n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n * \n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n * \n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n * \n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n * \n * \\@Component({ \n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n * \n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n * \n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n * \n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function transition(\n    stateChangeExpr: string, steps: AnimationMetadata | AnimationMetadata[],\n    options: AnimationOptions | null = null): AnimationTransitionMetadata {\n  return {type: AnimationMetadataType.Transition, expr: stateChangeExpr, animation: steps, options};\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n * \n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n * \n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n * \n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n * \n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n * \n * If one or more parameter values are missing before animated then an error will be thrown.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function animation(\n    steps: AnimationMetadata | AnimationMetadata[],\n    options: AnimationOptions | null = null): AnimationReferenceMetadata {\n  return {type: AnimationMetadataType.Reference, animation: steps, options};\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n * \n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n * \n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n * \n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n * \n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n * \n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n * \n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({ \n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n * \n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n * \n * This example can be further extended by using stagger:\n * \n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n * \n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n * \n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n * \n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n * \n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n * \n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nexport function animateChild(options: AnimateChildOptions | null = null):\n    AnimationAnimateChildMetadata {\n  return {type: AnimationMetadataType.AnimateChild, options};\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nexport function useAnimation(\n    animation: AnimationReferenceMetadata,\n    options: AnimationOptions | null = null): AnimationAnimateRefMetadata {\n  return {type: AnimationMetadataType.AnimateRef, animation, options};\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n * \n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n * \n * ### Usage\n * \n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n * \n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n * \n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n * \n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n * \n * ### Special Selector Values\n * \n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n * \n * These include:\n * \n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n * \n * \n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n * \n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n * \n * ### Demo\n * \n * ```\n * \\@Component({ \n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n * \n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n * \n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n * \n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nexport function query(\n    selector: string, animation: AnimationMetadata | AnimationMetadata[],\n    options: AnimationQueryOptions | null = null): AnimationQueryMetadata {\n  return {type: AnimationMetadataType.Query, selector, animation, options};\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n * \n * ### Usage\n * \n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n * \n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n * \n * The component code for this looks as such:\n * \n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({ \n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n * \n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n * \n *   hideItems() {\n *     this.items = [];\n *   }\n * \n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n * \n * And now for the animation trigger code:\n * \n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n * \n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nexport function stagger(\n    timings: string | number,\n    animation: AnimationMetadata | AnimationMetadata[]): AnimationStaggerMetadata {\n  return {type: AnimationMetadataType.Stagger, timings, animation};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimateTimings, AnimationMetadataType, animate as _animate, group as _group, keyframes as _keyframes, sequence as _sequence, state as _state, style as _style, transition as _transition, trigger as _trigger} from './dsl';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nexport const /** @type {?} */ AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationMetadata() {}\n\n\nfunction AnimationMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationMetadata.prototype.type;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationTriggerMetadata() {}\n\n\nfunction AnimationTriggerMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTriggerMetadata.prototype.name;\n/** @type {?} */\nAnimationTriggerMetadata.prototype.definitions;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTriggerMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationStateMetadata() {}\n\n\nfunction AnimationStateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStateMetadata.prototype.name;\n/** @type {?} */\nAnimationStateMetadata.prototype.styles;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationTransitionMetadata() {}\n\n\nfunction AnimationTransitionMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionMetadata.prototype.expr;\n/** @type {?} */\nAnimationTransitionMetadata.prototype.animation;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string|((fromState: string, toState: string) => boolean);\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationKeyframesSequenceMetadata() {}\n\n\nfunction AnimationKeyframesSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationKeyframesSequenceMetadata.prototype.steps;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationStyleMetadata() {}\n\n\nfunction AnimationStyleMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationStyleMetadata.prototype.styles;\n/** @type {?} */\nAnimationStyleMetadata.prototype.offset;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: '*'|{[key: string]: string | number}|Array<{[key: string]: string | number}|'*'>;\n  offset: number|null;\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationAnimateMetadata() {}\n\n\nfunction AnimationAnimateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationAnimateMetadata.prototype.timings;\n/** @type {?} */\nAnimationAnimateMetadata.prototype.styles;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata|null;\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationSequenceMetadata() {}\n\n\nfunction AnimationSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationSequenceMetadata.prototype.steps;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nexport function AnimationGroupMetadata() {}\n\n\nfunction AnimationGroupMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationGroupMetadata.prototype.steps;\n}\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return _trigger(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles?: AnimationStyleMetadata |\n        AnimationKeyframesSequenceMetadata): AnimationAnimateMetadata {\n  return _animate(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function group(steps: AnimationMetadata[]): AnimationGroupMetadata {\n  return _group(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[]): AnimationSequenceMetadata {\n  return _sequence(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: {[key: string]: string | number} |\n    Array<{[key: string]: string | number}>): AnimationStyleMetadata {\n  return _style(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nexport function state(name: string, styles: AnimationStyleMetadata): AnimationStateMetadata {\n  return _state(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return _keyframes(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nexport function transition(stateChangeExpr: string, steps: AnimationMetadata | AnimationMetadata[]):\n    AnimationTransitionMetadata {\n  return _transition(stateChangeExpr, steps);\n}\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from \\@angular/animations.\n * @record\n */\nexport function AnimationTransitionEvent() {}\n\n\nfunction AnimationTransitionEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTransitionEvent.prototype.fromState;\n/** @type {?} */\nAnimationTransitionEvent.prototype.toState;\n/** @type {?} */\nAnimationTransitionEvent.prototype.totalTime;\n/** @type {?} */\nAnimationTransitionEvent.prototype.phaseName;\n/** @type {?} */\nAnimationTransitionEvent.prototype.element;\n/** @type {?} */\nAnimationTransitionEvent.prototype.triggerName;\n}\n\n\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from @angular/animations.\n */\nexport interface AnimationTransitionEvent {\n  fromState: string;\n  toState: string;\n  totalTime: number;\n  phaseName: string;\n  element: any;\n  triggerName: string;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\nexport {ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation} from './metadata';\nexport {Version,VERSION} from './version';\nexport {TypeDecorator} from './util/decorators';\nexport {forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,StaticProvider,ValueProvider,ExistingProvider,FactoryProvider,Provider,TypeProvider,ClassProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di';\nexport {createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken} from './application_ref';\nexport {APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER} from './application_tokens';\nexport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nexport {NgZone} from './zone';\nexport {RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer} from './render';\nexport {COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef} from './linker';\nexport {DebugElement, DebugNode, asNativeElements, getDebugNode, Predicate} from './debug/debug_node';\nexport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter} from './testability/testability';\nexport {ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue} from './change_detection';\nexport {platformCore} from './platform_core_providers';\nexport {TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy} from './i18n/tokens';\nexport {ApplicationModule} from './application_module';\nexport {wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, WtfScopeFn} from './profile/profile';\nexport {Type} from './type';\nexport {EventEmitter} from './event_emitter';\nexport {ErrorHandler} from './error_handler';\nexport {ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from './core_private_export';\nexport {Sanitizer, SecurityContext} from './security';\nexport {ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid} from './codegen_private_exports';\nexport {AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './animation/animation_metadata_wrapped';\nimport {AnimationTriggerMetadata} from './animation/animation_metadata_wrapped';\n\n\n// For backwards compatibility.\n/**\n * @deprecated from v4\n */\nexport type AnimationEntryMetadata = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationStateTransitionMetadata = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationPlayer = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationStyles = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationKeyframe = any;\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport {TypeDecorator,createPlatform,assertPlatform,destroyPlatform,getPlatform,PlatformRef,ApplicationRef,enableProdMode,isDevMode,createPlatformFactory,NgProbeToken,APP_ID,PACKAGE_ROOT_URL,PLATFORM_INITIALIZER,PLATFORM_ID,APP_BOOTSTRAP_LISTENER,APP_INITIALIZER,ApplicationInitStatus,DebugElement,DebugNode,asNativeElements,getDebugNode,Predicate,GetTestability,Testability,TestabilityRegistry,setTestabilityGetter,TRANSLATIONS,TRANSLATIONS_FORMAT,LOCALE_ID,MissingTranslationStrategy,ApplicationModule,wtfCreateScope,wtfLeave,wtfStartTimeRange,wtfEndTimeRange,WtfScopeFn,Type,EventEmitter,ErrorHandler,Sanitizer,SecurityContext,AnimationEntryMetadata,AnimationStateTransitionMetadata,AnimationPlayer,AnimationStyles,AnimationKeyframe,ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation,Version,VERSION,forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,StaticProvider,ValueProvider,ExistingProvider,FactoryProvider,Provider,TypeProvider,ClassProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host,NgZone,RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer,COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef,ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue,platformCore,ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid,AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './src/core';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {TypeDecorator,createPlatform,assertPlatform,destroyPlatform,getPlatform,PlatformRef,ApplicationRef,enableProdMode,isDevMode,createPlatformFactory,NgProbeToken,APP_ID,PACKAGE_ROOT_URL,PLATFORM_INITIALIZER,PLATFORM_ID,APP_BOOTSTRAP_LISTENER,APP_INITIALIZER,ApplicationInitStatus,DebugElement,DebugNode,asNativeElements,getDebugNode,Predicate,GetTestability,Testability,TestabilityRegistry,setTestabilityGetter,TRANSLATIONS,TRANSLATIONS_FORMAT,LOCALE_ID,MissingTranslationStrategy,ApplicationModule,wtfCreateScope,wtfLeave,wtfStartTimeRange,wtfEndTimeRange,WtfScopeFn,Type,EventEmitter,ErrorHandler,Sanitizer,SecurityContext,AnimationEntryMetadata,AnimationStateTransitionMetadata,AnimationPlayer,AnimationStyles,AnimationKeyframe,ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation,Version,VERSION,forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,StaticProvider,ValueProvider,ExistingProvider,FactoryProvider,Provider,TypeProvider,ClassProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host,NgZone,RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer,COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef,ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue,platformCore,ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid,AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './public_api';\n\nexport {AnimationMetadataType as ɵx,animate as ɵz,group as ɵba,keyframes as ɵbe,sequence as ɵbb,state as ɵbd,style as ɵbc,transition as ɵbf,trigger as ɵy} from './src/animation/dsl';\nexport {_iterableDiffersFactory as ɵm,_keyValueDiffersFactory as ɵn,_localeFactory as ɵo} from './src/application_module';\nexport {ApplicationRef_ as ɵg,PlatformRef_ as ɵf} from './src/application_ref';\nexport {_appIdRandomProviderFactory as ɵh} from './src/application_tokens';\nexport {defaultIterableDiffers as ɵi,defaultKeyValueDiffers as ɵj} from './src/change_detection/change_detection';\nexport {DefaultIterableDifferFactory as ɵk} from './src/change_detection/differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory as ɵl} from './src/change_detection/differs/default_keyvalue_differ';\nexport {StaticInjector as ɵb} from './src/di/injector';\nexport {ReflectiveInjector_ as ɵc} from './src/di/reflective_injector';\nexport {ReflectiveDependency as ɵd,resolveReflectiveProviders as ɵe} from './src/di/reflective_provider';\nexport {wtfEnabled as ɵp} from './src/profile/profile';\nexport {createScope as ɵr,detectWTF as ɵq,endTimeRange as ɵu,leave as ɵs,startTimeRange as ɵt} from './src/profile/wtf_impl';\nexport {makeParamDecorator as ɵa} from './src/util/decorators';\nexport {_def as ɵv} from './src/view/provider';\nexport {DebugContext as ɵw} from './src/view/types';","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const /** @type {?} */ VERSION = new Version('5.0.0-beta.3-14502f5b34');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '@angular/core';\n\nimport {AstPath} from '../ast_path';\nimport {CompileDirectiveSummary, CompileProviderMetadata, CompileTokenMetadata} from '../compile_metadata';\nimport {AST} from '../expression_parser/ast';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport {ParseSourceSpan} from '../parse_util';\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\nexport function TemplateAst() {}\n\n\nfunction TemplateAst_tsickle_Closure_declarations() {\n/**\n * The source span from which this node was parsed.\n * @type {?}\n */\nTemplateAst.prototype.sourceSpan;\n/**\n * Visit this node and possibly transform it.\n * @type {?}\n */\nTemplateAst.prototype.visit;\n}\n\n\n\n\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n */\nexport interface TemplateAst {\n  /**\n   * The source span from which this node was parsed.\n   */\n  sourceSpan: ParseSourceSpan;\n\n  /**\n   * Visit this node and possibly transform it.\n   */\n  visit(visitor: TemplateAstVisitor, context: any): any;\n}\n/**\n * A segment of text within the template.\n */\nexport class TextAst implements TemplateAst {\n/**\n * @param {?} value\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic value: string,\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any { return visitor.visitText(this, context); }\n}\n\nfunction TextAst_tsickle_Closure_declarations() {\n/** @type {?} */\nTextAst.prototype.value;\n/** @type {?} */\nTextAst.prototype.ngContentIndex;\n/** @type {?} */\nTextAst.prototype.sourceSpan;\n}\n\n/**\n * A bound expression within the text of a template.\n */\nexport class BoundTextAst implements TemplateAst {\n/**\n * @param {?} value\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic value: AST,\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitBoundText(this, context);\n  }\n}\n\nfunction BoundTextAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundTextAst.prototype.value;\n/** @type {?} */\nBoundTextAst.prototype.ngContentIndex;\n/** @type {?} */\nBoundTextAst.prototype.sourceSpan;\n}\n\n/**\n * A plain attribute on an element.\n */\nexport class AttrAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any { return visitor.visitAttr(this, context); }\n}\n\nfunction AttrAst_tsickle_Closure_declarations() {\n/** @type {?} */\nAttrAst.prototype.name;\n/** @type {?} */\nAttrAst.prototype.value;\n/** @type {?} */\nAttrAst.prototype.sourceSpan;\n}\n\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nexport class BoundElementPropertyAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} type\n * @param {?} securityContext\n * @param {?} value\n * @param {?} unit\n * @param {?} sourceSpan\n */\nconstructor(\npublic name: string,\npublic type: PropertyBindingType,\npublic securityContext: SecurityContext,\npublic value: AST,\npublic unit: string|null,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitElementProperty(this, context);\n  }\n/**\n * @return {?}\n */\nget isAnimation(): boolean { return this.type === PropertyBindingType.Animation; }\n}\n\nfunction BoundElementPropertyAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundElementPropertyAst.prototype.name;\n/** @type {?} */\nBoundElementPropertyAst.prototype.type;\n/** @type {?} */\nBoundElementPropertyAst.prototype.securityContext;\n/** @type {?} */\nBoundElementPropertyAst.prototype.value;\n/** @type {?} */\nBoundElementPropertyAst.prototype.unit;\n/** @type {?} */\nBoundElementPropertyAst.prototype.sourceSpan;\n}\n\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nexport class BoundEventAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} target\n * @param {?} phase\n * @return {?}\n */\nstatic calcFullName(name: string, target: string|null, phase: string|null): string {\n    if (target) {\n      return `${target}:${name}`;\n    } else if (phase) {\n      return `@${name}.${phase}`;\n    } else {\n      return name;\n    }\n  }\n/**\n * @param {?} name\n * @param {?} target\n * @param {?} phase\n * @param {?} handler\n * @param {?} sourceSpan\n */\nconstructor(\npublic name: string,\npublic target: string|null,\npublic phase: string|null,\npublic handler: AST,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitEvent(this, context);\n  }\n/**\n * @return {?}\n */\nget fullName() { return BoundEventAst.calcFullName(this.name, this.target, this.phase); }\n/**\n * @return {?}\n */\nget isAnimation(): boolean { return !!this.phase; }\n}\n\nfunction BoundEventAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundEventAst.prototype.name;\n/** @type {?} */\nBoundEventAst.prototype.target;\n/** @type {?} */\nBoundEventAst.prototype.phase;\n/** @type {?} */\nBoundEventAst.prototype.handler;\n/** @type {?} */\nBoundEventAst.prototype.sourceSpan;\n}\n\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nexport class ReferenceAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(\npublic name: string,\npublic value: CompileTokenMetadata,\npublic sourceSpan: ParseSourceSpan) {\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitReference(this, context);\n  }\n}\n\nfunction ReferenceAst_tsickle_Closure_declarations() {\n/** @type {?} */\nReferenceAst.prototype.name;\n/** @type {?} */\nReferenceAst.prototype.value;\n/** @type {?} */\nReferenceAst.prototype.sourceSpan;\n}\n\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nexport class VariableAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitVariable(this, context);\n  }\n}\n\nfunction VariableAst_tsickle_Closure_declarations() {\n/** @type {?} */\nVariableAst.prototype.name;\n/** @type {?} */\nVariableAst.prototype.value;\n/** @type {?} */\nVariableAst.prototype.sourceSpan;\n}\n\n/**\n * An element declaration in a template.\n */\nexport class ElementAst implements TemplateAst {\n/**\n * @param {?} name\n * @param {?} attrs\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} references\n * @param {?} directives\n * @param {?} providers\n * @param {?} hasViewContainer\n * @param {?} queryMatches\n * @param {?} children\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n * @param {?} endSourceSpan\n */\nconstructor(\npublic name: string,\npublic attrs: AttrAst[],\npublic inputs: BoundElementPropertyAst[],\npublic outputs: BoundEventAst[],\npublic references: ReferenceAst[],\npublic directives: DirectiveAst[],\npublic providers: ProviderAst[],\npublic hasViewContainer: boolean,\npublic queryMatches: QueryMatch[],\npublic children: TemplateAst[],\npublic ngContentIndex: number|null,\npublic sourceSpan: ParseSourceSpan,\npublic endSourceSpan: ParseSourceSpan|null) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitElement(this, context);\n  }\n}\n\nfunction ElementAst_tsickle_Closure_declarations() {\n/** @type {?} */\nElementAst.prototype.name;\n/** @type {?} */\nElementAst.prototype.attrs;\n/** @type {?} */\nElementAst.prototype.inputs;\n/** @type {?} */\nElementAst.prototype.outputs;\n/** @type {?} */\nElementAst.prototype.references;\n/** @type {?} */\nElementAst.prototype.directives;\n/** @type {?} */\nElementAst.prototype.providers;\n/** @type {?} */\nElementAst.prototype.hasViewContainer;\n/** @type {?} */\nElementAst.prototype.queryMatches;\n/** @type {?} */\nElementAst.prototype.children;\n/** @type {?} */\nElementAst.prototype.ngContentIndex;\n/** @type {?} */\nElementAst.prototype.sourceSpan;\n/** @type {?} */\nElementAst.prototype.endSourceSpan;\n}\n\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nexport class EmbeddedTemplateAst implements TemplateAst {\n/**\n * @param {?} attrs\n * @param {?} outputs\n * @param {?} references\n * @param {?} variables\n * @param {?} directives\n * @param {?} providers\n * @param {?} hasViewContainer\n * @param {?} queryMatches\n * @param {?} children\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic attrs: AttrAst[],\npublic outputs: BoundEventAst[],\npublic references: ReferenceAst[],\npublic variables: VariableAst[],\npublic directives: DirectiveAst[],\npublic providers: ProviderAst[],\npublic hasViewContainer: boolean,\npublic queryMatches: QueryMatch[],\npublic children: TemplateAst[],\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitEmbeddedTemplate(this, context);\n  }\n}\n\nfunction EmbeddedTemplateAst_tsickle_Closure_declarations() {\n/** @type {?} */\nEmbeddedTemplateAst.prototype.attrs;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.outputs;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.references;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.variables;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.directives;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.providers;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.hasViewContainer;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.queryMatches;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.children;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.ngContentIndex;\n/** @type {?} */\nEmbeddedTemplateAst.prototype.sourceSpan;\n}\n\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nexport class BoundDirectivePropertyAst implements TemplateAst {\n/**\n * @param {?} directiveName\n * @param {?} templateName\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(\npublic directiveName: string,\npublic templateName: string,\npublic value: AST,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitDirectiveProperty(this, context);\n  }\n}\n\nfunction BoundDirectivePropertyAst_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.directiveName;\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.templateName;\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.value;\n/** @type {?} */\nBoundDirectivePropertyAst.prototype.sourceSpan;\n}\n\n/**\n * A directive declared on an element.\n */\nexport class DirectiveAst implements TemplateAst {\n/**\n * @param {?} directive\n * @param {?} inputs\n * @param {?} hostProperties\n * @param {?} hostEvents\n * @param {?} contentQueryStartId\n * @param {?} sourceSpan\n */\nconstructor(\npublic directive: CompileDirectiveSummary,\npublic inputs: BoundDirectivePropertyAst[],\npublic hostProperties: BoundElementPropertyAst[],\npublic hostEvents: BoundEventAst[],\npublic contentQueryStartId: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitDirective(this, context);\n  }\n}\n\nfunction DirectiveAst_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectiveAst.prototype.directive;\n/** @type {?} */\nDirectiveAst.prototype.inputs;\n/** @type {?} */\nDirectiveAst.prototype.hostProperties;\n/** @type {?} */\nDirectiveAst.prototype.hostEvents;\n/** @type {?} */\nDirectiveAst.prototype.contentQueryStartId;\n/** @type {?} */\nDirectiveAst.prototype.sourceSpan;\n}\n\n/**\n * A provider declared on an element\n */\nexport class ProviderAst implements TemplateAst {\n/**\n * @param {?} token\n * @param {?} multiProvider\n * @param {?} eager\n * @param {?} providers\n * @param {?} providerType\n * @param {?} lifecycleHooks\n * @param {?} sourceSpan\n */\nconstructor(\npublic token: CompileTokenMetadata,\npublic multiProvider: boolean,\npublic eager: boolean,\npublic providers: CompileProviderMetadata[],\npublic providerType: ProviderAstType,\npublic lifecycleHooks: LifecycleHooks[],\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    // No visit method in the visitor for now...\n    return null;\n  }\n}\n\nfunction ProviderAst_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderAst.prototype.token;\n/** @type {?} */\nProviderAst.prototype.multiProvider;\n/** @type {?} */\nProviderAst.prototype.eager;\n/** @type {?} */\nProviderAst.prototype.providers;\n/** @type {?} */\nProviderAst.prototype.providerType;\n/** @type {?} */\nProviderAst.prototype.lifecycleHooks;\n/** @type {?} */\nProviderAst.prototype.sourceSpan;\n}\n\nexport type ProviderAstType = number;\nexport let ProviderAstType: any = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nexport class NgContentAst implements TemplateAst {\n/**\n * @param {?} index\n * @param {?} ngContentIndex\n * @param {?} sourceSpan\n */\nconstructor(\npublic index: number,\npublic ngContentIndex: number,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: TemplateAstVisitor, context: any): any {\n    return visitor.visitNgContent(this, context);\n  }\n}\n\nfunction NgContentAst_tsickle_Closure_declarations() {\n/** @type {?} */\nNgContentAst.prototype.index;\n/** @type {?} */\nNgContentAst.prototype.ngContentIndex;\n/** @type {?} */\nNgContentAst.prototype.sourceSpan;\n}\n\nexport type PropertyBindingType = number;\nexport let PropertyBindingType: any = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n\n/**\n * @record\n */\nexport function QueryMatch() {}\n\n\nfunction QueryMatch_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryMatch.prototype.queryId;\n/** @type {?} */\nQueryMatch.prototype.value;\n}\n\n\nexport interface QueryMatch {\n  queryId: number;\n  value: CompileTokenMetadata;\n}\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\nexport function TemplateAstVisitor() {}\n\n\nfunction TemplateAstVisitor_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nTemplateAstVisitor.prototype.visit;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitNgContent;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitEmbeddedTemplate;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitElement;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitReference;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitVariable;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitEvent;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitElementProperty;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitAttr;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitBoundText;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitText;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitDirective;\n/** @type {?} */\nTemplateAstVisitor.prototype.visitDirectiveProperty;\n}\n\n\n/**\n * A visitor for {@link TemplateAst} trees that will process each node.\n */\nexport interface TemplateAstVisitor {\n  // Returning a truthy value from `visit()` will prevent `templateVisitAll()` from the call to\n  // the typed method and result returned will become the result included in `visitAll()`s\n  // result array.\n  visit?(ast: TemplateAst, context: any): any;\n\n  visitNgContent(ast: NgContentAst, context: any): any;\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any;\n  visitElement(ast: ElementAst, context: any): any;\n  visitReference(ast: ReferenceAst, context: any): any;\n  visitVariable(ast: VariableAst, context: any): any;\n  visitEvent(ast: BoundEventAst, context: any): any;\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any;\n  visitAttr(ast: AttrAst, context: any): any;\n  visitBoundText(ast: BoundTextAst, context: any): any;\n  visitText(ast: TextAst, context: any): any;\n  visitDirective(ast: DirectiveAst, context: any): any;\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any;\n}\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nexport class NullTemplateVisitor implements TemplateAstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitVariable(ast: VariableAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttr(ast: AttrAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: TextAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: any): void {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): void {}\n}\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nexport class RecursiveTemplateAstVisitor extends NullTemplateVisitor implements TemplateAstVisitor {\nconstructor() { super(); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.references);\n      visit(ast.variables);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.inputs);\n      visit(ast.outputs);\n      visit(ast.references);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.inputs);\n      visit(ast.hostProperties);\n      visit(ast.hostEvents);\n    });\n  }\n/**\n * @template T\n * @param {?} context\n * @param {?} cb\n * @return {?}\n */\nprotected visitChildren<T extends TemplateAst>(\n      context: any,\n      cb: (visit: (<V extends TemplateAst>(children: V[]|undefined) => void)) => void) {\n    let /** @type {?} */ results: any[][] = [];\n    let /** @type {?} */ t = this;\n/**\n * @template T\n * @param {?} children\n * @return {?}\n */\nfunction visit<T extends TemplateAst>(children: T[] | undefined) {\n      if (children && children.length) results.push(templateVisitAll(t, children, context));\n    }\n    cb(visit);\n    return [].concat.apply([], results);\n  }\n}\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nexport function templateVisitAll(\n    visitor: TemplateAstVisitor, asts: TemplateAst[], context: any = null): any[] {\n  const /** @type {?} */ result: any[] = [];\n  const /** @type {?} */ visit = visitor.visit ?\n      (ast: TemplateAst) => /** @type {?} */(( visitor.visit))(ast, context) || ast.visit(visitor, context) :\n      (ast: TemplateAst) => ast.visit(visitor, context);\n  asts.forEach(ast => {\n    const /** @type {?} */ astResult = visit(ast);\n    if (astResult) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\n\nexport type TemplateAstPath = AstPath<TemplateAst>;\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * A token representing the a reference to a static type.\n * \n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nexport class StaticSymbol {\n/**\n * @param {?} filePath\n * @param {?} name\n * @param {?} members\n */\nconstructor(public filePath: string,\npublic name: string,\npublic members: string[]) {}\n/**\n * @return {?}\n */\nassertNoMembers() {\n    if (this.members.length) {\n      throw new Error(\n          `Illegal state: symbol without members expected, but got ${JSON.stringify(this)}.`);\n    }\n  }\n}\n\nfunction StaticSymbol_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticSymbol.prototype.filePath;\n/** @type {?} */\nStaticSymbol.prototype.name;\n/** @type {?} */\nStaticSymbol.prototype.members;\n}\n\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nexport class StaticSymbolCache {\nprivate cache = new Map<string, StaticSymbol>();\n/**\n * @param {?} declarationFile\n * @param {?} name\n * @param {?=} members\n * @return {?}\n */\nget(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    members = members || [];\n    const /** @type {?} */ memberSuffix = members.length ? `.${ members.join('.')}` : '';\n    const /** @type {?} */ key = `\"${declarationFile}\".${name}${memberSuffix}`;\n    let /** @type {?} */ result = this.cache.get(key);\n    if (!result) {\n      result = new StaticSymbol(declarationFile, name, members);\n      this.cache.set(key, result);\n    }\n    return result;\n  }\n}\n\nfunction StaticSymbolCache_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticSymbolCache.prototype.cache;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport type TagContentType = number;\nexport let TagContentType: any = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n\n/**\n * @record\n */\nexport function TagDefinition() {}\n\n\nfunction TagDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nTagDefinition.prototype.closedByParent;\n/** @type {?} */\nTagDefinition.prototype.requiredParents;\n/** @type {?} */\nTagDefinition.prototype.parentToAdd;\n/** @type {?} */\nTagDefinition.prototype.implicitNamespacePrefix;\n/** @type {?} */\nTagDefinition.prototype.contentType;\n/** @type {?} */\nTagDefinition.prototype.isVoid;\n/** @type {?} */\nTagDefinition.prototype.ignoreFirstLf;\n/** @type {?} */\nTagDefinition.prototype.canSelfClose;\n/** @type {?} */\nTagDefinition.prototype.requireExtraParent;\n/** @type {?} */\nTagDefinition.prototype.isClosedByChild;\n}\n\n\nexport interface TagDefinition {\n  closedByParent: boolean;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string|null;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean;\n\n  requireExtraParent(currentParent: string): boolean;\n\n  isClosedByChild(name: string): boolean;\n}\n/**\n * @param {?} elementName\n * @return {?}\n */\nexport function splitNsName(elementName: string): [string | null, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgContainer(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgContent(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgTemplate(tagName: string): boolean {\n  return splitNsName(tagName)[1] === 'ng-template';\n}\n\nexport function getNsPrefix(fullName: string): string;\nexport function getNsPrefix(fullName: null): null;\n/**\n * @param {?} fullName\n * @return {?}\n */\nexport function getNsPrefix(fullName: string | null): string|null {\n  return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nexport function mergeNsAndName(prefix: string, localName: string): string {\n  return prefix ? `:${prefix}:${localName}` : localName;\n}\n\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nexport const /** @type {?} */ NAMED_ENTITIES: {[k: string]: string} = {\n  'Aacute': '\\u00C1',\n  'aacute': '\\u00E1',\n  'Acirc': '\\u00C2',\n  'acirc': '\\u00E2',\n  'acute': '\\u00B4',\n  'AElig': '\\u00C6',\n  'aelig': '\\u00E6',\n  'Agrave': '\\u00C0',\n  'agrave': '\\u00E0',\n  'alefsym': '\\u2135',\n  'Alpha': '\\u0391',\n  'alpha': '\\u03B1',\n  'amp': '&',\n  'and': '\\u2227',\n  'ang': '\\u2220',\n  'apos': '\\u0027',\n  'Aring': '\\u00C5',\n  'aring': '\\u00E5',\n  'asymp': '\\u2248',\n  'Atilde': '\\u00C3',\n  'atilde': '\\u00E3',\n  'Auml': '\\u00C4',\n  'auml': '\\u00E4',\n  'bdquo': '\\u201E',\n  'Beta': '\\u0392',\n  'beta': '\\u03B2',\n  'brvbar': '\\u00A6',\n  'bull': '\\u2022',\n  'cap': '\\u2229',\n  'Ccedil': '\\u00C7',\n  'ccedil': '\\u00E7',\n  'cedil': '\\u00B8',\n  'cent': '\\u00A2',\n  'Chi': '\\u03A7',\n  'chi': '\\u03C7',\n  'circ': '\\u02C6',\n  'clubs': '\\u2663',\n  'cong': '\\u2245',\n  'copy': '\\u00A9',\n  'crarr': '\\u21B5',\n  'cup': '\\u222A',\n  'curren': '\\u00A4',\n  'dagger': '\\u2020',\n  'Dagger': '\\u2021',\n  'darr': '\\u2193',\n  'dArr': '\\u21D3',\n  'deg': '\\u00B0',\n  'Delta': '\\u0394',\n  'delta': '\\u03B4',\n  'diams': '\\u2666',\n  'divide': '\\u00F7',\n  'Eacute': '\\u00C9',\n  'eacute': '\\u00E9',\n  'Ecirc': '\\u00CA',\n  'ecirc': '\\u00EA',\n  'Egrave': '\\u00C8',\n  'egrave': '\\u00E8',\n  'empty': '\\u2205',\n  'emsp': '\\u2003',\n  'ensp': '\\u2002',\n  'Epsilon': '\\u0395',\n  'epsilon': '\\u03B5',\n  'equiv': '\\u2261',\n  'Eta': '\\u0397',\n  'eta': '\\u03B7',\n  'ETH': '\\u00D0',\n  'eth': '\\u00F0',\n  'Euml': '\\u00CB',\n  'euml': '\\u00EB',\n  'euro': '\\u20AC',\n  'exist': '\\u2203',\n  'fnof': '\\u0192',\n  'forall': '\\u2200',\n  'frac12': '\\u00BD',\n  'frac14': '\\u00BC',\n  'frac34': '\\u00BE',\n  'frasl': '\\u2044',\n  'Gamma': '\\u0393',\n  'gamma': '\\u03B3',\n  'ge': '\\u2265',\n  'gt': '>',\n  'harr': '\\u2194',\n  'hArr': '\\u21D4',\n  'hearts': '\\u2665',\n  'hellip': '\\u2026',\n  'Iacute': '\\u00CD',\n  'iacute': '\\u00ED',\n  'Icirc': '\\u00CE',\n  'icirc': '\\u00EE',\n  'iexcl': '\\u00A1',\n  'Igrave': '\\u00CC',\n  'igrave': '\\u00EC',\n  'image': '\\u2111',\n  'infin': '\\u221E',\n  'int': '\\u222B',\n  'Iota': '\\u0399',\n  'iota': '\\u03B9',\n  'iquest': '\\u00BF',\n  'isin': '\\u2208',\n  'Iuml': '\\u00CF',\n  'iuml': '\\u00EF',\n  'Kappa': '\\u039A',\n  'kappa': '\\u03BA',\n  'Lambda': '\\u039B',\n  'lambda': '\\u03BB',\n  'lang': '\\u27E8',\n  'laquo': '\\u00AB',\n  'larr': '\\u2190',\n  'lArr': '\\u21D0',\n  'lceil': '\\u2308',\n  'ldquo': '\\u201C',\n  'le': '\\u2264',\n  'lfloor': '\\u230A',\n  'lowast': '\\u2217',\n  'loz': '\\u25CA',\n  'lrm': '\\u200E',\n  'lsaquo': '\\u2039',\n  'lsquo': '\\u2018',\n  'lt': '<',\n  'macr': '\\u00AF',\n  'mdash': '\\u2014',\n  'micro': '\\u00B5',\n  'middot': '\\u00B7',\n  'minus': '\\u2212',\n  'Mu': '\\u039C',\n  'mu': '\\u03BC',\n  'nabla': '\\u2207',\n  'nbsp': '\\u00A0',\n  'ndash': '\\u2013',\n  'ne': '\\u2260',\n  'ni': '\\u220B',\n  'not': '\\u00AC',\n  'notin': '\\u2209',\n  'nsub': '\\u2284',\n  'Ntilde': '\\u00D1',\n  'ntilde': '\\u00F1',\n  'Nu': '\\u039D',\n  'nu': '\\u03BD',\n  'Oacute': '\\u00D3',\n  'oacute': '\\u00F3',\n  'Ocirc': '\\u00D4',\n  'ocirc': '\\u00F4',\n  'OElig': '\\u0152',\n  'oelig': '\\u0153',\n  'Ograve': '\\u00D2',\n  'ograve': '\\u00F2',\n  'oline': '\\u203E',\n  'Omega': '\\u03A9',\n  'omega': '\\u03C9',\n  'Omicron': '\\u039F',\n  'omicron': '\\u03BF',\n  'oplus': '\\u2295',\n  'or': '\\u2228',\n  'ordf': '\\u00AA',\n  'ordm': '\\u00BA',\n  'Oslash': '\\u00D8',\n  'oslash': '\\u00F8',\n  'Otilde': '\\u00D5',\n  'otilde': '\\u00F5',\n  'otimes': '\\u2297',\n  'Ouml': '\\u00D6',\n  'ouml': '\\u00F6',\n  'para': '\\u00B6',\n  'permil': '\\u2030',\n  'perp': '\\u22A5',\n  'Phi': '\\u03A6',\n  'phi': '\\u03C6',\n  'Pi': '\\u03A0',\n  'pi': '\\u03C0',\n  'piv': '\\u03D6',\n  'plusmn': '\\u00B1',\n  'pound': '\\u00A3',\n  'prime': '\\u2032',\n  'Prime': '\\u2033',\n  'prod': '\\u220F',\n  'prop': '\\u221D',\n  'Psi': '\\u03A8',\n  'psi': '\\u03C8',\n  'quot': '\\u0022',\n  'radic': '\\u221A',\n  'rang': '\\u27E9',\n  'raquo': '\\u00BB',\n  'rarr': '\\u2192',\n  'rArr': '\\u21D2',\n  'rceil': '\\u2309',\n  'rdquo': '\\u201D',\n  'real': '\\u211C',\n  'reg': '\\u00AE',\n  'rfloor': '\\u230B',\n  'Rho': '\\u03A1',\n  'rho': '\\u03C1',\n  'rlm': '\\u200F',\n  'rsaquo': '\\u203A',\n  'rsquo': '\\u2019',\n  'sbquo': '\\u201A',\n  'Scaron': '\\u0160',\n  'scaron': '\\u0161',\n  'sdot': '\\u22C5',\n  'sect': '\\u00A7',\n  'shy': '\\u00AD',\n  'Sigma': '\\u03A3',\n  'sigma': '\\u03C3',\n  'sigmaf': '\\u03C2',\n  'sim': '\\u223C',\n  'spades': '\\u2660',\n  'sub': '\\u2282',\n  'sube': '\\u2286',\n  'sum': '\\u2211',\n  'sup': '\\u2283',\n  'sup1': '\\u00B9',\n  'sup2': '\\u00B2',\n  'sup3': '\\u00B3',\n  'supe': '\\u2287',\n  'szlig': '\\u00DF',\n  'Tau': '\\u03A4',\n  'tau': '\\u03C4',\n  'there4': '\\u2234',\n  'Theta': '\\u0398',\n  'theta': '\\u03B8',\n  'thetasym': '\\u03D1',\n  'thinsp': '\\u2009',\n  'THORN': '\\u00DE',\n  'thorn': '\\u00FE',\n  'tilde': '\\u02DC',\n  'times': '\\u00D7',\n  'trade': '\\u2122',\n  'Uacute': '\\u00DA',\n  'uacute': '\\u00FA',\n  'uarr': '\\u2191',\n  'uArr': '\\u21D1',\n  'Ucirc': '\\u00DB',\n  'ucirc': '\\u00FB',\n  'Ugrave': '\\u00D9',\n  'ugrave': '\\u00F9',\n  'uml': '\\u00A8',\n  'upsih': '\\u03D2',\n  'Upsilon': '\\u03A5',\n  'upsilon': '\\u03C5',\n  'Uuml': '\\u00DC',\n  'uuml': '\\u00FC',\n  'weierp': '\\u2118',\n  'Xi': '\\u039E',\n  'xi': '\\u03BE',\n  'Yacute': '\\u00DD',\n  'yacute': '\\u00FD',\n  'yen': '\\u00A5',\n  'yuml': '\\u00FF',\n  'Yuml': '\\u0178',\n  'Zeta': '\\u0396',\n  'zeta': '\\u03B6',\n  'zwj': '\\u200D',\n  'zwnj': '\\u200C',\n};\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\nexport class HtmlTagDefinition implements TagDefinition {\nprivate closedByChildren: {[key: string]: boolean} = {};\n\n  closedByParent: boolean = false;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string|null;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean = false;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {closedByChildren, requiredParents, implicitNamespacePrefix,\n       contentType = TagContentType.PARSABLE_DATA, closedByParent = false, isVoid = false,\n       ignoreFirstLf = false}: {\n        closedByChildren?: string[],\n        closedByParent?: boolean,\n        requiredParents?: string[],\n        implicitNamespacePrefix?: string,\n        contentType?: TagContentType,\n        isVoid?: boolean,\n        ignoreFirstLf?: boolean\n      } = {}) {\n    if (closedByChildren && closedByChildren.length > 0) {\n      closedByChildren.forEach(tagName => this.closedByChildren[tagName] = true);\n    }\n    this.isVoid = isVoid;\n    this.closedByParent = closedByParent || isVoid;\n    if (requiredParents && requiredParents.length > 0) {\n      this.requiredParents = {};\n      // The first parent is the list is automatically when none of the listed parents are present\n      this.parentToAdd = requiredParents[0];\n      requiredParents.forEach(tagName => this.requiredParents[tagName] = true);\n    }\n    this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n    this.contentType = contentType;\n    this.ignoreFirstLf = ignoreFirstLf;\n  }\n/**\n * @param {?} currentParent\n * @return {?}\n */\nrequireExtraParent(currentParent: string): boolean {\n    if (!this.requiredParents) {\n      return false;\n    }\n\n    if (!currentParent) {\n      return true;\n    }\n\n    const /** @type {?} */ lcParent = currentParent.toLowerCase();\n    const /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n    return !isParentTemplate && this.requiredParents[lcParent] != true;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nisClosedByChild(name: string): boolean {\n    return this.isVoid || name.toLowerCase() in this.closedByChildren;\n  }\n}\n\nfunction HtmlTagDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nHtmlTagDefinition.prototype.closedByChildren;\n/** @type {?} */\nHtmlTagDefinition.prototype.closedByParent;\n/** @type {?} */\nHtmlTagDefinition.prototype.requiredParents;\n/** @type {?} */\nHtmlTagDefinition.prototype.parentToAdd;\n/** @type {?} */\nHtmlTagDefinition.prototype.implicitNamespacePrefix;\n/** @type {?} */\nHtmlTagDefinition.prototype.contentType;\n/** @type {?} */\nHtmlTagDefinition.prototype.isVoid;\n/** @type {?} */\nHtmlTagDefinition.prototype.ignoreFirstLf;\n/** @type {?} */\nHtmlTagDefinition.prototype.canSelfClose;\n}\n\n\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nconst /** @type {?} */ TAG_DEFINITIONS: {[key: string]: HtmlTagDefinition} = {\n  'base': new HtmlTagDefinition({isVoid: true}),\n  'meta': new HtmlTagDefinition({isVoid: true}),\n  'area': new HtmlTagDefinition({isVoid: true}),\n  'embed': new HtmlTagDefinition({isVoid: true}),\n  'link': new HtmlTagDefinition({isVoid: true}),\n  'img': new HtmlTagDefinition({isVoid: true}),\n  'input': new HtmlTagDefinition({isVoid: true}),\n  'param': new HtmlTagDefinition({isVoid: true}),\n  'hr': new HtmlTagDefinition({isVoid: true}),\n  'br': new HtmlTagDefinition({isVoid: true}),\n  'source': new HtmlTagDefinition({isVoid: true}),\n  'track': new HtmlTagDefinition({isVoid: true}),\n  'wbr': new HtmlTagDefinition({isVoid: true}),\n  'p': new HtmlTagDefinition({\n    closedByChildren: [\n      'address', 'article', 'aside', 'blockquote', 'div', 'dl',      'fieldset', 'footer', 'form',\n      'h1',      'h2',      'h3',    'h4',         'h5',  'h6',      'header',   'hgroup', 'hr',\n      'main',    'nav',     'ol',    'p',          'pre', 'section', 'table',    'ul'\n    ],\n    closedByParent: true\n  }),\n  'thead': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot']}),\n  'tbody': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot'], closedByParent: true}),\n  'tfoot': new HtmlTagDefinition({closedByChildren: ['tbody'], closedByParent: true}),\n  'tr': new HtmlTagDefinition({\n    closedByChildren: ['tr'],\n    requiredParents: ['tbody', 'tfoot', 'thead'],\n    closedByParent: true\n  }),\n  'td': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'th': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'col': new HtmlTagDefinition({requiredParents: ['colgroup'], isVoid: true}),\n  'svg': new HtmlTagDefinition({implicitNamespacePrefix: 'svg'}),\n  'math': new HtmlTagDefinition({implicitNamespacePrefix: 'math'}),\n  'li': new HtmlTagDefinition({closedByChildren: ['li'], closedByParent: true}),\n  'dt': new HtmlTagDefinition({closedByChildren: ['dt', 'dd']}),\n  'dd': new HtmlTagDefinition({closedByChildren: ['dt', 'dd'], closedByParent: true}),\n  'rb': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rt': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rtc': new HtmlTagDefinition({closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true}),\n  'rp': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'optgroup': new HtmlTagDefinition({closedByChildren: ['optgroup'], closedByParent: true}),\n  'option': new HtmlTagDefinition({closedByChildren: ['option', 'optgroup'], closedByParent: true}),\n  'pre': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'listing': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'style': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'script': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'title': new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT}),\n  'textarea':\n      new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true}),\n};\n\nconst /** @type {?} */ _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getHtmlTagDefinition(tagName: string): HtmlTagDefinition {\n  return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst /** @type {?} */ _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +  // \"[name]\", \"[name=value]\",\n                                                                   // \"[name=\"value\"]\",\n                                                                   // \"[name='value']\"\n        '(\\\\))|' +                                                 // \")\"\n        '(\\\\s*,\\\\s*)',                                             // \",\"\n    'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string|null = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n/**\n * @param {?} selector\n * @return {?}\n */\nstatic parse(selector: string): CssSelector[] {\n    const /** @type {?} */ results: CssSelector[] = [];\n    const /** @type {?} */ _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let /** @type {?} */ cssSelector = new CssSelector();\n    let /** @type {?} */ match: string[]|null;\n    let /** @type {?} */ current = cssSelector;\n    let /** @type {?} */ inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[6]);\n      }\n      if (match[7]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[8]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n/**\n * @return {?}\n */\nisElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n/**\n * @return {?}\n */\nhasElementSelector(): boolean { return !!this.element; }\n/**\n * @param {?=} element\n * @return {?}\n */\nsetElement(element: string|null = null) { this.element = element; }\n/**\n * Gets a template string for an element that matches the selector.\n * @return {?}\n */\ngetMatchingElementTemplate(): string {\n    const /** @type {?} */ tagName = this.element || 'div';\n    const /** @type {?} */ classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let /** @type {?} */ attrs = '';\n    for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n      const /** @type {?} */ attrName = this.attrs[i];\n      const /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n/**\n * @param {?} name\n * @param {?=} value\n * @return {?}\n */\naddAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n/**\n * @param {?} name\n * @return {?}\n */\naddClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n/**\n * @return {?}\n */\ntoString(): string {\n    let /** @type {?} */ res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n        const /** @type {?} */ name = this.attrs[i];\n        const /** @type {?} */ value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\nfunction CssSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nCssSelector.prototype.element;\n/** @type {?} */\nCssSelector.prototype.classNames;\n/** @type {?} */\nCssSelector.prototype.attrs;\n/** @type {?} */\nCssSelector.prototype.notSelectors;\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n/**\n * @param {?} notSelectors\n * @return {?}\n */\nstatic createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const /** @type {?} */ notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\nprivate _elementMap = new Map<string, SelectorContext[]>();\nprivate _elementPartialMap = new Map<string, SelectorMatcher>();\nprivate _classMap = new Map<string, SelectorContext[]>();\nprivate _classPartialMap = new Map<string, SelectorMatcher>();\nprivate _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\nprivate _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\nprivate _listContexts: SelectorListContext[] = [];\n/**\n * @param {?} cssSelectors\n * @param {?=} callbackCtxt\n * @return {?}\n */\naddSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let /** @type {?} */ listContext: SelectorListContext = /** @type {?} */(( null));\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n/**\n * Add an object that can be found later on by calling `match`.\n * @param {?} cssSelector A css selector\n * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n * @param {?} listContext\n * @return {?}\n */\n\nprivate _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let /** @type {?} */ matcher: SelectorMatcher = this;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n    const /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const /** @type {?} */ className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ isTerminal = i === attrs.length - 2;\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n        if (isTerminal) {\n          const /** @type {?} */ terminalMap = matcher._attrValueMap;\n          let /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n          let /** @type {?} */ partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @param {?} selectable\n * @return {?}\n */\n\nprivate _addTerminal(\n      map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let /** @type {?} */ terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @return {?}\n */\n\nprivate _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let /** @type {?} */ matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n/**\n * Find the objects that have been added via `addSelectable`\n * whose css selector is contained in the given css selector.\n * @param {?} cssSelector A css selector\n * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n * @return {?} boolean true if a match was found\n */\nmatch(cssSelector: CssSelector, matchedCallback: ((c: CssSelector, a: any) => void)|null):\n      boolean {\n    let /** @type {?} */ result = false;\n    const /** @type {?} */ element = /** @type {?} */(( cssSelector.element));\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n\n    for (let /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n\n        const /** @type {?} */ terminalValuesMap = /** @type {?} */(( this._attrValueMap.get(name)));\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const /** @type {?} */ partialValuesMap = /** @type {?} */(( this._attrValuePartialMap.get(name)));\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchTerminal(\n      map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let /** @type {?} */ selectables: SelectorContext[] = map.get(name) || [];\n    const /** @type {?} */ starSelectables: SelectorContext[] = /** @type {?} */(( map.get('*')));\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let /** @type {?} */ selectable: SelectorContext;\n    let /** @type {?} */ result = false;\n    for (let /** @type {?} */ i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchPartial(\n      map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n      matchedCallback: ((c: CssSelector, a: any) => void)|null): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const /** @type {?} */ nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\nfunction SelectorMatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorMatcher.prototype._elementMap;\n/** @type {?} */\nSelectorMatcher.prototype._elementPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._classMap;\n/** @type {?} */\nSelectorMatcher.prototype._classPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValueMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValuePartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._listContexts;\n}\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n/**\n * @param {?} selectors\n */\nconstructor(public selectors: CssSelector[]) {}\n}\n\nfunction SelectorListContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorListContext.prototype.alreadyMatched;\n/** @type {?} */\nSelectorListContext.prototype.selectors;\n}\n\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n/**\n * @param {?} selector\n * @param {?} cbContext\n * @param {?} listContext\n */\nconstructor(\npublic selector: CssSelector,\npublic cbContext: any,\npublic listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n/**\n * @param {?} cssSelector\n * @param {?} callback\n * @return {?}\n */\nfinalize(cssSelector: CssSelector, callback: ((c: CssSelector, a: any) => void)|null): boolean {\n    let /** @type {?} */ result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n\nfunction SelectorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorContext.prototype.notSelectors;\n/** @type {?} */\nSelectorContext.prototype.selector;\n/** @type {?} */\nSelectorContext.prototype.cbContext;\n/** @type {?} */\nSelectorContext.prototype.listContext;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵisPromise as isPromise} from '@angular/core';\n\nimport * as o from './output/output_ast';\nimport {ParseError} from './parse_util';\n\nexport const /** @type {?} */ MODULE_SUFFIX = '';\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst /** @type {?} */ DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: any[]) => m[1].toUpperCase());\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nexport function splitAtColon(input: string, defaultValues: string[]): string[] {\n  return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nexport function splitAtPeriod(input: string, defaultValues: string[]): string[] {\n  return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input: string, character: string, defaultValues: string[]): string[] {\n  const /** @type {?} */ characterIndex = input.indexOf(character);\n  if (characterIndex == -1) return defaultValues;\n  return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nexport function visitValue(value: any, visitor: ValueVisitor, context: any): any {\n  if (Array.isArray(value)) {\n    return visitor.visitArray( /** @type {?} */((<any[]>value)), context);\n  }\n\n  if (isStrictStringMap(value)) {\n    return visitor.visitStringMap( /** @type {?} */((<{[key: string]: any}>value)), context);\n  }\n\n  if (value == null || typeof value == 'string' || typeof value == 'number' ||\n      typeof value == 'boolean') {\n    return visitor.visitPrimitive(value, context);\n  }\n\n  return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nexport function isDefined(val: any): boolean {\n  return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nexport function noUndefined<T>(val: T | undefined): T {\n  return val === undefined ? /** @type {?} */(( null)) : val;\n}\n/**\n * @record\n */\nexport function ValueVisitor() {}\n\n\nfunction ValueVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nValueVisitor.prototype.visitArray;\n/** @type {?} */\nValueVisitor.prototype.visitStringMap;\n/** @type {?} */\nValueVisitor.prototype.visitPrimitive;\n/** @type {?} */\nValueVisitor.prototype.visitOther;\n}\n\n\nexport interface ValueVisitor {\n  visitArray(arr: any[], context: any): any;\n  visitStringMap(map: {[key: string]: any}, context: any): any;\n  visitPrimitive(value: any, context: any): any;\n  visitOther(value: any, context: any): any;\n}\nexport class ValueTransformer implements ValueVisitor {\n/**\n * @param {?} arr\n * @param {?} context\n * @return {?}\n */\nvisitArray(arr: any[], context: any): any {\n    return arr.map(value => visitValue(value, this, context));\n  }\n/**\n * @param {?} map\n * @param {?} context\n * @return {?}\n */\nvisitStringMap(map: {[key: string]: any}, context: any): any {\n    const /** @type {?} */ result: {[key: string]: any} = {};\n    Object.keys(map).forEach(key => { result[key] = visitValue(map[key], this, context); });\n    return result;\n  }\n/**\n * @param {?} value\n * @param {?} context\n * @return {?}\n */\nvisitPrimitive(value: any, context: any): any { return value; }\n/**\n * @param {?} value\n * @param {?} context\n * @return {?}\n */\nvisitOther(value: any, context: any): any { return value; }\n}\n\nexport type SyncAsync<T> = T | Promise<T>;\n\nexport const /** @type {?} */ SyncAsync = {\n  assertSync: <T>(value: SyncAsync<T>): T => {\n    if (isPromise(value)) {\n      throw new Error(`Illegal state: value cannot be a promise`);\n    }\n    return value;\n  },\n  then: <T, R>(value: SyncAsync<T>, cb: (value: T) => R | Promise<R>| SyncAsync<R>):\n            SyncAsync<R> => { return isPromise(value) ? value.then(cb) : cb(value);},\n  all: <T>(syncAsyncValues: SyncAsync<T>[]): SyncAsync<T[]> => {\n    return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */(( syncAsyncValues as T[]));\n  }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nexport function syntaxError(msg: string, parseErrors?: ParseError[]): Error {\n  const /** @type {?} */ error = Error(msg);\n  ( /** @type {?} */((error as any)))[ERROR_SYNTAX_ERROR] = true;\n  if (parseErrors) ( /** @type {?} */((error as any)))[ERROR_PARSE_ERRORS] = parseErrors;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nconst /** @type {?} */ ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function isSyntaxError(error: Error): boolean {\n  return ( /** @type {?} */((error as any)))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getParseErrors(error: Error): ParseError[] {\n  return ( /** @type {?} */((error as any)))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nexport function escapeRegExp(s: string): string {\n  return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nconst /** @type {?} */ STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj: any): boolean {\n  return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nexport function utf8Encode(str: string): string {\n  let /** @type {?} */ encoded = '';\n  for (let /** @type {?} */ index = 0; index < str.length; index++) {\n    let /** @type {?} */ codePoint = str.charCodeAt(index);\n\n    // decode surrogate\n    // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n      const /** @type {?} */ low = str.charCodeAt(index + 1);\n      if (low >= 0xdc00 && low <= 0xdfff) {\n        index++;\n        codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n      }\n    }\n\n    if (codePoint <= 0x7f) {\n      encoded += String.fromCharCode(codePoint);\n    } else if (codePoint <= 0x7ff) {\n      encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint <= 0xffff) {\n      encoded += String.fromCharCode(\n          (codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n    } else if (codePoint <= 0x1fffff) {\n      encoded += String.fromCharCode(\n          ((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80,\n          ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n    }\n  }\n\n  return encoded;\n}\n/**\n * @record\n */\nexport function OutputContext() {}\n\n\nfunction OutputContext_tsickle_Closure_declarations() {\n/** @type {?} */\nOutputContext.prototype.genFilePath;\n/** @type {?} */\nOutputContext.prototype.statements;\n/** @type {?} */\nOutputContext.prototype.importExpr;\n}\n\n\nexport interface OutputContext {\n  genFilePath: string;\n  statements: o.Statement[];\n  importExpr(reference: any, typeParams?: o.Type[]|null): o.Expression;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, ComponentFactory, RendererType2, SchemaMetadata, Type, ViewEncapsulation, ɵstringify as stringify} from '@angular/core';\n\nimport {StaticSymbol} from './aot/static_symbol';\nimport {LifecycleHooks} from './lifecycle_reflector';\nimport {CssSelector} from './selector';\nimport {splitAtColon} from './util';\n\n\n\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nconst /** @type {?} */ HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nexport class CompileAnimationEntryMetadata {\n/**\n * @param {?=} name\n * @param {?=} definitions\n */\nconstructor(\npublic name: string|null = null,\npublic definitions: CompileAnimationStateMetadata[]|null = null) {}\n}\n\nfunction CompileAnimationEntryMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileAnimationEntryMetadata.prototype.name;\n/** @type {?} */\nCompileAnimationEntryMetadata.prototype.definitions;\n}\n\n/**\n * @abstract\n */\nexport abstract class CompileAnimationStateMetadata {}\nexport class CompileAnimationStateDeclarationMetadata extends CompileAnimationStateMetadata {\n/**\n * @param {?} stateNameExpr\n * @param {?} styles\n */\nconstructor(public stateNameExpr: string,\npublic styles: CompileAnimationStyleMetadata) {\n    super();\n  }\n}\n\nfunction CompileAnimationStateDeclarationMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileAnimationStateDeclarationMetadata.prototype.stateNameExpr;\n/** @type {?} */\nCompileAnimationStateDeclarationMetadata.prototype.styles;\n}\n\nexport class CompileAnimationStateTransitionMetadata extends CompileAnimationStateMetadata {\n/**\n * @param {?} stateChangeExpr\n * @param {?} steps\n */\nconstructor(\npublic stateChangeExpr: string|StaticSymbol|((stateA: string, stateB: string) => boolean),\npublic steps: CompileAnimationMetadata) {\n    super();\n  }\n}\n\nfunction CompileAnimationStateTransitionMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileAnimationStateTransitionMetadata.prototype.stateChangeExpr;\n/** @type {?} */\nCompileAnimationStateTransitionMetadata.prototype.steps;\n}\n\n/**\n * @abstract\n */\nexport abstract class CompileAnimationMetadata {}\nexport class CompileAnimationKeyframesSequenceMetadata extends CompileAnimationMetadata {\n/**\n * @param {?=} steps\n */\nconstructor(public steps: CompileAnimationStyleMetadata[] = []) { super(); }\n}\n\nfunction CompileAnimationKeyframesSequenceMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileAnimationKeyframesSequenceMetadata.prototype.steps;\n}\n\nexport class CompileAnimationStyleMetadata extends CompileAnimationMetadata {\n/**\n * @param {?} offset\n * @param {?=} styles\n */\nconstructor(\npublic offset: number,\npublic styles: Array<string|{[key: string]: string | number}>|null = null) {\n    super();\n  }\n}\n\nfunction CompileAnimationStyleMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileAnimationStyleMetadata.prototype.offset;\n/** @type {?} */\nCompileAnimationStyleMetadata.prototype.styles;\n}\n\nexport class CompileAnimationAnimateMetadata extends CompileAnimationMetadata {\n/**\n * @param {?=} timings\n * @param {?=} styles\n */\nconstructor(\npublic timings: string|number = 0,\npublic styles: CompileAnimationStyleMetadata|\n      CompileAnimationKeyframesSequenceMetadata|null = null) {\n    super();\n  }\n}\n\nfunction CompileAnimationAnimateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileAnimationAnimateMetadata.prototype.timings;\n/** @type {?} */\nCompileAnimationAnimateMetadata.prototype.styles;\n}\n\n/**\n * @abstract\n */\nexport abstract class CompileAnimationWithStepsMetadata extends CompileAnimationMetadata {\n/**\n * @param {?=} steps\n */\nconstructor(public steps: CompileAnimationMetadata[]|null = null) { super(); }\n}\n\nfunction CompileAnimationWithStepsMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileAnimationWithStepsMetadata.prototype.steps;\n}\n\nexport class CompileAnimationSequenceMetadata extends CompileAnimationWithStepsMetadata {\n/**\n * @param {?=} steps\n */\nconstructor(steps: CompileAnimationMetadata[]|null = null) { super(steps); }\n}\nexport class CompileAnimationGroupMetadata extends CompileAnimationWithStepsMetadata {\n/**\n * @param {?=} steps\n */\nconstructor(steps: CompileAnimationMetadata[]|null = null) { super(steps); }\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name: string): string {\n  return name.replace(/\\W/g, '_');\n}\n\nlet /** @type {?} */ _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nexport function identifierName(compileIdentifier: CompileIdentifierMetadata | null | undefined):\n    string|null {\n  if (!compileIdentifier || !compileIdentifier.reference) {\n    return null;\n  }\n  const /** @type {?} */ ref = compileIdentifier.reference;\n  if (ref instanceof StaticSymbol) {\n    return ref.name;\n  }\n  if (ref['__anonymousType']) {\n    return ref['__anonymousType'];\n  }\n  let /** @type {?} */ identifier = stringify(ref);\n  if (identifier.indexOf('(') >= 0) {\n    // case: anonymous functions!\n    identifier = `anonymous_${_anonymousTypeIndex++}`;\n    ref['__anonymousType'] = identifier;\n  } else {\n    identifier = _sanitizeIdentifier(identifier);\n  }\n  return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nexport function identifierModuleUrl(compileIdentifier: CompileIdentifierMetadata): string {\n  const /** @type {?} */ ref = compileIdentifier.reference;\n  if (ref instanceof StaticSymbol) {\n    return ref.filePath;\n  }\n  // Runtime type\n  return `./${stringify(ref)}`;\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nexport function viewClassName(compType: any, embeddedTemplateIndex: number): string {\n  return `View_${identifierName({reference: compType})}_${embeddedTemplateIndex}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function rendererTypeName(compType: any): string {\n  return `RenderType_${identifierName({reference: compType})}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function hostViewClassName(compType: any): string {\n  return `HostView_${identifierName({reference: compType})}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function componentFactoryName(compType: any): string {\n  return `${identifierName({reference: compType})}NgFactory`;\n}\n/**\n * @record\n */\nexport function ProxyClass() {}\n\n\nfunction ProxyClass_tsickle_Closure_declarations() {\n/** @type {?} */\nProxyClass.prototype.setDelegate;\n}\n\n\nexport interface ProxyClass { setDelegate(delegate: any): void; }\n/**\n * @record\n */\nexport function CompileIdentifierMetadata() {}\n\n\nfunction CompileIdentifierMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileIdentifierMetadata.prototype.reference;\n}\n\n\nexport interface CompileIdentifierMetadata { reference: any; }\nexport type CompileSummaryKind = number;\nexport let CompileSummaryKind: any = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\nexport function CompileTypeSummary() {}\n\n\nfunction CompileTypeSummary_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileTypeSummary.prototype.summaryKind;\n/** @type {?} */\nCompileTypeSummary.prototype.type;\n}\n\n\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n */\nexport interface CompileTypeSummary {\n  summaryKind: CompileSummaryKind|null;\n  type: CompileTypeMetadata;\n}\n/**\n * @record\n */\nexport function CompileDiDependencyMetadata() {}\n\n\nfunction CompileDiDependencyMetadata_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isAttribute;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isSelf;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isHost;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isSkipSelf;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isOptional;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.isValue;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.token;\n/** @type {?|undefined} */\nCompileDiDependencyMetadata.prototype.value;\n}\n\n\nexport interface CompileDiDependencyMetadata {\n  isAttribute?: boolean;\n  isSelf?: boolean;\n  isHost?: boolean;\n  isSkipSelf?: boolean;\n  isOptional?: boolean;\n  isValue?: boolean;\n  token?: CompileTokenMetadata;\n  value?: any;\n}\n/**\n * @record\n */\nexport function CompileProviderMetadata() {}\n\n\nfunction CompileProviderMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileProviderMetadata.prototype.token;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useClass;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useValue;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useExisting;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.useFactory;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.deps;\n/** @type {?|undefined} */\nCompileProviderMetadata.prototype.multi;\n}\n\n\nexport interface CompileProviderMetadata {\n  token: CompileTokenMetadata;\n  useClass?: CompileTypeMetadata;\n  useValue?: any;\n  useExisting?: CompileTokenMetadata;\n  useFactory?: CompileFactoryMetadata;\n  deps?: CompileDiDependencyMetadata[];\n  multi?: boolean;\n}\n/**\n * @record\n */\nexport function CompileFactoryMetadata() {}\n\n\nfunction CompileFactoryMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileFactoryMetadata.prototype.diDeps;\n/** @type {?} */\nCompileFactoryMetadata.prototype.reference;\n}\n\n\nexport interface CompileFactoryMetadata extends CompileIdentifierMetadata {\n  diDeps: CompileDiDependencyMetadata[];\n  reference: any;\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenName(token: CompileTokenMetadata) {\n  return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenReference(token: CompileTokenMetadata) {\n  if (token.identifier != null) {\n    return token.identifier.reference;\n  } else {\n    return token.value;\n  }\n}\n/**\n * @record\n */\nexport function CompileTokenMetadata() {}\n\n\nfunction CompileTokenMetadata_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nCompileTokenMetadata.prototype.value;\n/** @type {?|undefined} */\nCompileTokenMetadata.prototype.identifier;\n}\n\n\nexport interface CompileTokenMetadata {\n  value?: any;\n  identifier?: CompileIdentifierMetadata|CompileTypeMetadata;\n}\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\nexport function CompileTypeMetadata() {}\n\n\nfunction CompileTypeMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileTypeMetadata.prototype.diDeps;\n/** @type {?} */\nCompileTypeMetadata.prototype.lifecycleHooks;\n/** @type {?} */\nCompileTypeMetadata.prototype.reference;\n}\n\n\n/**\n * Metadata regarding compilation of a type.\n */\nexport interface CompileTypeMetadata extends CompileIdentifierMetadata {\n  diDeps: CompileDiDependencyMetadata[];\n  lifecycleHooks: LifecycleHooks[];\n  reference: any;\n}\n/**\n * @record\n */\nexport function CompileQueryMetadata() {}\n\n\nfunction CompileQueryMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileQueryMetadata.prototype.selectors;\n/** @type {?} */\nCompileQueryMetadata.prototype.descendants;\n/** @type {?} */\nCompileQueryMetadata.prototype.first;\n/** @type {?} */\nCompileQueryMetadata.prototype.propertyName;\n/** @type {?} */\nCompileQueryMetadata.prototype.read;\n}\n\n\nexport interface CompileQueryMetadata {\n  selectors: Array<CompileTokenMetadata>;\n  descendants: boolean;\n  first: boolean;\n  propertyName: string;\n  read: CompileTokenMetadata;\n}\n/**\n * Metadata about a stylesheet\n */\nexport class CompileStylesheetMetadata {\n  moduleUrl: string|null;\n  styles: string[];\n  styleUrls: string[];\n/**\n * @param {?=} __0\n */\nconstructor(\n      {moduleUrl, styles,\n       styleUrls}: {moduleUrl?: string, styles?: string[], styleUrls?: string[]} = {}) {\n    this.moduleUrl = moduleUrl || null;\n    this.styles = _normalizeArray(styles);\n    this.styleUrls = _normalizeArray(styleUrls);\n  }\n}\n\nfunction CompileStylesheetMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileStylesheetMetadata.prototype.moduleUrl;\n/** @type {?} */\nCompileStylesheetMetadata.prototype.styles;\n/** @type {?} */\nCompileStylesheetMetadata.prototype.styleUrls;\n}\n\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\nexport function CompileTemplateSummary() {}\n\n\nfunction CompileTemplateSummary_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileTemplateSummary.prototype.animations;\n/** @type {?} */\nCompileTemplateSummary.prototype.ngContentSelectors;\n/** @type {?} */\nCompileTemplateSummary.prototype.encapsulation;\n}\n\n\n/**\n * Summary Metadata regarding compilation of a template.\n */\nexport interface CompileTemplateSummary {\n  animations: string[]|null;\n  ngContentSelectors: string[];\n  encapsulation: ViewEncapsulation|null;\n}\n/**\n * Metadata regarding compilation of a template.\n */\nexport class CompileTemplateMetadata {\n  encapsulation: ViewEncapsulation|null;\n  template: string|null;\n  templateUrl: string|null;\n  isInline: boolean;\n  styles: string[];\n  styleUrls: string[];\n  externalStylesheets: CompileStylesheetMetadata[];\n  animations: any[];\n  ngContentSelectors: string[];\n  interpolation: [string, string]|null;\n/**\n * @param {?} __0\n */\nconstructor({encapsulation, template, templateUrl, styles, styleUrls, externalStylesheets,\n               animations, ngContentSelectors, interpolation, isInline}: {\n    encapsulation: ViewEncapsulation | null,\n    template: string|null,\n    templateUrl: string|null,\n    styles: string[],\n    styleUrls: string[],\n    externalStylesheets: CompileStylesheetMetadata[],\n    ngContentSelectors: string[],\n    animations: any[],\n    interpolation: [string, string]|null,\n    isInline: boolean\n  }) {\n    this.encapsulation = encapsulation;\n    this.template = template;\n    this.templateUrl = templateUrl;\n    this.styles = _normalizeArray(styles);\n    this.styleUrls = _normalizeArray(styleUrls);\n    this.externalStylesheets = _normalizeArray(externalStylesheets);\n    this.animations = animations ? flatten(animations) : [];\n    this.ngContentSelectors = ngContentSelectors || [];\n    if (interpolation && interpolation.length != 2) {\n      throw new Error(`'interpolation' should have a start and an end symbol.`);\n    }\n    this.interpolation = interpolation;\n    this.isInline = isInline;\n  }\n/**\n * @return {?}\n */\ntoSummary(): CompileTemplateSummary {\n    return {\n      animations: this.animations.map(anim => anim.name),\n      ngContentSelectors: this.ngContentSelectors,\n      encapsulation: this.encapsulation,\n    };\n  }\n}\n\nfunction CompileTemplateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileTemplateMetadata.prototype.encapsulation;\n/** @type {?} */\nCompileTemplateMetadata.prototype.template;\n/** @type {?} */\nCompileTemplateMetadata.prototype.templateUrl;\n/** @type {?} */\nCompileTemplateMetadata.prototype.isInline;\n/** @type {?} */\nCompileTemplateMetadata.prototype.styles;\n/** @type {?} */\nCompileTemplateMetadata.prototype.styleUrls;\n/** @type {?} */\nCompileTemplateMetadata.prototype.externalStylesheets;\n/** @type {?} */\nCompileTemplateMetadata.prototype.animations;\n/** @type {?} */\nCompileTemplateMetadata.prototype.ngContentSelectors;\n/** @type {?} */\nCompileTemplateMetadata.prototype.interpolation;\n}\n\n/**\n * @record\n */\nexport function CompileEntryComponentMetadata() {}\n\n\nfunction CompileEntryComponentMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileEntryComponentMetadata.prototype.componentType;\n/** @type {?} */\nCompileEntryComponentMetadata.prototype.componentFactory;\n}\n\n\nexport interface CompileEntryComponentMetadata {\n  componentType: any;\n  componentFactory: StaticSymbol|ComponentFactory<any>;\n}\n/**\n * @record\n */\nexport function CompileDirectiveSummary() {}\n\n\nfunction CompileDirectiveSummary_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileDirectiveSummary.prototype.type;\n/** @type {?} */\nCompileDirectiveSummary.prototype.isComponent;\n/** @type {?} */\nCompileDirectiveSummary.prototype.selector;\n/** @type {?} */\nCompileDirectiveSummary.prototype.exportAs;\n/** @type {?} */\nCompileDirectiveSummary.prototype.inputs;\n/** @type {?} */\nCompileDirectiveSummary.prototype.outputs;\n/** @type {?} */\nCompileDirectiveSummary.prototype.hostListeners;\n/** @type {?} */\nCompileDirectiveSummary.prototype.hostProperties;\n/** @type {?} */\nCompileDirectiveSummary.prototype.hostAttributes;\n/** @type {?} */\nCompileDirectiveSummary.prototype.providers;\n/** @type {?} */\nCompileDirectiveSummary.prototype.viewProviders;\n/** @type {?} */\nCompileDirectiveSummary.prototype.queries;\n/** @type {?} */\nCompileDirectiveSummary.prototype.viewQueries;\n/** @type {?} */\nCompileDirectiveSummary.prototype.entryComponents;\n/** @type {?} */\nCompileDirectiveSummary.prototype.changeDetection;\n/** @type {?} */\nCompileDirectiveSummary.prototype.template;\n/** @type {?} */\nCompileDirectiveSummary.prototype.componentViewType;\n/** @type {?} */\nCompileDirectiveSummary.prototype.rendererType;\n/** @type {?} */\nCompileDirectiveSummary.prototype.componentFactory;\n}\n\n\n// Note: This should only use interfaces as nested data types\n// as we need to be able to serialize this from/to JSON!\nexport interface CompileDirectiveSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n  isComponent: boolean;\n  selector: string|null;\n  exportAs: string|null;\n  inputs: {[key: string]: string};\n  outputs: {[key: string]: string};\n  hostListeners: {[key: string]: string};\n  hostProperties: {[key: string]: string};\n  hostAttributes: {[key: string]: string};\n  providers: CompileProviderMetadata[];\n  viewProviders: CompileProviderMetadata[];\n  queries: CompileQueryMetadata[];\n  viewQueries: CompileQueryMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n  changeDetection: ChangeDetectionStrategy|null;\n  template: CompileTemplateSummary|null;\n  componentViewType: StaticSymbol|ProxyClass|null;\n  rendererType: StaticSymbol|RendererType2|null;\n  componentFactory: StaticSymbol|ComponentFactory<any>|null;\n}\n/**\n * Metadata regarding compilation of a directive.\n */\nexport class CompileDirectiveMetadata {\n/**\n * @param {?} __0\n * @return {?}\n */\nstatic create({isHost, type, isComponent, selector, exportAs, changeDetection, inputs, outputs,\n                 host, providers, viewProviders, queries, viewQueries, entryComponents, template,\n                 componentViewType, rendererType, componentFactory}: {\n    isHost: boolean,\n    type: CompileTypeMetadata,\n    isComponent: boolean,\n    selector: string|null,\n    exportAs: string|null,\n    changeDetection: ChangeDetectionStrategy|null,\n    inputs: string[],\n    outputs: string[],\n    host: {[key: string]: string},\n    providers: CompileProviderMetadata[],\n    viewProviders: CompileProviderMetadata[],\n    queries: CompileQueryMetadata[],\n    viewQueries: CompileQueryMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    template: CompileTemplateMetadata,\n    componentViewType: StaticSymbol|ProxyClass|null,\n    rendererType: StaticSymbol|RendererType2|null,\n    componentFactory: StaticSymbol|ComponentFactory<any>|null,\n  }): CompileDirectiveMetadata {\n    const /** @type {?} */ hostListeners: {[key: string]: string} = {};\n    const /** @type {?} */ hostProperties: {[key: string]: string} = {};\n    const /** @type {?} */ hostAttributes: {[key: string]: string} = {};\n    if (host != null) {\n      Object.keys(host).forEach(key => {\n        const /** @type {?} */ value = host[key];\n        const /** @type {?} */ matches = key.match(HOST_REG_EXP);\n        if (matches === null) {\n          hostAttributes[key] = value;\n        } else if (matches[1] != null) {\n          hostProperties[matches[1]] = value;\n        } else if (matches[2] != null) {\n          hostListeners[matches[2]] = value;\n        }\n      });\n    }\n    const /** @type {?} */ inputsMap: {[key: string]: string} = {};\n    if (inputs != null) {\n      inputs.forEach((bindConfig: string) => {\n        // canonical syntax: `dirProp: elProp`\n        // if there is no `:`, use dirProp = elProp\n        const /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n        inputsMap[parts[0]] = parts[1];\n      });\n    }\n    const /** @type {?} */ outputsMap: {[key: string]: string} = {};\n    if (outputs != null) {\n      outputs.forEach((bindConfig: string) => {\n        // canonical syntax: `dirProp: elProp`\n        // if there is no `:`, use dirProp = elProp\n        const /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n        outputsMap[parts[0]] = parts[1];\n      });\n    }\n\n    return new CompileDirectiveMetadata({\n      isHost,\n      type,\n      isComponent: !!isComponent, selector, exportAs, changeDetection,\n      inputs: inputsMap,\n      outputs: outputsMap,\n      hostListeners,\n      hostProperties,\n      hostAttributes,\n      providers,\n      viewProviders,\n      queries,\n      viewQueries,\n      entryComponents,\n      template,\n      componentViewType,\n      rendererType,\n      componentFactory,\n    });\n  }\n  isHost: boolean;\n  type: CompileTypeMetadata;\n  isComponent: boolean;\n  selector: string|null;\n  exportAs: string|null;\n  changeDetection: ChangeDetectionStrategy|null;\n  inputs: {[key: string]: string};\n  outputs: {[key: string]: string};\n  hostListeners: {[key: string]: string};\n  hostProperties: {[key: string]: string};\n  hostAttributes: {[key: string]: string};\n  providers: CompileProviderMetadata[];\n  viewProviders: CompileProviderMetadata[];\n  queries: CompileQueryMetadata[];\n  viewQueries: CompileQueryMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n\n  template: CompileTemplateMetadata|null;\n\n  componentViewType: StaticSymbol|ProxyClass|null;\n  rendererType: StaticSymbol|RendererType2|null;\n  componentFactory: StaticSymbol|ComponentFactory<any>|null;\n/**\n * @param {?} __0\n */\nconstructor({isHost,          type,      isComponent,       selector,      exportAs,\n               changeDetection, inputs,    outputs,           hostListeners, hostProperties,\n               hostAttributes,  providers, viewProviders,     queries,       viewQueries,\n               entryComponents, template,  componentViewType, rendererType,  componentFactory}: {\n    isHost: boolean,\n    type: CompileTypeMetadata,\n    isComponent: boolean,\n    selector: string|null,\n    exportAs: string|null,\n    changeDetection: ChangeDetectionStrategy|null,\n    inputs: {[key: string]: string},\n    outputs: {[key: string]: string},\n    hostListeners: {[key: string]: string},\n    hostProperties: {[key: string]: string},\n    hostAttributes: {[key: string]: string},\n    providers: CompileProviderMetadata[],\n    viewProviders: CompileProviderMetadata[],\n    queries: CompileQueryMetadata[],\n    viewQueries: CompileQueryMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    template: CompileTemplateMetadata|null,\n    componentViewType: StaticSymbol|ProxyClass|null,\n    rendererType: StaticSymbol|RendererType2|null,\n    componentFactory: StaticSymbol|ComponentFactory<any>|null,\n  }) {\n    this.isHost = !!isHost;\n    this.type = type;\n    this.isComponent = isComponent;\n    this.selector = selector;\n    this.exportAs = exportAs;\n    this.changeDetection = changeDetection;\n    this.inputs = inputs;\n    this.outputs = outputs;\n    this.hostListeners = hostListeners;\n    this.hostProperties = hostProperties;\n    this.hostAttributes = hostAttributes;\n    this.providers = _normalizeArray(providers);\n    this.viewProviders = _normalizeArray(viewProviders);\n    this.queries = _normalizeArray(queries);\n    this.viewQueries = _normalizeArray(viewQueries);\n    this.entryComponents = _normalizeArray(entryComponents);\n    this.template = template;\n\n    this.componentViewType = componentViewType;\n    this.rendererType = rendererType;\n    this.componentFactory = componentFactory;\n  }\n/**\n * @return {?}\n */\ntoSummary(): CompileDirectiveSummary {\n    return {\n      summaryKind: CompileSummaryKind.Directive,\n      type: this.type,\n      isComponent: this.isComponent,\n      selector: this.selector,\n      exportAs: this.exportAs,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      hostListeners: this.hostListeners,\n      hostProperties: this.hostProperties,\n      hostAttributes: this.hostAttributes,\n      providers: this.providers,\n      viewProviders: this.viewProviders,\n      queries: this.queries,\n      viewQueries: this.viewQueries,\n      entryComponents: this.entryComponents,\n      changeDetection: this.changeDetection,\n      template: this.template && this.template.toSummary(),\n      componentViewType: this.componentViewType,\n      rendererType: this.rendererType,\n      componentFactory: this.componentFactory\n    };\n  }\n}\n\nfunction CompileDirectiveMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileDirectiveMetadata.prototype.isHost;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.type;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.isComponent;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.selector;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.exportAs;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.changeDetection;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.inputs;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.outputs;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.hostListeners;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.hostProperties;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.hostAttributes;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.providers;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.viewProviders;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.queries;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.viewQueries;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.entryComponents;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.template;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.componentViewType;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.rendererType;\n/** @type {?} */\nCompileDirectiveMetadata.prototype.componentFactory;\n}\n\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nexport function createHostComponentMeta(\n    hostTypeReference: any, compMeta: CompileDirectiveMetadata,\n    hostViewType: StaticSymbol | ProxyClass): CompileDirectiveMetadata {\n  const /** @type {?} */ template = CssSelector.parse( /** @type {?} */((compMeta.selector)))[0].getMatchingElementTemplate();\n  return CompileDirectiveMetadata.create({\n    isHost: true,\n    type: {reference: hostTypeReference, diDeps: [], lifecycleHooks: []},\n    template: new CompileTemplateMetadata({\n      encapsulation: ViewEncapsulation.None,\n      template: template,\n      templateUrl: '',\n      styles: [],\n      styleUrls: [],\n      ngContentSelectors: [],\n      animations: [],\n      isInline: true,\n      externalStylesheets: [],\n      interpolation: null\n    }),\n    exportAs: null,\n    changeDetection: ChangeDetectionStrategy.Default,\n    inputs: [],\n    outputs: [],\n    host: {},\n    isComponent: true,\n    selector: '*',\n    providers: [],\n    viewProviders: [],\n    queries: [],\n    viewQueries: [],\n    componentViewType: hostViewType,\n    rendererType: {id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {}},\n    entryComponents: [],\n    componentFactory: null\n  });\n}\n/**\n * @record\n */\nexport function CompilePipeSummary() {}\n\n\nfunction CompilePipeSummary_tsickle_Closure_declarations() {\n/** @type {?} */\nCompilePipeSummary.prototype.type;\n/** @type {?} */\nCompilePipeSummary.prototype.name;\n/** @type {?} */\nCompilePipeSummary.prototype.pure;\n}\n\n\nexport interface CompilePipeSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n  name: string;\n  pure: boolean;\n}\nexport class CompilePipeMetadata {\n  type: CompileTypeMetadata;\n  name: string;\n  pure: boolean;\n/**\n * @param {?} __0\n */\nconstructor({type, name, pure}: {\n    type: CompileTypeMetadata,\n    name: string,\n    pure: boolean,\n  }) {\n    this.type = type;\n    this.name = name;\n    this.pure = !!pure;\n  }\n/**\n * @return {?}\n */\ntoSummary(): CompilePipeSummary {\n    return {\n      summaryKind: CompileSummaryKind.Pipe,\n      type: this.type,\n      name: this.name,\n      pure: this.pure\n    };\n  }\n}\n\nfunction CompilePipeMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompilePipeMetadata.prototype.type;\n/** @type {?} */\nCompilePipeMetadata.prototype.name;\n/** @type {?} */\nCompilePipeMetadata.prototype.pure;\n}\n\n/**\n * @record\n */\nexport function CompileNgModuleSummary() {}\n\n\nfunction CompileNgModuleSummary_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileNgModuleSummary.prototype.type;\n/** @type {?} */\nCompileNgModuleSummary.prototype.exportedDirectives;\n/** @type {?} */\nCompileNgModuleSummary.prototype.exportedPipes;\n/** @type {?} */\nCompileNgModuleSummary.prototype.entryComponents;\n/** @type {?} */\nCompileNgModuleSummary.prototype.providers;\n/** @type {?} */\nCompileNgModuleSummary.prototype.modules;\n}\n\n\n// Note: This should only use interfaces as nested data types\n// as we need to be able to serialize this from/to JSON!\nexport interface CompileNgModuleSummary extends CompileTypeSummary {\n  type: CompileTypeMetadata;\n\n  // Note: This is transitive over the exported modules.\n  exportedDirectives: CompileIdentifierMetadata[];\n  // Note: This is transitive over the exported modules.\n  exportedPipes: CompileIdentifierMetadata[];\n\n  // Note: This is transitive.\n  entryComponents: CompileEntryComponentMetadata[];\n  // Note: This is transitive.\n  providers: {provider: CompileProviderMetadata, module: CompileIdentifierMetadata}[];\n  // Note: This is transitive.\n  modules: CompileTypeMetadata[];\n}\n/**\n * Metadata regarding compilation of a module.\n */\nexport class CompileNgModuleMetadata {\n  type: CompileTypeMetadata;\n  declaredDirectives: CompileIdentifierMetadata[];\n  exportedDirectives: CompileIdentifierMetadata[];\n  declaredPipes: CompileIdentifierMetadata[];\n\n  exportedPipes: CompileIdentifierMetadata[];\n  entryComponents: CompileEntryComponentMetadata[];\n  bootstrapComponents: CompileIdentifierMetadata[];\n  providers: CompileProviderMetadata[];\n\n  importedModules: CompileNgModuleSummary[];\n  exportedModules: CompileNgModuleSummary[];\n  schemas: SchemaMetadata[];\n  id: string|null;\n\n  transitiveModule: TransitiveCompileNgModuleMetadata;\n/**\n * @param {?} __0\n */\nconstructor({type, providers, declaredDirectives, exportedDirectives, declaredPipes,\n               exportedPipes, entryComponents, bootstrapComponents, importedModules,\n               exportedModules, schemas, transitiveModule, id}: {\n    type: CompileTypeMetadata,\n    providers: CompileProviderMetadata[],\n    declaredDirectives: CompileIdentifierMetadata[],\n    exportedDirectives: CompileIdentifierMetadata[],\n    declaredPipes: CompileIdentifierMetadata[],\n    exportedPipes: CompileIdentifierMetadata[],\n    entryComponents: CompileEntryComponentMetadata[],\n    bootstrapComponents: CompileIdentifierMetadata[],\n    importedModules: CompileNgModuleSummary[],\n    exportedModules: CompileNgModuleSummary[],\n    transitiveModule: TransitiveCompileNgModuleMetadata,\n    schemas: SchemaMetadata[],\n    id: string|null\n  }) {\n    this.type = type || null;\n    this.declaredDirectives = _normalizeArray(declaredDirectives);\n    this.exportedDirectives = _normalizeArray(exportedDirectives);\n    this.declaredPipes = _normalizeArray(declaredPipes);\n    this.exportedPipes = _normalizeArray(exportedPipes);\n    this.providers = _normalizeArray(providers);\n    this.entryComponents = _normalizeArray(entryComponents);\n    this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n    this.importedModules = _normalizeArray(importedModules);\n    this.exportedModules = _normalizeArray(exportedModules);\n    this.schemas = _normalizeArray(schemas);\n    this.id = id || null;\n    this.transitiveModule = transitiveModule || null;\n  }\n/**\n * @return {?}\n */\ntoSummary(): CompileNgModuleSummary {\n    const /** @type {?} */ module = /** @type {?} */(( this.transitiveModule));\n    return {\n      summaryKind: CompileSummaryKind.NgModule,\n      type: this.type,\n      entryComponents: module.entryComponents,\n      providers: module.providers,\n      modules: module.modules,\n      exportedDirectives: module.exportedDirectives,\n      exportedPipes: module.exportedPipes\n    };\n  }\n}\n\nfunction CompileNgModuleMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileNgModuleMetadata.prototype.type;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.declaredDirectives;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.exportedDirectives;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.declaredPipes;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.exportedPipes;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.entryComponents;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.bootstrapComponents;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.providers;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.importedModules;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.exportedModules;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.schemas;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.id;\n/** @type {?} */\nCompileNgModuleMetadata.prototype.transitiveModule;\n}\n\nexport class TransitiveCompileNgModuleMetadata {\n  directivesSet = new Set<any>();\n  directives: CompileIdentifierMetadata[] = [];\n  exportedDirectivesSet = new Set<any>();\n  exportedDirectives: CompileIdentifierMetadata[] = [];\n  pipesSet = new Set<any>();\n  pipes: CompileIdentifierMetadata[] = [];\n  exportedPipesSet = new Set<any>();\n  exportedPipes: CompileIdentifierMetadata[] = [];\n  modulesSet = new Set<any>();\n  modules: CompileTypeMetadata[] = [];\n  entryComponentsSet = new Set<any>();\n  entryComponents: CompileEntryComponentMetadata[] = [];\n\n  providers: {provider: CompileProviderMetadata, module: CompileIdentifierMetadata}[] = [];\n/**\n * @param {?} provider\n * @param {?} module\n * @return {?}\n */\naddProvider(provider: CompileProviderMetadata, module: CompileIdentifierMetadata) {\n    this.providers.push({provider: provider, module: module});\n  }\n/**\n * @param {?} id\n * @return {?}\n */\naddDirective(id: CompileIdentifierMetadata) {\n    if (!this.directivesSet.has(id.reference)) {\n      this.directivesSet.add(id.reference);\n      this.directives.push(id);\n    }\n  }\n/**\n * @param {?} id\n * @return {?}\n */\naddExportedDirective(id: CompileIdentifierMetadata) {\n    if (!this.exportedDirectivesSet.has(id.reference)) {\n      this.exportedDirectivesSet.add(id.reference);\n      this.exportedDirectives.push(id);\n    }\n  }\n/**\n * @param {?} id\n * @return {?}\n */\naddPipe(id: CompileIdentifierMetadata) {\n    if (!this.pipesSet.has(id.reference)) {\n      this.pipesSet.add(id.reference);\n      this.pipes.push(id);\n    }\n  }\n/**\n * @param {?} id\n * @return {?}\n */\naddExportedPipe(id: CompileIdentifierMetadata) {\n    if (!this.exportedPipesSet.has(id.reference)) {\n      this.exportedPipesSet.add(id.reference);\n      this.exportedPipes.push(id);\n    }\n  }\n/**\n * @param {?} id\n * @return {?}\n */\naddModule(id: CompileTypeMetadata) {\n    if (!this.modulesSet.has(id.reference)) {\n      this.modulesSet.add(id.reference);\n      this.modules.push(id);\n    }\n  }\n/**\n * @param {?} ec\n * @return {?}\n */\naddEntryComponent(ec: CompileEntryComponentMetadata) {\n    if (!this.entryComponentsSet.has(ec.componentType)) {\n      this.entryComponentsSet.add(ec.componentType);\n      this.entryComponents.push(ec);\n    }\n  }\n}\n\nfunction TransitiveCompileNgModuleMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.directivesSet;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.directives;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.exportedDirectivesSet;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.exportedDirectives;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.pipesSet;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.pipes;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.exportedPipesSet;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.exportedPipes;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.modulesSet;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.modules;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.entryComponentsSet;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.entryComponents;\n/** @type {?} */\nTransitiveCompileNgModuleMetadata.prototype.providers;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj: any[] | undefined | null): any[] {\n  return obj || [];\n}\nexport class ProviderMeta {\n  token: any;\n  useClass: Type<any>|null;\n  useValue: any;\n  useExisting: any;\n  useFactory: Function|null;\n  dependencies: Object[]|null;\n  multi: boolean;\n/**\n * @param {?} token\n * @param {?} __1\n */\nconstructor(token: any, {useClass, useValue, useExisting, useFactory, deps, multi}: {\n    useClass?: Type<any>,\n    useValue?: any,\n    useExisting?: any,\n    useFactory?: Function|null,\n    deps?: Object[]|null,\n    multi?: boolean\n  }) {\n    this.token = token;\n    this.useClass = useClass || null;\n    this.useValue = useValue;\n    this.useExisting = useExisting;\n    this.useFactory = useFactory || null;\n    this.dependencies = deps || null;\n    this.multi = !!multi;\n  }\n}\n\nfunction ProviderMeta_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderMeta.prototype.token;\n/** @type {?} */\nProviderMeta.prototype.useClass;\n/** @type {?} */\nProviderMeta.prototype.useValue;\n/** @type {?} */\nProviderMeta.prototype.useExisting;\n/** @type {?} */\nProviderMeta.prototype.useFactory;\n/** @type {?} */\nProviderMeta.prototype.dependencies;\n/** @type {?} */\nProviderMeta.prototype.multi;\n}\n\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nexport function flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n    return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n  }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nexport function sourceUrl(url: string) {\n  // Note: We need 3 \"/\" so that ng shows up as a separate domain\n  // in the chrome dev tools.\n  return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nexport function templateSourceUrl(\n    ngModuleType: CompileIdentifierMetadata, compMeta: {type: CompileIdentifierMetadata},\n    templateMeta: {isInline: boolean, templateUrl: string | null}) {\n  let /** @type {?} */ url: string;\n  if (templateMeta.isInline) {\n    if (compMeta.type.reference instanceof StaticSymbol) {\n      // Note: a .ts file might contain multiple components with inline templates,\n      // so we need to give them unique urls, as these will be used for sourcemaps.\n      url = `${compMeta.type.reference.filePath}.${compMeta.type.reference.name}.html`;\n    } else {\n      url = `${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.html`;\n    }\n  } else {\n    url = /** @type {?} */(( templateMeta.templateUrl));\n  }\n  // always prepend ng:// to make angular resources easy to find and not clobber\n  // user resources.\n  return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nexport function sharedStylesheetJitUrl(meta: CompileStylesheetMetadata, id: number) {\n  const /** @type {?} */ pathParts = /** @type {?} */(( meta.moduleUrl)).split(/\\/\\\\/g);\n  const /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n  return sourceUrl(`css/${id}${baseName}.ngstyle.js`);\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nexport function ngModuleJitUrl(moduleMeta: CompileNgModuleMetadata): string {\n  return sourceUrl(`${identifierName(moduleMeta.type)}/module.ngfactory.js`);\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nexport function templateJitUrl(\n    ngModuleType: CompileIdentifierMetadata, compMeta: CompileDirectiveMetadata): string {\n  return sourceUrl(`${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.ngfactory.js`);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component} from '@angular/core';\nimport * as o from './output/output_ast';\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nexport abstract class CompileReflector {\n  abstract parameters(typeOrFunc: /*Type*/ any): any[][];\n  abstract annotations(typeOrFunc: /*Type*/ any): any[];\n  abstract propMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]};\n  abstract hasLifecycleHook(type: any, lcProperty: string): boolean;\n  abstract componentModuleUrl(type: /*Type*/ any, cmpMetadata: Component): string;\n  abstract resolveExternalReference(ref: o.ExternalReference): any;\n}\n\nfunction CompileReflector_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nCompileReflector.prototype.parameters = function(typeOrFunc) {};\n\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nCompileReflector.prototype.annotations = function(typeOrFunc) {};\n\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nCompileReflector.prototype.propMetadata = function(typeOrFunc) {};\n\n/**\n * @abstract\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nCompileReflector.prototype.hasLifecycleHook = function(type, lcProperty) {};\n\n/**\n * @abstract\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\nCompileReflector.prototype.componentModuleUrl = function(type, cmpMetadata) {};\n\n/**\n * @abstract\n * @param {?} ref\n * @return {?}\n */\nCompileReflector.prototype.resolveExternalReference = function(ref) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, MissingTranslationStrategy, ViewEncapsulation, isDevMode} from '@angular/core';\n\nimport {CompileIdentifierMetadata} from './compile_metadata';\nimport {Identifiers} from './identifiers';\nexport class CompilerConfig {\npublic defaultEncapsulation: ViewEncapsulation|null;\npublic enableLegacyTemplate: boolean;\npublic useJit: boolean;\npublic missingTranslation: MissingTranslationStrategy|null;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {defaultEncapsulation = ViewEncapsulation.Emulated, useJit = true, missingTranslation,\n       enableLegacyTemplate}: {\n        defaultEncapsulation?: ViewEncapsulation,\n        useJit?: boolean,\n        missingTranslation?: MissingTranslationStrategy,\n        enableLegacyTemplate?: boolean,\n      } = {}) {\n    this.defaultEncapsulation = defaultEncapsulation;\n    this.useJit = !!useJit;\n    this.missingTranslation = missingTranslation || null;\n    this.enableLegacyTemplate = enableLegacyTemplate !== false;\n  }\n}\n\nfunction CompilerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nCompilerConfig.prototype.defaultEncapsulation;\n/** @type {?} */\nCompilerConfig.prototype.enableLegacyTemplate;\n/** @type {?} */\nCompilerConfig.prototype.useJit;\n/** @type {?} */\nCompilerConfig.prototype.missingTranslation;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class ParserError {\npublic message: string;\n/**\n * @param {?} message\n * @param {?} input\n * @param {?} errLocation\n * @param {?=} ctxLocation\n */\nconstructor(\n      message: string,\npublic input: string,\npublic errLocation: string,\npublic ctxLocation?: any) {\n    this.message = `Parser Error: ${message} ${errLocation} [${input}] in ${ctxLocation}`;\n  }\n}\n\nfunction ParserError_tsickle_Closure_declarations() {\n/** @type {?} */\nParserError.prototype.message;\n/** @type {?} */\nParserError.prototype.input;\n/** @type {?} */\nParserError.prototype.errLocation;\n/** @type {?} */\nParserError.prototype.ctxLocation;\n}\n\nexport class ParseSpan {\n/**\n * @param {?} start\n * @param {?} end\n */\nconstructor(public start: number,\npublic end: number) {}\n}\n\nfunction ParseSpan_tsickle_Closure_declarations() {\n/** @type {?} */\nParseSpan.prototype.start;\n/** @type {?} */\nParseSpan.prototype.end;\n}\n\nexport class AST {\n/**\n * @param {?} span\n */\nconstructor(public span: ParseSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return null; }\n/**\n * @return {?}\n */\ntoString(): string { return 'AST'; }\n}\n\nfunction AST_tsickle_Closure_declarations() {\n/** @type {?} */\nAST.prototype.span;\n}\n\n/**\n * Represents a quoted expression of the form:\n * \n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n * \n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nexport class Quote extends AST {\n/**\n * @param {?} span\n * @param {?} prefix\n * @param {?} uninterpretedExpression\n * @param {?} location\n */\nconstructor(\n      span: ParseSpan,\npublic prefix: string,\npublic uninterpretedExpression: string,\npublic location: any) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitQuote(this, context); }\n/**\n * @return {?}\n */\ntoString(): string { return 'Quote'; }\n}\n\nfunction Quote_tsickle_Closure_declarations() {\n/** @type {?} */\nQuote.prototype.prefix;\n/** @type {?} */\nQuote.prototype.uninterpretedExpression;\n/** @type {?} */\nQuote.prototype.location;\n}\n\nexport class EmptyExpr extends AST {\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null) {\n    // do nothing\n  }\n}\nexport class ImplicitReceiver extends AST {\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitImplicitReceiver(this, context);\n  }\n}\n/**\n * Multiple expressions separated by a semicolon.\n */\nexport class Chain extends AST {\n/**\n * @param {?} span\n * @param {?} expressions\n */\nconstructor(span: ParseSpan,\npublic expressions: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitChain(this, context); }\n}\n\nfunction Chain_tsickle_Closure_declarations() {\n/** @type {?} */\nChain.prototype.expressions;\n}\n\nexport class Conditional extends AST {\n/**\n * @param {?} span\n * @param {?} condition\n * @param {?} trueExp\n * @param {?} falseExp\n */\nconstructor(span: ParseSpan,\npublic condition: AST,\npublic trueExp: AST,\npublic falseExp: AST) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitConditional(this, context);\n  }\n}\n\nfunction Conditional_tsickle_Closure_declarations() {\n/** @type {?} */\nConditional.prototype.condition;\n/** @type {?} */\nConditional.prototype.trueExp;\n/** @type {?} */\nConditional.prototype.falseExp;\n}\n\nexport class PropertyRead extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyRead(this, context);\n  }\n}\n\nfunction PropertyRead_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyRead.prototype.receiver;\n/** @type {?} */\nPropertyRead.prototype.name;\n}\n\nexport class PropertyWrite extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n * @param {?} value\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string,\npublic value: AST) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPropertyWrite(this, context);\n  }\n}\n\nfunction PropertyWrite_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyWrite.prototype.receiver;\n/** @type {?} */\nPropertyWrite.prototype.name;\n/** @type {?} */\nPropertyWrite.prototype.value;\n}\n\nexport class SafePropertyRead extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafePropertyRead(this, context);\n  }\n}\n\nfunction SafePropertyRead_tsickle_Closure_declarations() {\n/** @type {?} */\nSafePropertyRead.prototype.receiver;\n/** @type {?} */\nSafePropertyRead.prototype.name;\n}\n\nexport class KeyedRead extends AST {\n/**\n * @param {?} span\n * @param {?} obj\n * @param {?} key\n */\nconstructor(span: ParseSpan,\npublic obj: AST,\npublic key: AST) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedRead(this, context);\n  }\n}\n\nfunction KeyedRead_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyedRead.prototype.obj;\n/** @type {?} */\nKeyedRead.prototype.key;\n}\n\nexport class KeyedWrite extends AST {\n/**\n * @param {?} span\n * @param {?} obj\n * @param {?} key\n * @param {?} value\n */\nconstructor(span: ParseSpan,\npublic obj: AST,\npublic key: AST,\npublic value: AST) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitKeyedWrite(this, context);\n  }\n}\n\nfunction KeyedWrite_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyedWrite.prototype.obj;\n/** @type {?} */\nKeyedWrite.prototype.key;\n/** @type {?} */\nKeyedWrite.prototype.value;\n}\n\nexport class BindingPipe extends AST {\n/**\n * @param {?} span\n * @param {?} exp\n * @param {?} name\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic exp: AST,\npublic name: string,\npublic args: any[]) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return visitor.visitPipe(this, context); }\n}\n\nfunction BindingPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingPipe.prototype.exp;\n/** @type {?} */\nBindingPipe.prototype.name;\n/** @type {?} */\nBindingPipe.prototype.args;\n}\n\nexport class LiteralPrimitive extends AST {\n/**\n * @param {?} span\n * @param {?} value\n */\nconstructor(span: ParseSpan,\npublic value: any) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralPrimitive(this, context);\n  }\n}\n\nfunction LiteralPrimitive_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralPrimitive.prototype.value;\n}\n\nexport class LiteralArray extends AST {\n/**\n * @param {?} span\n * @param {?} expressions\n */\nconstructor(span: ParseSpan,\npublic expressions: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralArray(this, context);\n  }\n}\n\nfunction LiteralArray_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralArray.prototype.expressions;\n}\n\n\nexport type LiteralMapKey = {\n  key: string; quoted: boolean;\n};\nexport class LiteralMap extends AST {\n/**\n * @param {?} span\n * @param {?} keys\n * @param {?} values\n */\nconstructor(span: ParseSpan,\npublic keys: LiteralMapKey[],\npublic values: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitLiteralMap(this, context);\n  }\n}\n\nfunction LiteralMap_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralMap.prototype.keys;\n/** @type {?} */\nLiteralMap.prototype.values;\n}\n\nexport class Interpolation extends AST {\n/**\n * @param {?} span\n * @param {?} strings\n * @param {?} expressions\n */\nconstructor(span: ParseSpan,\npublic strings: any[],\npublic expressions: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitInterpolation(this, context);\n  }\n}\n\nfunction Interpolation_tsickle_Closure_declarations() {\n/** @type {?} */\nInterpolation.prototype.strings;\n/** @type {?} */\nInterpolation.prototype.expressions;\n}\n\nexport class Binary extends AST {\n/**\n * @param {?} span\n * @param {?} operation\n * @param {?} left\n * @param {?} right\n */\nconstructor(span: ParseSpan,\npublic operation: string,\npublic left: AST,\npublic right: AST) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitBinary(this, context);\n  }\n}\n\nfunction Binary_tsickle_Closure_declarations() {\n/** @type {?} */\nBinary.prototype.operation;\n/** @type {?} */\nBinary.prototype.left;\n/** @type {?} */\nBinary.prototype.right;\n}\n\nexport class PrefixNot extends AST {\n/**\n * @param {?} span\n * @param {?} expression\n */\nconstructor(span: ParseSpan,\npublic expression: AST) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitPrefixNot(this, context);\n  }\n}\n\nfunction PrefixNot_tsickle_Closure_declarations() {\n/** @type {?} */\nPrefixNot.prototype.expression;\n}\n\nexport class NonNullAssert extends AST {\n/**\n * @param {?} span\n * @param {?} expression\n */\nconstructor(span: ParseSpan,\npublic expression: AST) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitNonNullAssert(this, context);\n  }\n}\n\nfunction NonNullAssert_tsickle_Closure_declarations() {\n/** @type {?} */\nNonNullAssert.prototype.expression;\n}\n\nexport class MethodCall extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string,\npublic args: any[]) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitMethodCall(this, context);\n  }\n}\n\nfunction MethodCall_tsickle_Closure_declarations() {\n/** @type {?} */\nMethodCall.prototype.receiver;\n/** @type {?} */\nMethodCall.prototype.name;\n/** @type {?} */\nMethodCall.prototype.args;\n}\n\nexport class SafeMethodCall extends AST {\n/**\n * @param {?} span\n * @param {?} receiver\n * @param {?} name\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic receiver: AST,\npublic name: string,\npublic args: any[]) {\n    super(span);\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitSafeMethodCall(this, context);\n  }\n}\n\nfunction SafeMethodCall_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeMethodCall.prototype.receiver;\n/** @type {?} */\nSafeMethodCall.prototype.name;\n/** @type {?} */\nSafeMethodCall.prototype.args;\n}\n\nexport class FunctionCall extends AST {\n/**\n * @param {?} span\n * @param {?} target\n * @param {?} args\n */\nconstructor(span: ParseSpan,\npublic target: AST|null,\npublic args: any[]) { super(span); }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any {\n    return visitor.visitFunctionCall(this, context);\n  }\n}\n\nfunction FunctionCall_tsickle_Closure_declarations() {\n/** @type {?} */\nFunctionCall.prototype.target;\n/** @type {?} */\nFunctionCall.prototype.args;\n}\n\nexport class ASTWithSource extends AST {\n/**\n * @param {?} ast\n * @param {?} source\n * @param {?} location\n * @param {?} errors\n */\nconstructor(\npublic ast: AST,\npublic source: string|null,\npublic location: string,\npublic errors: ParserError[]) {\n    super(new ParseSpan(0, source == null ? 0 : source.length));\n  }\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: AstVisitor, context: any = null): any { return this.ast.visit(visitor, context); }\n/**\n * @return {?}\n */\ntoString(): string { return `${this.source} in ${this.location}`; }\n}\n\nfunction ASTWithSource_tsickle_Closure_declarations() {\n/** @type {?} */\nASTWithSource.prototype.ast;\n/** @type {?} */\nASTWithSource.prototype.source;\n/** @type {?} */\nASTWithSource.prototype.location;\n/** @type {?} */\nASTWithSource.prototype.errors;\n}\n\nexport class TemplateBinding {\n/**\n * @param {?} span\n * @param {?} key\n * @param {?} keyIsVar\n * @param {?} name\n * @param {?} expression\n */\nconstructor(\npublic span: ParseSpan,\npublic key: string,\npublic keyIsVar: boolean,\npublic name: string,\npublic expression: ASTWithSource) {}\n}\n\nfunction TemplateBinding_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateBinding.prototype.span;\n/** @type {?} */\nTemplateBinding.prototype.key;\n/** @type {?} */\nTemplateBinding.prototype.keyIsVar;\n/** @type {?} */\nTemplateBinding.prototype.name;\n/** @type {?} */\nTemplateBinding.prototype.expression;\n}\n\n/**\n * @record\n */\nexport function AstVisitor() {}\n\n\nfunction AstVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nAstVisitor.prototype.visitBinary;\n/** @type {?} */\nAstVisitor.prototype.visitChain;\n/** @type {?} */\nAstVisitor.prototype.visitConditional;\n/** @type {?} */\nAstVisitor.prototype.visitFunctionCall;\n/** @type {?} */\nAstVisitor.prototype.visitImplicitReceiver;\n/** @type {?} */\nAstVisitor.prototype.visitInterpolation;\n/** @type {?} */\nAstVisitor.prototype.visitKeyedRead;\n/** @type {?} */\nAstVisitor.prototype.visitKeyedWrite;\n/** @type {?} */\nAstVisitor.prototype.visitLiteralArray;\n/** @type {?} */\nAstVisitor.prototype.visitLiteralMap;\n/** @type {?} */\nAstVisitor.prototype.visitLiteralPrimitive;\n/** @type {?} */\nAstVisitor.prototype.visitMethodCall;\n/** @type {?} */\nAstVisitor.prototype.visitPipe;\n/** @type {?} */\nAstVisitor.prototype.visitPrefixNot;\n/** @type {?} */\nAstVisitor.prototype.visitNonNullAssert;\n/** @type {?} */\nAstVisitor.prototype.visitPropertyRead;\n/** @type {?} */\nAstVisitor.prototype.visitPropertyWrite;\n/** @type {?} */\nAstVisitor.prototype.visitQuote;\n/** @type {?} */\nAstVisitor.prototype.visitSafeMethodCall;\n/** @type {?} */\nAstVisitor.prototype.visitSafePropertyRead;\n/** @type {?|undefined} */\nAstVisitor.prototype.visit;\n}\n\n\nexport interface AstVisitor {\n  visitBinary(ast: Binary, context: any): any;\n  visitChain(ast: Chain, context: any): any;\n  visitConditional(ast: Conditional, context: any): any;\n  visitFunctionCall(ast: FunctionCall, context: any): any;\n  visitImplicitReceiver(ast: ImplicitReceiver, context: any): any;\n  visitInterpolation(ast: Interpolation, context: any): any;\n  visitKeyedRead(ast: KeyedRead, context: any): any;\n  visitKeyedWrite(ast: KeyedWrite, context: any): any;\n  visitLiteralArray(ast: LiteralArray, context: any): any;\n  visitLiteralMap(ast: LiteralMap, context: any): any;\n  visitLiteralPrimitive(ast: LiteralPrimitive, context: any): any;\n  visitMethodCall(ast: MethodCall, context: any): any;\n  visitPipe(ast: BindingPipe, context: any): any;\n  visitPrefixNot(ast: PrefixNot, context: any): any;\n  visitNonNullAssert(ast: NonNullAssert, context: any): any;\n  visitPropertyRead(ast: PropertyRead, context: any): any;\n  visitPropertyWrite(ast: PropertyWrite, context: any): any;\n  visitQuote(ast: Quote, context: any): any;\n  visitSafeMethodCall(ast: SafeMethodCall, context: any): any;\n  visitSafePropertyRead(ast: SafePropertyRead, context: any): any;\n  visit?(ast: AST, context?: any): any;\n}\nexport class NullAstVisitor implements AstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNonNullAssert(ast: NonNullAssert, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any): any {}\n}\nexport class RecursiveAstVisitor implements AstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any): any {\n    ast.left.visit(this);\n    ast.right.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any): any { return this.visitAll(ast.expressions, context); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any): any {\n    ast.condition.visit(this);\n    ast.trueExp.visit(this);\n    ast.falseExp.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): any {\n    ast.exp.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any): any { /** @type {?} */((\n    ast.target)).visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any): any {\n    ast.obj.visit(this);\n    ast.key.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any): any {\n    ast.obj.visit(this);\n    ast.key.visit(this);\n    ast.value.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any): any {\n    return this.visitAll(ast.expressions, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any): any { return this.visitAll(ast.values, context); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any): any {\n    ast.receiver.visit(this);\n    return this.visitAll(ast.args, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any): any {\n    ast.expression.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNonNullAssert(ast: NonNullAssert, context: any): any {\n    ast.expression.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any): any {\n    ast.receiver.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any): any {\n    ast.receiver.visit(this);\n    ast.value.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any): any {\n    ast.receiver.visit(this);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any): any {\n    ast.receiver.visit(this);\n    return this.visitAll(ast.args, context);\n  }\n/**\n * @param {?} asts\n * @param {?} context\n * @return {?}\n */\nvisitAll(asts: AST[], context: any): any {\n    asts.forEach(ast => ast.visit(this, context));\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any): any { return null; }\n}\nexport class AstTransformer implements AstVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any): AST { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any): AST {\n    return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any): AST {\n    return new LiteralPrimitive(ast.span, ast.value);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any): AST {\n    return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any): AST {\n    return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any): AST {\n    return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any): AST {\n    return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any): AST {\n    return new SafeMethodCall(\n        ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any): AST {\n    return new FunctionCall(ast.span, /** @type {?} */(( ast.target)).visit(this), this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any): AST {\n    return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any): AST {\n    return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any): AST {\n    return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any): AST {\n    return new PrefixNot(ast.span, ast.expression.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNonNullAssert(ast: NonNullAssert, context: any): AST {\n    return new NonNullAssert(ast.span, ast.expression.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any): AST {\n    return new Conditional(\n        ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): AST {\n    return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any): AST {\n    return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any): AST {\n    return new KeyedWrite(\n        ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n  }\n/**\n * @param {?} asts\n * @return {?}\n */\nvisitAll(asts: any[]): any[] {\n    const /** @type {?} */ res = new Array(asts.length);\n    for (let /** @type {?} */ i = 0; i < asts.length; ++i) {\n      res[i] = asts[i].visit(this);\n    }\n    return res;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any): AST {\n    return new Chain(ast.span, this.visitAll(ast.expressions));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any): AST {\n    return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n  }\n}\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nexport function visitAstChildren(ast: AST, visitor: AstVisitor, context?: any) {\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction visit(ast: AST) {\n    visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n  }\n/**\n * @template T\n * @param {?} asts\n * @return {?}\n */\nfunction visitAll<T extends AST>(asts: T[]) { asts.forEach(visit); }\n\n  ast.visit({\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitBinary(ast) {\n      visit(ast.left);\n      visit(ast.right);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitChain(ast) { visitAll(ast.expressions); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitConditional(ast) {\n      visit(ast.condition);\n      visit(ast.trueExp);\n      visit(ast.falseExp);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitFunctionCall(ast) {\n      if (ast.target) {\n        visit(ast.target);\n      }\n      visitAll(ast.args);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitImplicitReceiver(ast) {},\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitInterpolation(ast) { visitAll(ast.expressions); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitKeyedRead(ast) {\n      visit(ast.obj);\n      visit(ast.key);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitKeyedWrite(ast) {\n      visit(ast.obj);\n      visit(ast.key);\n      visit(ast.obj);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralArray(ast) { visitAll(ast.expressions); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralMap(ast) {},\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralPrimitive(ast) {},\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitMethodCall(ast) {\n      visit(ast.receiver);\n      visitAll(ast.args);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPipe(ast) {\n      visit(ast.exp);\n      visitAll(ast.args);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPrefixNot(ast) { visit(ast.expression); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitNonNullAssert(ast) { visit(ast.expression); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPropertyRead(ast) { visit(ast.receiver); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPropertyWrite(ast) {\n      visit(ast.receiver);\n      visit(ast.value);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitQuote(ast) {},\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitSafeMethodCall(ast) {\n      visit(ast.receiver);\n      visitAll(ast.args);\n    },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitSafePropertyRead(ast) { visit(ast.receiver); },\n  });\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const /** @type {?} */ $EOF = 0;\nexport const /** @type {?} */ $TAB = 9;\nexport const /** @type {?} */ $LF = 10;\nexport const /** @type {?} */ $VTAB = 11;\nexport const /** @type {?} */ $FF = 12;\nexport const /** @type {?} */ $CR = 13;\nexport const /** @type {?} */ $SPACE = 32;\nexport const /** @type {?} */ $BANG = 33;\nexport const /** @type {?} */ $DQ = 34;\nexport const /** @type {?} */ $HASH = 35;\nexport const /** @type {?} */ $$ = 36;\nexport const /** @type {?} */ $PERCENT = 37;\nexport const /** @type {?} */ $AMPERSAND = 38;\nexport const /** @type {?} */ $SQ = 39;\nexport const /** @type {?} */ $LPAREN = 40;\nexport const /** @type {?} */ $RPAREN = 41;\nexport const /** @type {?} */ $STAR = 42;\nexport const /** @type {?} */ $PLUS = 43;\nexport const /** @type {?} */ $COMMA = 44;\nexport const /** @type {?} */ $MINUS = 45;\nexport const /** @type {?} */ $PERIOD = 46;\nexport const /** @type {?} */ $SLASH = 47;\nexport const /** @type {?} */ $COLON = 58;\nexport const /** @type {?} */ $SEMICOLON = 59;\nexport const /** @type {?} */ $LT = 60;\nexport const /** @type {?} */ $EQ = 61;\nexport const /** @type {?} */ $GT = 62;\nexport const /** @type {?} */ $QUESTION = 63;\n\nexport const /** @type {?} */ $0 = 48;\nexport const /** @type {?} */ $9 = 57;\n\nexport const /** @type {?} */ $A = 65;\nexport const /** @type {?} */ $E = 69;\nexport const /** @type {?} */ $F = 70;\nexport const /** @type {?} */ $X = 88;\nexport const /** @type {?} */ $Z = 90;\n\nexport const /** @type {?} */ $LBRACKET = 91;\nexport const /** @type {?} */ $BACKSLASH = 92;\nexport const /** @type {?} */ $RBRACKET = 93;\nexport const /** @type {?} */ $CARET = 94;\nexport const /** @type {?} */ $_ = 95;\n\nexport const /** @type {?} */ $a = 97;\nexport const /** @type {?} */ $e = 101;\nexport const /** @type {?} */ $f = 102;\nexport const /** @type {?} */ $n = 110;\nexport const /** @type {?} */ $r = 114;\nexport const /** @type {?} */ $t = 116;\nexport const /** @type {?} */ $u = 117;\nexport const /** @type {?} */ $v = 118;\nexport const /** @type {?} */ $x = 120;\nexport const /** @type {?} */ $z = 122;\n\nexport const /** @type {?} */ $LBRACE = 123;\nexport const /** @type {?} */ $BAR = 124;\nexport const /** @type {?} */ $RBRACE = 125;\nexport const /** @type {?} */ $NBSP = 160;\n\nexport const /** @type {?} */ $PIPE = 124;\nexport const /** @type {?} */ $TILDA = 126;\nexport const /** @type {?} */ $AT = 64;\n\nexport const /** @type {?} */ $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isWhitespace(code: number): boolean {\n  return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isDigit(code: number): boolean {\n  return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiLetter(code: number): boolean {\n  return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiHexDigit(code: number): boolean {\n  return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nexport function CompilerInjectable(): (data: any) => any {\n  return (x) => x;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '@angular/core';\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nexport function assertArrayOfStrings(identifier: string, value: any) {\n  if (!isDevMode() || value == null) {\n    return;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected '${identifier}' to be an array of strings.`);\n  }\n  for (let /** @type {?} */ i = 0; i < value.length; i += 1) {\n    if (typeof value[i] !== 'string') {\n      throw new Error(`Expected '${identifier}' to be an array of strings.`);\n    }\n  }\n}\n\nconst /** @type {?} */ INTERPOLATION_BLACKLIST_REGEXPS = [\n  /^\\s*$/,        // empty\n  /[<>]/,         // html tag\n  /^[{}]$/,       // i18n expansion\n  /&(#|[a-z])/i,  // character reference,\n  /^\\/\\//,        // comment\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nexport function assertInterpolationSymbols(identifier: string, value: any): void {\n  if (value != null && !(Array.isArray(value) && value.length == 2)) {\n    throw new Error(`Expected '${identifier}' to be an array, [start, end].`);\n  } else if (isDevMode() && value != null) {\n    const /** @type {?} */ start = /** @type {?} */(( value[0] as string));\n    const /** @type {?} */ end = /** @type {?} */(( value[1] as string));\n    // black list checking\n    INTERPOLATION_BLACKLIST_REGEXPS.forEach(regexp => {\n      if (regexp.test(start) || regexp.test(end)) {\n        throw new Error(`['${start}', '${end}'] contains unusable interpolation symbol.`);\n      }\n    });\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertInterpolationSymbols} from '../assertions';\nexport class InterpolationConfig {\n/**\n * @param {?} markers\n * @return {?}\n */\nstatic fromArray(markers: [string, string]|null): InterpolationConfig {\n    if (!markers) {\n      return DEFAULT_INTERPOLATION_CONFIG;\n    }\n\n    assertInterpolationSymbols('interpolation', markers);\n    return new InterpolationConfig(markers[0], markers[1]);\n  }\n/**\n * @param {?} start\n * @param {?} end\n */\nconstructor(public start: string,\npublic end: string){};\n}\n\nfunction InterpolationConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nInterpolationConfig.prototype.start;\n/** @type {?} */\nInterpolationConfig.prototype.end;\n}\n\n\nexport const /** @type {?} */ DEFAULT_INTERPOLATION_CONFIG: InterpolationConfig =\n    new InterpolationConfig('{{', '}}');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\nimport {CompilerInjectable} from '../injectable';\nexport type TokenType = number;\nexport let TokenType: any = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\n\n\nconst /** @type {?} */ KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nexport class Lexer {\n/**\n * @param {?} text\n * @return {?}\n */\ntokenize(text: string): Token[] {\n    const /** @type {?} */ scanner = new _Scanner(text);\n    const /** @type {?} */ tokens: Token[] = [];\n    let /** @type {?} */ token = scanner.scanToken();\n    while (token != null) {\n      tokens.push(token);\n      token = scanner.scanToken();\n    }\n    return tokens;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction Lexer_tsickle_Closure_declarations() {\n/** @type {?} */\nLexer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLexer.ctorParameters;\n}\n\nexport class Token {\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} numValue\n * @param {?} strValue\n */\nconstructor(\npublic index: number,\npublic type: TokenType,\npublic numValue: number,\npublic strValue: string) {}\n/**\n * @param {?} code\n * @return {?}\n */\nisCharacter(code: number): boolean {\n    return this.type == TokenType.Character && this.numValue == code;\n  }\n/**\n * @return {?}\n */\nisNumber(): boolean { return this.type == TokenType.Number; }\n/**\n * @return {?}\n */\nisString(): boolean { return this.type == TokenType.String; }\n/**\n * @param {?} operater\n * @return {?}\n */\nisOperator(operater: string): boolean {\n    return this.type == TokenType.Operator && this.strValue == operater;\n  }\n/**\n * @return {?}\n */\nisIdentifier(): boolean { return this.type == TokenType.Identifier; }\n/**\n * @return {?}\n */\nisKeyword(): boolean { return this.type == TokenType.Keyword; }\n/**\n * @return {?}\n */\nisKeywordLet(): boolean { return this.type == TokenType.Keyword && this.strValue == 'let'; }\n/**\n * @return {?}\n */\nisKeywordAs(): boolean { return this.type == TokenType.Keyword && this.strValue == 'as'; }\n/**\n * @return {?}\n */\nisKeywordNull(): boolean { return this.type == TokenType.Keyword && this.strValue == 'null'; }\n/**\n * @return {?}\n */\nisKeywordUndefined(): boolean {\n    return this.type == TokenType.Keyword && this.strValue == 'undefined';\n  }\n/**\n * @return {?}\n */\nisKeywordTrue(): boolean { return this.type == TokenType.Keyword && this.strValue == 'true'; }\n/**\n * @return {?}\n */\nisKeywordFalse(): boolean { return this.type == TokenType.Keyword && this.strValue == 'false'; }\n/**\n * @return {?}\n */\nisKeywordThis(): boolean { return this.type == TokenType.Keyword && this.strValue == 'this'; }\n/**\n * @return {?}\n */\nisError(): boolean { return this.type == TokenType.Error; }\n/**\n * @return {?}\n */\ntoNumber(): number { return this.type == TokenType.Number ? this.numValue : -1; }\n/**\n * @return {?}\n */\ntoString(): string|null {\n    switch (this.type) {\n      case TokenType.Character:\n      case TokenType.Identifier:\n      case TokenType.Keyword:\n      case TokenType.Operator:\n      case TokenType.String:\n      case TokenType.Error:\n        return this.strValue;\n      case TokenType.Number:\n        return this.numValue.toString();\n      default:\n        return null;\n    }\n  }\n}\n\nfunction Token_tsickle_Closure_declarations() {\n/** @type {?} */\nToken.prototype.index;\n/** @type {?} */\nToken.prototype.type;\n/** @type {?} */\nToken.prototype.numValue;\n/** @type {?} */\nToken.prototype.strValue;\n}\n\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index: number, code: number): Token {\n  return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index: number, text: string): Token {\n  return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index: number, text: string): Token {\n  return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index: number, n: number): Token {\n  return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index: number, message: string): Token {\n  return new Token(index, TokenType.Error, 0, message);\n}\n\nexport const /** @type {?} */ EOF: Token = new Token(-1, TokenType.Character, 0, '');\nclass _Scanner {\n  length: number;\n  peek: number = 0;\n  index: number = -1;\n/**\n * @param {?} input\n */\nconstructor(public input: string) {\n    this.length = input.length;\n    this.advance();\n  }\n/**\n * @return {?}\n */\nadvance() {\n    this.peek = ++this.index >= this.length ? chars.$EOF : this.input.charCodeAt(this.index);\n  }\n/**\n * @return {?}\n */\nscanToken(): Token|null {\n    const /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n    let /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n\n    // Skip whitespace.\n    while (peek <= chars.$SPACE) {\n      if (++index >= length) {\n        peek = chars.$EOF;\n        break;\n      } else {\n        peek = input.charCodeAt(index);\n      }\n    }\n\n    this.peek = peek;\n    this.index = index;\n\n    if (index >= length) {\n      return null;\n    }\n\n    // Handle identifiers and numbers.\n    if (isIdentifierStart(peek)) return this.scanIdentifier();\n    if (chars.isDigit(peek)) return this.scanNumber(index);\n\n    const /** @type {?} */ start: number = index;\n    switch (peek) {\n      case chars.$PERIOD:\n        this.advance();\n        return chars.isDigit(this.peek) ? this.scanNumber(start) :\n                                          newCharacterToken(start, chars.$PERIOD);\n      case chars.$LPAREN:\n      case chars.$RPAREN:\n      case chars.$LBRACE:\n      case chars.$RBRACE:\n      case chars.$LBRACKET:\n      case chars.$RBRACKET:\n      case chars.$COMMA:\n      case chars.$COLON:\n      case chars.$SEMICOLON:\n        return this.scanCharacter(start, peek);\n      case chars.$SQ:\n      case chars.$DQ:\n        return this.scanString();\n      case chars.$HASH:\n      case chars.$PLUS:\n      case chars.$MINUS:\n      case chars.$STAR:\n      case chars.$SLASH:\n      case chars.$PERCENT:\n      case chars.$CARET:\n        return this.scanOperator(start, String.fromCharCode(peek));\n      case chars.$QUESTION:\n        return this.scanComplexOperator(start, '?', chars.$PERIOD, '.');\n      case chars.$LT:\n      case chars.$GT:\n        return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=');\n      case chars.$BANG:\n      case chars.$EQ:\n        return this.scanComplexOperator(\n            start, String.fromCharCode(peek), chars.$EQ, '=', chars.$EQ, '=');\n      case chars.$AMPERSAND:\n        return this.scanComplexOperator(start, '&', chars.$AMPERSAND, '&');\n      case chars.$BAR:\n        return this.scanComplexOperator(start, '|', chars.$BAR, '|');\n      case chars.$NBSP:\n        while (chars.isWhitespace(this.peek)) this.advance();\n        return this.scanToken();\n    }\n\n    this.advance();\n    return this.error(`Unexpected character [${String.fromCharCode(peek)}]`, 0);\n  }\n/**\n * @param {?} start\n * @param {?} code\n * @return {?}\n */\nscanCharacter(start: number, code: number): Token {\n    this.advance();\n    return newCharacterToken(start, code);\n  }\n/**\n * @param {?} start\n * @param {?} str\n * @return {?}\n */\nscanOperator(start: number, str: string): Token {\n    this.advance();\n    return newOperatorToken(start, str);\n  }\n/**\n * Tokenize a 2/3 char long operator\n * \n * @param {?} start start index in the expression\n * @param {?} one first symbol (always part of the operator)\n * @param {?} twoCode code point for the second symbol\n * @param {?} two second symbol (part of the operator when the second code point matches)\n * @param {?=} threeCode code point for the third symbol\n * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n * @return {?}\n */\nscanComplexOperator(\n      start: number, one: string, twoCode: number, two: string, threeCode?: number,\n      three?: string): Token {\n    this.advance();\n    let /** @type {?} */ str: string = one;\n    if (this.peek == twoCode) {\n      this.advance();\n      str += two;\n    }\n    if (threeCode != null && this.peek == threeCode) {\n      this.advance();\n      str += three;\n    }\n    return newOperatorToken(start, str);\n  }\n/**\n * @return {?}\n */\nscanIdentifier(): Token {\n    const /** @type {?} */ start: number = this.index;\n    this.advance();\n    while (isIdentifierPart(this.peek)) this.advance();\n    const /** @type {?} */ str: string = this.input.substring(start, this.index);\n    return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n                                        newIdentifierToken(start, str);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nscanNumber(start: number): Token {\n    let /** @type {?} */ simple: boolean = (this.index === start);\n    this.advance();  // Skip initial digit.\n    while (true) {\n      if (chars.isDigit(this.peek)) {\n        // Do nothing.\n      } else if (this.peek == chars.$PERIOD) {\n        simple = false;\n      } else if (isExponentStart(this.peek)) {\n        this.advance();\n        if (isExponentSign(this.peek)) this.advance();\n        if (!chars.isDigit(this.peek)) return this.error('Invalid exponent', -1);\n        simple = false;\n      } else {\n        break;\n      }\n      this.advance();\n    }\n    const /** @type {?} */ str: string = this.input.substring(start, this.index);\n    const /** @type {?} */ value: number = simple ? parseIntAutoRadix(str) : parseFloat(str);\n    return newNumberToken(start, value);\n  }\n/**\n * @return {?}\n */\nscanString(): Token {\n    const /** @type {?} */ start: number = this.index;\n    const /** @type {?} */ quote: number = this.peek;\n    this.advance();  // Skip initial quote.\n\n    let /** @type {?} */ buffer: string = '';\n    let /** @type {?} */ marker: number = this.index;\n    const /** @type {?} */ input: string = this.input;\n\n    while (this.peek != quote) {\n      if (this.peek == chars.$BACKSLASH) {\n        buffer += input.substring(marker, this.index);\n        this.advance();\n        let /** @type {?} */ unescapedCode: number;\n        // Workaround for TS2.1-introduced type strictness\n        this.peek = this.peek;\n        if (this.peek == chars.$u) {\n          // 4 character hex code for unicode character.\n          const /** @type {?} */ hex: string = input.substring(this.index + 1, this.index + 5);\n          if (/^[0-9a-f]+$/i.test(hex)) {\n            unescapedCode = parseInt(hex, 16);\n          } else {\n            return this.error(`Invalid unicode escape [\\\\u${hex}]`, 0);\n          }\n          for (let /** @type {?} */ i: number = 0; i < 5; i++) {\n            this.advance();\n          }\n        } else {\n          unescapedCode = unescape(this.peek);\n          this.advance();\n        }\n        buffer += String.fromCharCode(unescapedCode);\n        marker = this.index;\n      } else if (this.peek == chars.$EOF) {\n        return this.error('Unterminated quote', 0);\n      } else {\n        this.advance();\n      }\n    }\n\n    const /** @type {?} */ last: string = input.substring(marker, this.index);\n    this.advance();  // Skip terminating quote.\n\n    return newStringToken(start, buffer + last);\n  }\n/**\n * @param {?} message\n * @param {?} offset\n * @return {?}\n */\nerror(message: string, offset: number): Token {\n    const /** @type {?} */ position: number = this.index + offset;\n    return newErrorToken(\n        position, `Lexer Error: ${message} at column ${position} in expression [${this.input}]`);\n  }\n}\n\nfunction _Scanner_tsickle_Closure_declarations() {\n/** @type {?} */\n_Scanner.prototype.length;\n/** @type {?} */\n_Scanner.prototype.peek;\n/** @type {?} */\n_Scanner.prototype.index;\n/** @type {?} */\n_Scanner.prototype.input;\n}\n\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code: number): boolean {\n  return (chars.$a <= code && code <= chars.$z) || (chars.$A <= code && code <= chars.$Z) ||\n      (code == chars.$_) || (code == chars.$$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function isIdentifier(input: string): boolean {\n  if (input.length == 0) return false;\n  const /** @type {?} */ scanner = new _Scanner(input);\n  if (!isIdentifierStart(scanner.peek)) return false;\n  scanner.advance();\n  while (scanner.peek !== chars.$EOF) {\n    if (!isIdentifierPart(scanner.peek)) return false;\n    scanner.advance();\n  }\n  return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code: number): boolean {\n  return chars.isAsciiLetter(code) || chars.isDigit(code) || (code == chars.$_) ||\n      (code == chars.$$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code: number): boolean {\n  return code == chars.$e || code == chars.$E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code: number): boolean {\n  return code == chars.$MINUS || code == chars.$PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isQuote(code: number): boolean {\n  return code === chars.$SQ || code === chars.$DQ || code === chars.$BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code: number): number {\n  switch (code) {\n    case chars.$n:\n      return chars.$LF;\n    case chars.$f:\n      return chars.$FF;\n    case chars.$r:\n      return chars.$CR;\n    case chars.$t:\n      return chars.$TAB;\n    case chars.$v:\n      return chars.$VTAB;\n    default:\n      return code;\n  }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text: string): number {\n  const /** @type {?} */ result: number = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\nimport {CompilerInjectable} from '../injectable';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {escapeRegExp} from '../util';\n\nimport {AST, ASTWithSource, AstVisitor, Binary, BindingPipe, Chain, Conditional, EmptyExpr, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralMapKey, LiteralPrimitive, MethodCall, NonNullAssert, ParseSpan, ParserError, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, TemplateBinding} from './ast';\nimport {EOF, Lexer, Token, TokenType, isIdentifier, isQuote} from './lexer';\nexport class SplitInterpolation {\n/**\n * @param {?} strings\n * @param {?} expressions\n * @param {?} offsets\n */\nconstructor(public strings: string[],\npublic expressions: string[],\npublic offsets: number[]) {}\n}\n\nfunction SplitInterpolation_tsickle_Closure_declarations() {\n/** @type {?} */\nSplitInterpolation.prototype.strings;\n/** @type {?} */\nSplitInterpolation.prototype.expressions;\n/** @type {?} */\nSplitInterpolation.prototype.offsets;\n}\n\nexport class TemplateBindingParseResult {\n/**\n * @param {?} templateBindings\n * @param {?} warnings\n * @param {?} errors\n */\nconstructor(\npublic templateBindings: TemplateBinding[],\npublic warnings: string[],\npublic errors: ParserError[]) {}\n}\n\nfunction TemplateBindingParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateBindingParseResult.prototype.templateBindings;\n/** @type {?} */\nTemplateBindingParseResult.prototype.warnings;\n/** @type {?} */\nTemplateBindingParseResult.prototype.errors;\n}\n\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config: InterpolationConfig): RegExp {\n  const /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n  return new RegExp(pattern, 'g');\n}\nexport class Parser {\nprivate errors: ParserError[] = [];\n/**\n * @param {?} _lexer\n */\nconstructor(private _lexer: Lexer) {}\n/**\n * @param {?} input\n * @param {?} location\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparseAction(\n      input: string, location: any,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource {\n    this._checkNoInterpolation(input, location, interpolationConfig);\n    const /** @type {?} */ sourceToLex = this._stripComments(input);\n    const /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n    const /** @type {?} */ ast = new _ParseAST(\n                    input, location, tokens, sourceToLex.length, true, this.errors,\n                    input.length - sourceToLex.length)\n                    .parseChain();\n    return new ASTWithSource(ast, input, location, this.errors);\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparseBinding(\n      input: string, location: any,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource {\n    const /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n    return new ASTWithSource(ast, input, location, this.errors);\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparseSimpleBinding(\n      input: string, location: string,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource {\n    const /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n    const /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n    if (errors.length > 0) {\n      this._reportError(\n          `Host binding expression cannot contain ${errors.join(' ')}`, input, location);\n    }\n    return new ASTWithSource(ast, input, location, this.errors);\n  }\n/**\n * @param {?} message\n * @param {?} input\n * @param {?} errLocation\n * @param {?=} ctxLocation\n * @return {?}\n */\n\nprivate _reportError(message: string, input: string, errLocation: string, ctxLocation?: any) {\n    this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @param {?} interpolationConfig\n * @return {?}\n */\n\nprivate _parseBindingAst(\n      input: string, location: string, interpolationConfig: InterpolationConfig): AST {\n    // Quotes expressions use 3rd-party expression language. We don't want to use\n    // our lexer or parser for that, so we check for that ahead of time.\n    const /** @type {?} */ quote = this._parseQuote(input, location);\n\n    if (quote != null) {\n      return quote;\n    }\n\n    this._checkNoInterpolation(input, location, interpolationConfig);\n    const /** @type {?} */ sourceToLex = this._stripComments(input);\n    const /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n    return new _ParseAST(\n               input, location, tokens, sourceToLex.length, false, this.errors,\n               input.length - sourceToLex.length)\n        .parseChain();\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @return {?}\n */\n\nprivate _parseQuote(input: string|null, location: any): AST|null {\n    if (input == null) return null;\n    const /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n    if (prefixSeparatorIndex == -1) return null;\n    const /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n    if (!isIdentifier(prefix)) return null;\n    const /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n    return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n  }\n/**\n * @param {?} prefixToken\n * @param {?} input\n * @param {?} location\n * @return {?}\n */\nparseTemplateBindings(prefixToken: string|null, input: string, location: any):\n      TemplateBindingParseResult {\n    const /** @type {?} */ tokens = this._lexer.tokenize(input);\n    if (prefixToken) {\n      // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n      const /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(t => {\n        t.index = 0;\n        return t;\n      });\n      tokens.unshift(...prefixTokens);\n    }\n    return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n        .parseTemplateBindings();\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparseInterpolation(\n      input: string, location: any,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ASTWithSource|null {\n    const /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n    if (split == null) return null;\n\n    const /** @type {?} */ expressions: AST[] = [];\n\n    for (let /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n      const /** @type {?} */ expressionText = split.expressions[i];\n      const /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n      const /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n      const /** @type {?} */ ast = new _ParseAST(\n                      input, location, tokens, sourceToLex.length, false, this.errors,\n                      split.offsets[i] + (expressionText.length - sourceToLex.length))\n                      .parseChain();\n      expressions.push(ast);\n    }\n\n    return new ASTWithSource(\n        new Interpolation(\n            new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions),\n        input, location, this.errors);\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @param {?=} interpolationConfig\n * @return {?}\n */\nsplitInterpolation(\n      input: string, location: string,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): SplitInterpolation\n      |null {\n    const /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n    const /** @type {?} */ parts = input.split(regexp);\n    if (parts.length <= 1) {\n      return null;\n    }\n    const /** @type {?} */ strings: string[] = [];\n    const /** @type {?} */ expressions: string[] = [];\n    const /** @type {?} */ offsets: number[] = [];\n    let /** @type {?} */ offset = 0;\n    for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n      const /** @type {?} */ part: string = parts[i];\n      if (i % 2 === 0) {\n        // fixed string\n        strings.push(part);\n        offset += part.length;\n      } else if (part.trim().length > 0) {\n        offset += interpolationConfig.start.length;\n        expressions.push(part);\n        offsets.push(offset);\n        offset += part.length + interpolationConfig.end.length;\n      } else {\n        this._reportError(\n            'Blank expressions are not allowed in interpolated strings', input,\n            `at column ${this._findInterpolationErrorColumn(parts, i, interpolationConfig)} in`,\n            location);\n        expressions.push('$implict');\n        offsets.push(offset);\n      }\n    }\n    return new SplitInterpolation(strings, expressions, offsets);\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @return {?}\n */\nwrapLiteralPrimitive(input: string|null, location: any): ASTWithSource {\n    return new ASTWithSource(\n        new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input,\n        location, this.errors);\n  }\n/**\n * @param {?} input\n * @return {?}\n */\n\nprivate _stripComments(input: string): string {\n    const /** @type {?} */ i = this._commentStart(input);\n    return i != null ? input.substring(0, i).trim() : input;\n  }\n/**\n * @param {?} input\n * @return {?}\n */\n\nprivate _commentStart(input: string): number|null {\n    let /** @type {?} */ outerQuote: number|null = null;\n    for (let /** @type {?} */ i = 0; i < input.length - 1; i++) {\n      const /** @type {?} */ char = input.charCodeAt(i);\n      const /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n\n      if (char === chars.$SLASH && nextChar == chars.$SLASH && outerQuote == null) return i;\n\n      if (outerQuote === char) {\n        outerQuote = null;\n      } else if (outerQuote == null && isQuote(char)) {\n        outerQuote = char;\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} input\n * @param {?} location\n * @param {?} interpolationConfig\n * @return {?}\n */\n\nprivate _checkNoInterpolation(\n      input: string, location: any, interpolationConfig: InterpolationConfig): void {\n    const /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n    const /** @type {?} */ parts = input.split(regexp);\n    if (parts.length > 1) {\n      this._reportError(\n          `Got interpolation (${interpolationConfig.start}${interpolationConfig.end}) where expression was expected`,\n          input,\n          `at column ${this._findInterpolationErrorColumn(parts, 1, interpolationConfig)} in`,\n          location);\n    }\n  }\n/**\n * @param {?} parts\n * @param {?} partInErrIdx\n * @param {?} interpolationConfig\n * @return {?}\n */\n\nprivate _findInterpolationErrorColumn(\n      parts: string[], partInErrIdx: number, interpolationConfig: InterpolationConfig): number {\n    let /** @type {?} */ errLocation = '';\n    for (let /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n      errLocation += j % 2 === 0 ?\n          parts[j] :\n          `${interpolationConfig.start}${parts[j]}${interpolationConfig.end}`;\n    }\n\n    return errLocation.length;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Lexer, },\n];\n}\n\nfunction Parser_tsickle_Closure_declarations() {\n/** @type {?} */\nParser.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nParser.ctorParameters;\n/** @type {?} */\nParser.prototype.errors;\n/** @type {?} */\nParser.prototype._lexer;\n}\n\nexport class _ParseAST {\nprivate rparensExpected = 0;\nprivate rbracketsExpected = 0;\nprivate rbracesExpected = 0;\n\n  index: number = 0;\n/**\n * @param {?} input\n * @param {?} location\n * @param {?} tokens\n * @param {?} inputLength\n * @param {?} parseAction\n * @param {?} errors\n * @param {?} offset\n */\nconstructor(\npublic input: string,\npublic location: any,\npublic tokens: Token[],\npublic inputLength: number,\npublic parseAction: boolean,\nprivate errors: ParserError[],\nprivate offset: number) {}\n/**\n * @param {?} offset\n * @return {?}\n */\npeek(offset: number): Token {\n    const /** @type {?} */ i = this.index + offset;\n    return i < this.tokens.length ? this.tokens[i] : EOF;\n  }\n/**\n * @return {?}\n */\nget next(): Token { return this.peek(0); }\n/**\n * @return {?}\n */\nget inputIndex(): number {\n    return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                                               this.inputLength + this.offset;\n  }\n/**\n * @param {?} start\n * @return {?}\n */\nspan(start: number) { return new ParseSpan(start, this.inputIndex); }\n/**\n * @return {?}\n */\nadvance() { this.index++; }\n/**\n * @param {?} code\n * @return {?}\n */\noptionalCharacter(code: number): boolean {\n    if (this.next.isCharacter(code)) {\n      this.advance();\n      return true;\n    } else {\n      return false;\n    }\n  }\n/**\n * @return {?}\n */\npeekKeywordLet(): boolean { return this.next.isKeywordLet(); }\n/**\n * @return {?}\n */\npeekKeywordAs(): boolean { return this.next.isKeywordAs(); }\n/**\n * @param {?} code\n * @return {?}\n */\nexpectCharacter(code: number) {\n    if (this.optionalCharacter(code)) return;\n    this.error(`Missing expected ${String.fromCharCode(code)}`);\n  }\n/**\n * @param {?} op\n * @return {?}\n */\noptionalOperator(op: string): boolean {\n    if (this.next.isOperator(op)) {\n      this.advance();\n      return true;\n    } else {\n      return false;\n    }\n  }\n/**\n * @param {?} operator\n * @return {?}\n */\nexpectOperator(operator: string) {\n    if (this.optionalOperator(operator)) return;\n    this.error(`Missing expected operator ${operator}`);\n  }\n/**\n * @return {?}\n */\nexpectIdentifierOrKeyword(): string {\n    const /** @type {?} */ n = this.next;\n    if (!n.isIdentifier() && !n.isKeyword()) {\n      this.error(`Unexpected token ${n}, expected identifier or keyword`);\n      return '';\n    }\n    this.advance();\n    return /** @type {?} */(( n.toString() as string));\n  }\n/**\n * @return {?}\n */\nexpectIdentifierOrKeywordOrString(): string {\n    const /** @type {?} */ n = this.next;\n    if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n      this.error(`Unexpected token ${n}, expected identifier, keyword, or string`);\n      return '';\n    }\n    this.advance();\n    return /** @type {?} */(( n.toString() as string));\n  }\n/**\n * @return {?}\n */\nparseChain(): AST {\n    const /** @type {?} */ exprs: AST[] = [];\n    const /** @type {?} */ start = this.inputIndex;\n    while (this.index < this.tokens.length) {\n      const /** @type {?} */ expr = this.parsePipe();\n      exprs.push(expr);\n\n      if (this.optionalCharacter(chars.$SEMICOLON)) {\n        if (!this.parseAction) {\n          this.error('Binding expression cannot contain chained expression');\n        }\n        while (this.optionalCharacter(chars.$SEMICOLON)) {\n        }  // read all semicolons\n      } else if (this.index < this.tokens.length) {\n        this.error(`Unexpected token '${this.next}'`);\n      }\n    }\n    if (exprs.length == 0) return new EmptyExpr(this.span(start));\n    if (exprs.length == 1) return exprs[0];\n    return new Chain(this.span(start), exprs);\n  }\n/**\n * @return {?}\n */\nparsePipe(): AST {\n    let /** @type {?} */ result = this.parseExpression();\n    if (this.optionalOperator('|')) {\n      if (this.parseAction) {\n        this.error('Cannot have a pipe in an action expression');\n      }\n\n      do {\n        const /** @type {?} */ name = this.expectIdentifierOrKeyword();\n        const /** @type {?} */ args: AST[] = [];\n        while (this.optionalCharacter(chars.$COLON)) {\n          args.push(this.parseExpression());\n        }\n        result = new BindingPipe(this.span(result.span.start), result, name, args);\n      } while (this.optionalOperator('|'));\n    }\n\n    return result;\n  }\n/**\n * @return {?}\n */\nparseExpression(): AST { return this.parseConditional(); }\n/**\n * @return {?}\n */\nparseConditional(): AST {\n    const /** @type {?} */ start = this.inputIndex;\n    const /** @type {?} */ result = this.parseLogicalOr();\n\n    if (this.optionalOperator('?')) {\n      const /** @type {?} */ yes = this.parsePipe();\n      let /** @type {?} */ no: AST;\n      if (!this.optionalCharacter(chars.$COLON)) {\n        const /** @type {?} */ end = this.inputIndex;\n        const /** @type {?} */ expression = this.input.substring(start, end);\n        this.error(`Conditional expression ${expression} requires all 3 expressions`);\n        no = new EmptyExpr(this.span(start));\n      } else {\n        no = this.parsePipe();\n      }\n      return new Conditional(this.span(start), result, yes, no);\n    } else {\n      return result;\n    }\n  }\n/**\n * @return {?}\n */\nparseLogicalOr(): AST {\n    // '||'\n    let /** @type {?} */ result = this.parseLogicalAnd();\n    while (this.optionalOperator('||')) {\n      const /** @type {?} */ right = this.parseLogicalAnd();\n      result = new Binary(this.span(result.span.start), '||', result, right);\n    }\n    return result;\n  }\n/**\n * @return {?}\n */\nparseLogicalAnd(): AST {\n    // '&&'\n    let /** @type {?} */ result = this.parseEquality();\n    while (this.optionalOperator('&&')) {\n      const /** @type {?} */ right = this.parseEquality();\n      result = new Binary(this.span(result.span.start), '&&', result, right);\n    }\n    return result;\n  }\n/**\n * @return {?}\n */\nparseEquality(): AST {\n    // '==','!=','===','!=='\n    let /** @type {?} */ result = this.parseRelational();\n    while (this.next.type == TokenType.Operator) {\n      const /** @type {?} */ operator = this.next.strValue;\n      switch (operator) {\n        case '==':\n        case '===':\n        case '!=':\n        case '!==':\n          this.advance();\n          const /** @type {?} */ right = this.parseRelational();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n/**\n * @return {?}\n */\nparseRelational(): AST {\n    // '<', '>', '<=', '>='\n    let /** @type {?} */ result = this.parseAdditive();\n    while (this.next.type == TokenType.Operator) {\n      const /** @type {?} */ operator = this.next.strValue;\n      switch (operator) {\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n          this.advance();\n          const /** @type {?} */ right = this.parseAdditive();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n/**\n * @return {?}\n */\nparseAdditive(): AST {\n    // '+', '-'\n    let /** @type {?} */ result = this.parseMultiplicative();\n    while (this.next.type == TokenType.Operator) {\n      const /** @type {?} */ operator = this.next.strValue;\n      switch (operator) {\n        case '+':\n        case '-':\n          this.advance();\n          let /** @type {?} */ right = this.parseMultiplicative();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n/**\n * @return {?}\n */\nparseMultiplicative(): AST {\n    // '*', '%', '/'\n    let /** @type {?} */ result = this.parsePrefix();\n    while (this.next.type == TokenType.Operator) {\n      const /** @type {?} */ operator = this.next.strValue;\n      switch (operator) {\n        case '*':\n        case '%':\n        case '/':\n          this.advance();\n          let /** @type {?} */ right = this.parsePrefix();\n          result = new Binary(this.span(result.span.start), operator, result, right);\n          continue;\n      }\n      break;\n    }\n    return result;\n  }\n/**\n * @return {?}\n */\nparsePrefix(): AST {\n    if (this.next.type == TokenType.Operator) {\n      const /** @type {?} */ start = this.inputIndex;\n      const /** @type {?} */ operator = this.next.strValue;\n      let /** @type {?} */ result: AST;\n      switch (operator) {\n        case '+':\n          this.advance();\n          return this.parsePrefix();\n        case '-':\n          this.advance();\n          result = this.parsePrefix();\n          return new Binary(\n              this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0),\n              result);\n        case '!':\n          this.advance();\n          result = this.parsePrefix();\n          return new PrefixNot(this.span(start), result);\n      }\n    }\n    return this.parseCallChain();\n  }\n/**\n * @return {?}\n */\nparseCallChain(): AST {\n    let /** @type {?} */ result = this.parsePrimary();\n    while (true) {\n      if (this.optionalCharacter(chars.$PERIOD)) {\n        result = this.parseAccessMemberOrMethodCall(result, false);\n\n      } else if (this.optionalOperator('?.')) {\n        result = this.parseAccessMemberOrMethodCall(result, true);\n\n      } else if (this.optionalCharacter(chars.$LBRACKET)) {\n        this.rbracketsExpected++;\n        const /** @type {?} */ key = this.parsePipe();\n        this.rbracketsExpected--;\n        this.expectCharacter(chars.$RBRACKET);\n        if (this.optionalOperator('=')) {\n          const /** @type {?} */ value = this.parseConditional();\n          result = new KeyedWrite(this.span(result.span.start), result, key, value);\n        } else {\n          result = new KeyedRead(this.span(result.span.start), result, key);\n        }\n\n      } else if (this.optionalCharacter(chars.$LPAREN)) {\n        this.rparensExpected++;\n        const /** @type {?} */ args = this.parseCallArguments();\n        this.rparensExpected--;\n        this.expectCharacter(chars.$RPAREN);\n        result = new FunctionCall(this.span(result.span.start), result, args);\n\n      } else if (this.optionalOperator('!')) {\n        result = new NonNullAssert(this.span(result.span.start), result);\n\n      } else {\n        return result;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nparsePrimary(): AST {\n    const /** @type {?} */ start = this.inputIndex;\n    if (this.optionalCharacter(chars.$LPAREN)) {\n      this.rparensExpected++;\n      const /** @type {?} */ result = this.parsePipe();\n      this.rparensExpected--;\n      this.expectCharacter(chars.$RPAREN);\n      return result;\n\n    } else if (this.next.isKeywordNull()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), null);\n\n    } else if (this.next.isKeywordUndefined()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), void 0);\n\n    } else if (this.next.isKeywordTrue()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), true);\n\n    } else if (this.next.isKeywordFalse()) {\n      this.advance();\n      return new LiteralPrimitive(this.span(start), false);\n\n    } else if (this.next.isKeywordThis()) {\n      this.advance();\n      return new ImplicitReceiver(this.span(start));\n\n    } else if (this.optionalCharacter(chars.$LBRACKET)) {\n      this.rbracketsExpected++;\n      const /** @type {?} */ elements = this.parseExpressionList(chars.$RBRACKET);\n      this.rbracketsExpected--;\n      this.expectCharacter(chars.$RBRACKET);\n      return new LiteralArray(this.span(start), elements);\n\n    } else if (this.next.isCharacter(chars.$LBRACE)) {\n      return this.parseLiteralMap();\n\n    } else if (this.next.isIdentifier()) {\n      return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n\n    } else if (this.next.isNumber()) {\n      const /** @type {?} */ value = this.next.toNumber();\n      this.advance();\n      return new LiteralPrimitive(this.span(start), value);\n\n    } else if (this.next.isString()) {\n      const /** @type {?} */ literalValue = this.next.toString();\n      this.advance();\n      return new LiteralPrimitive(this.span(start), literalValue);\n\n    } else if (this.index >= this.tokens.length) {\n      this.error(`Unexpected end of expression: ${this.input}`);\n      return new EmptyExpr(this.span(start));\n    } else {\n      this.error(`Unexpected token ${this.next}`);\n      return new EmptyExpr(this.span(start));\n    }\n  }\n/**\n * @param {?} terminator\n * @return {?}\n */\nparseExpressionList(terminator: number): AST[] {\n    const /** @type {?} */ result: AST[] = [];\n    if (!this.next.isCharacter(terminator)) {\n      do {\n        result.push(this.parsePipe());\n      } while (this.optionalCharacter(chars.$COMMA));\n    }\n    return result;\n  }\n/**\n * @return {?}\n */\nparseLiteralMap(): LiteralMap {\n    const /** @type {?} */ keys: LiteralMapKey[] = [];\n    const /** @type {?} */ values: AST[] = [];\n    const /** @type {?} */ start = this.inputIndex;\n    this.expectCharacter(chars.$LBRACE);\n    if (!this.optionalCharacter(chars.$RBRACE)) {\n      this.rbracesExpected++;\n      do {\n        const /** @type {?} */ quoted = this.next.isString();\n        const /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n        keys.push({key, quoted});\n        this.expectCharacter(chars.$COLON);\n        values.push(this.parsePipe());\n      } while (this.optionalCharacter(chars.$COMMA));\n      this.rbracesExpected--;\n      this.expectCharacter(chars.$RBRACE);\n    }\n    return new LiteralMap(this.span(start), keys, values);\n  }\n/**\n * @param {?} receiver\n * @param {?=} isSafe\n * @return {?}\n */\nparseAccessMemberOrMethodCall(receiver: AST, isSafe: boolean = false): AST {\n    const /** @type {?} */ start = receiver.span.start;\n    const /** @type {?} */ id = this.expectIdentifierOrKeyword();\n\n    if (this.optionalCharacter(chars.$LPAREN)) {\n      this.rparensExpected++;\n      const /** @type {?} */ args = this.parseCallArguments();\n      this.expectCharacter(chars.$RPAREN);\n      this.rparensExpected--;\n      const /** @type {?} */ span = this.span(start);\n      return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                      new MethodCall(span, receiver, id, args);\n\n    } else {\n      if (isSafe) {\n        if (this.optionalOperator('=')) {\n          this.error('The \\'?.\\' operator cannot be used in the assignment');\n          return new EmptyExpr(this.span(start));\n        } else {\n          return new SafePropertyRead(this.span(start), receiver, id);\n        }\n      } else {\n        if (this.optionalOperator('=')) {\n          if (!this.parseAction) {\n            this.error('Bindings cannot contain assignments');\n            return new EmptyExpr(this.span(start));\n          }\n\n          const /** @type {?} */ value = this.parseConditional();\n          return new PropertyWrite(this.span(start), receiver, id, value);\n        } else {\n          return new PropertyRead(this.span(start), receiver, id);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nparseCallArguments(): BindingPipe[] {\n    if (this.next.isCharacter(chars.$RPAREN)) return [];\n    const /** @type {?} */ positionals: AST[] = [];\n    do {\n      positionals.push(this.parsePipe());\n    } while (this.optionalCharacter(chars.$COMMA));\n    return /** @type {?} */(( positionals as BindingPipe[]));\n  }\n/**\n * An identifier, a keyword, a string with an optional `-` inbetween.\n * @return {?}\n */\nexpectTemplateBindingKey(): string {\n    let /** @type {?} */ result = '';\n    let /** @type {?} */ operatorFound = false;\n    do {\n      result += this.expectIdentifierOrKeywordOrString();\n      operatorFound = this.optionalOperator('-');\n      if (operatorFound) {\n        result += '-';\n      }\n    } while (operatorFound);\n\n    return result.toString();\n  }\n/**\n * @return {?}\n */\nparseTemplateBindings(): TemplateBindingParseResult {\n    const /** @type {?} */ bindings: TemplateBinding[] = [];\n    let /** @type {?} */ prefix: string = /** @type {?} */(( null));\n    const /** @type {?} */ warnings: string[] = [];\n    while (this.index < this.tokens.length) {\n      const /** @type {?} */ start = this.inputIndex;\n      let /** @type {?} */ keyIsVar: boolean = this.peekKeywordLet();\n      if (keyIsVar) {\n        this.advance();\n      }\n      let /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n      let /** @type {?} */ key = rawKey;\n      if (!keyIsVar) {\n        if (prefix == null) {\n          prefix = key;\n        } else {\n          key = prefix + key[0].toUpperCase() + key.substring(1);\n        }\n      }\n      this.optionalCharacter(chars.$COLON);\n      let /** @type {?} */ name: string = /** @type {?} */(( null));\n      let /** @type {?} */ expression: ASTWithSource = /** @type {?} */(( null));\n      if (keyIsVar) {\n        if (this.optionalOperator('=')) {\n          name = this.expectTemplateBindingKey();\n        } else {\n          name = '\\$implicit';\n        }\n      } else if (this.peekKeywordAs()) {\n        const /** @type {?} */ letStart = this.inputIndex;\n        this.advance();  // consume `as`\n        name = rawKey;\n        key = this.expectTemplateBindingKey();  // read local var name\n        keyIsVar = true;\n      } else if (this.next !== EOF && !this.peekKeywordLet()) {\n        const /** @type {?} */ start = this.inputIndex;\n        const /** @type {?} */ ast = this.parsePipe();\n        const /** @type {?} */ source = this.input.substring(start - this.offset, this.inputIndex - this.offset);\n        expression = new ASTWithSource(ast, source, this.location, this.errors);\n      }\n      bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n      if (this.peekKeywordAs() && !keyIsVar) {\n        const /** @type {?} */ letStart = this.inputIndex;\n        this.advance();                                   // consume `as`\n        const /** @type {?} */ letName = this.expectTemplateBindingKey();  // read local var name\n        bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */(( null))));\n      }\n      if (!this.optionalCharacter(chars.$SEMICOLON)) {\n        this.optionalCharacter(chars.$COMMA);\n      }\n    }\n    return new TemplateBindingParseResult(bindings, warnings, this.errors);\n  }\n/**\n * @param {?} message\n * @param {?=} index\n * @return {?}\n */\nerror(message: string, index: number|null = null) {\n    this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n    this.skip();\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\n\nprivate locationText(index: number|null = null) {\n    if (index == null) index = this.index;\n    return (index < this.tokens.length) ? `at column ${this.tokens[index].index + 1} in` :\n                                          `at the end of the expression`;\n  }\n/**\n * @return {?}\n */\n\nprivate skip() {\n    let /** @type {?} */ n = this.next;\n    while (this.index < this.tokens.length && !n.isCharacter(chars.$SEMICOLON) &&\n           (this.rparensExpected <= 0 || !n.isCharacter(chars.$RPAREN)) &&\n           (this.rbracesExpected <= 0 || !n.isCharacter(chars.$RBRACE)) &&\n           (this.rbracketsExpected <= 0 || !n.isCharacter(chars.$RBRACKET))) {\n      if (this.next.isError()) {\n        this.errors.push(new ParserError( /** @type {?} */((\n            this.next.toString())), this.input, this.locationText(), this.location));\n      }\n      this.advance();\n      n = this.next;\n    }\n  }\n}\n\nfunction _ParseAST_tsickle_Closure_declarations() {\n/** @type {?} */\n_ParseAST.prototype.rparensExpected;\n/** @type {?} */\n_ParseAST.prototype.rbracketsExpected;\n/** @type {?} */\n_ParseAST.prototype.rbracesExpected;\n/** @type {?} */\n_ParseAST.prototype.index;\n/** @type {?} */\n_ParseAST.prototype.input;\n/** @type {?} */\n_ParseAST.prototype.location;\n/** @type {?} */\n_ParseAST.prototype.tokens;\n/** @type {?} */\n_ParseAST.prototype.inputLength;\n/** @type {?} */\n_ParseAST.prototype.parseAction;\n/** @type {?} */\n_ParseAST.prototype.errors;\n/** @type {?} */\n_ParseAST.prototype.offset;\n}\n\nclass SimpleExpressionChecker implements AstVisitor {\n/**\n * @param {?} ast\n * @return {?}\n */\nstatic check(ast: AST): string[] {\n    const /** @type {?} */ s = new SimpleExpressionChecker();\n    ast.visit(s);\n    return s.errors;\n  }\n\n  errors: string[] = [];\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitImplicitReceiver(ast: ImplicitReceiver, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInterpolation(ast: Interpolation, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralPrimitive(ast: LiteralPrimitive, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyRead(ast: PropertyRead, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPropertyWrite(ast: PropertyWrite, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafePropertyRead(ast: SafePropertyRead, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitMethodCall(ast: MethodCall, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSafeMethodCall(ast: SafeMethodCall, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionCall(ast: FunctionCall, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: LiteralArray, context: any) { this.visitAll(ast.expressions); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: LiteralMap, context: any) { this.visitAll(ast.values); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinary(ast: Binary, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPrefixNot(ast: PrefixNot, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNonNullAssert(ast: NonNullAssert, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditional(ast: Conditional, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any) { this.errors.push('pipes'); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedRead(ast: KeyedRead, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyedWrite(ast: KeyedWrite, context: any) {}\n/**\n * @param {?} asts\n * @return {?}\n */\nvisitAll(asts: any[]): any[] { return asts.map(node => node.visit(this)); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitChain(ast: Chain, context: any) {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitQuote(ast: Quote, context: any) {}\n}\n\nfunction SimpleExpressionChecker_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleExpressionChecker.prototype.errors;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from './chars';\nimport {CompileIdentifierMetadata, identifierModuleUrl, identifierName} from './compile_metadata';\nexport class ParseLocation {\n/**\n * @param {?} file\n * @param {?} offset\n * @param {?} line\n * @param {?} col\n */\nconstructor(\npublic file: ParseSourceFile,\npublic offset: number,\npublic line: number,\npublic col: number) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.offset != null ? `${this.file.url}@${this.line}:${this.col}` : this.file.url;\n  }\n/**\n * @param {?} delta\n * @return {?}\n */\nmoveBy(delta: number): ParseLocation {\n    const /** @type {?} */ source = this.file.content;\n    const /** @type {?} */ len = source.length;\n    let /** @type {?} */ offset = this.offset;\n    let /** @type {?} */ line = this.line;\n    let /** @type {?} */ col = this.col;\n    while (offset > 0 && delta < 0) {\n      offset--;\n      delta++;\n      const /** @type {?} */ ch = source.charCodeAt(offset);\n      if (ch == chars.$LF) {\n        line--;\n        const /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode(chars.$LF));\n        col = priorLine > 0 ? offset - priorLine : offset;\n      } else {\n        col--;\n      }\n    }\n    while (offset < len && delta > 0) {\n      const /** @type {?} */ ch = source.charCodeAt(offset);\n      offset++;\n      delta--;\n      if (ch == chars.$LF) {\n        line++;\n        col = 0;\n      } else {\n        col++;\n      }\n    }\n    return new ParseLocation(this.file, offset, line, col);\n  }\n/**\n * @param {?} maxChars\n * @param {?} maxLines\n * @return {?}\n */\ngetContext(maxChars: number, maxLines: number): {before: string, after: string}|null {\n    const /** @type {?} */ content = this.file.content;\n    let /** @type {?} */ startOffset = this.offset;\n\n    if (startOffset != null) {\n      if (startOffset > content.length - 1) {\n        startOffset = content.length - 1;\n      }\n      let /** @type {?} */ endOffset = startOffset;\n      let /** @type {?} */ ctxChars = 0;\n      let /** @type {?} */ ctxLines = 0;\n\n      while (ctxChars < maxChars && startOffset > 0) {\n        startOffset--;\n        ctxChars++;\n        if (content[startOffset] == '\\n') {\n          if (++ctxLines == maxLines) {\n            break;\n          }\n        }\n      }\n\n      ctxChars = 0;\n      ctxLines = 0;\n      while (ctxChars < maxChars && endOffset < content.length - 1) {\n        endOffset++;\n        ctxChars++;\n        if (content[endOffset] == '\\n') {\n          if (++ctxLines == maxLines) {\n            break;\n          }\n        }\n      }\n\n      return {\n        before: content.substring(startOffset, this.offset),\n        after: content.substring(this.offset, endOffset + 1),\n      };\n    }\n\n    return null;\n  }\n}\n\nfunction ParseLocation_tsickle_Closure_declarations() {\n/** @type {?} */\nParseLocation.prototype.file;\n/** @type {?} */\nParseLocation.prototype.offset;\n/** @type {?} */\nParseLocation.prototype.line;\n/** @type {?} */\nParseLocation.prototype.col;\n}\n\nexport class ParseSourceFile {\n/**\n * @param {?} content\n * @param {?} url\n */\nconstructor(public content: string,\npublic url: string) {}\n}\n\nfunction ParseSourceFile_tsickle_Closure_declarations() {\n/** @type {?} */\nParseSourceFile.prototype.content;\n/** @type {?} */\nParseSourceFile.prototype.url;\n}\n\nexport class ParseSourceSpan {\n/**\n * @param {?} start\n * @param {?} end\n * @param {?=} details\n */\nconstructor(\npublic start: ParseLocation,\npublic end: ParseLocation,\npublic details: string|null = null) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.start.file.content.substring(this.start.offset, this.end.offset);\n  }\n}\n\nfunction ParseSourceSpan_tsickle_Closure_declarations() {\n/** @type {?} */\nParseSourceSpan.prototype.start;\n/** @type {?} */\nParseSourceSpan.prototype.end;\n/** @type {?} */\nParseSourceSpan.prototype.details;\n}\n\nexport type ParseErrorLevel = number;\nexport let ParseErrorLevel: any = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\n\nexport class ParseError {\n/**\n * @param {?} span\n * @param {?} msg\n * @param {?=} level\n */\nconstructor(\npublic span: ParseSourceSpan,\npublic msg: string,\npublic level: ParseErrorLevel = ParseErrorLevel.ERROR) {}\n/**\n * @return {?}\n */\ncontextualMessage(): string {\n    const /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n    return ctx ? ` (\"${ctx.before}[${ParseErrorLevel[this.level]} ->]${ctx.after}\")` : '';\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ details = this.span.details ? `, ${this.span.details}` : '';\n    return `${this.msg}${this.contextualMessage()}: ${this.span.start}${details}`;\n  }\n}\n\nfunction ParseError_tsickle_Closure_declarations() {\n/** @type {?} */\nParseError.prototype.span;\n/** @type {?} */\nParseError.prototype.msg;\n/** @type {?} */\nParseError.prototype.level;\n}\n\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nexport function typeSourceSpan(kind: string, type: CompileIdentifierMetadata): ParseSourceSpan {\n  const /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n  const /** @type {?} */ sourceFileName = moduleUrl != null ? `in ${kind} ${identifierName(type)} in ${moduleUrl}` :\n                                             `in ${kind} ${identifierName(type)}`;\n  const /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n  return new ParseSourceSpan(\n      new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n * \n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n * \n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nexport class AstPath<T> {\n/**\n * @param {?} path\n * @param {?=} position\n */\nconstructor(private path: T[],\npublic position: number = -1) {}\n/**\n * @return {?}\n */\nget empty(): boolean { return !this.path || !this.path.length; }\n/**\n * @return {?}\n */\nget head(): T|undefined { return this.path[0]; }\n/**\n * @return {?}\n */\nget tail(): T|undefined { return this.path[this.path.length - 1]; }\n/**\n * @param {?} node\n * @return {?}\n */\nparentOf(node: T|undefined): T|undefined {\n    return node && this.path[this.path.indexOf(node) - 1];\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nchildOf(node: T): T|undefined { return this.path[this.path.indexOf(node) + 1]; }\n/**\n * @template N\n * @param {?} ctor\n * @return {?}\n */\nfirst<N extends T>(ctor: {new (...args: any[]): N}): N|undefined {\n    for (let /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n      let /** @type {?} */ item = this.path[i];\n      if (item instanceof ctor) return /** @type {?} */(( <N>item));\n    }\n  }\n/**\n * @param {?} node\n * @return {?}\n */\npush(node: T) { this.path.push(node); }\n/**\n * @return {?}\n */\npop(): T { return /** @type {?} */(( this.path.pop())); }\n}\n\nfunction AstPath_tsickle_Closure_declarations() {\n/** @type {?} */\nAstPath.prototype.path;\n/** @type {?} */\nAstPath.prototype.position;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AstPath} from '../ast_path';\nimport {ParseSourceSpan} from '../parse_util';\n/**\n * @record\n */\nexport function Node() {}\n\n\nfunction Node_tsickle_Closure_declarations() {\n/** @type {?} */\nNode.prototype.sourceSpan;\n/** @type {?} */\nNode.prototype.visit;\n}\n\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context: any): any;\n}\nexport class Text implements Node {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitText(this, context); }\n}\n\nfunction Text_tsickle_Closure_declarations() {\n/** @type {?} */\nText.prototype.value;\n/** @type {?} */\nText.prototype.sourceSpan;\n}\n\nexport class Expansion implements Node {\n/**\n * @param {?} switchValue\n * @param {?} type\n * @param {?} cases\n * @param {?} sourceSpan\n * @param {?} switchValueSourceSpan\n */\nconstructor(\npublic switchValue: string,\npublic type: string,\npublic cases: ExpansionCase[],\npublic sourceSpan: ParseSourceSpan,\npublic switchValueSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitExpansion(this, context); }\n}\n\nfunction Expansion_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansion.prototype.switchValue;\n/** @type {?} */\nExpansion.prototype.type;\n/** @type {?} */\nExpansion.prototype.cases;\n/** @type {?} */\nExpansion.prototype.sourceSpan;\n/** @type {?} */\nExpansion.prototype.switchValueSourceSpan;\n}\n\nexport class ExpansionCase implements Node {\n/**\n * @param {?} value\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} valueSourceSpan\n * @param {?} expSourceSpan\n */\nconstructor(\npublic value: string,\npublic expression: Node[],\npublic sourceSpan: ParseSourceSpan,\npublic valueSourceSpan: ParseSourceSpan,\npublic expSourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitExpansionCase(this, context); }\n}\n\nfunction ExpansionCase_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansionCase.prototype.value;\n/** @type {?} */\nExpansionCase.prototype.expression;\n/** @type {?} */\nExpansionCase.prototype.sourceSpan;\n/** @type {?} */\nExpansionCase.prototype.valueSourceSpan;\n/** @type {?} */\nExpansionCase.prototype.expSourceSpan;\n}\n\nexport class Attribute implements Node {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?=} valueSpan\n */\nconstructor(\npublic name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan,\npublic valueSpan?: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitAttribute(this, context); }\n}\n\nfunction Attribute_tsickle_Closure_declarations() {\n/** @type {?} */\nAttribute.prototype.name;\n/** @type {?} */\nAttribute.prototype.value;\n/** @type {?} */\nAttribute.prototype.sourceSpan;\n/** @type {?} */\nAttribute.prototype.valueSpan;\n}\n\nexport class Element implements Node {\n/**\n * @param {?} name\n * @param {?} attrs\n * @param {?} children\n * @param {?} sourceSpan\n * @param {?=} startSourceSpan\n * @param {?=} endSourceSpan\n */\nconstructor(\npublic name: string,\npublic attrs: Attribute[],\npublic children: Node[],\npublic sourceSpan: ParseSourceSpan,\npublic startSourceSpan: ParseSourceSpan|null = null,\npublic endSourceSpan: ParseSourceSpan|null = null) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitElement(this, context); }\n}\n\nfunction Element_tsickle_Closure_declarations() {\n/** @type {?} */\nElement.prototype.name;\n/** @type {?} */\nElement.prototype.attrs;\n/** @type {?} */\nElement.prototype.children;\n/** @type {?} */\nElement.prototype.sourceSpan;\n/** @type {?} */\nElement.prototype.startSourceSpan;\n/** @type {?} */\nElement.prototype.endSourceSpan;\n}\n\nexport class Comment implements Node {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string|null,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisit(visitor: Visitor, context: any): any { return visitor.visitComment(this, context); }\n}\n\nfunction Comment_tsickle_Closure_declarations() {\n/** @type {?} */\nComment.prototype.value;\n/** @type {?} */\nComment.prototype.sourceSpan;\n}\n\n/**\n * @record\n */\nexport function Visitor() {}\n\n\nfunction Visitor_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nVisitor.prototype.visit;\n/** @type {?} */\nVisitor.prototype.visitElement;\n/** @type {?} */\nVisitor.prototype.visitAttribute;\n/** @type {?} */\nVisitor.prototype.visitText;\n/** @type {?} */\nVisitor.prototype.visitComment;\n/** @type {?} */\nVisitor.prototype.visitExpansion;\n/** @type {?} */\nVisitor.prototype.visitExpansionCase;\n}\n\n\nexport interface Visitor {\n  // Returning a truthy value from `visit()` will prevent `visitAll()` from the call to the typed\n  // method and result returned will become the result included in `visitAll()`s result array.\n  visit?(node: Node, context: any): any;\n\n  visitElement(element: Element, context: any): any;\n  visitAttribute(attribute: Attribute, context: any): any;\n  visitText(text: Text, context: any): any;\n  visitComment(comment: Comment, context: any): any;\n  visitExpansion(expansion: Expansion, context: any): any;\n  visitExpansionCase(expansionCase: ExpansionCase, context: any): any;\n}\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nexport function visitAll(visitor: Visitor, nodes: Node[], context: any = null): any[] {\n  const /** @type {?} */ result: any[] = [];\n\n  const /** @type {?} */ visit = visitor.visit ?\n      (ast: Node) => /** @type {?} */(( visitor.visit))(ast, context) || ast.visit(visitor, context) :\n      (ast: Node) => ast.visit(visitor, context);\n  nodes.forEach(ast => {\n    const /** @type {?} */ astResult = visit(ast);\n    if (astResult) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\nexport class RecursiveVisitor implements Visitor {\nconstructor() {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: Element, context: any): any {\n    this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.children);\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(ast: Attribute, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: Text, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitComment(ast: Comment, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(ast: Expansion, context: any): any {\n    return this.visitChildren(context, visit => { visit(ast.cases); });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(ast: ExpansionCase, context: any): any {}\n/**\n * @template T\n * @param {?} context\n * @param {?} cb\n * @return {?}\n */\n\nprivate visitChildren<T extends Node>(\n      context: any, cb: (visit: (<V extends Node>(children: V[]|undefined) => void)) => void) {\n    let /** @type {?} */ results: any[][] = [];\n    let /** @type {?} */ t = this;\n/**\n * @template T\n * @param {?} children\n * @return {?}\n */\nfunction visit<T extends Node>(children: T[] | undefined) {\n      if (children) results.push(visitAll(t, children, context));\n    }\n    cb(visit);\n    return [].concat.apply([], results);\n  }\n}\n\nexport type HtmlAstPath = AstPath<Node>;\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast: Node) {\n  const /** @type {?} */ start = ast.sourceSpan.start.offset;\n  let /** @type {?} */ end = ast.sourceSpan.end.offset;\n  if (ast instanceof Element) {\n    if (ast.endSourceSpan) {\n      end = ast.endSourceSpan.end.offset;\n    } else if (ast.children && ast.children.length) {\n      end = spanOf(ast.children[ast.children.length - 1]).end;\n    }\n  }\n  return {start, end};\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nexport function findNode(nodes: Node[], position: number): HtmlAstPath {\n  const /** @type {?} */ path: Node[] = [];\n\n  const /** @type {?} */ visitor = new class extends RecursiveVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisit(ast: Node, context: any): any {\n      const /** @type {?} */ span = spanOf(ast);\n      if (span.start <= position && position < span.end) {\n        path.push(ast);\n      } else {\n        // Returning a value here will result in the children being skipped.\n        return true;\n      }\n    }\n  };\n\n  visitAll(visitor, nodes);\n\n  return new AstPath<Node>(path, position);\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as chars from '../chars';\nimport {ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan} from '../parse_util';\n\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport {NAMED_ENTITIES, TagContentType, TagDefinition} from './tags';\nexport type TokenType = number;\nexport let TokenType: any = {};\nTokenType.TAG_OPEN_START = 0;\nTokenType.TAG_OPEN_END = 1;\nTokenType.TAG_OPEN_END_VOID = 2;\nTokenType.TAG_CLOSE = 3;\nTokenType.TEXT = 4;\nTokenType.ESCAPABLE_RAW_TEXT = 5;\nTokenType.RAW_TEXT = 6;\nTokenType.COMMENT_START = 7;\nTokenType.COMMENT_END = 8;\nTokenType.CDATA_START = 9;\nTokenType.CDATA_END = 10;\nTokenType.ATTR_NAME = 11;\nTokenType.ATTR_VALUE = 12;\nTokenType.DOC_TYPE = 13;\nTokenType.EXPANSION_FORM_START = 14;\nTokenType.EXPANSION_CASE_VALUE = 15;\nTokenType.EXPANSION_CASE_EXP_START = 16;\nTokenType.EXPANSION_CASE_EXP_END = 17;\nTokenType.EXPANSION_FORM_END = 18;\nTokenType.EOF = 19;\nTokenType[TokenType.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType[TokenType.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType[TokenType.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType[TokenType.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType[TokenType.TEXT] = \"TEXT\";\nTokenType[TokenType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType[TokenType.RAW_TEXT] = \"RAW_TEXT\";\nTokenType[TokenType.COMMENT_START] = \"COMMENT_START\";\nTokenType[TokenType.COMMENT_END] = \"COMMENT_END\";\nTokenType[TokenType.CDATA_START] = \"CDATA_START\";\nTokenType[TokenType.CDATA_END] = \"CDATA_END\";\nTokenType[TokenType.ATTR_NAME] = \"ATTR_NAME\";\nTokenType[TokenType.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType[TokenType.DOC_TYPE] = \"DOC_TYPE\";\nTokenType[TokenType.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType[TokenType.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType[TokenType.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType[TokenType.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType[TokenType.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType[TokenType.EOF] = \"EOF\";\n\nexport class Token {\n/**\n * @param {?} type\n * @param {?} parts\n * @param {?} sourceSpan\n */\nconstructor(public type: TokenType,\npublic parts: string[],\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction Token_tsickle_Closure_declarations() {\n/** @type {?} */\nToken.prototype.type;\n/** @type {?} */\nToken.prototype.parts;\n/** @type {?} */\nToken.prototype.sourceSpan;\n}\n\nexport class TokenError extends ParseError {\n/**\n * @param {?} errorMsg\n * @param {?} tokenType\n * @param {?} span\n */\nconstructor(errorMsg: string,\npublic tokenType: TokenType, span: ParseSourceSpan) {\n    super(span, errorMsg);\n  }\n}\n\nfunction TokenError_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenError.prototype.tokenType;\n}\n\nexport class TokenizeResult {\n/**\n * @param {?} tokens\n * @param {?} errors\n */\nconstructor(public tokens: Token[],\npublic errors: TokenError[]) {}\n}\n\nfunction TokenizeResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTokenizeResult.prototype.tokens;\n/** @type {?} */\nTokenizeResult.prototype.errors;\n}\n\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nexport function tokenize(\n    source: string, url: string, getTagDefinition: (tagName: string) => TagDefinition,\n    tokenizeExpansionForms: boolean = false,\n    interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): TokenizeResult {\n  return new _Tokenizer(\n             new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms,\n             interpolationConfig)\n      .tokenize();\n}\n\nconst /** @type {?} */ _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode: number): string {\n  const /** @type {?} */ char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n  return `Unexpected character \"${char}\"`;\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc: string): string {\n  return `Unknown entity \"${entitySrc}\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax`;\n}\nclass _ControlFlowError {\n/**\n * @param {?} error\n */\nconstructor(public error: TokenError) {}\n}\n\nfunction _ControlFlowError_tsickle_Closure_declarations() {\n/** @type {?} */\n_ControlFlowError.prototype.error;\n}\n\nclass _Tokenizer {\nprivate _input: string;\nprivate _length: number;\nprivate _peek: number = -1;\nprivate _nextPeek: number = -1;\nprivate _index: number = -1;\nprivate _line: number = 0;\nprivate _column: number = -1;\nprivate _currentTokenStart: ParseLocation;\nprivate _currentTokenType: TokenType;\nprivate _expansionCaseStack: TokenType[] = [];\nprivate _inInterpolation: boolean = false;\n\n  tokens: Token[] = [];\n  errors: TokenError[] = [];\n/**\n * @param {?} _file The html source\n * @param {?} _getTagDefinition\n * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n * @param {?=} _interpolationConfig\n */\nconstructor(\nprivate _file: ParseSourceFile,\nprivate _getTagDefinition: (tagName: string) => TagDefinition,\nprivate _tokenizeIcu: boolean,\nprivate _interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n    this._input = _file.content;\n    this._length = _file.content.length;\n    this._advance();\n  }\n/**\n * @param {?} content\n * @return {?}\n */\n\nprivate _processCarriageReturns(content: string): string {\n    // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n    // In order to keep the original position in the source, we can not\n    // pre-process it.\n    // Instead CRs are processed right before instantiating the tokens.\n    return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n  }\n/**\n * @return {?}\n */\ntokenize(): TokenizeResult {\n    while (this._peek !== chars.$EOF) {\n      const /** @type {?} */ start = this._getLocation();\n      try {\n        if (this._attemptCharCode(chars.$LT)) {\n          if (this._attemptCharCode(chars.$BANG)) {\n            if (this._attemptCharCode(chars.$LBRACKET)) {\n              this._consumeCdata(start);\n            } else if (this._attemptCharCode(chars.$MINUS)) {\n              this._consumeComment(start);\n            } else {\n              this._consumeDocType(start);\n            }\n          } else if (this._attemptCharCode(chars.$SLASH)) {\n            this._consumeTagClose(start);\n          } else {\n            this._consumeTagOpen(start);\n          }\n        } else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n          this._consumeText();\n        }\n      } catch ( /** @type {?} */e) {\n        if (e instanceof _ControlFlowError) {\n          this.errors.push(e.error);\n        } else {\n          throw e;\n        }\n      }\n    }\n    this._beginToken(TokenType.EOF);\n    this._endToken([]);\n    return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n  }\n/**\n * \\@internal\n * @return {?} whether an ICU token has been created\n */\n\nprivate _tokenizeExpansionForm(): boolean {\n    if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n      this._consumeExpansionFormStart();\n      return true;\n    }\n\n    if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n      this._consumeExpansionCaseStart();\n      return true;\n    }\n\n    if (this._peek === chars.$RBRACE) {\n      if (this._isInExpansionCase()) {\n        this._consumeExpansionCaseEnd();\n        return true;\n      }\n\n      if (this._isInExpansionForm()) {\n        this._consumeExpansionFormEnd();\n        return true;\n      }\n    }\n\n    return false;\n  }\n/**\n * @return {?}\n */\n\nprivate _getLocation(): ParseLocation {\n    return new ParseLocation(this._file, this._index, this._line, this._column);\n  }\n/**\n * @param {?=} start\n * @param {?=} end\n * @return {?}\n */\n\nprivate _getSpan(\n      start: ParseLocation = this._getLocation(),\n      end: ParseLocation = this._getLocation()): ParseSourceSpan {\n    return new ParseSourceSpan(start, end);\n  }\n/**\n * @param {?} type\n * @param {?=} start\n * @return {?}\n */\n\nprivate _beginToken(type: TokenType, start: ParseLocation = this._getLocation()) {\n    this._currentTokenStart = start;\n    this._currentTokenType = type;\n  }\n/**\n * @param {?} parts\n * @param {?=} end\n * @return {?}\n */\n\nprivate _endToken(parts: string[], end: ParseLocation = this._getLocation()): Token {\n    const /** @type {?} */ token =\n        new Token(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n    this.tokens.push(token);\n    this._currentTokenStart = /** @type {?} */(( null));\n    this._currentTokenType = /** @type {?} */(( null));\n    return token;\n  }\n/**\n * @param {?} msg\n * @param {?} span\n * @return {?}\n */\n\nprivate _createError(msg: string, span: ParseSourceSpan): _ControlFlowError {\n    if (this._isInExpansionForm()) {\n      msg += ` (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)`;\n    }\n    const /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n    this._currentTokenStart = /** @type {?} */(( null));\n    this._currentTokenType = /** @type {?} */(( null));\n    return new _ControlFlowError(error);\n  }\n/**\n * @return {?}\n */\n\nprivate _advance() {\n    if (this._index >= this._length) {\n      throw this._createError(_unexpectedCharacterErrorMsg(chars.$EOF), this._getSpan());\n    }\n    if (this._peek === chars.$LF) {\n      this._line++;\n      this._column = 0;\n    } else if (this._peek !== chars.$LF && this._peek !== chars.$CR) {\n      this._column++;\n    }\n    this._index++;\n    this._peek = this._index >= this._length ? chars.$EOF : this._input.charCodeAt(this._index);\n    this._nextPeek =\n        this._index + 1 >= this._length ? chars.$EOF : this._input.charCodeAt(this._index + 1);\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\n\nprivate _attemptCharCode(charCode: number): boolean {\n    if (this._peek === charCode) {\n      this._advance();\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\n\nprivate _attemptCharCodeCaseInsensitive(charCode: number): boolean {\n    if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n      this._advance();\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} charCode\n * @return {?}\n */\n\nprivate _requireCharCode(charCode: number) {\n    const /** @type {?} */ location = this._getLocation();\n    if (!this._attemptCharCode(charCode)) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n    }\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\n\nprivate _attemptStr(chars: string): boolean {\n    const /** @type {?} */ len = chars.length;\n    if (this._index + len > this._length) {\n      return false;\n    }\n    const /** @type {?} */ initialPosition = this._savePosition();\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n      if (!this._attemptCharCode(chars.charCodeAt(i))) {\n        // If attempting to parse the string fails, we want to reset the parser\n        // to where it was before the attempt\n        this._restorePosition(initialPosition);\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\n\nprivate _attemptStrCaseInsensitive(chars: string): boolean {\n    for (let /** @type {?} */ i = 0; i < chars.length; i++) {\n      if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n        return false;\n      }\n    }\n    return true;\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\n\nprivate _requireStr(chars: string) {\n    const /** @type {?} */ location = this._getLocation();\n    if (!this._attemptStr(chars)) {\n      throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\n\nprivate _attemptCharCodeUntilFn(predicate: (code: number) => boolean) {\n    while (!predicate(this._peek)) {\n      this._advance();\n    }\n  }\n/**\n * @param {?} predicate\n * @param {?} len\n * @return {?}\n */\n\nprivate _requireCharCodeUntilFn(predicate: (code: number) => boolean, len: number) {\n    const /** @type {?} */ start = this._getLocation();\n    this._attemptCharCodeUntilFn(predicate);\n    if (this._index - start.offset < len) {\n      throw this._createError(\n          _unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n    }\n  }\n/**\n * @param {?} char\n * @return {?}\n */\n\nprivate _attemptUntilChar(char: number) {\n    while (this._peek !== char) {\n      this._advance();\n    }\n  }\n/**\n * @param {?} decodeEntities\n * @return {?}\n */\n\nprivate _readChar(decodeEntities: boolean): string {\n    if (decodeEntities && this._peek === chars.$AMPERSAND) {\n      return this._decodeEntity();\n    } else {\n      const /** @type {?} */ index = this._index;\n      this._advance();\n      return this._input[index];\n    }\n  }\n/**\n * @return {?}\n */\n\nprivate _decodeEntity(): string {\n    const /** @type {?} */ start = this._getLocation();\n    this._advance();\n    if (this._attemptCharCode(chars.$HASH)) {\n      const /** @type {?} */ isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n      const /** @type {?} */ numberStart = this._getLocation().offset;\n      this._attemptCharCodeUntilFn(isDigitEntityEnd);\n      if (this._peek != chars.$SEMICOLON) {\n        throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n      }\n      this._advance();\n      const /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n      try {\n        const /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n        return String.fromCharCode(charCode);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n        throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n      }\n    } else {\n      const /** @type {?} */ startPosition = this._savePosition();\n      this._attemptCharCodeUntilFn(isNamedEntityEnd);\n      if (this._peek != chars.$SEMICOLON) {\n        this._restorePosition(startPosition);\n        return '&';\n      }\n      this._advance();\n      const /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n      const /** @type {?} */ char = NAMED_ENTITIES[name];\n      if (!char) {\n        throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n      }\n      return char;\n    }\n  }\n/**\n * @param {?} decodeEntities\n * @param {?} firstCharOfEnd\n * @param {?} attemptEndRest\n * @return {?}\n */\n\nprivate _consumeRawText(\n      decodeEntities: boolean, firstCharOfEnd: number, attemptEndRest: () => boolean): Token {\n    let /** @type {?} */ tagCloseStart: ParseLocation;\n    const /** @type {?} */ textStart = this._getLocation();\n    this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n    const /** @type {?} */ parts: string[] = [];\n    while (true) {\n      tagCloseStart = this._getLocation();\n      if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n        break;\n      }\n      if (this._index > tagCloseStart.offset) {\n        // add the characters consumed by the previous if statement to the output\n        parts.push(this._input.substring(tagCloseStart.offset, this._index));\n      }\n      while (this._peek !== firstCharOfEnd) {\n        parts.push(this._readChar(decodeEntities));\n      }\n    }\n    return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _consumeComment(start: ParseLocation) {\n    this._beginToken(TokenType.COMMENT_START, start);\n    this._requireCharCode(chars.$MINUS);\n    this._endToken([]);\n    const /** @type {?} */ textToken = this._consumeRawText(false, chars.$MINUS, () => this._attemptStr('->'));\n    this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _consumeCdata(start: ParseLocation) {\n    this._beginToken(TokenType.CDATA_START, start);\n    this._requireStr('CDATA[');\n    this._endToken([]);\n    const /** @type {?} */ textToken = this._consumeRawText(false, chars.$RBRACKET, () => this._attemptStr(']>'));\n    this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _consumeDocType(start: ParseLocation) {\n    this._beginToken(TokenType.DOC_TYPE, start);\n    this._attemptUntilChar(chars.$GT);\n    this._advance();\n    this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n  }\n/**\n * @return {?}\n */\n\nprivate _consumePrefixAndName(): string[] {\n    const /** @type {?} */ nameOrPrefixStart = this._index;\n    let /** @type {?} */ prefix: string = /** @type {?} */(( null));\n    while (this._peek !== chars.$COLON && !isPrefixEnd(this._peek)) {\n      this._advance();\n    }\n    let /** @type {?} */ nameStart: number;\n    if (this._peek === chars.$COLON) {\n      this._advance();\n      prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n      nameStart = this._index;\n    } else {\n      nameStart = nameOrPrefixStart;\n    }\n    this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n    const /** @type {?} */ name = this._input.substring(nameStart, this._index);\n    return [prefix, name];\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _consumeTagOpen(start: ParseLocation) {\n    const /** @type {?} */ savedPos = this._savePosition();\n    let /** @type {?} */ tagName: string;\n    let /** @type {?} */ lowercaseTagName: string;\n    try {\n      if (!chars.isAsciiLetter(this._peek)) {\n        throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n      }\n      const /** @type {?} */ nameStart = this._index;\n      this._consumeTagOpenStart(start);\n      tagName = this._input.substring(nameStart, this._index);\n      lowercaseTagName = tagName.toLowerCase();\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      while (this._peek !== chars.$SLASH && this._peek !== chars.$GT) {\n        this._consumeAttributeName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        if (this._attemptCharCode(chars.$EQ)) {\n          this._attemptCharCodeUntilFn(isNotWhitespace);\n          this._consumeAttributeValue();\n        }\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n      }\n      this._consumeTagOpenEnd();\n    } catch ( /** @type {?} */e) {\n      if (e instanceof _ControlFlowError) {\n        // When the start tag is invalid, assume we want a \"<\"\n        this._restorePosition(savedPos);\n        // Back to back text tokens are merged at the end\n        this._beginToken(TokenType.TEXT, start);\n        this._endToken(['<']);\n        return;\n      }\n\n      throw e;\n    }\n\n    const /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n\n    if (contentTokenType === TagContentType.RAW_TEXT) {\n      this._consumeRawTextWithTagClose(lowercaseTagName, false);\n    } else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n      this._consumeRawTextWithTagClose(lowercaseTagName, true);\n    }\n  }\n/**\n * @param {?} lowercaseTagName\n * @param {?} decodeEntities\n * @return {?}\n */\n\nprivate _consumeRawTextWithTagClose(lowercaseTagName: string, decodeEntities: boolean) {\n    const /** @type {?} */ textToken = this._consumeRawText(decodeEntities, chars.$LT, () => {\n      if (!this._attemptCharCode(chars.$SLASH)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      if (!this._attemptStrCaseInsensitive(lowercaseTagName)) return false;\n      this._attemptCharCodeUntilFn(isNotWhitespace);\n      return this._attemptCharCode(chars.$GT);\n    });\n    this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n    this._endToken([ /** @type {?} */((null)), lowercaseTagName]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _consumeTagOpenStart(start: ParseLocation) {\n    this._beginToken(TokenType.TAG_OPEN_START, start);\n    const /** @type {?} */ parts = this._consumePrefixAndName();\n    this._endToken(parts);\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeAttributeName() {\n    this._beginToken(TokenType.ATTR_NAME);\n    const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n    this._endToken(prefixAndName);\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeAttributeValue() {\n    this._beginToken(TokenType.ATTR_VALUE);\n    let /** @type {?} */ value: string;\n    if (this._peek === chars.$SQ || this._peek === chars.$DQ) {\n      const /** @type {?} */ quoteChar = this._peek;\n      this._advance();\n      const /** @type {?} */ parts: string[] = [];\n      while (this._peek !== quoteChar) {\n        parts.push(this._readChar(true));\n      }\n      value = parts.join('');\n      this._advance();\n    } else {\n      const /** @type {?} */ valueStart = this._index;\n      this._requireCharCodeUntilFn(isNameEnd, 1);\n      value = this._input.substring(valueStart, this._index);\n    }\n    this._endToken([this._processCarriageReturns(value)]);\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeTagOpenEnd() {\n    const /** @type {?} */ tokenType =\n        this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n    this._beginToken(tokenType);\n    this._requireCharCode(chars.$GT);\n    this._endToken([]);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _consumeTagClose(start: ParseLocation) {\n    this._beginToken(TokenType.TAG_CLOSE, start);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n    this._requireCharCode(chars.$GT);\n    this._endToken(prefixAndName);\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeExpansionFormStart() {\n    this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n\n    this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n    const /** @type {?} */ condition = this._readUntil(chars.$COMMA);\n    this._endToken([condition], this._getLocation());\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n    const /** @type {?} */ type = this._readUntil(chars.$COMMA);\n    this._endToken([type], this._getLocation());\n    this._requireCharCode(chars.$COMMA);\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeExpansionCaseStart() {\n    this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n    const /** @type {?} */ value = this._readUntil(chars.$LBRACE).trim();\n    this._endToken([value], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n    this._requireCharCode(chars.$LBRACE);\n    this._endToken([], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeExpansionCaseEnd() {\n    this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([], this._getLocation());\n    this._attemptCharCodeUntilFn(isNotWhitespace);\n\n    this._expansionCaseStack.pop();\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeExpansionFormEnd() {\n    this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n    this._requireCharCode(chars.$RBRACE);\n    this._endToken([]);\n\n    this._expansionCaseStack.pop();\n  }\n/**\n * @return {?}\n */\n\nprivate _consumeText() {\n    const /** @type {?} */ start = this._getLocation();\n    this._beginToken(TokenType.TEXT, start);\n    const /** @type {?} */ parts: string[] = [];\n\n    do {\n      if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n        parts.push(this._interpolationConfig.start);\n        this._inInterpolation = true;\n      } else if (\n          this._interpolationConfig && this._inInterpolation &&\n          this._attemptStr(this._interpolationConfig.end)) {\n        parts.push(this._interpolationConfig.end);\n        this._inInterpolation = false;\n      } else {\n        parts.push(this._readChar(true));\n      }\n    } while (!this._isTextEnd());\n\n    this._endToken([this._processCarriageReturns(parts.join(''))]);\n  }\n/**\n * @return {?}\n */\n\nprivate _isTextEnd(): boolean {\n    if (this._peek === chars.$LT || this._peek === chars.$EOF) {\n      return true;\n    }\n\n    if (this._tokenizeIcu && !this._inInterpolation) {\n      if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n        // start of an expansion form\n        return true;\n      }\n\n      if (this._peek === chars.$RBRACE && this._isInExpansionCase()) {\n        // end of and expansion case\n        return true;\n      }\n    }\n\n    return false;\n  }\n/**\n * @return {?}\n */\n\nprivate _savePosition(): [number, number, number, number, number] {\n    return [this._peek, this._index, this._column, this._line, this.tokens.length];\n  }\n/**\n * @param {?} char\n * @return {?}\n */\n\nprivate _readUntil(char: number): string {\n    const /** @type {?} */ start = this._index;\n    this._attemptUntilChar(char);\n    return this._input.substring(start, this._index);\n  }\n/**\n * @param {?} position\n * @return {?}\n */\n\nprivate _restorePosition(position: [number, number, number, number, number]): void {\n    this._peek = position[0];\n    this._index = position[1];\n    this._column = position[2];\n    this._line = position[3];\n    const /** @type {?} */ nbTokens = position[4];\n    if (nbTokens < this.tokens.length) {\n      // remove any extra tokens\n      this.tokens = this.tokens.slice(0, nbTokens);\n    }\n  }\n/**\n * @return {?}\n */\n\nprivate _isInExpansionCase(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_CASE_EXP_START;\n  }\n/**\n * @return {?}\n */\n\nprivate _isInExpansionForm(): boolean {\n    return this._expansionCaseStack.length > 0 &&\n        this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n        TokenType.EXPANSION_FORM_START;\n  }\n}\n\nfunction _Tokenizer_tsickle_Closure_declarations() {\n/** @type {?} */\n_Tokenizer.prototype._input;\n/** @type {?} */\n_Tokenizer.prototype._length;\n/** @type {?} */\n_Tokenizer.prototype._peek;\n/** @type {?} */\n_Tokenizer.prototype._nextPeek;\n/** @type {?} */\n_Tokenizer.prototype._index;\n/** @type {?} */\n_Tokenizer.prototype._line;\n/** @type {?} */\n_Tokenizer.prototype._column;\n/** @type {?} */\n_Tokenizer.prototype._currentTokenStart;\n/** @type {?} */\n_Tokenizer.prototype._currentTokenType;\n/** @type {?} */\n_Tokenizer.prototype._expansionCaseStack;\n/** @type {?} */\n_Tokenizer.prototype._inInterpolation;\n/** @type {?} */\n_Tokenizer.prototype.tokens;\n/** @type {?} */\n_Tokenizer.prototype.errors;\n/** @type {?} */\n_Tokenizer.prototype._file;\n/** @type {?} */\n_Tokenizer.prototype._getTagDefinition;\n/** @type {?} */\n_Tokenizer.prototype._tokenizeIcu;\n/** @type {?} */\n_Tokenizer.prototype._interpolationConfig;\n}\n\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code: number): boolean {\n  return !chars.isWhitespace(code) || code === chars.$EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code: number): boolean {\n  return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n      code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code: number): boolean {\n  return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n      (code < chars.$0 || code > chars.$9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code: number): boolean {\n  return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(\n    input: string, offset: number, interpolationConfig: InterpolationConfig): boolean {\n  const /** @type {?} */ isInterpolationStart =\n      interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n\n  return input.charCodeAt(offset) == chars.$LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek: number): boolean {\n  return peek === chars.$EQ || chars.isAsciiLetter(peek) || chars.isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1: number, code2: number): boolean {\n  return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code: number): number {\n  return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens: Token[]): Token[] {\n  const /** @type {?} */ dstTokens: Token[] = [];\n  let /** @type {?} */ lastDstToken: Token|undefined = undefined;\n  for (let /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n    const /** @type {?} */ token = srcTokens[i];\n    if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n      lastDstToken.parts[0] += token.parts[0];\n      lastDstToken.sourceSpan.end = token.sourceSpan.end;\n    } else {\n      lastDstToken = token;\n      dstTokens.push(lastDstToken);\n    }\n  }\n\n  return dstTokens;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport * as lex from './lexer';\nimport {TagDefinition, getNsPrefix, isNgContainer, mergeNsAndName} from './tags';\nexport class TreeError extends ParseError {\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n * @return {?}\n */\nstatic create(elementName: string|null, span: ParseSourceSpan, msg: string): TreeError {\n    return new TreeError(elementName, span, msg);\n  }\n/**\n * @param {?} elementName\n * @param {?} span\n * @param {?} msg\n */\nconstructor(public elementName: string|null, span: ParseSourceSpan, msg: string) {\n    super(span, msg);\n  }\n}\n\nfunction TreeError_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeError.prototype.elementName;\n}\n\nexport class ParseTreeResult {\n/**\n * @param {?} rootNodes\n * @param {?} errors\n */\nconstructor(public rootNodes: html.Node[],\npublic errors: ParseError[]) {}\n}\n\nfunction ParseTreeResult_tsickle_Closure_declarations() {\n/** @type {?} */\nParseTreeResult.prototype.rootNodes;\n/** @type {?} */\nParseTreeResult.prototype.errors;\n}\n\nexport class Parser {\n/**\n * @param {?} getTagDefinition\n */\nconstructor(public getTagDefinition: (tagName: string) => TagDefinition) {}\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ tokensAndErrors =\n        lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n\n    const /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n\n    return new ParseTreeResult(\n        treeAndErrors.rootNodes,\n        ( /** @type {?} */((<ParseError[]>tokensAndErrors.errors))).concat(treeAndErrors.errors));\n  }\n}\n\nfunction Parser_tsickle_Closure_declarations() {\n/** @type {?} */\nParser.prototype.getTagDefinition;\n}\n\nclass _TreeBuilder {\nprivate _index: number = -1;\nprivate _peek: lex.Token;\nprivate _rootNodes: html.Node[] = [];\nprivate _errors: TreeError[] = [];\nprivate _elementStack: html.Element[] = [];\n/**\n * @param {?} tokens\n * @param {?} getTagDefinition\n */\nconstructor(\nprivate tokens: lex.Token[],\nprivate getTagDefinition: (tagName: string) => TagDefinition) {\n    this._advance();\n  }\n/**\n * @return {?}\n */\nbuild(): ParseTreeResult {\n    while (this._peek.type !== lex.TokenType.EOF) {\n      if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n        this._consumeStartTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n        this._consumeEndTag(this._advance());\n      } else if (this._peek.type === lex.TokenType.CDATA_START) {\n        this._closeVoidElement();\n        this._consumeCdata(this._advance());\n      } else if (this._peek.type === lex.TokenType.COMMENT_START) {\n        this._closeVoidElement();\n        this._consumeComment(this._advance());\n      } else if (\n          this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n          this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n        this._closeVoidElement();\n        this._consumeText(this._advance());\n      } else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n        this._consumeExpansion(this._advance());\n      } else {\n        // Skip all other tokens...\n        this._advance();\n      }\n    }\n    return new ParseTreeResult(this._rootNodes, this._errors);\n  }\n/**\n * @return {?}\n */\n\nprivate _advance(): lex.Token {\n    const /** @type {?} */ prev = this._peek;\n    if (this._index < this.tokens.length - 1) {\n      // Note: there is always an EOF token at the end\n      this._index++;\n    }\n    this._peek = this.tokens[this._index];\n    return prev;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _advanceIf(type: lex.TokenType): lex.Token|null {\n    if (this._peek.type === type) {\n      return this._advance();\n    }\n    return null;\n  }\n/**\n * @param {?} startToken\n * @return {?}\n */\n\nprivate _consumeCdata(startToken: lex.Token) {\n    this._consumeText(this._advance());\n    this._advanceIf(lex.TokenType.CDATA_END);\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _consumeComment(token: lex.Token) {\n    const /** @type {?} */ text = this._advanceIf(lex.TokenType.RAW_TEXT);\n    this._advanceIf(lex.TokenType.COMMENT_END);\n    const /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n    this._addToParent(new html.Comment(value, token.sourceSpan));\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _consumeExpansion(token: lex.Token) {\n    const /** @type {?} */ switchValue = this._advance();\n\n    const /** @type {?} */ type = this._advance();\n    const /** @type {?} */ cases: html.ExpansionCase[] = [];\n\n    // read =\n    while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n      const /** @type {?} */ expCase = this._parseExpansionCase();\n      if (!expCase) return;  // error\n      cases.push(expCase);\n    }\n\n    // read the final }\n    if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n      return;\n    }\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n    this._addToParent(new html.Expansion(\n        switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n\n    this._advance();\n  }\n/**\n * @return {?}\n */\n\nprivate _parseExpansionCase(): html.ExpansionCase|null {\n    const /** @type {?} */ value = this._advance();\n\n    // read {\n    if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n      this._errors.push(\n          TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n      return null;\n    }\n\n    // read until }\n    const /** @type {?} */ start = this._advance();\n\n    const /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n    if (!exp) return null;\n\n    const /** @type {?} */ end = this._advance();\n    exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n\n    // parse everything in between { and }\n    const /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n    if (parsedExp.errors.length > 0) {\n      this._errors = this._errors.concat( /** @type {?} */((<TreeError[]>parsedExp.errors)));\n      return null;\n    }\n\n    const /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n    const /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n    return new html.ExpansionCase(\n        value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n  }\n/**\n * @param {?} start\n * @return {?}\n */\n\nprivate _collectExpansionExpTokens(start: lex.Token): lex.Token[]|null {\n    const /** @type {?} */ exp: lex.Token[] = [];\n    const /** @type {?} */ expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n\n    while (true) {\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n          this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n        expansionFormStack.push(this._peek.type);\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n          expansionFormStack.pop();\n          if (expansionFormStack.length == 0) return exp;\n\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n        if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n          expansionFormStack.pop();\n        } else {\n          this._errors.push(\n              TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n          return null;\n        }\n      }\n\n      if (this._peek.type === lex.TokenType.EOF) {\n        this._errors.push(\n            TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n        return null;\n      }\n\n      exp.push(this._advance());\n    }\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _consumeText(token: lex.Token) {\n    let /** @type {?} */ text = token.parts[0];\n    if (text.length > 0 && text[0] == '\\n') {\n      const /** @type {?} */ parent = this._getParentElement();\n      if (parent != null && parent.children.length == 0 &&\n          this.getTagDefinition(parent.name).ignoreFirstLf) {\n        text = text.substring(1);\n      }\n    }\n\n    if (text.length > 0) {\n      this._addToParent(new html.Text(text, token.sourceSpan));\n    }\n  }\n/**\n * @return {?}\n */\n\nprivate _closeVoidElement(): void {\n    const /** @type {?} */ el = this._getParentElement();\n    if (el && this.getTagDefinition(el.name).isVoid) {\n      this._elementStack.pop();\n    }\n  }\n/**\n * @param {?} startTagToken\n * @return {?}\n */\n\nprivate _consumeStartTag(startTagToken: lex.Token) {\n    const /** @type {?} */ prefix = startTagToken.parts[0];\n    const /** @type {?} */ name = startTagToken.parts[1];\n    const /** @type {?} */ attrs: html.Attribute[] = [];\n    while (this._peek.type === lex.TokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance()));\n    }\n    const /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n    let /** @type {?} */ selfClosing = false;\n    // Note: There could have been a tokenizer error\n    // so that we don't get a token for the end tag...\n    if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n      this._advance();\n      selfClosing = true;\n      const /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n      if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n        this._errors.push(TreeError.create(\n            fullName, startTagToken.sourceSpan,\n            `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n      }\n    } else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n      this._advance();\n      selfClosing = false;\n    }\n    const /** @type {?} */ end = this._peek.sourceSpan.start;\n    const /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n    const /** @type {?} */ el = new html.Element(fullName, attrs, [], span, span, undefined);\n    this._pushElement(el);\n    if (selfClosing) {\n      this._popElement(fullName);\n      el.endSourceSpan = span;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\n\nprivate _pushElement(el: html.Element) {\n    const /** @type {?} */ parentEl = this._getParentElement();\n\n    if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n      this._elementStack.pop();\n    }\n\n    const /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n    const {parent, container} = this._getParentElementSkippingContainers();\n\n    if (parent && tagDef.requireExtraParent(parent.name)) {\n      const /** @type {?} */ newParent = new html.Element(\n          tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n      this._insertBeforeContainer(parent, container, newParent);\n    }\n\n    this._addToParent(el);\n    this._elementStack.push(el);\n  }\n/**\n * @param {?} endTagToken\n * @return {?}\n */\n\nprivate _consumeEndTag(endTagToken: lex.Token) {\n    const /** @type {?} */ fullName = this._getElementFullName(\n        endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n\n    if (this._getParentElement()) { /** @type {?} */((\n      this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n    }\n\n    if (this.getTagDefinition(fullName).isVoid) {\n      this._errors.push(TreeError.create(\n          fullName, endTagToken.sourceSpan,\n          `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n    } else if (!this._popElement(fullName)) {\n      const /** @type {?} */ errMsg =\n          `Unexpected closing tag \"${fullName}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;\n      this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n    }\n  }\n/**\n * @param {?} fullName\n * @return {?}\n */\n\nprivate _popElement(fullName: string): boolean {\n    for (let /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n      const /** @type {?} */ el = this._elementStack[stackIndex];\n      if (el.name == fullName) {\n        this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n        return true;\n      }\n\n      if (!this.getTagDefinition(el.name).closedByParent) {\n        return false;\n      }\n    }\n    return false;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\n\nprivate _consumeAttr(attrName: lex.Token): html.Attribute {\n    const /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    let /** @type {?} */ end = attrName.sourceSpan.end;\n    let /** @type {?} */ value = '';\n    let /** @type {?} */ valueSpan: ParseSourceSpan = /** @type {?} */(( undefined));\n    if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n      const /** @type {?} */ valueToken = this._advance();\n      value = valueToken.parts[0];\n      end = valueToken.sourceSpan.end;\n      valueSpan = valueToken.sourceSpan;\n    }\n    return new html.Attribute(\n        fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n  }\n/**\n * @return {?}\n */\n\nprivate _getParentElement(): html.Element|null {\n    return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n  }\n/**\n * Returns the parent in the DOM and the container.\n * \n * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n * @return {?}\n */\n\nprivate _getParentElementSkippingContainers():\n      {parent: html.Element | null, container: html.Element|null} {\n    let /** @type {?} */ container: html.Element|null = null;\n\n    for (let /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n      if (!isNgContainer(this._elementStack[i].name)) {\n        return {parent: this._elementStack[i], container};\n      }\n      container = this._elementStack[i];\n    }\n\n    return {parent: null, container};\n  }\n/**\n * @param {?} node\n * @return {?}\n */\n\nprivate _addToParent(node: html.Node) {\n    const /** @type {?} */ parent = this._getParentElement();\n    if (parent != null) {\n      parent.children.push(node);\n    } else {\n      this._rootNodes.push(node);\n    }\n  }\n/**\n * Insert a node between the parent and the container.\n * When no container is given, the node is appended as a child of the parent.\n * Also updates the element stack accordingly.\n * \n * \\@internal\n * @param {?} parent\n * @param {?} container\n * @param {?} node\n * @return {?}\n */\n\nprivate _insertBeforeContainer(\n      parent: html.Element, container: html.Element|null, node: html.Element) {\n    if (!container) {\n      this._addToParent(node);\n      this._elementStack.push(node);\n    } else {\n      if (parent) {\n        // replace the container with the new node in the children\n        const /** @type {?} */ index = parent.children.indexOf(container);\n        parent.children[index] = node;\n      } else {\n        this._rootNodes.push(node);\n      }\n      node.children.push(container);\n      this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n    }\n  }\n/**\n * @param {?} prefix\n * @param {?} localName\n * @param {?} parentElement\n * @return {?}\n */\n\nprivate _getElementFullName(prefix: string, localName: string, parentElement: html.Element|null):\n      string {\n    if (prefix == null) {\n      prefix = /** @type {?} */(( this.getTagDefinition(localName).implicitNamespacePrefix));\n      if (prefix == null && parentElement != null) {\n        prefix = getNsPrefix(parentElement.name);\n      }\n    }\n\n    return mergeNsAndName(prefix, localName);\n  }\n}\n\nfunction _TreeBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\n_TreeBuilder.prototype._index;\n/** @type {?} */\n_TreeBuilder.prototype._peek;\n/** @type {?} */\n_TreeBuilder.prototype._rootNodes;\n/** @type {?} */\n_TreeBuilder.prototype._errors;\n/** @type {?} */\n_TreeBuilder.prototype._elementStack;\n/** @type {?} */\n_TreeBuilder.prototype.tokens;\n/** @type {?} */\n_TreeBuilder.prototype.getTagDefinition;\n}\n\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack: any[], element: any): boolean {\n  return stack.length > 0 && stack[stack.length - 1] === element;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {utf8Encode} from '../util';\n\nimport * as i18n from './i18n_ast';\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message: i18n.Message): string {\n  return message.id || sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function decimalDigest(message: i18n.Message): string {\n  if (message.id) {\n    return message.id;\n  }\n\n  const /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n  const /** @type {?} */ parts = message.nodes.map(a => a.visit(visitor, null));\n  return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n * \n * The visitor is also used in the i18n parser tests\n * \n * \\@internal\n */\nclass _SerializerVisitor implements i18n.Visitor {\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context: any): any { return text.value; }\n/**\n * @param {?} container\n * @param {?} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context: any): any {\n    return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context: any): any {\n    const /** @type {?} */ strCases =\n        Object.keys(icu.cases).map((k: string) => `${k} {${icu.cases[k].visit(this)}}`);\n    return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n  }\n/**\n * @param {?} ph\n * @param {?} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context: any): any {\n    return ph.isVoid ?\n        `<ph tag name=\"${ph.startName}\"/>` :\n        `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n  }\n/**\n * @param {?} ph\n * @param {?} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context: any): any {\n    return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n  }\n}\n\nconst /** @type {?} */ serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nexport function serializeNodes(nodes: i18n.Node[]): string[] {\n  return nodes.map(a => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n * \n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n * \n * \\@internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context: any): any {\n    let /** @type {?} */ strCases = Object.keys(icu.cases).map((k: string) => `${k} {${icu.cases[k].visit(this)}}`);\n    // Do not take the expression into account\n    return `{${icu.type}, ${strCases.join(', ')}}`;\n  }\n}\n/**\n * Compute the SHA1 of the given string\n * \n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n * \n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nexport function sha1(str: string): string {\n  const /** @type {?} */ utf8 = utf8Encode(str);\n  const /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n  const /** @type {?} */ len = utf8.length * 8;\n\n  const /** @type {?} */ w = new Array(80);\n  let [a, b, c, d, e]: number[] = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  words32[len >> 5] |= 0x80 << (24 - len % 32);\n  words32[((len + 64 >> 9) << 4) + 15] = len;\n\n  for (let /** @type {?} */ i = 0; i < words32.length; i += 16) {\n    const [h0, h1, h2, h3, h4]: number[] = [a, b, c, d, e];\n\n    for (let /** @type {?} */ j = 0; j < 80; j++) {\n      if (j < 16) {\n        w[j] = words32[i + j];\n      } else {\n        w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n      }\n\n      const [f, k] = fk(j, b, c, d);\n      const /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n      [e, d, c, b, a] = [d, c, rol32(b, 30), a, temp];\n    }\n\n    [a, b, c, d, e] = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)];\n  }\n\n  return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index: number, b: number, c: number, d: number): [number, number] {\n  if (index < 20) {\n    return [(b & c) | (~b & d), 0x5a827999];\n  }\n\n  if (index < 40) {\n    return [b ^ c ^ d, 0x6ed9eba1];\n  }\n\n  if (index < 60) {\n    return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n  }\n\n  return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n * \n * The output is 64 bit number encoded as a decimal string\n * \n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nexport function fingerprint(str: string): [number, number] {\n  const /** @type {?} */ utf8 = utf8Encode(str);\n\n  let [hi, lo] = [hash32(utf8, 0), hash32(utf8, 102072)];\n\n  if (hi == 0 && (lo == 0 || lo == 1)) {\n    hi = hi ^ 0x130f9bef;\n    lo = lo ^ -0x6b5f56d8;\n  }\n\n  return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nexport function computeMsgId(msg: string, meaning: string): string {\n  let [hi, lo] = fingerprint(msg);\n\n  if (meaning) {\n    const [him, lom] = fingerprint(meaning);\n    [hi, lo] = add64(rol64([hi, lo], 1), [him, lom]);\n  }\n\n  return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str: string, c: number): number {\n  let [a, b] = [0x9e3779b9, 0x9e3779b9];\n  let /** @type {?} */ i: number;\n\n  const /** @type {?} */ len = str.length;\n\n  for (i = 0; i + 12 <= len; i += 12) {\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    c = add32(c, wordAt(str, i + 8, Endian.Little));\n    [a, b, c] = mix([a, b, c]);\n  }\n\n  a = add32(a, wordAt(str, i, Endian.Little));\n  b = add32(b, wordAt(str, i + 4, Endian.Little));\n  // the first byte of c is reserved for the length\n  c = add32(c, len);\n  c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n\n  return mix([a, b, c])[2];\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix([a, b, c]: [number, number, number]): [number, number, number] {\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 13;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 8;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 13;\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 12;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 16;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 5;\n  a = sub32(a, b); a = sub32(a, c); a ^= c >>> 3;\n  b = sub32(b, c); b = sub32(b, a); b ^= a << 10;\n  c = sub32(c, a); c = sub32(c, b); c ^= b >>> 15;\n  return [a, b, c];\n}\ntype Endian = number;\nlet Endian: any = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a: number, b: number): number {\n  return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a: number, b: number): [number, number] {\n  const /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n  const /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n  return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64([ah, al]: [number, number], [bh, bl]: [number, number]): [number, number] {\n  const [carry, l] = add32to64(al, bl);\n  const /** @type {?} */ h = add32(add32(ah, bh), carry);\n  return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a: number, b: number): number {\n  const /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n  const /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n  return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a: number, count: number): number {\n  return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64([hi, lo]: [number, number], count: number): [number, number] {\n  const /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n  const /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n  return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str: string, endian: Endian): number[] {\n  const /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n\n  for (let /** @type {?} */ i = 0; i < words32.length; i++) {\n    words32[i] = wordAt(str, i * 4, endian);\n  }\n\n  return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str: string, index: number): number {\n  return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str: string, index: number, endian: Endian): number {\n  let /** @type {?} */ word = 0;\n  if (endian === Endian.Big) {\n    for (let /** @type {?} */ i = 0; i < 4; i++) {\n      word += byteAt(str, index + i) << (24 - 8 * i);\n    }\n  } else {\n    for (let /** @type {?} */ i = 0; i < 4; i++) {\n      word += byteAt(str, index + i) << 8 * i;\n    }\n  }\n  return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32: number[]): string {\n  return words32.reduce((str, word) => str + word32ToByteString(word), '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word: number): string {\n  let /** @type {?} */ str = '';\n  for (let /** @type {?} */ i = 0; i < 4; i++) {\n    str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n  }\n  return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str: string): string {\n  let /** @type {?} */ hex: string = '';\n  for (let /** @type {?} */ i = 0; i < str.length; i++) {\n    const /** @type {?} */ b = byteAt(str, i);\n    hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n  }\n  return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str: string): string {\n  let /** @type {?} */ decimal = '';\n  let /** @type {?} */ toThePower = '1';\n\n  for (let /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n    decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n    toThePower = numberTimesBigInt(256, toThePower);\n  }\n\n  return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x: string, y: string): string {\n  let /** @type {?} */ sum = '';\n  const /** @type {?} */ len = Math.max(x.length, y.length);\n  for (let /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n    const /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n    if (tmpSum >= 10) {\n      carry = 1;\n      sum += tmpSum - 10;\n    } else {\n      carry = 0;\n      sum += tmpSum;\n    }\n  }\n\n  return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num: number, b: string): string {\n  let /** @type {?} */ product = '';\n  let /** @type {?} */ bToThePower = b;\n  for (; num !== 0; num = num >>> 1) {\n    if (num & 1) product = addBigInt(product, bToThePower);\n    bToThePower = addBigInt(bToThePower, bToThePower);\n  }\n  return product;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\nexport class Message {\n  sources: MessageSpan[];\n/**\n * @param {?} nodes message AST\n * @param {?} placeholders maps placeholder names to static content\n * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n * @param {?} meaning\n * @param {?} description\n * @param {?} id\n */\nconstructor(\npublic nodes: Node[],\npublic placeholders: {[phName: string]: string},\npublic placeholderToMessage: {[phName: string]: Message},\npublic meaning: string,\npublic description: string,\npublic id: string) {\n    if (nodes.length) {\n      this.sources = [{\n        filePath: nodes[0].sourceSpan.start.file.url,\n        startLine: nodes[0].sourceSpan.start.line + 1,\n        startCol: nodes[0].sourceSpan.start.col + 1,\n        endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n        endCol: nodes[0].sourceSpan.start.col + 1\n      }];\n    } else {\n      this.sources = [];\n    }\n  }\n}\n\nfunction Message_tsickle_Closure_declarations() {\n/** @type {?} */\nMessage.prototype.sources;\n/** @type {?} */\nMessage.prototype.nodes;\n/** @type {?} */\nMessage.prototype.placeholders;\n/** @type {?} */\nMessage.prototype.placeholderToMessage;\n/** @type {?} */\nMessage.prototype.meaning;\n/** @type {?} */\nMessage.prototype.description;\n/** @type {?} */\nMessage.prototype.id;\n}\n\n/**\n * @record\n */\nexport function MessageSpan() {}\n\n\nfunction MessageSpan_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageSpan.prototype.filePath;\n/** @type {?} */\nMessageSpan.prototype.startLine;\n/** @type {?} */\nMessageSpan.prototype.startCol;\n/** @type {?} */\nMessageSpan.prototype.endLine;\n/** @type {?} */\nMessageSpan.prototype.endCol;\n}\n\n\n// line and columns indexes are 1 based\nexport interface MessageSpan {\n  filePath: string;\n  startLine: number;\n  startCol: number;\n  endLine: number;\n  endCol: number;\n}\n/**\n * @record\n */\nexport function Node() {}\n\n\nfunction Node_tsickle_Closure_declarations() {\n/** @type {?} */\nNode.prototype.sourceSpan;\n/** @type {?} */\nNode.prototype.visit;\n}\n\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context?: any): any;\n}\nexport class Text implements Node {\n/**\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitText(this, context); }\n}\n\nfunction Text_tsickle_Closure_declarations() {\n/** @type {?} */\nText.prototype.value;\n/** @type {?} */\nText.prototype.sourceSpan;\n}\n\nexport class Container implements Node {\n/**\n * @param {?} children\n * @param {?} sourceSpan\n */\nconstructor(public children: Node[],\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitContainer(this, context); }\n}\n\nfunction Container_tsickle_Closure_declarations() {\n/** @type {?} */\nContainer.prototype.children;\n/** @type {?} */\nContainer.prototype.sourceSpan;\n}\n\nexport class Icu implements Node {\npublic expressionPlaceholder: string;\n/**\n * @param {?} expression\n * @param {?} type\n * @param {?} cases\n * @param {?} sourceSpan\n */\nconstructor(\npublic expression: string,\npublic type: string,\npublic cases: {[k: string]: Node},\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitIcu(this, context); }\n}\n\nfunction Icu_tsickle_Closure_declarations() {\n/** @type {?} */\nIcu.prototype.expressionPlaceholder;\n/** @type {?} */\nIcu.prototype.expression;\n/** @type {?} */\nIcu.prototype.type;\n/** @type {?} */\nIcu.prototype.cases;\n/** @type {?} */\nIcu.prototype.sourceSpan;\n}\n\nexport class TagPlaceholder implements Node {\n/**\n * @param {?} tag\n * @param {?} attrs\n * @param {?} startName\n * @param {?} closeName\n * @param {?} children\n * @param {?} isVoid\n * @param {?} sourceSpan\n */\nconstructor(\npublic tag: string,\npublic attrs: {[k: string]: string},\npublic startName: string,\npublic closeName: string,\npublic children: Node[],\npublic isVoid: boolean,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitTagPlaceholder(this, context); }\n}\n\nfunction TagPlaceholder_tsickle_Closure_declarations() {\n/** @type {?} */\nTagPlaceholder.prototype.tag;\n/** @type {?} */\nTagPlaceholder.prototype.attrs;\n/** @type {?} */\nTagPlaceholder.prototype.startName;\n/** @type {?} */\nTagPlaceholder.prototype.closeName;\n/** @type {?} */\nTagPlaceholder.prototype.children;\n/** @type {?} */\nTagPlaceholder.prototype.isVoid;\n/** @type {?} */\nTagPlaceholder.prototype.sourceSpan;\n}\n\nexport class Placeholder implements Node {\n/**\n * @param {?} value\n * @param {?} name\n * @param {?} sourceSpan\n */\nconstructor(public value: string,\npublic name: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitPlaceholder(this, context); }\n}\n\nfunction Placeholder_tsickle_Closure_declarations() {\n/** @type {?} */\nPlaceholder.prototype.value;\n/** @type {?} */\nPlaceholder.prototype.name;\n/** @type {?} */\nPlaceholder.prototype.sourceSpan;\n}\n\nexport class IcuPlaceholder implements Node {\n/**\n * @param {?} value\n * @param {?} name\n * @param {?} sourceSpan\n */\nconstructor(public value: Icu,\npublic name: string,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nvisit(visitor: Visitor, context?: any): any { return visitor.visitIcuPlaceholder(this, context); }\n}\n\nfunction IcuPlaceholder_tsickle_Closure_declarations() {\n/** @type {?} */\nIcuPlaceholder.prototype.value;\n/** @type {?} */\nIcuPlaceholder.prototype.name;\n/** @type {?} */\nIcuPlaceholder.prototype.sourceSpan;\n}\n\n/**\n * @record\n */\nexport function Visitor() {}\n\n\nfunction Visitor_tsickle_Closure_declarations() {\n/** @type {?} */\nVisitor.prototype.visitText;\n/** @type {?} */\nVisitor.prototype.visitContainer;\n/** @type {?} */\nVisitor.prototype.visitIcu;\n/** @type {?} */\nVisitor.prototype.visitTagPlaceholder;\n/** @type {?} */\nVisitor.prototype.visitPlaceholder;\n/** @type {?} */\nVisitor.prototype.visitIcuPlaceholder;\n}\n\n\nexport interface Visitor {\n  visitText(text: Text, context?: any): any;\n  visitContainer(container: Container, context?: any): any;\n  visitIcu(icu: Icu, context?: any): any;\n  visitTagPlaceholder(ph: TagPlaceholder, context?: any): any;\n  visitPlaceholder(ph: Placeholder, context?: any): any;\n  visitIcuPlaceholder(ph: IcuPlaceholder, context?: any): any;\n}\nexport class CloneVisitor implements Visitor {\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: Text, context?: any): Text { return new Text(text.value, text.sourceSpan); }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: Container, context?: any): Container {\n    const /** @type {?} */ children = container.children.map(n => n.visit(this, context));\n    return new Container(children, container.sourceSpan);\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: Icu, context?: any): Icu {\n    const /** @type {?} */ cases: {[k: string]: Node} = {};\n    Object.keys(icu.cases).forEach(key => cases[key] = icu.cases[key].visit(this, context));\n    const /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n    msg.expressionPlaceholder = icu.expressionPlaceholder;\n    return msg;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: TagPlaceholder, context?: any): TagPlaceholder {\n    const /** @type {?} */ children = ph.children.map(n => n.visit(this, context));\n    return new TagPlaceholder(\n        ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: Placeholder, context?: any): Placeholder {\n    return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: IcuPlaceholder, context?: any): IcuPlaceholder {\n    return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n  }\n}\nexport class RecurseVisitor implements Visitor {\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: Text, context?: any): any{};\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: Container, context?: any): any {\n    container.children.forEach(child => child.visit(this));\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: Icu, context?: any): any {\n    Object.keys(icu.cases).forEach(k => { icu.cases[k].visit(this); });\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: TagPlaceholder, context?: any): any {\n    ph.children.forEach(child => child.visit(this));\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: Placeholder, context?: any): any{};\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: IcuPlaceholder, context?: any): any{};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst /** @type {?} */ TAG_TO_PLACEHOLDER_NAMES: {[k: string]: string} = {\n  'A': 'LINK',\n  'B': 'BOLD_TEXT',\n  'BR': 'LINE_BREAK',\n  'EM': 'EMPHASISED_TEXT',\n  'H1': 'HEADING_LEVEL1',\n  'H2': 'HEADING_LEVEL2',\n  'H3': 'HEADING_LEVEL3',\n  'H4': 'HEADING_LEVEL4',\n  'H5': 'HEADING_LEVEL5',\n  'H6': 'HEADING_LEVEL6',\n  'HR': 'HORIZONTAL_RULE',\n  'I': 'ITALIC_TEXT',\n  'LI': 'LIST_ITEM',\n  'LINK': 'MEDIA_LINK',\n  'OL': 'ORDERED_LIST',\n  'P': 'PARAGRAPH',\n  'Q': 'QUOTATION',\n  'S': 'STRIKETHROUGH_TEXT',\n  'SMALL': 'SMALL_TEXT',\n  'SUB': 'SUBSTRIPT',\n  'SUP': 'SUPERSCRIPT',\n  'TBODY': 'TABLE_BODY',\n  'TD': 'TABLE_CELL',\n  'TFOOT': 'TABLE_FOOTER',\n  'TH': 'TABLE_HEADER_CELL',\n  'THEAD': 'TABLE_HEADER',\n  'TR': 'TABLE_ROW',\n  'TT': 'MONOSPACED_TEXT',\n  'U': 'UNDERLINED_TEXT',\n  'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n * \n * Returns the same placeholder name when the content is identical.\n * \n * \\@internal\n */\nexport class PlaceholderRegistry {\nprivate _placeHolderNameCounts: {[k: string]: number} = {};\nprivate _signatureToName: {[k: string]: string} = {};\n/**\n * @param {?} tag\n * @param {?} attrs\n * @param {?} isVoid\n * @return {?}\n */\ngetStartTagPlaceholderName(tag: string, attrs: {[k: string]: string}, isVoid: boolean): string {\n    const /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const /** @type {?} */ upperTag = tag.toUpperCase();\n    const /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n    const /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : `START_${baseName}`);\n\n    this._signatureToName[signature] = name;\n\n    return name;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\ngetCloseTagPlaceholderName(tag: string): string {\n    const /** @type {?} */ signature = this._hashClosingTag(tag);\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const /** @type {?} */ upperTag = tag.toUpperCase();\n    const /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n    const /** @type {?} */ name = this._generateUniqueName(`CLOSE_${baseName}`);\n\n    this._signatureToName[signature] = name;\n\n    return name;\n  }\n/**\n * @param {?} name\n * @param {?} content\n * @return {?}\n */\ngetPlaceholderName(name: string, content: string): string {\n    const /** @type {?} */ upperName = name.toUpperCase();\n    const /** @type {?} */ signature = `PH: ${upperName}=${content}`;\n    if (this._signatureToName[signature]) {\n      return this._signatureToName[signature];\n    }\n\n    const /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n    this._signatureToName[signature] = uniqueName;\n\n    return uniqueName;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetUniquePlaceholder(name: string): string {\n    return this._generateUniqueName(name.toUpperCase());\n  }\n/**\n * @param {?} tag\n * @param {?} attrs\n * @param {?} isVoid\n * @return {?}\n */\n\nprivate _hashTag(tag: string, attrs: {[k: string]: string}, isVoid: boolean): string {\n    const /** @type {?} */ start = `<${tag}`;\n    const /** @type {?} */ strAttrs = Object.keys(attrs).sort().map((name) => ` ${name}=${attrs[name]}`).join('');\n    const /** @type {?} */ end = isVoid ? '/>' : `></${tag}>`;\n\n    return start + strAttrs + end;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\n\nprivate _hashClosingTag(tag: string): string { return this._hashTag(`/${tag}`, {}, false); }\n/**\n * @param {?} base\n * @return {?}\n */\n\nprivate _generateUniqueName(base: string): string {\n    const /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n    if (!seen) {\n      this._placeHolderNameCounts[base] = 1;\n      return base;\n    }\n\n    const /** @type {?} */ id = this._placeHolderNameCounts[base];\n    this._placeHolderNameCounts[base] = id + 1;\n    return `${base}_${id}`;\n  }\n}\n\nfunction PlaceholderRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nPlaceholderRegistry.prototype._placeHolderNameCounts;\n/** @type {?} */\nPlaceholderRegistry.prototype._signatureToName;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Lexer as ExpressionLexer} from '../expression_parser/lexer';\nimport {Parser as ExpressionParser} from '../expression_parser/parser';\nimport * as html from '../ml_parser/ast';\nimport {getHtmlTagDefinition} from '../ml_parser/html_tags';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseSourceSpan} from '../parse_util';\n\nimport * as i18n from './i18n_ast';\nimport {PlaceholderRegistry} from './serializers/placeholder';\n\nconst /** @type {?} */ _expParser = new ExpressionParser(new ExpressionLexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nexport function createI18nMessageFactory(interpolationConfig: InterpolationConfig): (\n    nodes: html.Node[], meaning: string, description: string, id: string) => i18n.Message {\n  const /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n\n  return (nodes: html.Node[], meaning: string, description: string, id: string) =>\n             visitor.toI18nMessage(nodes, meaning, description, id);\n}\nclass _I18nVisitor implements html.Visitor {\nprivate _isIcu: boolean;\nprivate _icuDepth: number;\nprivate _placeholderRegistry: PlaceholderRegistry;\nprivate _placeholderToContent: {[phName: string]: string};\nprivate _placeholderToMessage: {[phName: string]: i18n.Message};\n/**\n * @param {?} _expressionParser\n * @param {?} _interpolationConfig\n */\nconstructor(\nprivate _expressionParser: ExpressionParser,\nprivate _interpolationConfig: InterpolationConfig) {}\n/**\n * @param {?} nodes\n * @param {?} meaning\n * @param {?} description\n * @param {?} id\n * @return {?}\n */\n\npublic toI18nMessage(nodes: html.Node[], meaning: string, description: string, id: string):\n      i18n.Message {\n    this._isIcu = nodes.length == 1 && nodes[0] instanceof html.Expansion;\n    this._icuDepth = 0;\n    this._placeholderRegistry = new PlaceholderRegistry();\n    this._placeholderToContent = {};\n    this._placeholderToMessage = {};\n\n    const /** @type {?} */ i18nodes: i18n.Node[] = html.visitAll(this, nodes, {});\n\n    return new i18n.Message(\n        i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n  }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: html.Element, context: any): i18n.Node {\n    const /** @type {?} */ children = html.visitAll(this, el.children);\n    const /** @type {?} */ attrs: {[k: string]: string} = {};\n    el.attrs.forEach(attr => {\n      // Do not visit the attributes, translatable ones are top-level ASTs\n      attrs[attr.name] = attr.value;\n    });\n\n    const /** @type {?} */ isVoid: boolean = getHtmlTagDefinition(el.name).isVoid;\n    const /** @type {?} */ startPhName =\n        this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n    this._placeholderToContent[startPhName] = /** @type {?} */(( el.sourceSpan)).toString();\n\n    let /** @type {?} */ closePhName = '';\n\n    if (!isVoid) {\n      closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n      this._placeholderToContent[closePhName] = `</${el.name}>`;\n    }\n\n    return new i18n.TagPlaceholder(\n        el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */(( el.sourceSpan)));\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): i18n.Node {\n    return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: html.Text, context: any): i18n.Node {\n    return this._visitTextWithInterpolation(text.value, /** @type {?} */(( text.sourceSpan)));\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): i18n.Node|null { return null; }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: html.Expansion, context: any): i18n.Node {\n    this._icuDepth++;\n    const /** @type {?} */ i18nIcuCases: {[k: string]: i18n.Node} = {};\n    const /** @type {?} */ i18nIcu = new i18n.Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n    icu.cases.forEach((caze): void => {\n      i18nIcuCases[caze.value] = new i18n.Container(\n          caze.expression.map((node) => node.visit(this, {})), caze.expSourceSpan);\n    });\n    this._icuDepth--;\n\n    if (this._isIcu || this._icuDepth > 0) {\n      // Returns an ICU node when:\n      // - the message (vs a part of the message) is an ICU message, or\n      // - the ICU message is nested.\n      const /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(`VAR_${icu.type}`);\n      i18nIcu.expressionPlaceholder = expPh;\n      this._placeholderToContent[expPh] = icu.switchValue;\n\n      return i18nIcu;\n    }\n\n    // Else returns a placeholder\n    // ICU placeholders should not be replaced with their original content but with the their\n    // translations. We need to create a new visitor (they are not re-entrant) to compute the\n    // message id.\n    // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n    const /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n    const /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n    this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n    return new i18n.IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: html.ExpansionCase, context: any): i18n.Node {\n    throw new Error('Unreachable code');\n  }\n/**\n * @param {?} text\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _visitTextWithInterpolation(text: string, sourceSpan: ParseSourceSpan): i18n.Node {\n    const /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(\n        text, sourceSpan.start.toString(), this._interpolationConfig);\n\n    if (!splitInterpolation) {\n      // No expression, return a single text\n      return new i18n.Text(text, sourceSpan);\n    }\n\n    // Return a group of text + expressions\n    const /** @type {?} */ nodes: i18n.Node[] = [];\n    const /** @type {?} */ container = new i18n.Container(nodes, sourceSpan);\n    const {start: sDelimiter, end: eDelimiter} = this._interpolationConfig;\n\n    for (let /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n      const /** @type {?} */ expression = splitInterpolation.expressions[i];\n      const /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n      const /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n\n      if (splitInterpolation.strings[i].length) {\n        // No need to add empty strings\n        nodes.push(new i18n.Text(splitInterpolation.strings[i], sourceSpan));\n      }\n\n      nodes.push(new i18n.Placeholder(expression, phName, sourceSpan));\n      this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n    }\n\n    // The last index contains no expression\n    const /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n    if (splitInterpolation.strings[lastStringIdx].length) {\n      nodes.push(new i18n.Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n    }\n    return container;\n  }\n}\n\nfunction _I18nVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_I18nVisitor.prototype._isIcu;\n/** @type {?} */\n_I18nVisitor.prototype._icuDepth;\n/** @type {?} */\n_I18nVisitor.prototype._placeholderRegistry;\n/** @type {?} */\n_I18nVisitor.prototype._placeholderToContent;\n/** @type {?} */\n_I18nVisitor.prototype._placeholderToMessage;\n/** @type {?} */\n_I18nVisitor.prototype._expressionParser;\n/** @type {?} */\n_I18nVisitor.prototype._interpolationConfig;\n}\n\n\nconst /** @type {?} */ _CUSTOM_PH_EXP =\n    /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input: string): string {\n  return input.split(_CUSTOM_PH_EXP)[2];\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n/**\n * An i18n error.\n */\nexport class I18nError extends ParseError {\n/**\n * @param {?} span\n * @param {?} msg\n */\nconstructor(span: ParseSourceSpan, msg: string) { super(span, msg); }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as html from '../ml_parser/ast';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\n\nimport * as i18n from './i18n_ast';\nimport {createI18nMessageFactory} from './i18n_parser';\nimport {I18nError} from './parse_util';\nimport {TranslationBundle} from './translation_bundle';\n\nconst /** @type {?} */ _I18N_ATTR = 'i18n';\nconst /** @type {?} */ _I18N_ATTR_PREFIX = 'i18n-';\nconst /** @type {?} */ _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nconst /** @type {?} */ MEANING_SEPARATOR = '|';\nconst /** @type {?} */ ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function extractMessages(\n    nodes: html.Node[], interpolationConfig: InterpolationConfig, implicitTags: string[],\n    implicitAttrs: {[k: string]: string[]}): ExtractionResult {\n  const /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n  return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function mergeTranslations(\n    nodes: html.Node[], translations: TranslationBundle, interpolationConfig: InterpolationConfig,\n    implicitTags: string[], implicitAttrs: {[k: string]: string[]}): ParseTreeResult {\n  const /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n  return visitor.merge(nodes, translations, interpolationConfig);\n}\nexport class ExtractionResult {\n/**\n * @param {?} messages\n * @param {?} errors\n */\nconstructor(public messages: i18n.Message[],\npublic errors: I18nError[]) {}\n}\n\nfunction ExtractionResult_tsickle_Closure_declarations() {\n/** @type {?} */\nExtractionResult.prototype.messages;\n/** @type {?} */\nExtractionResult.prototype.errors;\n}\n\ntype _VisitorMode = number;\nlet _VisitorMode: any = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n * \n * \\@internal\n */\nclass _Visitor implements html.Visitor {\nprivate _depth: number;\nprivate _inI18nNode: boolean;\nprivate _inImplicitNode: boolean;\nprivate _inI18nBlock: boolean;\nprivate _blockMeaningAndDesc: string;\nprivate _blockChildren: html.Node[];\nprivate _blockStartDepth: number;\nprivate _inIcu: boolean;\nprivate _msgCountAtSectionStart: number|undefined;\nprivate _errors: I18nError[];\nprivate _mode: _VisitorMode;\nprivate _messages: i18n.Message[];\nprivate _translations: TranslationBundle;\nprivate _createI18nMessage:\n      (msg: html.Node[], meaning: string, description: string, id: string) => i18n.Message;\n/**\n * @param {?} _implicitTags\n * @param {?} _implicitAttrs\n */\nconstructor(private _implicitTags: string[],\nprivate _implicitAttrs: {[k: string]: string[]}) {}\n/**\n * Extracts the messages from the tree\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @return {?}\n */\nextract(nodes: html.Node[], interpolationConfig: InterpolationConfig): ExtractionResult {\n    this._init(_VisitorMode.Extract, interpolationConfig);\n\n    nodes.forEach(node => node.visit(this, null));\n\n    if (this._inI18nBlock) {\n      this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n    }\n\n    return new ExtractionResult(this._messages, this._errors);\n  }\n/**\n * Returns a tree where all translatable nodes are translated\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @return {?}\n */\nmerge(\n      nodes: html.Node[], translations: TranslationBundle,\n      interpolationConfig: InterpolationConfig): ParseTreeResult {\n    this._init(_VisitorMode.Merge, interpolationConfig);\n    this._translations = translations;\n\n    // Construct a single fake root element\n    const /** @type {?} */ wrapper = new html.Element('wrapper', [], nodes, /** @type {?} */(( undefined)), undefined, undefined);\n\n    const /** @type {?} */ translatedNode = wrapper.visit(this, null);\n\n    if (this._inI18nBlock) {\n      this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n    }\n\n    return new ParseTreeResult(translatedNode.children, this._errors);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: html.ExpansionCase, context: any): any {\n    // Parse cases for translatable html attributes\n    const /** @type {?} */ expression = html.visitAll(this, icuCase.expression, context);\n\n    if (this._mode === _VisitorMode.Merge) {\n      return new html.ExpansionCase(\n          icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan,\n          icuCase.expSourceSpan);\n    }\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: html.Expansion, context: any): html.Expansion {\n    this._mayBeAddBlockChildren(icu);\n\n    const /** @type {?} */ wasInIcu = this._inIcu;\n\n    if (!this._inIcu) {\n      // nested ICU messages should not be extracted but top-level translated as a whole\n      if (this._isInTranslatableSection) {\n        this._addMessage([icu]);\n      }\n      this._inIcu = true;\n    }\n\n    const /** @type {?} */ cases = html.visitAll(this, icu.cases, context);\n\n    if (this._mode === _VisitorMode.Merge) {\n      icu = new html.Expansion(\n          icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n    }\n\n    this._inIcu = wasInIcu;\n\n    return icu;\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any {\n    const /** @type {?} */ isOpening = _isOpeningComment(comment);\n\n    if (isOpening && this._isInTranslatableSection) {\n      this._reportError(comment, 'Could not start a block inside a translatable section');\n      return;\n    }\n\n    const /** @type {?} */ isClosing = _isClosingComment(comment);\n\n    if (isClosing && !this._inI18nBlock) {\n      this._reportError(comment, 'Trying to close an unopened block');\n      return;\n    }\n\n    if (!this._inI18nNode && !this._inIcu) {\n      if (!this._inI18nBlock) {\n        if (isOpening) {\n          this._inI18nBlock = true;\n          this._blockStartDepth = this._depth;\n          this._blockChildren = [];\n          this._blockMeaningAndDesc = /** @type {?} */((\n              comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n          this._openTranslatableSection(comment);\n        }\n      } else {\n        if (isClosing) {\n          if (this._depth == this._blockStartDepth) {\n            this._closeTranslatableSection(comment, this._blockChildren);\n            this._inI18nBlock = false;\n            const /** @type {?} */ message = /** @type {?} */(( this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n            // merge attributes in sections\n            const /** @type {?} */ nodes = this._translateMessage(comment, message);\n            return html.visitAll(this, nodes);\n          } else {\n            this._reportError(comment, 'I18N blocks should not cross element boundaries');\n            return;\n          }\n        }\n      }\n    }\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: html.Text, context: any): html.Text {\n    if (this._isInTranslatableSection) {\n      this._mayBeAddBlockChildren(text);\n    }\n    return text;\n  }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: html.Element, context: any): html.Element|null {\n    this._mayBeAddBlockChildren(el);\n    this._depth++;\n    const /** @type {?} */ wasInI18nNode = this._inI18nNode;\n    const /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n    let /** @type {?} */ childNodes: html.Node[] = [];\n    let /** @type {?} */ translatedChildNodes: html.Node[] = /** @type {?} */(( undefined));\n\n    // Extract:\n    // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n    // - ICU messages\n    const /** @type {?} */ i18nAttr = _getI18nAttr(el);\n    const /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n    const /** @type {?} */ isImplicit = this._implicitTags.some(tag => el.name === tag) && !this._inIcu &&\n        !this._isInTranslatableSection;\n    const /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n    this._inImplicitNode = wasInImplicitNode || isImplicit;\n\n    if (!this._isInTranslatableSection && !this._inIcu) {\n      if (i18nAttr || isTopLevelImplicit) {\n        this._inI18nNode = true;\n        const /** @type {?} */ message = /** @type {?} */(( this._addMessage(el.children, i18nMeta)));\n        translatedChildNodes = this._translateMessage(el, message);\n      }\n\n      if (this._mode == _VisitorMode.Extract) {\n        const /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n        if (isTranslatable) this._openTranslatableSection(el);\n        html.visitAll(this, el.children);\n        if (isTranslatable) this._closeTranslatableSection(el, el.children);\n      }\n    } else {\n      if (i18nAttr || isTopLevelImplicit) {\n        this._reportError(\n            el, 'Could not mark an element as translatable inside a translatable section');\n      }\n\n      if (this._mode == _VisitorMode.Extract) {\n        // Descend into child nodes for extraction\n        html.visitAll(this, el.children);\n      }\n    }\n\n    if (this._mode === _VisitorMode.Merge) {\n      const /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n      visitNodes.forEach(child => {\n        const /** @type {?} */ visited = child.visit(this, context);\n        if (visited && !this._isInTranslatableSection) {\n          // Do not add the children from translatable sections (= i18n blocks here)\n          // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n          childNodes = childNodes.concat(visited);\n        }\n      });\n    }\n\n    this._visitAttributesOf(el);\n\n    this._depth--;\n    this._inI18nNode = wasInI18nNode;\n    this._inImplicitNode = wasInImplicitNode;\n\n    if (this._mode === _VisitorMode.Merge) {\n      const /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n      return new html.Element(\n          el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan,\n          el.endSourceSpan);\n    }\n    return null;\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any {\n    throw new Error('unreachable code');\n  }\n/**\n * @param {?} mode\n * @param {?} interpolationConfig\n * @return {?}\n */\n\nprivate _init(mode: _VisitorMode, interpolationConfig: InterpolationConfig): void {\n    this._mode = mode;\n    this._inI18nBlock = false;\n    this._inI18nNode = false;\n    this._depth = 0;\n    this._inIcu = false;\n    this._msgCountAtSectionStart = undefined;\n    this._errors = [];\n    this._messages = [];\n    this._inImplicitNode = false;\n    this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n  }\n/**\n * @param {?} el\n * @return {?}\n */\n\nprivate _visitAttributesOf(el: html.Element): void {\n    const /** @type {?} */ explicitAttrNameToValue: {[k: string]: string} = {};\n    const /** @type {?} */ implicitAttrNames: string[] = this._implicitAttrs[el.name] || [];\n\n    el.attrs.filter(attr => attr.name.startsWith(_I18N_ATTR_PREFIX))\n        .forEach(\n            attr => explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value);\n\n    el.attrs.forEach(attr => {\n      if (attr.name in explicitAttrNameToValue) {\n        this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n      } else if (implicitAttrNames.some(name => attr.name === name)) {\n        this._addMessage([attr]);\n      }\n    });\n  }\n/**\n * @param {?} ast\n * @param {?=} msgMeta\n * @return {?}\n */\n\nprivate _addMessage(ast: html.Node[], msgMeta?: string): i18n.Message|null {\n    if (ast.length == 0 ||\n        ast.length == 1 && ast[0] instanceof html.Attribute && !( /** @type {?} */((<html.Attribute>ast[0]))).value) {\n      // Do not create empty messages\n      return null;\n    }\n\n    const {meaning, description, id} = _parseMessageMeta(msgMeta);\n    const /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n    this._messages.push(message);\n    return message;\n  }\n/**\n * @param {?} el\n * @param {?} message\n * @return {?}\n */\n\nprivate _translateMessage(el: html.Node, message: i18n.Message): html.Node[] {\n    if (message && this._mode === _VisitorMode.Merge) {\n      const /** @type {?} */ nodes = this._translations.get(message);\n\n      if (nodes) {\n        return nodes;\n      }\n\n      this._reportError(\n          el, `Translation unavailable for message id=\"${this._translations.digest(message)}\"`);\n    }\n\n    return [];\n  }\n/**\n * @param {?} el\n * @return {?}\n */\n\nprivate _translateAttributes(el: html.Element): html.Attribute[] {\n    const /** @type {?} */ attributes = el.attrs;\n    const /** @type {?} */ i18nParsedMessageMeta:\n        {[name: string]: {meaning: string, description: string, id: string}} = {};\n\n    attributes.forEach(attr => {\n      if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            _parseMessageMeta(attr.value);\n      }\n    });\n\n    const /** @type {?} */ translatedAttributes: html.Attribute[] = [];\n\n    attributes.forEach((attr) => {\n      if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        // strip i18n specific attributes\n        return;\n      }\n\n      if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n        const {meaning, description, id} = i18nParsedMessageMeta[attr.name];\n        const /** @type {?} */ message: i18n.Message = this._createI18nMessage([attr], meaning, description, id);\n        const /** @type {?} */ nodes = this._translations.get(message);\n        if (nodes) {\n          if (nodes.length == 0) {\n            translatedAttributes.push(new html.Attribute(attr.name, '', attr.sourceSpan));\n          } else if (nodes[0] instanceof html.Text) {\n            const /** @type {?} */ value = ( /** @type {?} */((nodes[0] as html.Text))).value;\n            translatedAttributes.push(new html.Attribute(attr.name, value, attr.sourceSpan));\n          } else {\n            this._reportError(\n                el,\n                `Unexpected translation for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n          }\n        } else {\n          this._reportError(\n              el,\n              `Translation unavailable for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n        }\n      } else {\n        translatedAttributes.push(attr);\n      }\n    });\n\n    return translatedAttributes;\n  }\n/**\n * Add the node as a child of the block when:\n * - we are in a block,\n * - we are not inside a ICU message (those are handled separately),\n * - the node is a \"direct child\" of the block\n * @param {?} node\n * @return {?}\n */\n\nprivate _mayBeAddBlockChildren(node: html.Node): void {\n    if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n      this._blockChildren.push(node);\n    }\n  }\n/**\n * Marks the start of a section, see `_closeTranslatableSection`\n * @param {?} node\n * @return {?}\n */\n\nprivate _openTranslatableSection(node: html.Node): void {\n    if (this._isInTranslatableSection) {\n      this._reportError(node, 'Unexpected section start');\n    } else {\n      this._msgCountAtSectionStart = this._messages.length;\n    }\n  }\n/**\n * A translatable section could be:\n * - the content of translatable element,\n * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n * @return {?}\n */\n\nprivate get _isInTranslatableSection(): boolean {\n    return this._msgCountAtSectionStart !== void 0;\n  }\n/**\n * Terminates a section.\n * \n * If a section has only one significant children (comments not significant) then we should not\n * keep the message from this children:\n * \n * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n * - one for the <p> content with meaning and description,\n * - another one for the ICU message.\n * \n * In this case the last message is discarded as it contains less information (the AST is\n * otherwise identical).\n * \n * Note that we should still keep messages extracted from attributes inside the section (ie in the\n * ICU message here)\n * @param {?} node\n * @param {?} directChildren\n * @return {?}\n */\n\nprivate _closeTranslatableSection(node: html.Node, directChildren: html.Node[]): void {\n    if (!this._isInTranslatableSection) {\n      this._reportError(node, 'Unexpected section end');\n      return;\n    }\n\n    const /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n    const /** @type {?} */ significantChildren: number = directChildren.reduce(\n        (count: number, node: html.Node): number => count + (node instanceof html.Comment ? 0 : 1),\n        0);\n\n    if (significantChildren == 1) {\n      for (let /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */(( startIndex)); i--) {\n        const /** @type {?} */ ast = this._messages[i].nodes;\n        if (!(ast.length == 1 && ast[0] instanceof i18n.Text)) {\n          this._messages.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    this._msgCountAtSectionStart = undefined;\n  }\n/**\n * @param {?} node\n * @param {?} msg\n * @return {?}\n */\n\nprivate _reportError(node: html.Node, msg: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), msg));\n  }\n}\n\nfunction _Visitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_Visitor.prototype._depth;\n/** @type {?} */\n_Visitor.prototype._inI18nNode;\n/** @type {?} */\n_Visitor.prototype._inImplicitNode;\n/** @type {?} */\n_Visitor.prototype._inI18nBlock;\n/** @type {?} */\n_Visitor.prototype._blockMeaningAndDesc;\n/** @type {?} */\n_Visitor.prototype._blockChildren;\n/** @type {?} */\n_Visitor.prototype._blockStartDepth;\n/** @type {?} */\n_Visitor.prototype._inIcu;\n/** @type {?} */\n_Visitor.prototype._msgCountAtSectionStart;\n/** @type {?} */\n_Visitor.prototype._errors;\n/** @type {?} */\n_Visitor.prototype._mode;\n/** @type {?} */\n_Visitor.prototype._messages;\n/** @type {?} */\n_Visitor.prototype._translations;\n/** @type {?} */\n_Visitor.prototype._createI18nMessage;\n/** @type {?} */\n_Visitor.prototype._implicitTags;\n/** @type {?} */\n_Visitor.prototype._implicitAttrs;\n}\n\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n: html.Node): boolean {\n  return !!(n instanceof html.Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n: html.Node): boolean {\n  return !!(n instanceof html.Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p: html.Element): html.Attribute|null {\n  return p.attrs.find(attr => attr.name === _I18N_ATTR) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n?: string): {meaning: string, description: string, id: string} {\n  if (!i18n) return {meaning: '', description: '', id: ''};\n\n  const /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n  const /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n  const [meaningAndDesc, id] =\n      (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n  const [meaning, description] = (descIndex > -1) ?\n      [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n      ['', meaningAndDesc];\n\n  return {meaning, description, id};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\nexport class XmlTagDefinition implements TagDefinition {\n  closedByParent: boolean = false;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType = TagContentType.PARSABLE_DATA;\n  isVoid: boolean = false;\n  ignoreFirstLf: boolean = false;\n  canSelfClose: boolean = true;\n/**\n * @param {?} currentParent\n * @return {?}\n */\nrequireExtraParent(currentParent: string): boolean { return false; }\n/**\n * @param {?} name\n * @return {?}\n */\nisClosedByChild(name: string): boolean { return false; }\n}\n\nfunction XmlTagDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlTagDefinition.prototype.closedByParent;\n/** @type {?} */\nXmlTagDefinition.prototype.requiredParents;\n/** @type {?} */\nXmlTagDefinition.prototype.parentToAdd;\n/** @type {?} */\nXmlTagDefinition.prototype.implicitNamespacePrefix;\n/** @type {?} */\nXmlTagDefinition.prototype.contentType;\n/** @type {?} */\nXmlTagDefinition.prototype.isVoid;\n/** @type {?} */\nXmlTagDefinition.prototype.ignoreFirstLf;\n/** @type {?} */\nXmlTagDefinition.prototype.canSelfClose;\n}\n\n\nconst /** @type {?} */ _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getXmlTagDefinition(tagName: string): XmlTagDefinition {\n  return _TAG_DEFINITION;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseTreeResult, Parser} from './parser';\nimport {getXmlTagDefinition} from './xml_tags';\n\nexport {ParseTreeResult, TreeError} from './parser';\nexport class XmlParser extends Parser {\nconstructor() { super(getXmlTagDefinition); }\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @return {?}\n */\nparse(source: string, url: string, parseExpansionForms: boolean = false): ParseTreeResult {\n    return super.parse(source, url, parseExpansionForms);\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as i18n from '../i18n_ast';\n/**\n * @abstract\n */\nexport abstract class Serializer {\n  // - The `placeholders` and `placeholderToMessage` properties are irrelevant in the input messages\n  // - The `id` contains the message id that the serializer is expected to use\n  // - Placeholder names are already map to public names using the provided mapper\n  abstract write(messages: i18n.Message[], locale: string|null): string;\n\n  abstract load(content: string, url: string):\n      {locale: string | null, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}};\n\n  abstract digest(message: i18n.Message): string;\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper|null { return null; }\n}\n\nfunction Serializer_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nSerializer.prototype.write = function(messages, locale) {};\n\n/**\n * @abstract\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nSerializer.prototype.load = function(content, url) {};\n\n/**\n * @abstract\n * @param {?} message\n * @return {?}\n */\nSerializer.prototype.digest = function(message) {};\n}\n\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n * \n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\nexport function PlaceholderMapper() {}\n\n\nfunction PlaceholderMapper_tsickle_Closure_declarations() {\n/** @type {?} */\nPlaceholderMapper.prototype.toPublicName;\n/** @type {?} */\nPlaceholderMapper.prototype.toInternalName;\n}\n\n\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n */\nexport interface PlaceholderMapper {\n  toPublicName(internalName: string): string|null;\n\n  toInternalName(publicName: string): string|null;\n}\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nexport class SimplePlaceholderMapper extends i18n.RecurseVisitor implements PlaceholderMapper {\nprivate internalToPublic: {[k: string]: string} = {};\nprivate publicToNextId: {[k: string]: number} = {};\nprivate publicToInternal: {[k: string]: string} = {};\n/**\n * @param {?} message\n * @param {?} mapName\n */\nconstructor(message: i18n.Message,\nprivate mapName: (name: string) => string) {\n    super();\n    message.nodes.forEach(node => node.visit(this));\n  }\n/**\n * @param {?} internalName\n * @return {?}\n */\ntoPublicName(internalName: string): string|null {\n    return this.internalToPublic.hasOwnProperty(internalName) ?\n        this.internalToPublic[internalName] :\n        null;\n  }\n/**\n * @param {?} publicName\n * @return {?}\n */\ntoInternalName(publicName: string): string|null {\n    return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n                                                              null;\n  }\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): any { return null; }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): any {\n    this.visitPlaceholderName(ph.startName);\n    super.visitTagPlaceholder(ph, context);\n    this.visitPlaceholderName(ph.closeName);\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): any { this.visitPlaceholderName(ph.name); }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    this.visitPlaceholderName(ph.name);\n  }\n/**\n * @param {?} internalName\n * @return {?}\n */\n\nprivate visitPlaceholderName(internalName: string): void {\n    if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n      return;\n    }\n\n    let /** @type {?} */ publicName = this.mapName(internalName);\n\n    if (this.publicToInternal.hasOwnProperty(publicName)) {\n      // Create a new XMB when it has already been used\n      const /** @type {?} */ nextId = this.publicToNextId[publicName];\n      this.publicToNextId[publicName] = nextId + 1;\n      publicName = `${publicName}_${nextId}`;\n    } else {\n      this.publicToNextId[publicName] = 1;\n    }\n\n    this.internalToPublic[internalName] = publicName;\n    this.publicToInternal[publicName] = internalName;\n  }\n}\n\nfunction SimplePlaceholderMapper_tsickle_Closure_declarations() {\n/** @type {?} */\nSimplePlaceholderMapper.prototype.internalToPublic;\n/** @type {?} */\nSimplePlaceholderMapper.prototype.publicToNextId;\n/** @type {?} */\nSimplePlaceholderMapper.prototype.publicToInternal;\n/** @type {?} */\nSimplePlaceholderMapper.prototype.mapName;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\nexport function IVisitor() {}\n\n\nfunction IVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nIVisitor.prototype.visitTag;\n/** @type {?} */\nIVisitor.prototype.visitText;\n/** @type {?} */\nIVisitor.prototype.visitDeclaration;\n/** @type {?} */\nIVisitor.prototype.visitDoctype;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface IVisitor {\n  visitTag(tag: Tag): any;\n  visitText(text: Text): any;\n  visitDeclaration(decl: Declaration): any;\n  visitDoctype(doctype: Doctype): any;\n}\nclass _Visitor implements IVisitor {\n/**\n * @param {?} tag\n * @return {?}\n */\nvisitTag(tag: Tag): string {\n    const /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n\n    if (tag.children.length == 0) {\n      return `<${tag.name}${strAttrs}/>`;\n    }\n\n    const /** @type {?} */ strChildren = tag.children.map(node => node.visit(this));\n    return `<${tag.name}${strAttrs}>${strChildren.join('')}</${tag.name}>`;\n  }\n/**\n * @param {?} text\n * @return {?}\n */\nvisitText(text: Text): string { return text.value; }\n/**\n * @param {?} decl\n * @return {?}\n */\nvisitDeclaration(decl: Declaration): string {\n    return `<?xml${this._serializeAttributes(decl.attrs)} ?>`;\n  }\n/**\n * @param {?} attrs\n * @return {?}\n */\n\nprivate _serializeAttributes(attrs: {[k: string]: string}) {\n    const /** @type {?} */ strAttrs = Object.keys(attrs).map((name: string) => `${name}=\"${attrs[name]}\"`).join(' ');\n    return strAttrs.length > 0 ? ' ' + strAttrs : '';\n  }\n/**\n * @param {?} doctype\n * @return {?}\n */\nvisitDoctype(doctype: Doctype): any {\n    return `<!DOCTYPE ${doctype.rootTag} [\\n${doctype.dtd}\\n]>`;\n  }\n}\n\nconst /** @type {?} */ _visitor = new _Visitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nexport function serialize(nodes: Node[]): string {\n  return nodes.map((node: Node): string => node.visit(_visitor)).join('');\n}\n/**\n * @record\n */\nexport function Node() {}\n\n\nfunction Node_tsickle_Closure_declarations() {\n/** @type {?} */\nNode.prototype.visit;\n}\n\n\nexport interface Node { visit(visitor: IVisitor): any; }\nexport class Declaration implements Node {\npublic attrs: {[k: string]: string} = {};\n/**\n * @param {?} unescapedAttrs\n */\nconstructor(unescapedAttrs: {[k: string]: string}) {\n    Object.keys(unescapedAttrs).forEach((k: string) => {\n      this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n    });\n  }\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitDeclaration(this); }\n}\n\nfunction Declaration_tsickle_Closure_declarations() {\n/** @type {?} */\nDeclaration.prototype.attrs;\n}\n\nexport class Doctype implements Node {\n/**\n * @param {?} rootTag\n * @param {?} dtd\n */\nconstructor(public rootTag: string,\npublic dtd: string){};\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitDoctype(this); }\n}\n\nfunction Doctype_tsickle_Closure_declarations() {\n/** @type {?} */\nDoctype.prototype.rootTag;\n/** @type {?} */\nDoctype.prototype.dtd;\n}\n\nexport class Tag implements Node {\npublic attrs: {[k: string]: string} = {};\n/**\n * @param {?} name\n * @param {?=} unescapedAttrs\n * @param {?=} children\n */\nconstructor(\npublic name: string, unescapedAttrs: {[k: string]: string} = {},\npublic children: Node[] = []) {\n    Object.keys(unescapedAttrs).forEach((k: string) => {\n      this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n    });\n  }\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitTag(this); }\n}\n\nfunction Tag_tsickle_Closure_declarations() {\n/** @type {?} */\nTag.prototype.attrs;\n/** @type {?} */\nTag.prototype.name;\n/** @type {?} */\nTag.prototype.children;\n}\n\nexport class Text implements Node {\n  value: string;\n/**\n * @param {?} unescapedValue\n */\nconstructor(unescapedValue: string) { this.value = _escapeXml(unescapedValue); };\n/**\n * @param {?} visitor\n * @return {?}\n */\nvisit(visitor: IVisitor): any { return visitor.visitText(this); }\n}\n\nfunction Text_tsickle_Closure_declarations() {\n/** @type {?} */\nText.prototype.value;\n}\n\nexport class CR extends Text {\n/**\n * @param {?=} ws\n */\nconstructor(ws: number = 0) { super(`\\n${new Array(ws + 1).join(' ')}`); }\n}\n\nconst /** @type {?} */ _ESCAPED_CHARS: [RegExp, string][] = [\n  [/&/g, '&amp;'],\n  [/\"/g, '&quot;'],\n  [/'/g, '&apos;'],\n  [/</g, '&lt;'],\n  [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text: string): string {\n  return _ESCAPED_CHARS.reduce(\n      (text: string, entry: [RegExp, string]) => text.replace(entry[0], entry[1]), text);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {digest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _VERSION = '1.2';\nconst /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst /** @type {?} */ _DEFAULT_SOURCE_LANG = 'en';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'x';\n\nconst /** @type {?} */ _FILE_TAG = 'file';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _TARGET_TAG = 'target';\nconst /** @type {?} */ _UNIT_TAG = 'trans-unit';\nconst /** @type {?} */ _CONTEXT_GROUP_TAG = 'context-group';\nconst /** @type {?} */ _CONTEXT_TAG = 'context';\nexport class Xliff extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string {\n    const /** @type {?} */ visitor = new _WriteVisitor();\n    const /** @type {?} */ transUnits: xml.Node[] = [];\n\n    messages.forEach(message => {\n      let /** @type {?} */ contextTags: xml.Node[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        let /** @type {?} */ contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, {purpose: 'location'});\n        contextGroupTag.children.push(\n            new xml.CR(10),\n            new xml.Tag(\n                _CONTEXT_TAG, {'context-type': 'sourcefile'}, [new xml.Text(source.filePath)]),\n            new xml.CR(10), new xml.Tag(\n                                _CONTEXT_TAG, {'context-type': 'linenumber'},\n                                [new xml.Text(`${source.startLine}`)]),\n            new xml.CR(8));\n        contextTags.push(new xml.CR(8), contextGroupTag);\n      });\n\n      const /** @type {?} */ transUnit = new xml.Tag(_UNIT_TAG, {id: message.id, datatype: 'html'});\n      transUnit.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          ...contextTags);\n\n      if (message.description) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag(\n                'note', {priority: '1', from: 'description'}, [new xml.Text(message.description)]));\n      }\n\n      if (message.meaning) {\n        transUnit.children.push(\n            new xml.CR(8),\n            new xml.Tag('note', {priority: '1', from: 'meaning'}, [new xml.Text(message.meaning)]));\n      }\n\n      transUnit.children.push(new xml.CR(6));\n\n      transUnits.push(new xml.CR(6), transUnit);\n    });\n\n    const /** @type {?} */ body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n    const /** @type {?} */ file = new xml.Tag(\n        'file', {\n          'source-language': locale || _DEFAULT_SOURCE_LANG,\n          datatype: 'plaintext',\n          original: 'ng2.template',\n        },\n        [new xml.CR(4), body, new xml.CR(2)]);\n    const /** @type {?} */ xliff = new xml.Tag(\n        'xliff', {version: _VERSION, xmlns: _XMLNS}, [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const /** @type {?} */ xliffParser = new XliffParser();\n    const {locale, msgIdToHtml, errors} = xliffParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: /** @type {?} */(( locale)), i18nNodesByMsgId};\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n}\nclass _WriteVisitor implements i18n.Visitor {\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [new xml.Tag(\n          _PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}/>`})];\n    }\n\n    const /** @type {?} */ startTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.startName, ctype, 'equiv-text': `<${ph.tag}>`});\n    const /** @type {?} */ closeTagPh =\n        new xml.Tag(_PLACEHOLDER_TAG, {id: ph.closeName, ctype, 'equiv-text': `</${ph.tag}>`});\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': `{{${ph.value}}}`})];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ equivText =\n        `{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ')}}`;\n    return [new xml.Tag(_PLACEHOLDER_TAG, {id: ph.name, 'equiv-text': equivText})];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\nclass XliffParser implements ml.Visitor {\nprivate _unitMlString: string|null;\nprivate _errors: I18nError[];\nprivate _msgIdToHtml: {[msgId: string]: string};\nprivate _locale: string|null = null;\n/**\n * @param {?} xliff\n * @param {?} url\n * @return {?}\n */\nparse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = /** @type {?} */(( null));\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        const /** @type {?} */ innerTextStart = /** @type {?} */(( element.startSourceSpan)).end.offset;\n        const /** @type {?} */ innerTextEnd = /** @type {?} */(( element.endSourceSpan)).start.offset;\n        const /** @type {?} */ content = /** @type {?} */(( element.startSourceSpan)).start.file.content;\n        const /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _FILE_TAG:\n        const /** @type {?} */ localeAttr = element.attrs.find((attr) => attr.name === 'target-language');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n        ml.visitAll(this, element.children, null);\n        break;\n\n      default:\n        // TODO(vicb): assert file structure, xliff version\n        // For now only recurse on unhandled nodes\n        ml.visitAll(this, element.children, null);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XliffParser_tsickle_Closure_declarations() {\n/** @type {?} */\nXliffParser.prototype._unitMlString;\n/** @type {?} */\nXliffParser.prototype._errors;\n/** @type {?} */\nXliffParser.prototype._msgIdToHtml;\n/** @type {?} */\nXliffParser.prototype._locale;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} message\n * @param {?} url\n * @return {?}\n */\nconvert(message: string, url: string) {\n    const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        ml.visitAll(this, xmlIcu.rootNodes);\n\n    return {\n      i18nNodes: i18nNodes,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, /** @type {?} */(( text.sourceSpan))); }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Placeholder|null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'id');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, /** @type {?} */(( el.sourceSpan)));\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n    return null;\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n      return 'lb';\n    case 'img':\n      return 'image';\n    default:\n      return `x-${tag}`;\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _VERSION = '2.0';\nconst /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nconst /** @type {?} */ _DEFAULT_SOURCE_LANG = 'en';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _PLACEHOLDER_SPANNING_TAG = 'pc';\n\nconst /** @type {?} */ _XLIFF_TAG = 'xliff';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _TARGET_TAG = 'target';\nconst /** @type {?} */ _UNIT_TAG = 'unit';\nexport class Xliff2 extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string {\n    const /** @type {?} */ visitor = new _WriteVisitor();\n    const /** @type {?} */ units: xml.Node[] = [];\n\n    messages.forEach(message => {\n      const /** @type {?} */ unit = new xml.Tag(_UNIT_TAG, {id: message.id});\n      const /** @type {?} */ notes = new xml.Tag('notes');\n\n      if (message.description || message.meaning) {\n        if (message.description) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'description'}, [new xml.Text(message.description)]));\n        }\n\n        if (message.meaning) {\n          notes.children.push(\n              new xml.CR(8),\n              new xml.Tag('note', {category: 'meaning'}, [new xml.Text(message.meaning)]));\n        }\n      }\n\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        notes.children.push(new xml.CR(8), new xml.Tag('note', {category: 'location'}, [\n          new xml.Text(\n              `${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      notes.children.push(new xml.CR(6));\n      unit.children.push(new xml.CR(6), notes);\n\n      const /** @type {?} */ segment = new xml.Tag('segment');\n\n      segment.children.push(\n          new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)),\n          new xml.CR(6));\n\n      unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n\n      units.push(new xml.CR(4), unit);\n    });\n\n    const /** @type {?} */ file =\n        new xml.Tag('file', {'original': 'ng.template', id: 'ngi18n'}, [...units, new xml.CR(2)]);\n\n    const /** @type {?} */ xliff = new xml.Tag(\n        _XLIFF_TAG, {version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG},\n        [new xml.CR(2), file, new xml.CR()]);\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}), new xml.CR(), xliff, new xml.CR()\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xliff to xml nodes\n    const /** @type {?} */ xliff2Parser = new Xliff2Parser();\n    const {locale, msgIdToHtml, errors} = xliff2Parser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const {i18nNodes, errors: e} = converter.convert(msgIdToHtml[msgId], url);\n      errors.push(...e);\n      i18nNodesByMsgId[msgId] = i18nNodes;\n    });\n\n    if (errors.length) {\n      throw new Error(`xliff2 parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: /** @type {?} */(( locale)), i18nNodesByMsgId};\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return decimalDigest(message); }\n}\nclass _WriteVisitor implements i18n.Visitor {\nprivate _nextPlaceholderId: number;\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ type = getTypeForTag(ph.tag);\n\n    if (ph.isVoid) {\n      const /** @type {?} */ tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n        id: (this._nextPlaceholderId++).toString(),\n        equiv: ph.startName,\n        type: type,\n        disp: `<${ph.tag}/>`,\n      });\n      return [tagPh];\n    }\n\n    const /** @type {?} */ tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n      id: (this._nextPlaceholderId++).toString(),\n      equivStart: ph.startName,\n      equivEnd: ph.closeName,\n      type: type,\n      dispStart: `<${ph.tag}>`,\n      dispEnd: `</${ph.tag}>`,\n    });\n    const /** @type {?} */ nodes: xml.Node[] = [].concat(...ph.children.map(node => node.visit(this)));\n    if (nodes.length) {\n      nodes.forEach((node: xml.Node) => tagPc.children.push(node));\n    } else {\n      tagPc.children.push(new xml.Text(''));\n    }\n\n    return [tagPc];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(_PLACEHOLDER_TAG, {\n      id: idStr,\n      equiv: ph.name,\n      disp: `{{${ph.value}}}`,\n    })];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ cases = Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ');\n    const /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n    return [new xml.Tag(\n        _PLACEHOLDER_TAG,\n        {id: idStr, equiv: ph.name, disp: `{${ph.value.expression}, ${ph.value.type}, ${cases}}`})];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    this._nextPlaceholderId = 0;\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n\nfunction _WriteVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_WriteVisitor.prototype._nextPlaceholderId;\n}\n\nclass Xliff2Parser implements ml.Visitor {\nprivate _unitMlString: string|null;\nprivate _errors: I18nError[];\nprivate _msgIdToHtml: {[msgId: string]: string};\nprivate _locale: string|null = null;\n/**\n * @param {?} xliff\n * @param {?} url\n * @return {?}\n */\nparse(xliff: string, url: string) {\n    this._unitMlString = null;\n    this._msgIdToHtml = {};\n\n    const /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes, null);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null;\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            ml.visitAll(this, element.children, null);\n            if (typeof this._unitMlString === 'string') {\n              this._msgIdToHtml[id] = this._unitMlString;\n            } else {\n              this._addError(element, `Message ${id} misses a translation`);\n            }\n          }\n        }\n        break;\n\n      case _SOURCE_TAG:\n        // ignore source message\n        break;\n\n      case _TARGET_TAG:\n        const /** @type {?} */ innerTextStart = /** @type {?} */(( element.startSourceSpan)).end.offset;\n        const /** @type {?} */ innerTextEnd = /** @type {?} */(( element.endSourceSpan)).start.offset;\n        const /** @type {?} */ content = /** @type {?} */(( element.startSourceSpan)).start.file.content;\n        const /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n        this._unitMlString = innerText;\n        break;\n\n      case _XLIFF_TAG:\n        const /** @type {?} */ localeAttr = element.attrs.find((attr) => attr.name === 'trgLang');\n        if (localeAttr) {\n          this._locale = localeAttr.value;\n        }\n\n        const /** @type {?} */ versionAttr = element.attrs.find((attr) => attr.name === 'version');\n        if (versionAttr) {\n          const /** @type {?} */ version = versionAttr.value;\n          if (version !== '2.0') {\n            this._addError(\n                element,\n                `The XLIFF file version ${version} is not compatible with XLIFF 2.0 serializer`);\n          } else {\n            ml.visitAll(this, element.children, null);\n          }\n        }\n        break;\n      default:\n        ml.visitAll(this, element.children, null);\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction Xliff2Parser_tsickle_Closure_declarations() {\n/** @type {?} */\nXliff2Parser.prototype._unitMlString;\n/** @type {?} */\nXliff2Parser.prototype._errors;\n/** @type {?} */\nXliff2Parser.prototype._msgIdToHtml;\n/** @type {?} */\nXliff2Parser.prototype._locale;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} message\n * @param {?} url\n * @return {?}\n */\nconvert(message: string, url: string) {\n    const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, text.sourceSpan); }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Node[]|null {\n    switch (el.name) {\n      case _PLACEHOLDER_TAG:\n        const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'equiv');\n        if (nameAttr) {\n          return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n        }\n\n        this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equiv\" attribute`);\n        break;\n      case _PLACEHOLDER_SPANNING_TAG:\n        const /** @type {?} */ startAttr = el.attrs.find((attr) => attr.name === 'equivStart');\n        const /** @type {?} */ endAttr = el.attrs.find((attr) => attr.name === 'equivEnd');\n\n        if (!startAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivStart\" attribute`);\n        } else if (!endAttr) {\n          this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivEnd\" attribute`);\n        } else {\n          const /** @type {?} */ startId = startAttr.value;\n          const /** @type {?} */ endId = endAttr.value;\n\n          const /** @type {?} */ nodes: i18n.Node[] = [];\n\n          return nodes.concat(\n              new i18n.Placeholder('', startId, el.sourceSpan),\n              ...el.children.map(node => node.visit(this, null)),\n              new i18n.Placeholder('', endId, el.sourceSpan));\n        }\n        break;\n      default:\n        this._addError(el, `Unexpected tag`);\n    }\n\n    return null;\n  }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach((c: any) => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: [].concat(...ml.visitAll(this, icuCase.expression)),\n    };\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag: string): string {\n  switch (tag.toLowerCase()) {\n    case 'br':\n    case 'b':\n    case 'i':\n    case 'u':\n      return 'fmt';\n    case 'img':\n      return 'image';\n    case 'a':\n      return 'link';\n    default:\n      return 'other';\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {decimalDigest} from '../digest';\nimport * as i18n from '../i18n_ast';\n\nimport {PlaceholderMapper, Serializer, SimplePlaceholderMapper} from './serializer';\nimport * as xml from './xml_helper';\n\nconst /** @type {?} */ _MESSAGES_TAG = 'messagebundle';\nconst /** @type {?} */ _MESSAGE_TAG = 'msg';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _EXEMPLE_TAG = 'ex';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\n\nconst /** @type {?} */ _DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\nexport class Xmb extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string {\n    const /** @type {?} */ exampleVisitor = new ExampleVisitor();\n    const /** @type {?} */ visitor = new _Visitor();\n    let /** @type {?} */ rootNode = new xml.Tag(_MESSAGES_TAG);\n\n    messages.forEach(message => {\n      const /** @type {?} */ attrs: {[k: string]: string} = {id: message.id};\n\n      if (message.description) {\n        attrs['desc'] = message.description;\n      }\n\n      if (message.meaning) {\n        attrs['meaning'] = message.meaning;\n      }\n\n      let /** @type {?} */ sourceTags: xml.Tag[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        sourceTags.push(new xml.Tag(_SOURCE_TAG, {}, [\n          new xml.Text(\n              `${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n        ]));\n      });\n\n      rootNode.children.push(\n          new xml.CR(2),\n          new xml.Tag(_MESSAGE_TAG, attrs, [...sourceTags, ...visitor.serialize(message.nodes)]));\n    });\n\n    rootNode.children.push(new xml.CR());\n\n    return xml.serialize([\n      new xml.Declaration({version: '1.0', encoding: 'UTF-8'}),\n      new xml.CR(),\n      new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n      new xml.CR(),\n      exampleVisitor.addDefaultExamples(rootNode),\n      new xml.CR(),\n    ]);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    throw new Error('Unsupported');\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new SimplePlaceholderMapper(message, toPublicName);\n  }\n}\nclass _Visitor implements i18n.Visitor {\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): xml.Node[] { return [new xml.Text(text.value)]; }\n/**\n * @param {?} container\n * @param {?} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context: any): xml.Node[] {\n    const /** @type {?} */ nodes: xml.Node[] = [];\n    container.children.forEach((node: i18n.Node) => nodes.push(...node.visit(this)));\n    return nodes;\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): xml.Node[] {\n    const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n\n    Object.keys(icu.cases).forEach((c: string) => {\n      nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n    });\n\n    nodes.push(new xml.Text(`}`));\n\n    return nodes;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ startEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`<${ph.tag}>`)]);\n    const /** @type {?} */ startTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name: ph.startName}, [startEx]);\n    if (ph.isVoid) {\n      // void tags have no children nor closing tags\n      return [startTagPh];\n    }\n\n    const /** @type {?} */ closeEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`</${ph.tag}>`)]);\n    const /** @type {?} */ closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, {name: ph.closeName}, [closeEx]);\n\n    return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): xml.Node[] {\n    const /** @type {?} */ exTag = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`{{${ph.value}}}`)]);\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name}, [exTag])];\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): xml.Node[] {\n    const /** @type {?} */ exTag = new xml.Tag(_EXEMPLE_TAG, {}, [\n      new xml.Text(\n          `{${ph.value.expression}, ${ph.value.type}, ${Object.keys(ph.value.cases).map((value: string) => value + ' {...}').join(' ')}}`)\n    ]);\n    return [new xml.Tag(_PLACEHOLDER_TAG, {name: ph.name}, [exTag])];\n  }\n/**\n * @param {?} nodes\n * @return {?}\n */\nserialize(nodes: i18n.Node[]): xml.Node[] {\n    return [].concat(...nodes.map(node => node.visit(this)));\n  }\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message: i18n.Message): string {\n  return decimalDigest(message);\n}\nclass ExampleVisitor implements xml.IVisitor {\n/**\n * @param {?} node\n * @return {?}\n */\naddDefaultExamples(node: xml.Node): xml.Node {\n    node.visit(this);\n    return node;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nvisitTag(tag: xml.Tag): void {\n    if (tag.name === _PLACEHOLDER_TAG) {\n      if (!tag.children || tag.children.length == 0) {\n        const /** @type {?} */ exText = new xml.Text(tag.attrs['name'] || '...');\n        tag.children = [new xml.Tag(_EXEMPLE_TAG, {}, [exText])];\n      }\n    } else if (tag.children) {\n      tag.children.forEach(node => node.visit(this));\n    }\n  }\n/**\n * @param {?} text\n * @return {?}\n */\nvisitText(text: xml.Text): void {}\n/**\n * @param {?} decl\n * @return {?}\n */\nvisitDeclaration(decl: xml.Declaration): void {}\n/**\n * @param {?} doctype\n * @return {?}\n */\nvisitDoctype(doctype: xml.Doctype): void {}\n}\n/**\n * @param {?} internalName\n * @return {?}\n */\nexport function toPublicName(internalName: string): string {\n  return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {PlaceholderMapper, Serializer, SimplePlaceholderMapper} from './serializer';\nimport {digest, toPublicName} from './xmb';\n\nconst /** @type {?} */ _TRANSLATIONS_TAG = 'translationbundle';\nconst /** @type {?} */ _TRANSLATION_TAG = 'translation';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nexport class Xtb extends Serializer {\n/**\n * @param {?} messages\n * @param {?} locale\n * @return {?}\n */\nwrite(messages: i18n.Message[], locale: string|null): string { throw new Error('Unsupported'); }\n/**\n * @param {?} content\n * @param {?} url\n * @return {?}\n */\nload(content: string, url: string):\n      {locale: string, i18nNodesByMsgId: {[msgId: string]: i18n.Node[]}} {\n    // xtb to xml nodes\n    const /** @type {?} */ xtbParser = new XtbParser();\n    const {locale, msgIdToHtml, errors} = xtbParser.parse(content, url);\n\n    // xml nodes to i18n nodes\n    const /** @type {?} */ i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {};\n    const /** @type {?} */ converter = new XmlToI18n();\n\n    // Because we should be able to load xtb files that rely on features not supported by angular,\n    // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n    // converted\n    Object.keys(msgIdToHtml).forEach(msgId => {\n      const /** @type {?} */ valueFn = function() {\n        const {i18nNodes, errors} = converter.convert(msgIdToHtml[msgId], url);\n        if (errors.length) {\n          throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n        }\n        return i18nNodes;\n      };\n      createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n    });\n\n    if (errors.length) {\n      throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    return {locale: /** @type {?} */(( locale)), i18nNodesByMsgId};\n  }\n/**\n * @param {?} message\n * @return {?}\n */\ndigest(message: i18n.Message): string { return digest(message); }\n/**\n * @param {?} message\n * @return {?}\n */\ncreateNameMapper(message: i18n.Message): PlaceholderMapper {\n    return new SimplePlaceholderMapper(message, toPublicName);\n  }\n}\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages: any, id: string, valueFn: () => any) {\n  Object.defineProperty(messages, id, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      const /** @type {?} */ value = valueFn();\n      Object.defineProperty(messages, id, {enumerable: true, value});\n      return value;\n    },\n    set: _ => { throw new Error('Could not overwrite an XTB translation'); },\n  });\n}\nclass XtbParser implements ml.Visitor {\nprivate _bundleDepth: number;\nprivate _errors: I18nError[];\nprivate _msgIdToHtml: {[msgId: string]: string};\nprivate _locale: string|null = null;\n/**\n * @param {?} xtb\n * @param {?} url\n * @return {?}\n */\nparse(xtb: string, url: string) {\n    this._bundleDepth = 0;\n    this._msgIdToHtml = {};\n\n    // We can not parse the ICU messages at this point as some messages might not originate\n    // from Angular that could not be lex'd.\n    const /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n\n    this._errors = xml.errors;\n    ml.visitAll(this, xml.rootNodes);\n\n    return {\n      msgIdToHtml: this._msgIdToHtml,\n      errors: this._errors,\n      locale: this._locale,\n    };\n  }\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _TRANSLATIONS_TAG:\n        this._bundleDepth++;\n        if (this._bundleDepth > 1) {\n          this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n        }\n        const /** @type {?} */ langAttr = element.attrs.find((attr) => attr.name === 'lang');\n        if (langAttr) {\n          this._locale = langAttr.value;\n        }\n        ml.visitAll(this, element.children, null);\n        this._bundleDepth--;\n        break;\n\n      case _TRANSLATION_TAG:\n        const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n        } else {\n          const /** @type {?} */ id = idAttr.value;\n          if (this._msgIdToHtml.hasOwnProperty(id)) {\n            this._addError(element, `Duplicated translations for msg ${id}`);\n          } else {\n            const /** @type {?} */ innerTextStart = /** @type {?} */(( element.startSourceSpan)).end.offset;\n            const /** @type {?} */ innerTextEnd = /** @type {?} */(( element.endSourceSpan)).start.offset;\n            const /** @type {?} */ content = /** @type {?} */(( element.startSourceSpan)).start.file.content;\n            const /** @type {?} */ innerText = content.slice( /** @type {?} */((innerTextStart)), /** @type {?} */(( innerTextEnd)));\n            this._msgIdToHtml[id] = innerText;\n          }\n        }\n        break;\n\n      default:\n        this._addError(element, 'Unexpected tag');\n    }\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any): any {}\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any): any {}\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any): any {}\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: ml.Expansion, context: any): any {}\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XtbParser_tsickle_Closure_declarations() {\n/** @type {?} */\nXtbParser.prototype._bundleDepth;\n/** @type {?} */\nXtbParser.prototype._errors;\n/** @type {?} */\nXtbParser.prototype._msgIdToHtml;\n/** @type {?} */\nXtbParser.prototype._locale;\n}\n\nclass XmlToI18n implements ml.Visitor {\nprivate _errors: I18nError[];\n/**\n * @param {?} message\n * @param {?} url\n * @return {?}\n */\nconvert(message: string, url: string) {\n    const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n    this._errors = xmlIcu.errors;\n\n    const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n        [] :\n        ml.visitAll(this, xmlIcu.rootNodes);\n\n    return {\n      i18nNodes,\n      errors: this._errors,\n    };\n  }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: ml.Text, context: any) { return new i18n.Text(text.value, /** @type {?} */(( text.sourceSpan))); }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: ml.Expansion, context: any) {\n    const /** @type {?} */ caseMap: {[value: string]: i18n.Node} = {};\n\n    ml.visitAll(this, icu.cases).forEach(c => {\n      caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n    });\n\n    return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: ml.ExpansionCase, context: any): any {\n    return {\n      value: icuCase.value,\n      nodes: ml.visitAll(this, icuCase.expression),\n    };\n  }\n/**\n * @param {?} el\n * @param {?} context\n * @return {?}\n */\nvisitElement(el: ml.Element, context: any): i18n.Placeholder|null {\n    if (el.name === _PLACEHOLDER_TAG) {\n      const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'name');\n      if (nameAttr) {\n        return new i18n.Placeholder('', nameAttr.value, /** @type {?} */(( el.sourceSpan)));\n      }\n\n      this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n    } else {\n      this._addError(el, `Unexpected tag`);\n    }\n    return null;\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: ml.Comment, context: any) {}\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: ml.Attribute, context: any) {}\n/**\n * @param {?} node\n * @param {?} message\n * @return {?}\n */\n\nprivate _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError( /** @type {?} */((node.sourceSpan)), message));\n  }\n}\n\nfunction XmlToI18n_tsickle_Closure_declarations() {\n/** @type {?} */\nXmlToI18n.prototype._errors;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilerInjectable} from '../injectable';\n\nimport {getHtmlTagDefinition} from './html_tags';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './interpolation_config';\nimport {ParseTreeResult, Parser} from './parser';\n\nexport {ParseTreeResult, TreeError} from './parser';\nexport class HtmlParser extends Parser {\nconstructor() { super(getHtmlTagDefinition); }\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    return super.parse(source, url, parseExpansionForms, interpolationConfig);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction HtmlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nHtmlParser.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHtmlParser.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy, ɵConsole as Console} from '@angular/core';\nimport * as html from '../ml_parser/ast';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport * as i18n from './i18n_ast';\nimport {I18nError} from './parse_util';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for translated messages\n */\nexport class TranslationBundle {\nprivate _i18nToHtml: I18nToHtmlVisitor;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?=} locale\n * @param {?=} digest\n * @param {?=} mapperFactory\n * @param {?=} missingTranslationStrategy\n * @param {?=} console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {}, locale: string|null,\npublic digest: (m: i18n.Message) => string,\npublic mapperFactory?: (m: i18n.Message) => PlaceholderMapper,\n      missingTranslationStrategy: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    this._i18nToHtml = new I18nToHtmlVisitor(\n        _i18nNodesByMsgId, locale, digest, /** @type {?} */(( mapperFactory)), missingTranslationStrategy, console);\n  }\n/**\n * @param {?} content\n * @param {?} url\n * @param {?} serializer\n * @param {?} missingTranslationStrategy\n * @param {?=} console\n * @return {?}\n */\nstatic load(\n      content: string, url: string, serializer: Serializer,\n      missingTranslationStrategy: MissingTranslationStrategy,\n      console?: Console): TranslationBundle {\n    const {locale, i18nNodesByMsgId} = serializer.load(content, url);\n    const /** @type {?} */ digestFn = (m: i18n.Message) => serializer.digest(m);\n    const /** @type {?} */ mapperFactory = (m: i18n.Message) => /** @type {?} */(( serializer.createNameMapper(m)));\n    return new TranslationBundle(\n        i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nget(srcMsg: i18n.Message): html.Node[] {\n    const /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n\n    if (html.errors.length) {\n      throw new Error(html.errors.join('\\n'));\n    }\n\n    return html.nodes;\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nhas(srcMsg: i18n.Message): boolean { return this.digest(srcMsg) in this._i18nNodesByMsgId; }\n}\n\nfunction TranslationBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nTranslationBundle.prototype._i18nToHtml;\n/** @type {?} */\nTranslationBundle.prototype._i18nNodesByMsgId;\n/** @type {?} */\nTranslationBundle.prototype.digest;\n/** @type {?} */\nTranslationBundle.prototype.mapperFactory;\n}\n\nclass I18nToHtmlVisitor implements i18n.Visitor {\nprivate _srcMsg: i18n.Message;\nprivate _contextStack: {msg: i18n.Message, mapper: (name: string) => string}[] = [];\nprivate _errors: I18nError[] = [];\nprivate _mapper: (name: string) => string;\n/**\n * @param {?=} _i18nNodesByMsgId\n * @param {?=} _locale\n * @param {?=} _digest\n * @param {?=} _mapperFactory\n * @param {?=} _missingTranslationStrategy\n * @param {?=} _console\n */\nconstructor(\nprivate _i18nNodesByMsgId: {[msgId: string]: i18n.Node[]} = {},\nprivate _locale: string|null,\nprivate _digest: (m: i18n.Message) => string,\nprivate _mapperFactory: (m: i18n.Message) => PlaceholderMapper,\nprivate _missingTranslationStrategy: MissingTranslationStrategy,\nprivate _console?: Console) {\n  }\n/**\n * @param {?} srcMsg\n * @return {?}\n */\nconvert(srcMsg: i18n.Message): {nodes: html.Node[], errors: I18nError[]} {\n    this._contextStack.length = 0;\n    this._errors.length = 0;\n\n    // i18n to text\n    const /** @type {?} */ text = this._convertToText(srcMsg);\n\n    // text to html\n    const /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n    const /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n\n    return {\n      nodes: html.rootNodes,\n      errors: [...this._errors, ...html.errors],\n    };\n  }\n/**\n * @param {?} text\n * @param {?=} context\n * @return {?}\n */\nvisitText(text: i18n.Text, context?: any): string { return text.value; }\n/**\n * @param {?} container\n * @param {?=} context\n * @return {?}\n */\nvisitContainer(container: i18n.Container, context?: any): any {\n    return container.children.map(n => n.visit(this)).join('');\n  }\n/**\n * @param {?} icu\n * @param {?=} context\n * @return {?}\n */\nvisitIcu(icu: i18n.Icu, context?: any): any {\n    const /** @type {?} */ cases = Object.keys(icu.cases).map(k => `${k} {${icu.cases[k].visit(this)}}`);\n\n    // TODO(vicb): Once all format switch to using expression placeholders\n    // we should throw when the placeholder is not in the source message\n    const /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n        this._srcMsg.placeholders[icu.expression] :\n        icu.expression;\n\n    return `{${exp}, ${icu.type}, ${cases.join(' ')}}`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, context?: any): string {\n    const /** @type {?} */ phName = this._mapper(ph.name);\n    if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n      return this._srcMsg.placeholders[phName];\n    }\n\n    if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n      return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n    }\n\n    this._addError(ph, `Unknown placeholder \"${ph.name}\"`);\n    return '';\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, context?: any): string {\n    const /** @type {?} */ tag = `${ph.tag}`;\n    const /** @type {?} */ attrs = Object.keys(ph.attrs).map(name => `${name}=\"${ph.attrs[name]}\"`).join(' ');\n    if (ph.isVoid) {\n      return `<${tag} ${attrs}/>`;\n    }\n    const /** @type {?} */ children = ph.children.map((c: i18n.Node) => c.visit(this)).join('');\n    return `<${tag} ${attrs}>${children}</${tag}>`;\n  }\n/**\n * @param {?} ph\n * @param {?=} context\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): string {\n    // An ICU placeholder references the source message to be serialized\n    return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n  }\n/**\n * Convert a source message to a translated text string:\n * - text nodes are replaced with their translation,\n * - placeholders are replaced with their content,\n * - ICU nodes are converted to ICU expressions.\n * @param {?} srcMsg\n * @return {?}\n */\n\nprivate _convertToText(srcMsg: i18n.Message): string {\n    const /** @type {?} */ id = this._digest(srcMsg);\n    const /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n    let /** @type {?} */ nodes: i18n.Node[];\n\n    this._contextStack.push({msg: this._srcMsg, mapper: this._mapper});\n    this._srcMsg = srcMsg;\n\n    if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n      // When there is a translation use its nodes as the source\n      // And create a mapper to convert serialized placeholder names to internal names\n      nodes = this._i18nNodesByMsgId[id];\n      this._mapper = (name: string) => mapper ? /** @type {?} */(( mapper.toInternalName(name))) : name;\n    } else {\n      // When no translation has been found\n      // - report an error / a warning / nothing,\n      // - use the nodes from the original message\n      // - placeholders are already internal and need no mapper\n      if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n        const /** @type {?} */ ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n        this._addError(srcMsg.nodes[0], `Missing translation for message \"${id}\"${ctx}`);\n      } else if (\n          this._console &&\n          this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n        const /** @type {?} */ ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n        this._console.warn(`Missing translation for message \"${id}\"${ctx}`);\n      }\n      nodes = srcMsg.nodes;\n      this._mapper = (name: string) => name;\n    }\n    const /** @type {?} */ text = nodes.map(node => node.visit(this)).join('');\n    const /** @type {?} */ context = /** @type {?} */(( this._contextStack.pop()));\n    this._srcMsg = context.msg;\n    this._mapper = context.mapper;\n    return text;\n  }\n/**\n * @param {?} el\n * @param {?} msg\n * @return {?}\n */\n\nprivate _addError(el: i18n.Node, msg: string) {\n    this._errors.push(new I18nError(el.sourceSpan, msg));\n  }\n}\n\nfunction I18nToHtmlVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nToHtmlVisitor.prototype._srcMsg;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._contextStack;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._errors;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapper;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._i18nNodesByMsgId;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._locale;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._digest;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._mapperFactory;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._missingTranslationStrategy;\n/** @type {?} */\nI18nToHtmlVisitor.prototype._console;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy, ɵConsole as Console} from '@angular/core';\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseTreeResult} from '../ml_parser/parser';\n\nimport {digest} from './digest';\nimport {mergeTranslations} from './extractor_merger';\nimport {Serializer} from './serializers/serializer';\nimport {Xliff} from './serializers/xliff';\nimport {Xliff2} from './serializers/xliff2';\nimport {Xmb} from './serializers/xmb';\nimport {Xtb} from './serializers/xtb';\nimport {TranslationBundle} from './translation_bundle';\nexport class I18NHtmlParser implements HtmlParser {\n  // @override\n  getTagDefinition: any;\nprivate _translationBundle: TranslationBundle;\n/**\n * @param {?} _htmlParser\n * @param {?=} translations\n * @param {?=} translationsFormat\n * @param {?=} missingTranslation\n * @param {?=} console\n */\nconstructor(\nprivate _htmlParser: HtmlParser, translations?: string, translationsFormat?: string,\n      missingTranslation: MissingTranslationStrategy = MissingTranslationStrategy.Warning,\n      console?: Console) {\n    if (translations) {\n      const /** @type {?} */ serializer = createSerializer(translationsFormat);\n      this._translationBundle =\n          TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n    } else {\n      this._translationBundle =\n          new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n    }\n  }\n/**\n * @param {?} source\n * @param {?} url\n * @param {?=} parseExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nparse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    const /** @type {?} */ parseResult =\n        this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n\n    if (parseResult.errors.length) {\n      return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n    }\n\n    return mergeTranslations(\n        parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n  }\n}\n\nfunction I18NHtmlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nI18NHtmlParser.prototype.getTagDefinition;\n/** @type {?} */\nI18NHtmlParser.prototype._translationBundle;\n/** @type {?} */\nI18NHtmlParser.prototype._htmlParser;\n}\n\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format?: string): Serializer {\n  format = (format || 'xlf').toLowerCase();\n\n  switch (format) {\n    case 'xmb':\n      return new Xmb();\n    case 'xtb':\n      return new Xtb();\n    case 'xliff2':\n    case 'xlf2':\n      return new Xliff2();\n    case 'xliff':\n    case 'xlf':\n    default:\n      return new Xliff();\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ChangeDetectionStrategy, ChangeDetectorRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Injector, LOCALE_ID, NgModuleFactory, NgModuleRef, QueryList, Renderer, SecurityContext, TRANSLATIONS_FORMAT, TemplateRef, ViewContainerRef, ViewEncapsulation, ɵCodegenComponentFactoryResolver, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpad, ɵpid, ɵpod, ɵppd, ɵprd, ɵqud, ɵregisterModuleFactory, ɵted, ɵunv, ɵvid} from '@angular/core';\n\nimport {CompileIdentifierMetadata, CompileTokenMetadata} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport * as o from './output/output_ast';\n\nconst /** @type {?} */ CORE = '@angular/core';\nexport class Identifiers {\n  static ANALYZE_FOR_ENTRY_COMPONENTS: o.ExternalReference = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: ANALYZE_FOR_ENTRY_COMPONENTS\n  };\n  static ElementRef:\n      o.ExternalReference = {name: 'ElementRef', moduleName: CORE, runtime: ElementRef};\n  static NgModuleRef:\n      o.ExternalReference = {name: 'NgModuleRef', moduleName: CORE, runtime: NgModuleRef};\n  static ViewContainerRef:\n      o.ExternalReference = {name: 'ViewContainerRef', moduleName: CORE, runtime: ViewContainerRef};\n  static ChangeDetectorRef: o.ExternalReference = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: ChangeDetectorRef\n  };\n  static QueryList: o.ExternalReference = {name: 'QueryList', moduleName: CORE, runtime: QueryList};\n  static TemplateRef:\n      o.ExternalReference = {name: 'TemplateRef', moduleName: CORE, runtime: TemplateRef};\n  static CodegenComponentFactoryResolver: o.ExternalReference = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: ɵCodegenComponentFactoryResolver\n  };\n  static ComponentFactoryResolver: o.ExternalReference = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: ComponentFactoryResolver\n  };\n  static ComponentFactory:\n      o.ExternalReference = {name: 'ComponentFactory', moduleName: CORE, runtime: ComponentFactory};\n  static ComponentRef:\n      o.ExternalReference = {name: 'ComponentRef', moduleName: CORE, runtime: ComponentRef};\n  static NgModuleFactory:\n      o.ExternalReference = {name: 'NgModuleFactory', moduleName: CORE, runtime: NgModuleFactory};\n  static createModuleFactory: o.ExternalReference = {\n    name: 'ɵcmf',\n    moduleName: CORE,\n    runtime: ɵcmf,\n  };\n  static moduleDef: o.ExternalReference = {\n    name: 'ɵmod',\n    moduleName: CORE,\n    runtime: ɵmod,\n  };\n  static moduleProviderDef: o.ExternalReference = {\n    name: 'ɵmpd',\n    moduleName: CORE,\n    runtime: ɵmpd,\n  };\n  static RegisterModuleFactoryFn: o.ExternalReference = {\n    name: 'ɵregisterModuleFactory',\n    moduleName: CORE,\n    runtime: ɵregisterModuleFactory,\n  };\n  static Injector: o.ExternalReference = {name: 'Injector', moduleName: CORE, runtime: Injector};\n  static ViewEncapsulation: o.ExternalReference = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: ViewEncapsulation\n  };\n  static ChangeDetectionStrategy: o.ExternalReference = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: ChangeDetectionStrategy\n  };\n  static SecurityContext: o.ExternalReference = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: SecurityContext,\n  };\n  static LOCALE_ID: o.ExternalReference = {name: 'LOCALE_ID', moduleName: CORE, runtime: LOCALE_ID};\n  static TRANSLATIONS_FORMAT: o.ExternalReference = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: TRANSLATIONS_FORMAT\n  };\n  static inlineInterpolate: o.ExternalReference = {\n    name: 'ɵinlineInterpolate',\n    moduleName: CORE,\n    runtime: ɵinlineInterpolate\n  };\n  static interpolate:\n      o.ExternalReference = {name: 'ɵinterpolate', moduleName: CORE, runtime: ɵinterpolate};\n  static EMPTY_ARRAY:\n      o.ExternalReference = {name: 'ɵEMPTY_ARRAY', moduleName: CORE, runtime: ɵEMPTY_ARRAY};\n  static EMPTY_MAP:\n      o.ExternalReference = {name: 'ɵEMPTY_MAP', moduleName: CORE, runtime: ɵEMPTY_MAP};\n  static Renderer: o.ExternalReference = {name: 'Renderer', moduleName: CORE, runtime: Renderer};\n  static viewDef: o.ExternalReference = {name: 'ɵvid', moduleName: CORE, runtime: ɵvid};\n  static elementDef: o.ExternalReference = {name: 'ɵeld', moduleName: CORE, runtime: ɵeld};\n  static anchorDef: o.ExternalReference = {name: 'ɵand', moduleName: CORE, runtime: ɵand};\n  static textDef: o.ExternalReference = {name: 'ɵted', moduleName: CORE, runtime: ɵted};\n  static directiveDef: o.ExternalReference = {name: 'ɵdid', moduleName: CORE, runtime: ɵdid};\n  static providerDef: o.ExternalReference = {name: 'ɵprd', moduleName: CORE, runtime: ɵprd};\n  static queryDef: o.ExternalReference = {name: 'ɵqud', moduleName: CORE, runtime: ɵqud};\n  static pureArrayDef: o.ExternalReference = {name: 'ɵpad', moduleName: CORE, runtime: ɵpad};\n  static pureObjectDef: o.ExternalReference = {name: 'ɵpod', moduleName: CORE, runtime: ɵpod};\n  static purePipeDef: o.ExternalReference = {name: 'ɵppd', moduleName: CORE, runtime: ɵppd};\n  static pipeDef: o.ExternalReference = {name: 'ɵpid', moduleName: CORE, runtime: ɵpid};\n  static nodeValue: o.ExternalReference = {name: 'ɵnov', moduleName: CORE, runtime: ɵnov};\n  static ngContentDef: o.ExternalReference = {name: 'ɵncd', moduleName: CORE, runtime: ɵncd};\n  static unwrapValue: o.ExternalReference = {name: 'ɵunv', moduleName: CORE, runtime: ɵunv};\n  static createRendererType2: o.ExternalReference = {name: 'ɵcrt', moduleName: CORE, runtime: ɵcrt};\n  static RendererType2: o.ExternalReference = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n  };\n  static ViewDefinition: o.ExternalReference = {\n    name: 'ɵViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n  };\n  static createComponentFactory:\n      o.ExternalReference = {name: 'ɵccf', moduleName: CORE, runtime: ɵccf};\n}\n\nfunction Identifiers_tsickle_Closure_declarations() {\n/** @type {?} */\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS;\n/** @type {?} */\nIdentifiers.ElementRef;\n/** @type {?} */\nIdentifiers.NgModuleRef;\n/** @type {?} */\nIdentifiers.ViewContainerRef;\n/** @type {?} */\nIdentifiers.ChangeDetectorRef;\n/** @type {?} */\nIdentifiers.QueryList;\n/** @type {?} */\nIdentifiers.TemplateRef;\n/** @type {?} */\nIdentifiers.CodegenComponentFactoryResolver;\n/** @type {?} */\nIdentifiers.ComponentFactoryResolver;\n/** @type {?} */\nIdentifiers.ComponentFactory;\n/** @type {?} */\nIdentifiers.ComponentRef;\n/** @type {?} */\nIdentifiers.NgModuleFactory;\n/** @type {?} */\nIdentifiers.createModuleFactory;\n/** @type {?} */\nIdentifiers.moduleDef;\n/** @type {?} */\nIdentifiers.moduleProviderDef;\n/** @type {?} */\nIdentifiers.RegisterModuleFactoryFn;\n/** @type {?} */\nIdentifiers.Injector;\n/** @type {?} */\nIdentifiers.ViewEncapsulation;\n/** @type {?} */\nIdentifiers.ChangeDetectionStrategy;\n/** @type {?} */\nIdentifiers.SecurityContext;\n/** @type {?} */\nIdentifiers.LOCALE_ID;\n/** @type {?} */\nIdentifiers.TRANSLATIONS_FORMAT;\n/** @type {?} */\nIdentifiers.inlineInterpolate;\n/** @type {?} */\nIdentifiers.interpolate;\n/** @type {?} */\nIdentifiers.EMPTY_ARRAY;\n/** @type {?} */\nIdentifiers.EMPTY_MAP;\n/** @type {?} */\nIdentifiers.Renderer;\n/** @type {?} */\nIdentifiers.viewDef;\n/** @type {?} */\nIdentifiers.elementDef;\n/** @type {?} */\nIdentifiers.anchorDef;\n/** @type {?} */\nIdentifiers.textDef;\n/** @type {?} */\nIdentifiers.directiveDef;\n/** @type {?} */\nIdentifiers.providerDef;\n/** @type {?} */\nIdentifiers.queryDef;\n/** @type {?} */\nIdentifiers.pureArrayDef;\n/** @type {?} */\nIdentifiers.pureObjectDef;\n/** @type {?} */\nIdentifiers.purePipeDef;\n/** @type {?} */\nIdentifiers.pipeDef;\n/** @type {?} */\nIdentifiers.nodeValue;\n/** @type {?} */\nIdentifiers.ngContentDef;\n/** @type {?} */\nIdentifiers.unwrapValue;\n/** @type {?} */\nIdentifiers.createRendererType2;\n/** @type {?} */\nIdentifiers.RendererType2;\n/** @type {?} */\nIdentifiers.ViewDefinition;\n/** @type {?} */\nIdentifiers.createComponentFactory;\n}\n\n/**\n * @param {?} reference\n * @return {?}\n */\nexport function createTokenForReference(reference: any): CompileTokenMetadata {\n  return {identifier: {reference: reference}};\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nexport function createTokenForExternalReference(\n    reflector: CompileReflector, reference: o.ExternalReference): CompileTokenMetadata {\n  return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseError, ParseSourceSpan} from '../parse_util';\n\nimport * as html from './ast';\n\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nconst /** @type {?} */ PLURAL_CASES: string[] = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n * \n * For example,\n * \n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n * \n * will be expanded into\n * \n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nexport function expandNodes(nodes: html.Node[]): ExpansionResult {\n  const /** @type {?} */ expander = new _Expander();\n  return new ExpansionResult(html.visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nexport class ExpansionResult {\n/**\n * @param {?} nodes\n * @param {?} expanded\n * @param {?} errors\n */\nconstructor(public nodes: html.Node[],\npublic expanded: boolean,\npublic errors: ParseError[]) {}\n}\n\nfunction ExpansionResult_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansionResult.prototype.nodes;\n/** @type {?} */\nExpansionResult.prototype.expanded;\n/** @type {?} */\nExpansionResult.prototype.errors;\n}\n\nexport class ExpansionError extends ParseError {\n/**\n * @param {?} span\n * @param {?} errorMsg\n */\nconstructor(span: ParseSourceSpan, errorMsg: string) { super(span, errorMsg); }\n}\n/**\n * Expand expansion forms (plural, select) to directives\n * \n * \\@internal\n */\nclass _Expander implements html.Visitor {\n  isExpanded: boolean = false;\n  errors: ParseError[] = [];\n/**\n * @param {?} element\n * @param {?} context\n * @return {?}\n */\nvisitElement(element: html.Element, context: any): any {\n    return new html.Element(\n        element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan,\n        element.startSourceSpan, element.endSourceSpan);\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any { return attribute; }\n/**\n * @param {?} text\n * @param {?} context\n * @return {?}\n */\nvisitText(text: html.Text, context: any): any { return text; }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return comment; }\n/**\n * @param {?} icu\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(icu: html.Expansion, context: any): any {\n    this.isExpanded = true;\n    return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n                                  _expandDefaultForm(icu, this.errors);\n  }\n/**\n * @param {?} icuCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(icuCase: html.ExpansionCase, context: any): any {\n    throw new Error('Should not be reached');\n  }\n}\n\nfunction _Expander_tsickle_Closure_declarations() {\n/** @type {?} */\n_Expander.prototype.isExpanded;\n/** @type {?} */\n_Expander.prototype.errors;\n}\n\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast: html.Expansion, errors: ParseError[]): html.Element {\n  const /** @type {?} */ children = ast.cases.map(c => {\n    if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n      errors.push(new ExpansionError(\n          c.valueSourceSpan,\n          `Plural cases should be \"=<number>\" or one of ${PLURAL_CASES.join(\", \")}`));\n    }\n\n    const /** @type {?} */ expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    return new html.Element(\n        `ng-template`, [new html.Attribute('ngPluralCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const /** @type {?} */ switchAttr = new html.Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n  return new html.Element(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast: html.Expansion, errors: ParseError[]): html.Element {\n  const /** @type {?} */ children = ast.cases.map(c => {\n    const /** @type {?} */ expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    if (c.value === 'other') {\n      // other is the default case when no values match\n      return new html.Element(\n          `ng-template`, [new html.Attribute('ngSwitchDefault', '', c.valueSourceSpan)],\n          expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    }\n\n    return new html.Element(\n        `ng-template`, [new html.Attribute('ngSwitchCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const /** @type {?} */ switchAttr = new html.Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n  return new html.Element(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileDirectiveSummary, CompileNgModuleMetadata, CompileProviderMetadata, CompileQueryMetadata, CompileTokenMetadata, CompileTypeMetadata, tokenName, tokenReference} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {Identifiers, createTokenForExternalReference} from './identifiers';\nimport {ParseError, ParseSourceSpan} from './parse_util';\nimport {AttrAst, DirectiveAst, ProviderAst, ProviderAstType, QueryMatch, ReferenceAst} from './template_parser/template_ast';\nexport class ProviderError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n */\nconstructor(message: string, span: ParseSourceSpan) { super(span, message); }\n}\n/**\n * @record\n */\nexport function QueryWithId() {}\n\n\nfunction QueryWithId_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryWithId.prototype.meta;\n/** @type {?} */\nQueryWithId.prototype.queryId;\n}\n\n\nexport interface QueryWithId {\n  meta: CompileQueryMetadata;\n  queryId: number;\n}\nexport class ProviderViewContext {\n/**\n * \\@internal\n */\nviewQueries: Map<any, QueryWithId[]>;\n/**\n * \\@internal\n */\nviewProviders: Map<any, boolean>;\n  errors: ProviderError[] = [];\n/**\n * @param {?} reflector\n * @param {?} component\n */\nconstructor(public reflector: CompileReflector,\npublic component: CompileDirectiveMetadata) {\n    this.viewQueries = _getViewQueries(component);\n    this.viewProviders = new Map<any, boolean>();\n    component.viewProviders.forEach((provider) => {\n      if (this.viewProviders.get(tokenReference(provider.token)) == null) {\n        this.viewProviders.set(tokenReference(provider.token), true);\n      }\n    });\n  }\n}\n\nfunction ProviderViewContext_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nProviderViewContext.prototype.viewQueries;\n/**\n * \\@internal\n * @type {?}\n */\nProviderViewContext.prototype.viewProviders;\n/** @type {?} */\nProviderViewContext.prototype.errors;\n/** @type {?} */\nProviderViewContext.prototype.reflector;\n/** @type {?} */\nProviderViewContext.prototype.component;\n}\n\nexport class ProviderElementContext {\nprivate _contentQueries: Map<any, QueryWithId[]>;\nprivate _transformedProviders = new Map<any, ProviderAst>();\nprivate _seenProviders = new Map<any, boolean>();\nprivate _allProviders: Map<any, ProviderAst>;\nprivate _attrs: {[key: string]: string};\nprivate _hasViewContainer: boolean = false;\nprivate _queriedTokens = new Map<any, QueryMatch[]>();\n/**\n * @param {?} viewContext\n * @param {?} _parent\n * @param {?} _isViewRoot\n * @param {?} _directiveAsts\n * @param {?} attrs\n * @param {?} refs\n * @param {?} isTemplate\n * @param {?} contentQueryStartId\n * @param {?} _sourceSpan\n */\nconstructor(\npublic viewContext: ProviderViewContext,\nprivate _parent: ProviderElementContext,\nprivate _isViewRoot: boolean,\nprivate _directiveAsts: DirectiveAst[], attrs: AttrAst[],\n      refs: ReferenceAst[], isTemplate: boolean, contentQueryStartId: number,\nprivate _sourceSpan: ParseSourceSpan) {\n    this._attrs = {};\n    attrs.forEach((attrAst) => this._attrs[attrAst.name] = attrAst.value);\n    const /** @type {?} */ directivesMeta = _directiveAsts.map(directiveAst => directiveAst.directive);\n    this._allProviders =\n        _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n    this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._addQueryReadsTo(provider.token, provider.token, this._queriedTokens);\n    });\n    if (isTemplate) {\n      const /** @type {?} */ templateRefId =\n          createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n      this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n    }\n    refs.forEach((refAst) => {\n      let /** @type {?} */ defaultQueryValue = refAst.value ||\n          createTokenForExternalReference(this.viewContext.reflector, Identifiers.ElementRef);\n      this._addQueryReadsTo({value: refAst.name}, defaultQueryValue, this._queriedTokens);\n    });\n    if (this._queriedTokens.get(\n            this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n      this._hasViewContainer = true;\n    }\n\n    // create the providers that we know are eager first\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      const /** @type {?} */ eager = provider.eager || this._queriedTokens.get(tokenReference(provider.token));\n      if (eager) {\n        this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nafterElement() {\n    // collect lazy providers\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n    });\n  }\n/**\n * @return {?}\n */\nget transformProviders(): ProviderAst[] {\n    // Note: Maps keep their insertion order.\n    const /** @type {?} */ lazyProviders: ProviderAst[] = [];\n    const /** @type {?} */ eagerProviders: ProviderAst[] = [];\n    this._transformedProviders.forEach(provider => {\n      if (provider.eager) {\n        eagerProviders.push(provider);\n      } else {\n        lazyProviders.push(provider);\n      }\n    });\n    return lazyProviders.concat(eagerProviders);\n  }\n/**\n * @return {?}\n */\nget transformedDirectiveAsts(): DirectiveAst[] {\n    const /** @type {?} */ sortedProviderTypes = this.transformProviders.map(provider => provider.token.identifier);\n    const /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n    sortedDirectives.sort(\n        (dir1, dir2) => sortedProviderTypes.indexOf(dir1.directive.type) -\n            sortedProviderTypes.indexOf(dir2.directive.type));\n    return sortedDirectives;\n  }\n/**\n * @return {?}\n */\nget transformedHasViewContainer(): boolean { return this._hasViewContainer; }\n/**\n * @return {?}\n */\nget queryMatches(): QueryMatch[] {\n    const /** @type {?} */ allMatches: QueryMatch[] = [];\n    this._queriedTokens.forEach((matches: QueryMatch[]) => { allMatches.push(...matches); });\n    return allMatches;\n  }\n/**\n * @param {?} token\n * @param {?} defaultValue\n * @param {?} queryReadTokens\n * @return {?}\n */\n\nprivate _addQueryReadsTo(\n      token: CompileTokenMetadata, defaultValue: CompileTokenMetadata,\n      queryReadTokens: Map<any, QueryMatch[]>) {\n    this._getQueriesFor(token).forEach((query) => {\n      const /** @type {?} */ queryValue = query.meta.read || defaultValue;\n      const /** @type {?} */ tokenRef = tokenReference(queryValue);\n      let /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n      if (!queryMatches) {\n        queryMatches = [];\n        queryReadTokens.set(tokenRef, queryMatches);\n      }\n      queryMatches.push({queryId: query.queryId, value: queryValue});\n    });\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _getQueriesFor(token: CompileTokenMetadata): QueryWithId[] {\n    const /** @type {?} */ result: QueryWithId[] = [];\n    let /** @type {?} */ currentEl: ProviderElementContext = this;\n    let /** @type {?} */ distance = 0;\n    let /** @type {?} */ queries: QueryWithId[]|undefined;\n    while (currentEl !== null) {\n      queries = currentEl._contentQueries.get(tokenReference(token));\n      if (queries) {\n        result.push(...queries.filter((query) => query.meta.descendants || distance <= 1));\n      }\n      if (currentEl._directiveAsts.length > 0) {\n        distance++;\n      }\n      currentEl = currentEl._parent;\n    }\n    queries = this.viewContext.viewQueries.get(tokenReference(token));\n    if (queries) {\n      result.push(...queries);\n    }\n    return result;\n  }\n/**\n * @param {?} requestingProviderType\n * @param {?} token\n * @param {?} eager\n * @return {?}\n */\n\nprivate _getOrCreateLocalProvider(\n      requestingProviderType: ProviderAstType, token: CompileTokenMetadata,\n      eager: boolean): ProviderAst|null {\n    const /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n    if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n                               requestingProviderType === ProviderAstType.PublicService) &&\n                              resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n        ((requestingProviderType === ProviderAstType.PrivateService ||\n          requestingProviderType === ProviderAstType.PublicService) &&\n         resolvedProvider.providerType === ProviderAstType.Builtin)) {\n      return null;\n    }\n    let /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n    if (transformedProviderAst) {\n      return transformedProviderAst;\n    }\n    if (this._seenProviders.get(tokenReference(token)) != null) {\n      this.viewContext.errors.push(new ProviderError(\n          `Cannot instantiate cyclic dependency! ${tokenName(token)}`, this._sourceSpan));\n      return null;\n    }\n    this._seenProviders.set(tokenReference(token), true);\n    const /** @type {?} */ transformedProviders = resolvedProvider.providers.map((provider) => {\n      let /** @type {?} */ transformedUseValue = provider.useValue;\n      let /** @type {?} */ transformedUseExisting = /** @type {?} */(( provider.useExisting));\n      let /** @type {?} */ transformedDeps: CompileDiDependencyMetadata[] = /** @type {?} */(( undefined));\n      if (provider.useExisting != null) {\n        const /** @type {?} */ existingDiDep = /** @type {?} */(( this._getDependency(\n            resolvedProvider.providerType, {token: provider.useExisting}, eager)));\n        if (existingDiDep.token != null) {\n          transformedUseExisting = existingDiDep.token;\n        } else {\n          transformedUseExisting = /** @type {?} */(( null));\n          transformedUseValue = existingDiDep.value;\n        }\n      } else if (provider.useFactory) {\n        const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n        transformedDeps =\n            deps.map((dep) => /** @type {?} */(( this._getDependency(resolvedProvider.providerType, dep, eager))));\n      } else if (provider.useClass) {\n        const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n        transformedDeps =\n            deps.map((dep) => /** @type {?} */(( this._getDependency(resolvedProvider.providerType, dep, eager))));\n      }\n      return _transformProvider(provider, {\n        useExisting: transformedUseExisting,\n        useValue: transformedUseValue,\n        deps: transformedDeps\n      });\n    });\n    transformedProviderAst =\n        _transformProviderAst(resolvedProvider, {eager: eager, providers: transformedProviders});\n    this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n    return transformedProviderAst;\n  }\n/**\n * @param {?} requestingProviderType\n * @param {?} dep\n * @param {?=} eager\n * @return {?}\n */\n\nprivate _getLocalDependency(\n      requestingProviderType: ProviderAstType, dep: CompileDiDependencyMetadata,\n      eager: boolean = false): CompileDiDependencyMetadata|null {\n    if (dep.isAttribute) {\n      const /** @type {?} */ attrValue = this._attrs[ /** @type {?} */((dep.token)).value];\n      return {isValue: true, value: attrValue == null ? null : attrValue};\n    }\n\n    if (dep.token != null) {\n      // access builtints\n      if ((requestingProviderType === ProviderAstType.Directive ||\n           requestingProviderType === ProviderAstType.Component)) {\n        if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n            tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n            tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(\n                    Identifiers.ChangeDetectorRef) ||\n            tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n          return dep;\n        }\n        if (tokenReference(dep.token) ===\n            this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n          this._hasViewContainer = true;\n        }\n      }\n      // access the injector\n      if (tokenReference(dep.token) ===\n          this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n        return dep;\n      }\n      // access providers\n      if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n        return dep;\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} requestingProviderType\n * @param {?} dep\n * @param {?=} eager\n * @return {?}\n */\n\nprivate _getDependency(\n      requestingProviderType: ProviderAstType, dep: CompileDiDependencyMetadata,\n      eager: boolean = false): CompileDiDependencyMetadata|null {\n    let /** @type {?} */ currElement: ProviderElementContext = this;\n    let /** @type {?} */ currEager: boolean = eager;\n    let /** @type {?} */ result: CompileDiDependencyMetadata|null = null;\n    if (!dep.isSkipSelf) {\n      result = this._getLocalDependency(requestingProviderType, dep, eager);\n    }\n    if (dep.isSelf) {\n      if (!result && dep.isOptional) {\n        result = {isValue: true, value: null};\n      }\n    } else {\n      // check parent elements\n      while (!result && currElement._parent) {\n        const /** @type {?} */ prevElement = currElement;\n        currElement = currElement._parent;\n        if (prevElement._isViewRoot) {\n          currEager = false;\n        }\n        result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n      }\n      // check @Host restriction\n      if (!result) {\n        if (!dep.isHost || this.viewContext.component.isHost ||\n            this.viewContext.component.type.reference === tokenReference( /** @type {?} */((dep.token))) ||\n            this.viewContext.viewProviders.get(tokenReference( /** @type {?} */((dep.token)))) != null) {\n          result = dep;\n        } else {\n          result = dep.isOptional ? result = {isValue: true, value: null} : null;\n        }\n      }\n    }\n    if (!result) {\n      this.viewContext.errors.push(\n          new ProviderError(`No provider for ${tokenName(( /** @type {?} */((dep.token))))}`, this._sourceSpan));\n    }\n    return result;\n  }\n}\n\nfunction ProviderElementContext_tsickle_Closure_declarations() {\n/** @type {?} */\nProviderElementContext.prototype._contentQueries;\n/** @type {?} */\nProviderElementContext.prototype._transformedProviders;\n/** @type {?} */\nProviderElementContext.prototype._seenProviders;\n/** @type {?} */\nProviderElementContext.prototype._allProviders;\n/** @type {?} */\nProviderElementContext.prototype._attrs;\n/** @type {?} */\nProviderElementContext.prototype._hasViewContainer;\n/** @type {?} */\nProviderElementContext.prototype._queriedTokens;\n/** @type {?} */\nProviderElementContext.prototype.viewContext;\n/** @type {?} */\nProviderElementContext.prototype._parent;\n/** @type {?} */\nProviderElementContext.prototype._isViewRoot;\n/** @type {?} */\nProviderElementContext.prototype._directiveAsts;\n/** @type {?} */\nProviderElementContext.prototype._sourceSpan;\n}\n\nexport class NgModuleProviderAnalyzer {\nprivate _transformedProviders = new Map<any, ProviderAst>();\nprivate _seenProviders = new Map<any, boolean>();\nprivate _allProviders: Map<any, ProviderAst>;\nprivate _errors: ProviderError[] = [];\n/**\n * @param {?} reflector\n * @param {?} ngModule\n * @param {?} extraProviders\n * @param {?} sourceSpan\n */\nconstructor(\nprivate reflector: CompileReflector, ngModule: CompileNgModuleMetadata,\n      extraProviders: CompileProviderMetadata[], sourceSpan: ParseSourceSpan) {\n    this._allProviders = new Map<any, ProviderAst>();\n    ngModule.transitiveModule.modules.forEach((ngModuleType: CompileTypeMetadata) => {\n      const /** @type {?} */ ngModuleProvider = {token: {identifier: ngModuleType}, useClass: ngModuleType};\n      _resolveProviders(\n          [ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, this._errors,\n          this._allProviders);\n    });\n    _resolveProviders(\n        ngModule.transitiveModule.providers.map(entry => entry.provider).concat(extraProviders),\n        ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n  }\n/**\n * @return {?}\n */\nparse(): ProviderAst[] {\n    Array.from(this._allProviders.values()).forEach((provider) => {\n      this._getOrCreateLocalProvider(provider.token, provider.eager);\n    });\n    if (this._errors.length > 0) {\n      const /** @type {?} */ errorString = this._errors.join('\\n');\n      throw new Error(`Provider parse errors:\\n${errorString}`);\n    }\n    // Note: Maps keep their insertion order.\n    const /** @type {?} */ lazyProviders: ProviderAst[] = [];\n    const /** @type {?} */ eagerProviders: ProviderAst[] = [];\n    this._transformedProviders.forEach(provider => {\n      if (provider.eager) {\n        eagerProviders.push(provider);\n      } else {\n        lazyProviders.push(provider);\n      }\n    });\n    return lazyProviders.concat(eagerProviders);\n  }\n/**\n * @param {?} token\n * @param {?} eager\n * @return {?}\n */\n\nprivate _getOrCreateLocalProvider(token: CompileTokenMetadata, eager: boolean): ProviderAst|null {\n    const /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n    if (!resolvedProvider) {\n      return null;\n    }\n    let /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n    if (transformedProviderAst) {\n      return transformedProviderAst;\n    }\n    if (this._seenProviders.get(tokenReference(token)) != null) {\n      this._errors.push(new ProviderError(\n          `Cannot instantiate cyclic dependency! ${tokenName(token)}`,\n          resolvedProvider.sourceSpan));\n      return null;\n    }\n    this._seenProviders.set(tokenReference(token), true);\n    const /** @type {?} */ transformedProviders = resolvedProvider.providers.map((provider) => {\n      let /** @type {?} */ transformedUseValue = provider.useValue;\n      let /** @type {?} */ transformedUseExisting = /** @type {?} */(( provider.useExisting));\n      let /** @type {?} */ transformedDeps: CompileDiDependencyMetadata[] = /** @type {?} */(( undefined));\n      if (provider.useExisting != null) {\n        const /** @type {?} */ existingDiDep =\n            this._getDependency({token: provider.useExisting}, eager, resolvedProvider.sourceSpan);\n        if (existingDiDep.token != null) {\n          transformedUseExisting = existingDiDep.token;\n        } else {\n          transformedUseExisting = /** @type {?} */(( null));\n          transformedUseValue = existingDiDep.value;\n        }\n      } else if (provider.useFactory) {\n        const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n      } else if (provider.useClass) {\n        const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n        transformedDeps =\n            deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n      }\n      return _transformProvider(provider, {\n        useExisting: transformedUseExisting,\n        useValue: transformedUseValue,\n        deps: transformedDeps\n      });\n    });\n    transformedProviderAst =\n        _transformProviderAst(resolvedProvider, {eager: eager, providers: transformedProviders});\n    this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n    return transformedProviderAst;\n  }\n/**\n * @param {?} dep\n * @param {?=} eager\n * @param {?=} requestorSourceSpan\n * @return {?}\n */\n\nprivate _getDependency(\n      dep: CompileDiDependencyMetadata, eager: boolean = false,\n      requestorSourceSpan: ParseSourceSpan): CompileDiDependencyMetadata {\n    let /** @type {?} */ foundLocal = false;\n    if (!dep.isSkipSelf && dep.token != null) {\n      // access the injector\n      if (tokenReference(dep.token) ===\n              this.reflector.resolveExternalReference(Identifiers.Injector) ||\n          tokenReference(dep.token) ===\n              this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n        foundLocal = true;\n        // access providers\n      } else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n        foundLocal = true;\n      }\n    }\n    let /** @type {?} */ result: CompileDiDependencyMetadata = dep;\n    if (dep.isSelf && !foundLocal) {\n      if (dep.isOptional) {\n        result = {isValue: true, value: null};\n      } else {\n        this._errors.push(\n            new ProviderError(`No provider for ${tokenName(( /** @type {?} */((dep.token))))}`, requestorSourceSpan));\n      }\n    }\n    return result;\n  }\n}\n\nfunction NgModuleProviderAnalyzer_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._transformedProviders;\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._seenProviders;\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._allProviders;\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype._errors;\n/** @type {?} */\nNgModuleProviderAnalyzer.prototype.reflector;\n}\n\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(\n    provider: CompileProviderMetadata,\n    {useExisting, useValue, deps}:\n        {useExisting: CompileTokenMetadata, useValue: any, deps: CompileDiDependencyMetadata[]}) {\n  return {\n    token: provider.token,\n    useClass: provider.useClass,\n    useExisting: useExisting,\n    useFactory: provider.useFactory,\n    useValue: useValue,\n    deps: deps,\n    multi: provider.multi\n  };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(\n    provider: ProviderAst,\n    {eager, providers}: {eager: boolean, providers: CompileProviderMetadata[]}): ProviderAst {\n  return new ProviderAst(\n      provider.token, provider.multiProvider, provider.eager || eager, providers,\n      provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(\n    directives: CompileDirectiveSummary[], sourceSpan: ParseSourceSpan,\n    targetErrors: ParseError[]): Map<any, ProviderAst> {\n  const /** @type {?} */ providersByToken = new Map<any, ProviderAst>();\n  directives.forEach((directive) => {\n    const /** @type {?} */ dirProvider:\n        CompileProviderMetadata = {token: {identifier: directive.type}, useClass: directive.type};\n    _resolveProviders(\n        [dirProvider],\n        directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true,\n        sourceSpan, targetErrors, providersByToken);\n  });\n\n  // Note: directives need to be able to overwrite providers of a component!\n  const /** @type {?} */ directivesWithComponentFirst =\n      directives.filter(dir => dir.isComponent).concat(directives.filter(dir => !dir.isComponent));\n  directivesWithComponentFirst.forEach((directive) => {\n    _resolveProviders(\n        directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors,\n        providersByToken);\n    _resolveProviders(\n        directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors,\n        providersByToken);\n  });\n  return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(\n    providers: CompileProviderMetadata[], providerType: ProviderAstType, eager: boolean,\n    sourceSpan: ParseSourceSpan, targetErrors: ParseError[],\n    targetProvidersByToken: Map<any, ProviderAst>) {\n  providers.forEach((provider) => {\n    let /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n    if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n      targetErrors.push(new ProviderError(\n          `Mixing multi and non multi provider is not possible for token ${tokenName(resolvedProvider.token)}`,\n          sourceSpan));\n    }\n    if (!resolvedProvider) {\n      const /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n              ( /** @type {?} */((<CompileTypeMetadata>provider.token.identifier))).lifecycleHooks ?\n          ( /** @type {?} */((<CompileTypeMetadata>provider.token.identifier))).lifecycleHooks :\n          [];\n      const /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n      resolvedProvider = new ProviderAst(\n          provider.token, !!provider.multi, eager || isUseValue, [provider], providerType,\n          lifecycleHooks, sourceSpan);\n      targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n    } else {\n      if (!provider.multi) {\n        resolvedProvider.providers.length = 0;\n      }\n      resolvedProvider.providers.push(provider);\n    }\n  });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component: CompileDirectiveMetadata): Map<any, QueryWithId[]> {\n  // Note: queries start with id 1 so we can use the number in a Bloom filter!\n  let /** @type {?} */ viewQueryId = 1;\n  const /** @type {?} */ viewQueries = new Map<any, QueryWithId[]>();\n  if (component.viewQueries) {\n    component.viewQueries.forEach(\n        (query) => _addQueryToTokenMap(viewQueries, {meta: query, queryId: viewQueryId++}));\n  }\n  return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(\n    contentQueryStartId: number, directives: CompileDirectiveSummary[]): Map<any, QueryWithId[]> {\n  let /** @type {?} */ contentQueryId = contentQueryStartId;\n  const /** @type {?} */ contentQueries = new Map<any, QueryWithId[]>();\n  directives.forEach((directive, directiveIndex) => {\n    if (directive.queries) {\n      directive.queries.forEach(\n          (query) => _addQueryToTokenMap(contentQueries, {meta: query, queryId: contentQueryId++}));\n    }\n  });\n  return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map: Map<any, QueryWithId[]>, query: QueryWithId) {\n  query.meta.selectors.forEach((token: CompileTokenMetadata) => {\n    let /** @type {?} */ entry = map.get(tokenReference(token));\n    if (!entry) {\n      entry = [];\n      map.set(tokenReference(token), entry);\n    }\n    entry.push(query);\n  });\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SchemaMetadata, SecurityContext} from '@angular/core';\n/**\n * @abstract\n */\nexport abstract class ElementSchemaRegistry {\n  abstract hasProperty(tagName: string, propName: string, schemaMetas: SchemaMetadata[]): boolean;\n  abstract hasElement(tagName: string, schemaMetas: SchemaMetadata[]): boolean;\n  abstract securityContext(elementName: string, propName: string, isAttribute: boolean):\n      SecurityContext;\n  abstract allKnownElementNames(): string[];\n  abstract getMappedPropName(propName: string): string;\n  abstract getDefaultComponentElementName(): string;\n  abstract validateProperty(name: string): {error: boolean, msg?: string};\n  abstract validateAttribute(name: string): {error: boolean, msg?: string};\n  abstract normalizeAnimationStyleProperty(propName: string): string;\n  abstract normalizeAnimationStyleValue(\n      camelCaseProp: string, userProvidedProp: string,\n      val: string|number): {error: string, value: string};\n}\n\nfunction ElementSchemaRegistry_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} tagName\n * @param {?} propName\n * @param {?} schemaMetas\n * @return {?}\n */\nElementSchemaRegistry.prototype.hasProperty = function(tagName, propName, schemaMetas) {};\n\n/**\n * @abstract\n * @param {?} tagName\n * @param {?} schemaMetas\n * @return {?}\n */\nElementSchemaRegistry.prototype.hasElement = function(tagName, schemaMetas) {};\n\n/**\n * @abstract\n * @param {?} elementName\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nElementSchemaRegistry.prototype.securityContext = function(elementName, propName, isAttribute) {};\n\n/**\n * @abstract\n * @return {?}\n */\nElementSchemaRegistry.prototype.allKnownElementNames = function() {};\n\n/**\n * @abstract\n * @param {?} propName\n * @return {?}\n */\nElementSchemaRegistry.prototype.getMappedPropName = function(propName) {};\n\n/**\n * @abstract\n * @return {?}\n */\nElementSchemaRegistry.prototype.getDefaultComponentElementName = function() {};\n\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nElementSchemaRegistry.prototype.validateProperty = function(name) {};\n\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nElementSchemaRegistry.prototype.validateAttribute = function(name) {};\n\n/**\n * @abstract\n * @param {?} propName\n * @return {?}\n */\nElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function(propName) {};\n\n/**\n * @abstract\n * @param {?} camelCaseProp\n * @param {?} userProvidedProp\n * @param {?} val\n * @return {?}\n */\nElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function(camelCaseProp, userProvidedProp, val) {};\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Some of the code comes from WebComponents.JS\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\n\nimport {UrlResolver} from './url_resolver';\nexport class StyleWithImports {\n/**\n * @param {?} style\n * @param {?} styleUrls\n */\nconstructor(public style: string,\npublic styleUrls: string[]) {}\n}\n\nfunction StyleWithImports_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleWithImports.prototype.style;\n/** @type {?} */\nStyleWithImports.prototype.styleUrls;\n}\n\n/**\n * @param {?} url\n * @return {?}\n */\nexport function isStyleUrlResolvable(url: string): boolean {\n  if (url == null || url.length === 0 || url[0] == '/') return false;\n  const /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n  return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nexport function extractStyleUrls(\n    resolver: UrlResolver, baseUrl: string, cssText: string): StyleWithImports {\n  const /** @type {?} */ foundUrls: string[] = [];\n\n  const /** @type {?} */ modifiedCssText =\n      cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, (...m: string[]) => {\n        const /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n          // Do not attempt to resolve non-package absolute URLs with URI scheme\n          return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n      });\n  return new StyleWithImports(modifiedCssText, foundUrls);\n}\n\nconst /** @type {?} */ CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nconst /** @type {?} */ CSS_COMMENT_REGEXP = /\\/\\*[\\s\\S]+?\\*\\//g;\nconst /** @type {?} */ URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '@angular/core';\n\nimport {CompileDirectiveSummary, CompilePipeSummary} from '../compile_metadata';\nimport {ASTWithSource, BindingPipe, EmptyExpr, ParserError, RecursiveAstVisitor, TemplateBinding} from '../expression_parser/ast';\nimport {Parser} from '../expression_parser/parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {mergeNsAndName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector} from '../selector';\nimport {splitAtColon, splitAtPeriod} from '../util';\n\nimport {BoundElementPropertyAst, BoundEventAst, PropertyBindingType, VariableAst} from './template_ast';\n\nconst /** @type {?} */ PROPERTY_PARTS_SEPARATOR = '.';\nconst /** @type {?} */ ATTRIBUTE_PREFIX = 'attr';\nconst /** @type {?} */ CLASS_PREFIX = 'class';\nconst /** @type {?} */ STYLE_PREFIX = 'style';\n\nconst /** @type {?} */ ANIMATE_PROP_PREFIX = 'animate-';\nexport type BoundPropertyType = number;\nexport let BoundPropertyType: any = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n\n/**\n * Represents a parsed property.\n */\nexport class BoundProperty {\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} type\n * @param {?} sourceSpan\n */\nconstructor(\npublic name: string,\npublic expression: ASTWithSource,\npublic type: BoundPropertyType,\npublic sourceSpan: ParseSourceSpan) {}\n/**\n * @return {?}\n */\nget isLiteral() { return this.type === BoundPropertyType.LITERAL_ATTR; }\n/**\n * @return {?}\n */\nget isAnimation() { return this.type === BoundPropertyType.ANIMATION; }\n}\n\nfunction BoundProperty_tsickle_Closure_declarations() {\n/** @type {?} */\nBoundProperty.prototype.name;\n/** @type {?} */\nBoundProperty.prototype.expression;\n/** @type {?} */\nBoundProperty.prototype.type;\n/** @type {?} */\nBoundProperty.prototype.sourceSpan;\n}\n\n/**\n * Parses bindings in templates and in the directive host area.\n */\nexport class BindingParser {\n  pipesByName: Map<string, CompilePipeSummary> = new Map();\nprivate _usedPipes: Map<string, CompilePipeSummary> = new Map();\n/**\n * @param {?} _exprParser\n * @param {?} _interpolationConfig\n * @param {?} _schemaRegistry\n * @param {?} pipes\n * @param {?} _targetErrors\n */\nconstructor(\nprivate _exprParser: Parser,\nprivate _interpolationConfig: InterpolationConfig,\nprivate _schemaRegistry: ElementSchemaRegistry, pipes: CompilePipeSummary[],\nprivate _targetErrors: ParseError[]) {\n    pipes.forEach(pipe => this.pipesByName.set(pipe.name, pipe));\n  }\n/**\n * @return {?}\n */\ngetUsedPipes(): CompilePipeSummary[] { return Array.from(this._usedPipes.values()); }\n/**\n * @param {?} dirMeta\n * @param {?} elementSelector\n * @param {?} sourceSpan\n * @return {?}\n */\ncreateDirectiveHostPropertyAsts(\n      dirMeta: CompileDirectiveSummary, elementSelector: string,\n      sourceSpan: ParseSourceSpan): BoundElementPropertyAst[]|null {\n    if (dirMeta.hostProperties) {\n      const /** @type {?} */ boundProps: BoundProperty[] = [];\n      Object.keys(dirMeta.hostProperties).forEach(propName => {\n        const /** @type {?} */ expression = dirMeta.hostProperties[propName];\n        if (typeof expression === 'string') {\n          this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps);\n        } else {\n          this._reportError(\n              `Value of the host property binding \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`,\n              sourceSpan);\n        }\n      });\n      return boundProps.map((prop) => this.createElementPropertyAst(elementSelector, prop));\n    }\n    return null;\n  }\n/**\n * @param {?} dirMeta\n * @param {?} sourceSpan\n * @return {?}\n */\ncreateDirectiveHostEventAsts(dirMeta: CompileDirectiveSummary, sourceSpan: ParseSourceSpan):\n      BoundEventAst[]|null {\n    if (dirMeta.hostListeners) {\n      const /** @type {?} */ targetEventAsts: BoundEventAst[] = [];\n      Object.keys(dirMeta.hostListeners).forEach(propName => {\n        const /** @type {?} */ expression = dirMeta.hostListeners[propName];\n        if (typeof expression === 'string') {\n          this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts);\n        } else {\n          this._reportError(\n              `Value of the host listener \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`,\n              sourceSpan);\n        }\n      });\n      return targetEventAsts;\n    }\n    return null;\n  }\n/**\n * @param {?} value\n * @param {?} sourceSpan\n * @return {?}\n */\nparseInterpolation(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const /** @type {?} */ ast = /** @type {?} */((\n          this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n      if (ast) this._reportExpressionParserErrors(ast.errors, sourceSpan);\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n/**\n * @param {?} prefixToken\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetVars\n * @return {?}\n */\nparseInlineTemplateBinding(\n      prefixToken: string, value: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetProps: BoundProperty[], targetVars: VariableAst[]) {\n    const /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n    for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n      const /** @type {?} */ binding = bindings[i];\n      if (binding.keyIsVar) {\n        targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n      } else if (binding.expression) {\n        this._parsePropertyAst(\n            binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n      } else {\n        targetMatchableAttrs.push([binding.key, '']);\n        this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n      }\n    }\n  }\n/**\n * @param {?} prefixToken\n * @param {?} value\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _parseTemplateBindings(prefixToken: string, value: string, sourceSpan: ParseSourceSpan):\n      TemplateBinding[] {\n    const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n      this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n      bindingsResult.templateBindings.forEach((binding) => {\n        if (binding.expression) {\n          this._checkPipes(binding.expression, sourceSpan);\n        }\n      });\n      bindingsResult.warnings.forEach(\n          (warning) => { this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n      return bindingsResult.templateBindings;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return [];\n    }\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\nparseLiteralAttr(\n      name: string, value: string|null, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetProps: BoundProperty[]) {\n    if (_isAnimationLabel(name)) {\n      name = name.substring(1);\n      if (value) {\n        this._reportError(\n            `Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid.` +\n                ` Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.`,\n            sourceSpan, ParseErrorLevel.ERROR);\n      }\n      this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n    } else {\n      targetProps.push(new BoundProperty(\n          name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR,\n          sourceSpan));\n    }\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} isHost\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\nparsePropertyBinding(\n      name: string, expression: string, isHost: boolean, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetProps: BoundProperty[]) {\n    let /** @type {?} */ isAnimationProp = false;\n    if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n      isAnimationProp = true;\n      name = name.substring(ANIMATE_PROP_PREFIX.length);\n    } else if (_isAnimationLabel(name)) {\n      isAnimationProp = true;\n      name = name.substring(1);\n    }\n\n    if (isAnimationProp) {\n      this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n    } else {\n      this._parsePropertyAst(\n          name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan,\n          targetMatchableAttrs, targetProps);\n    }\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\nparsePropertyInterpolation(\n      name: string, value: string, sourceSpan: ParseSourceSpan, targetMatchableAttrs: string[][],\n      targetProps: BoundProperty[]): boolean {\n    const /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n    if (expr) {\n      this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} name\n * @param {?} ast\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\n\nprivate _parsePropertyAst(\n      name: string, ast: ASTWithSource, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetProps: BoundProperty[]) {\n    targetMatchableAttrs.push([name, /** @type {?} */(( ast.source))]);\n    targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @return {?}\n */\n\nprivate _parseAnimation(\n      name: string, expression: string|null, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetProps: BoundProperty[]) {\n    // This will occur when a @trigger is not paired with an expression.\n    // For animations it is valid to not have an expression since */void\n    // states will be applied by angular when the element is attached/detached\n    const /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n    targetMatchableAttrs.push([name, /** @type {?} */(( ast.source))]);\n    targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n  }\n/**\n * @param {?} value\n * @param {?} isHostBinding\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _parseBinding(value: string, isHostBinding: boolean, sourceSpan: ParseSourceSpan):\n      ASTWithSource {\n    const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const /** @type {?} */ ast = isHostBinding ?\n          this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n          this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n      if (ast) this._reportExpressionParserErrors(ast.errors, sourceSpan);\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n/**\n * @param {?} elementSelector\n * @param {?} boundProp\n * @return {?}\n */\ncreateElementPropertyAst(elementSelector: string, boundProp: BoundProperty):\n      BoundElementPropertyAst {\n    if (boundProp.isAnimation) {\n      return new BoundElementPropertyAst(\n          boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression,\n          null, boundProp.sourceSpan);\n    }\n\n    let /** @type {?} */ unit: string|null = null;\n    let /** @type {?} */ bindingType: PropertyBindingType = /** @type {?} */(( undefined));\n    let /** @type {?} */ boundPropertyName: string|null = null;\n    const /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n    let /** @type {?} */ securityContexts: SecurityContext[] = /** @type {?} */(( undefined));\n\n    // Check check for special cases (prefix style, attr, class)\n    if (parts.length > 1) {\n      if (parts[0] == ATTRIBUTE_PREFIX) {\n        boundPropertyName = parts[1];\n        this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n        securityContexts = calcPossibleSecurityContexts(\n            this._schemaRegistry, elementSelector, boundPropertyName, true);\n\n        const /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n        if (nsSeparatorIdx > -1) {\n          const /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n          const /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n          boundPropertyName = mergeNsAndName(ns, name);\n        }\n\n        bindingType = PropertyBindingType.Attribute;\n      } else if (parts[0] == CLASS_PREFIX) {\n        boundPropertyName = parts[1];\n        bindingType = PropertyBindingType.Class;\n        securityContexts = [SecurityContext.NONE];\n      } else if (parts[0] == STYLE_PREFIX) {\n        unit = parts.length > 2 ? parts[2] : null;\n        boundPropertyName = parts[1];\n        bindingType = PropertyBindingType.Style;\n        securityContexts = [SecurityContext.STYLE];\n      }\n    }\n\n    // If not a special case, use the full property name\n    if (boundPropertyName === null) {\n      boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n      securityContexts = calcPossibleSecurityContexts(\n          this._schemaRegistry, elementSelector, boundPropertyName, false);\n      bindingType = PropertyBindingType.Property;\n      this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n    }\n\n    return new BoundElementPropertyAst(\n        boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit,\n        boundProp.sourceSpan);\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\nparseEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    if (_isAnimationLabel(name)) {\n      name = name.substr(1);\n      this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n    } else {\n      this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n    }\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetEvents\n * @return {?}\n */\n\nprivate _parseAnimationEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetEvents: BoundEventAst[]) {\n    const /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n    const /** @type {?} */ eventName = matches[0];\n    const /** @type {?} */ phase = matches[1].toLowerCase();\n    if (phase) {\n      switch (phase) {\n        case 'start':\n        case 'done':\n          const /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n          targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n          break;\n\n        default:\n          this._reportError(\n              `The provided animation output phase value \"${phase}\" for \"@${eventName}\" is not supported (use start or done)`,\n              sourceSpan);\n          break;\n      }\n    } else {\n      this._reportError(\n          `The animation trigger output event (@${eventName}) is missing its phase value name (start or done are currently supported)`,\n          sourceSpan);\n    }\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\n\nprivate _parseEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    // long format: 'target: eventName'\n    const [target, eventName] = splitAtColon(name, [ /** @type {?} */((null)), name]);\n    const /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n    targetMatchableAttrs.push([ /** @type {?} */((name)), /** @type {?} */(( ast.source))]);\n    targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n    // Don't detect directives for event names for now,\n    // so don't add the event name to the matchableAttrs\n  }\n/**\n * @param {?} value\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _parseAction(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n      if (ast) {\n        this._reportExpressionParserErrors(ast.errors, sourceSpan);\n      }\n      if (!ast || ast.ast instanceof EmptyExpr) {\n        this._reportError(`Empty expressions are not allowed`, sourceSpan);\n        return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n      }\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch ( /** @type {?} */e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n/**\n * @param {?} message\n * @param {?} sourceSpan\n * @param {?=} level\n * @return {?}\n */\n\nprivate _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.ERROR) {\n    this._targetErrors.push(new ParseError(sourceSpan, message, level));\n  }\n/**\n * @param {?} errors\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _reportExpressionParserErrors(errors: ParserError[], sourceSpan: ParseSourceSpan) {\n    for (const /** @type {?} */ error of errors) {\n      this._reportError(error.message, sourceSpan);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _checkPipes(ast: ASTWithSource, sourceSpan: ParseSourceSpan) {\n    if (ast) {\n      const /** @type {?} */ collector = new PipeCollector();\n      ast.visit(collector);\n      collector.pipes.forEach((ast, pipeName) => {\n        const /** @type {?} */ pipeMeta = this.pipesByName.get(pipeName);\n        if (!pipeMeta) {\n          this._reportError(\n              `The pipe '${pipeName}' could not be found`,\n              new ParseSourceSpan(\n                  sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n        } else {\n          this._usedPipes.set(pipeName, pipeMeta);\n        }\n      });\n    }\n  }\n/**\n * @param {?} propName the name of the property / attribute\n * @param {?} sourceSpan\n * @param {?} isAttr true when binding to an attribute\n * @return {?}\n */\n\nprivate _validatePropertyOrAttributeName(\n      propName: string, sourceSpan: ParseSourceSpan, isAttr: boolean): void {\n    const /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n                            this._schemaRegistry.validateProperty(propName);\n    if (report.error) {\n      this._reportError( /** @type {?} */((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n    }\n  }\n}\n\nfunction BindingParser_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingParser.prototype.pipesByName;\n/** @type {?} */\nBindingParser.prototype._usedPipes;\n/** @type {?} */\nBindingParser.prototype._exprParser;\n/** @type {?} */\nBindingParser.prototype._interpolationConfig;\n/** @type {?} */\nBindingParser.prototype._schemaRegistry;\n/** @type {?} */\nBindingParser.prototype._targetErrors;\n}\n\nexport class PipeCollector extends RecursiveAstVisitor {\n  pipes = new Map<string, BindingPipe>();\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: BindingPipe, context: any): any {\n    this.pipes.set(ast.name, ast);\n    ast.exp.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n}\n\nfunction PipeCollector_tsickle_Closure_declarations() {\n/** @type {?} */\nPipeCollector.prototype.pipes;\n}\n\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name: string): boolean {\n  return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nexport function calcPossibleSecurityContexts(\n    registry: ElementSchemaRegistry, selector: string, propName: string,\n    isAttribute: boolean): SecurityContext[] {\n  const /** @type {?} */ ctxs: SecurityContext[] = [];\n  CssSelector.parse(selector).forEach((selector) => {\n    const /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n    const /** @type {?} */ notElementNames =\n        new Set(selector.notSelectors.filter(selector => selector.isElementSelector())\n                    .map((selector) => selector.element));\n    const /** @type {?} */ possibleElementNames =\n        elementNames.filter(elementName => !notElementNames.has(elementName));\n\n    ctxs.push(...possibleElementNames.map(\n        elementName => registry.securityContext(elementName, propName, isAttribute)));\n  });\n  return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as html from '../ml_parser/ast';\nimport {isNgContent} from '../ml_parser/tags';\n\nconst /** @type {?} */ NG_CONTENT_SELECT_ATTR = 'select';\nconst /** @type {?} */ LINK_ELEMENT = 'link';\nconst /** @type {?} */ LINK_STYLE_REL_ATTR = 'rel';\nconst /** @type {?} */ LINK_STYLE_HREF_ATTR = 'href';\nconst /** @type {?} */ LINK_STYLE_REL_VALUE = 'stylesheet';\nconst /** @type {?} */ STYLE_ELEMENT = 'style';\nconst /** @type {?} */ SCRIPT_ELEMENT = 'script';\nconst /** @type {?} */ NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nconst /** @type {?} */ NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function preparseElement(ast: html.Element): PreparsedElement {\n  let /** @type {?} */ selectAttr: string = /** @type {?} */(( null));\n  let /** @type {?} */ hrefAttr: string = /** @type {?} */(( null));\n  let /** @type {?} */ relAttr: string = /** @type {?} */(( null));\n  let /** @type {?} */ nonBindable = false;\n  let /** @type {?} */ projectAs: string = /** @type {?} */(( null));\n  ast.attrs.forEach(attr => {\n    const /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n    if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n      selectAttr = attr.value;\n    } else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n      hrefAttr = attr.value;\n    } else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n      relAttr = attr.value;\n    } else if (attr.name == NG_NON_BINDABLE_ATTR) {\n      nonBindable = true;\n    } else if (attr.name == NG_PROJECT_AS) {\n      if (attr.value.length > 0) {\n        projectAs = attr.value;\n      }\n    }\n  });\n  selectAttr = normalizeNgContentSelect(selectAttr);\n  const /** @type {?} */ nodeName = ast.name.toLowerCase();\n  let /** @type {?} */ type = PreparsedElementType.OTHER;\n  if (isNgContent(nodeName)) {\n    type = PreparsedElementType.NG_CONTENT;\n  } else if (nodeName == STYLE_ELEMENT) {\n    type = PreparsedElementType.STYLE;\n  } else if (nodeName == SCRIPT_ELEMENT) {\n    type = PreparsedElementType.SCRIPT;\n  } else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n    type = PreparsedElementType.STYLESHEET;\n  }\n  return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nexport type PreparsedElementType = number;\nexport let PreparsedElementType: any = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\n\nexport class PreparsedElement {\n/**\n * @param {?} type\n * @param {?} selectAttr\n * @param {?} hrefAttr\n * @param {?} nonBindable\n * @param {?} projectAs\n */\nconstructor(\npublic type: PreparsedElementType,\npublic selectAttr: string,\npublic hrefAttr: string,\npublic nonBindable: boolean,\npublic projectAs: string) {}\n}\n\nfunction PreparsedElement_tsickle_Closure_declarations() {\n/** @type {?} */\nPreparsedElement.prototype.type;\n/** @type {?} */\nPreparsedElement.prototype.selectAttr;\n/** @type {?} */\nPreparsedElement.prototype.hrefAttr;\n/** @type {?} */\nPreparsedElement.prototype.nonBindable;\n/** @type {?} */\nPreparsedElement.prototype.projectAs;\n}\n\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr: string): string {\n  if (selectAttr === null || selectAttr.length === 0) {\n    return '*';\n  }\n  return selectAttr;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, InjectionToken, Optional, SchemaMetadata, ɵConsole as Console} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileTokenMetadata, CompileTypeMetadata, identifierName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {CompilerConfig} from '../config';\nimport {AST, ASTWithSource, EmptyExpr} from '../expression_parser/ast';\nimport {Parser} from '../expression_parser/parser';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {Identifiers, createTokenForExternalReference, createTokenForReference} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport * as html from '../ml_parser/ast';\nimport {ParseTreeResult} from '../ml_parser/html_parser';\nimport {expandNodes} from '../ml_parser/icu_ast_expander';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {isNgTemplate, splitNsName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {ProviderElementContext, ProviderViewContext} from '../provider_analyzer';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {syntaxError} from '../util';\n\nimport {BindingParser, BoundProperty} from './binding_parser';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from './template_ast';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\n\nconst /** @type {?} */ BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\n// Group 1 = \"bind-\"\nconst /** @type {?} */ KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst /** @type {?} */ KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst /** @type {?} */ KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst /** @type {?} */ KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst /** @type {?} */ KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst /** @type {?} */ KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst /** @type {?} */ IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nconst /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nconst /** @type {?} */ IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nconst /** @type {?} */ IDENT_EVENT_IDX = 10;\n\n// deprecated in 4.x\nconst /** @type {?} */ TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nconst /** @type {?} */ TEMPLATE_ATTR = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\nconst /** @type {?} */ CLASS_ATTR = 'class';\n\nconst /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\nconst /** @type {?} */ TEMPLATE_ELEMENT_DEPRECATION_WARNING =\n    'The <template> element is deprecated. Use <ng-template> instead';\nconst /** @type {?} */ TEMPLATE_ATTR_DEPRECATION_WARNING =\n    'The template attribute is deprecated. Use an ng-template element instead.';\n\nlet /** @type {?} */ warningCounts: {[warning: string]: number} = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings: string[]): (warning: ParseError) => boolean {\n  return (error: ParseError) => {\n    if (warnings.indexOf(error.msg) !== -1) {\n      warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n      return warningCounts[error.msg] <= 1;\n    }\n    return true;\n  };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n * \n * This is currently an internal-only feature and not meant for general use.\n */\nexport const /** @type {?} */ TEMPLATE_TRANSFORMS = new InjectionToken('TemplateTransforms');\nexport class TemplateParseError extends ParseError {\n/**\n * @param {?} message\n * @param {?} span\n * @param {?} level\n */\nconstructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\nexport class TemplateParseResult {\n/**\n * @param {?=} templateAst\n * @param {?=} usedPipes\n * @param {?=} errors\n */\nconstructor(\npublic templateAst?: TemplateAst[],\npublic usedPipes?: CompilePipeSummary[],\npublic errors?: ParseError[]) {}\n}\n\nfunction TemplateParseResult_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseResult.prototype.templateAst;\n/** @type {?} */\nTemplateParseResult.prototype.usedPipes;\n/** @type {?} */\nTemplateParseResult.prototype.errors;\n}\n\nexport class TemplateParser {\n/**\n * @param {?} _config\n * @param {?} _reflector\n * @param {?} _exprParser\n * @param {?} _schemaRegistry\n * @param {?} _htmlParser\n * @param {?} _console\n * @param {?} transforms\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _reflector: CompileReflector,\nprivate _exprParser: Parser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _htmlParser: I18NHtmlParser,\nprivate _console: Console,\npublic transforms: TemplateAstVisitor[]) {}\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\nparse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): {template: TemplateAst[], pipes: CompilePipeSummary[]} {\n    const /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n    const /** @type {?} */ warnings = /** @type {?} */((\n        result.errors)).filter(error => error.level === ParseErrorLevel.WARNING)\n            .filter(warnOnlyOnce(\n                [TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n\n    const /** @type {?} */ errors = /** @type {?} */(( result.errors)).filter(error => error.level === ParseErrorLevel.ERROR);\n\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n\n    if (errors.length > 0) {\n      const /** @type {?} */ errorString = errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n    }\n\n    return {template: /** @type {?} */(( result.templateAst)), pipes: /** @type {?} */(( result.usedPipes))};\n  }\n/**\n * @param {?} component\n * @param {?} template\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @param {?} templateUrl\n * @return {?}\n */\ntryParse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveSummary[],\n      pipes: CompilePipeSummary[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    return this.tryParseHtml(\n        this.expandHtml( /** @type {?} */((this._htmlParser)).parse(\n            template, templateUrl, true, this.getInterpolationConfig(component))),\n        component, directives, pipes, schemas);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?} component\n * @param {?} directives\n * @param {?} pipes\n * @param {?} schemas\n * @return {?}\n */\ntryParseHtml(\n      htmlAstWithErrors: ParseTreeResult, component: CompileDirectiveMetadata,\n      directives: CompileDirectiveSummary[], pipes: CompilePipeSummary[],\n      schemas: SchemaMetadata[]): TemplateParseResult {\n    let /** @type {?} */ result: TemplateAst[];\n    const /** @type {?} */ errors = htmlAstWithErrors.errors;\n    const /** @type {?} */ usedPipes: CompilePipeSummary[] = [];\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      const /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n      const /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n      const /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n      let /** @type {?} */ interpolationConfig: InterpolationConfig = /** @type {?} */(( undefined));\n      if (component.template && component.template.interpolation) {\n        interpolationConfig = {\n          start: component.template.interpolation[0],\n          end: component.template.interpolation[1]\n        };\n      }\n      const /** @type {?} */ bindingParser = new BindingParser(\n          this._exprParser, /** @type {?} */(( interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n      const /** @type {?} */ parseVisitor = new TemplateParseVisitor(\n          this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser,\n          this._schemaRegistry, schemas, errors);\n      result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors.push(...providerViewContext.errors);\n      usedPipes.push(...bindingParser.getUsedPipes());\n    } else {\n      result = [];\n    }\n    this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, usedPipes, errors);\n    }\n\n    if (this.transforms) {\n      this.transforms.forEach(\n          (transform: TemplateAstVisitor) => { result = templateVisitAll(transform, result); });\n    }\n\n    return new TemplateParseResult(result, usedPipes, errors);\n  }\n/**\n * @param {?} htmlAstWithErrors\n * @param {?=} forced\n * @return {?}\n */\nexpandHtml(htmlAstWithErrors: ParseTreeResult, forced: boolean = false): ParseTreeResult {\n    const /** @type {?} */ errors: ParseError[] = htmlAstWithErrors.errors;\n\n    if (errors.length == 0 || forced) {\n      // Transform ICU messages to angular directives\n      const /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n      errors.push(...expandedHtmlAst.errors);\n      htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n    }\n    return htmlAstWithErrors;\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetInterpolationConfig(component: CompileDirectiveMetadata): InterpolationConfig|undefined {\n    if (component.template) {\n      return InterpolationConfig.fromArray(component.template.interpolation);\n    }\n    return undefined;\n  }\n/**\n * \\@internal\n * @param {?} result\n * @param {?} errors\n * @return {?}\n */\n_assertNoReferenceDuplicationOnTemplate(result: TemplateAst[], errors: TemplateParseError[]):\n      void {\n    const /** @type {?} */ existingReferences: string[] = [];\n\n    result.filter(element => !!( /** @type {?} */((<any>element))).references)\n        .forEach(element => ( /** @type {?} */((<any>element))).references.forEach((reference: ReferenceAst) => {\n          const /** @type {?} */ name = reference.name;\n          if (existingReferences.indexOf(name) < 0) {\n            existingReferences.push(name);\n          } else {\n            const /** @type {?} */ error = new TemplateParseError(\n                `Reference \"#${name}\" is defined several times`, reference.sourceSpan,\n                ParseErrorLevel.ERROR);\n            errors.push(error);\n          }\n        }));\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompilerConfig, },\n{type: CompileReflector, },\n{type: Parser, },\n{type: ElementSchemaRegistry, },\n{type: I18NHtmlParser, },\n{type: Console, },\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS, ] }, ]},\n];\n}\n\nfunction TemplateParser_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParser.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTemplateParser.ctorParameters;\n/** @type {?} */\nTemplateParser.prototype._config;\n/** @type {?} */\nTemplateParser.prototype._reflector;\n/** @type {?} */\nTemplateParser.prototype._exprParser;\n/** @type {?} */\nTemplateParser.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParser.prototype._htmlParser;\n/** @type {?} */\nTemplateParser.prototype._console;\n/** @type {?} */\nTemplateParser.prototype.transforms;\n}\n\nclass TemplateParseVisitor implements html.Visitor {\n  selectorMatcher = new SelectorMatcher();\n  directivesIndex = new Map<CompileDirectiveSummary, number>();\n  ngContentCount = 0;\n  contentQueryStartId: number;\n/**\n * @param {?} reflector\n * @param {?} config\n * @param {?} providerViewContext\n * @param {?} directives\n * @param {?} _bindingParser\n * @param {?} _schemaRegistry\n * @param {?} _schemas\n * @param {?} _targetErrors\n */\nconstructor(\nprivate reflector: CompileReflector,\nprivate config: CompilerConfig,\npublic providerViewContext: ProviderViewContext, directives: CompileDirectiveSummary[],\nprivate _bindingParser: BindingParser,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _schemas: SchemaMetadata[],\nprivate _targetErrors: TemplateParseError[]) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n    directives.forEach((directive, index) => {\n      const /** @type {?} */ selector = CssSelector.parse( /** @type {?} */((directive.selector)));\n      this.selectorMatcher.addSelectables(selector, directive);\n      this.directivesIndex.set(directive, index);\n    });\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return null; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return null; }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): any {\n    const /** @type {?} */ ngContentIndex = /** @type {?} */(( parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n    const /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */(( text.sourceSpan)));\n    return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */(( text.sourceSpan))) :\n                  new TextAst(text.value, ngContentIndex, /** @type {?} */(( text.sourceSpan)));\n  }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): any {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} element\n * @param {?} parent\n * @return {?}\n */\nvisitElement(element: html.Element, parent: ElementContext): any {\n    const /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n    const /** @type {?} */ nodeName = element.name;\n    const /** @type {?} */ preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ matchableAttrs: [string, string][] = [];\n    const /** @type {?} */ elementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    const /** @type {?} */ elementVars: VariableAst[] = [];\n    const /** @type {?} */ events: BoundEventAst[] = [];\n\n    const /** @type {?} */ templateElementOrDirectiveProps: BoundProperty[] = [];\n    const /** @type {?} */ templateMatchableAttrs: [string, string][] = [];\n    const /** @type {?} */ templateElementVars: VariableAst[] = [];\n\n    let /** @type {?} */ hasInlineTemplates = false;\n    const /** @type {?} */ attrs: AttrAst[] = [];\n    const /** @type {?} */ isTemplateElement = isTemplate(\n        element, this.config.enableLegacyTemplate,\n        (m: string, span: ParseSourceSpan) => this._reportError(m, span, ParseErrorLevel.WARNING));\n\n    element.attrs.forEach(attr => {\n      const /** @type {?} */ hasBinding = this._parseAttr(\n          isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events,\n          elementOrDirectiveRefs, elementVars);\n\n      let /** @type {?} */ templateBindingsSource: string|undefined;\n      let /** @type {?} */ prefixToken: string|undefined;\n      let /** @type {?} */ normalizedName = this._normalizeAttributeName(attr.name);\n\n      if (this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n        this._reportError(\n            TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n        templateBindingsSource = attr.value;\n      } else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        templateBindingsSource = attr.value;\n        prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n      }\n\n      const /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n      if (hasTemplateBinding) {\n        if (hasInlineTemplates) {\n          this._reportError(\n              `Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *`,\n              attr.sourceSpan);\n        }\n        hasInlineTemplates = true;\n        this._bindingParser.parseInlineTemplateBinding( /** @type {?} */((\n            prefixToken)), /** @type {?} */(( templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs,\n            templateElementOrDirectiveProps, templateElementVars);\n      }\n\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttribute(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n    });\n\n    const /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n    const {directives: directiveMetas, matchElement} =\n        this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    const /** @type {?} */ references: ReferenceAst[] = [];\n    const /** @type {?} */ boundDirectivePropNames = new Set<string>();\n    const /** @type {?} */ directiveAsts = this._createDirectiveAsts(\n        isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps,\n        elementOrDirectiveRefs, /** @type {?} */(( element.sourceSpan)), references, boundDirectivePropNames);\n    const /** @type {?} */ elementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n        element.name, elementOrDirectiveProps, boundDirectivePropNames);\n    const /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n\n    const /** @type {?} */ providerContext = new ProviderElementContext(\n        this.providerViewContext, /** @type {?} */(( parent.providerContext)), isViewRoot, directiveAsts, attrs,\n        references, isTemplateElement, queryStartIndex, /** @type {?} */(( element.sourceSpan)));\n\n    const /** @type {?} */ children: TemplateAst[] = html.visitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(\n            isTemplateElement, directiveAsts,\n            isTemplateElement ? /** @type {?} */(( parent.providerContext)) : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    const /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n        CssSelector.parse(preparsedElement.projectAs)[0] :\n        elementCssSelector;\n    const /** @type {?} */ ngContentIndex = /** @type {?} */(( parent.findNgContentIndex(projectionSelector)));\n    let /** @type {?} */ parsedElement: TemplateAst;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      if (element.children && !element.children.every(_isEmptyTextNode)) {\n        this._reportError(`<ng-content> element cannot have content.`, /** @type {?} */(( element.sourceSpan)));\n      }\n\n      parsedElement = new NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? /** @type {?} */(( null)) : ngContentIndex, /** @type {?} */((\n          element.sourceSpan)));\n    } else if (isTemplateElement) {\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          directiveAsts, elementProps, /** @type {?} */(( element.sourceSpan)));\n\n      parsedElement = new EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer,\n          providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */(( null)) : ngContentIndex, /** @type {?} */((\n          element.sourceSpan)));\n    } else {\n      this._assertElementExists(matchElement, element);\n      this._assertOnlyOneComponent(directiveAsts, /** @type {?} */(( element.sourceSpan)));\n\n      const /** @type {?} */ ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new ElementAst(\n          nodeName, attrs, elementProps, events, references,\n          providerContext.transformedDirectiveAsts, providerContext.transformProviders,\n          providerContext.transformedHasViewContainer, providerContext.queryMatches, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan,\n          element.endSourceSpan || null);\n    }\n\n    if (hasInlineTemplates) {\n      const /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n      const /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n      const {directives: templateDirectiveMetas} =\n          this._parseDirectives(this.selectorMatcher, templateSelector);\n      const /** @type {?} */ templateBoundDirectivePropNames = new Set<string>();\n      const /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(\n          true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */((\n          element.sourceSpan)), [], templateBoundDirectivePropNames);\n      const /** @type {?} */ templateElementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, /** @type {?} */(( element.sourceSpan)));\n      const /** @type {?} */ templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, /** @type {?} */(( parent.providerContext)), parent.isTemplateElement,\n          templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */(( element.sourceSpan)));\n      templateProviderContext.afterElement();\n\n      parsedElement = new EmbeddedTemplateAst(\n          [], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts,\n          templateProviderContext.transformProviders,\n          templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches,\n          [parsedElement], ngContentIndex, /** @type {?} */(( element.sourceSpan)));\n    }\n\n    return parsedElement;\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} attr\n * @param {?} targetMatchableAttrs\n * @param {?} targetProps\n * @param {?} targetEvents\n * @param {?} targetRefs\n * @param {?} targetVars\n * @return {?}\n */\n\nprivate _parseAttr(\n      isTemplateElement: boolean, attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: BoundProperty[], targetEvents: BoundEventAst[],\n      targetRefs: ElementOrDirectiveRef[], targetVars: VariableAst[]): boolean {\n    const /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n    const /** @type {?} */ value = attr.value;\n    const /** @type {?} */ srcSpan = attr.sourceSpan;\n\n    const /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n    let /** @type {?} */ hasBinding = false;\n\n    if (bindParts !== null) {\n      hasBinding = true;\n      if (bindParts[KW_BIND_IDX] != null) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n          this._parseVariable(identifier, value, srcSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n        this._parseReference(identifier, value, srcSpan, targetRefs);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_AT_IDX]) {\n        this._bindingParser.parseLiteralAttr(\n            name, value, srcSpan, targetMatchableAttrs, targetProps);\n\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this._bindingParser.parsePropertyBinding(\n            bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs,\n            targetProps);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        this._bindingParser.parseEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n      }\n    } else {\n      hasBinding = this._bindingParser.parsePropertyInterpolation(\n          name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    if (!hasBinding) {\n      this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    return hasBinding;\n  }\n/**\n * @param {?} attrName\n * @return {?}\n */\n\nprivate _normalizeAttributeName(attrName: string): string {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetVars\n * @return {?}\n */\n\nprivate _parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, targetVars: VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n\n    targetVars.push(new VariableAst(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} identifier\n * @param {?} value\n * @param {?} sourceSpan\n * @param {?} targetRefs\n * @return {?}\n */\n\nprivate _parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n/**\n * @param {?} name\n * @param {?} expression\n * @param {?} sourceSpan\n * @param {?} targetMatchableAttrs\n * @param {?} targetEvents\n * @return {?}\n */\n\nprivate _parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    this._bindingParser.parseEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n  }\n/**\n * @param {?} selectorMatcher\n * @param {?} elementCssSelector\n * @return {?}\n */\n\nprivate _parseDirectives(selectorMatcher: SelectorMatcher, elementCssSelector: CssSelector):\n      {directives: CompileDirectiveSummary[], matchElement: boolean} {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also deduplicate directives as they might match more than one time!\n    const /** @type {?} */ directives = new Array(this.directivesIndex.size);\n    // Whether any directive selector matches on the element name\n    let /** @type {?} */ matchElement = false;\n\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[ /** @type {?} */((this.directivesIndex.get(directive)))] = directive;\n      matchElement = matchElement || selector.hasElementSelector();\n    });\n\n    return {\n      directives: directives.filter(dir => !!dir),\n      matchElement,\n    };\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} elementName\n * @param {?} directives\n * @param {?} props\n * @param {?} elementOrDirectiveRefs\n * @param {?} elementSourceSpan\n * @param {?} targetReferences\n * @param {?} targetBoundDirectivePropNames\n * @return {?}\n */\n\nprivate _createDirectiveAsts(\n      isTemplateElement: boolean, elementName: string, directives: CompileDirectiveSummary[],\n      props: BoundProperty[], elementOrDirectiveRefs: ElementOrDirectiveRef[],\n      elementSourceSpan: ParseSourceSpan, targetReferences: ReferenceAst[],\n      targetBoundDirectivePropNames: Set<string>): DirectiveAst[] {\n    const /** @type {?} */ matchedReferences = new Set<string>();\n    let /** @type {?} */ component: CompileDirectiveSummary = /** @type {?} */(( null));\n\n    const /** @type {?} */ directiveAsts = directives.map((directive) => {\n      const /** @type {?} */ sourceSpan = new ParseSourceSpan(\n          elementSourceSpan.start, elementSourceSpan.end,\n          `Directive ${identifierName(directive.type)}`);\n\n      if (directive.isComponent) {\n        component = directive;\n      }\n      const /** @type {?} */ directiveProperties: BoundDirectivePropertyAst[] = [];\n      let /** @type {?} */ hostProperties = /** @type {?} */((\n          this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n      // Note: We need to check the host properties here as well,\n      // as we don't know the element name in the DirectiveWrapperCompiler yet.\n      hostProperties = this._checkPropertiesInSchema(elementName, hostProperties);\n      const /** @type {?} */ hostEvents = /** @type {?} */(( this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n      this._createDirectivePropertyAsts(\n          directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (directive.exportAs == elOrDirRef.value)) {\n          targetReferences.push(new ReferenceAst(\n              elOrDirRef.name, createTokenForReference(directive.type.reference),\n              elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      const /** @type {?} */ contentQueryStartId = this.contentQueryStartId;\n      this.contentQueryStartId += directive.queries.length;\n      return new DirectiveAst(\n          directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId,\n          sourceSpan);\n    });\n\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!matchedReferences.has(elOrDirRef.name)) {\n          this._reportError(\n              `There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n              elOrDirRef.sourceSpan);\n        }\n      } else if (!component) {\n        let /** @type {?} */ refToken: CompileTokenMetadata = /** @type {?} */(( null));\n        if (isTemplateElement) {\n          refToken = createTokenForExternalReference(this.reflector, Identifiers.TemplateRef);\n        }\n        targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n      }\n    });\n    return directiveAsts;\n  }\n/**\n * @param {?} directiveProperties\n * @param {?} boundProps\n * @param {?} targetBoundDirectiveProps\n * @param {?} targetBoundDirectivePropNames\n * @return {?}\n */\n\nprivate _createDirectivePropertyAsts(\n      directiveProperties: {[key: string]: string}, boundProps: BoundProperty[],\n      targetBoundDirectiveProps: BoundDirectivePropertyAst[],\n      targetBoundDirectivePropNames: Set<string>) {\n    if (directiveProperties) {\n      const /** @type {?} */ boundPropsByName = new Map<string, BoundProperty>();\n      boundProps.forEach(boundProp => {\n        const /** @type {?} */ prevValue = boundPropsByName.get(boundProp.name);\n        if (!prevValue || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      Object.keys(directiveProperties).forEach(dirProp => {\n        const /** @type {?} */ elProp = directiveProperties[dirProp];\n        const /** @type {?} */ boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (boundProp) {\n          targetBoundDirectivePropNames.add(boundProp.name);\n          if (!isEmptyExpression(boundProp.expression)) {\n            targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(\n                dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n          }\n        }\n      });\n    }\n  }\n/**\n * @param {?} elementName\n * @param {?} props\n * @param {?} boundDirectivePropNames\n * @return {?}\n */\n\nprivate _createElementPropertyAsts(\n      elementName: string, props: BoundProperty[],\n      boundDirectivePropNames: Set<string>): BoundElementPropertyAst[] {\n    const /** @type {?} */ boundElementProps: BoundElementPropertyAst[] = [];\n\n    props.forEach((prop: BoundProperty) => {\n      if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n        boundElementProps.push(this._bindingParser.createElementPropertyAst(elementName, prop));\n      }\n    });\n    return this._checkPropertiesInSchema(elementName, boundElementProps);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\n\nprivate _findComponentDirectives(directives: DirectiveAst[]): DirectiveAst[] {\n    return directives.filter(directive => directive.directive.isComponent);\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\n\nprivate _findComponentDirectiveNames(directives: DirectiveAst[]): string[] {\n    return this._findComponentDirectives(directives)\n        .map(directive => /** @type {?} */(( identifierName(directive.directive.type))));\n  }\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _assertOnlyOneComponent(directives: DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(\n          `More than one component matched on this element.\\n` +\n              `Make sure that only one component's selector can match a given element.\\n` +\n              `Conflicting components: ${componentTypeNames.join(',')}`,\n          sourceSpan);\n    }\n  }\n/**\n * Make sure that non-angular tags conform to the schemas.\n * \n * Note: An element is considered an angular tag when at least one directive selector matches the\n * tag name.\n * \n * @param {?} matchElement Whether any directive has matched on the tag name\n * @param {?} element the html element\n * @return {?}\n */\n\nprivate _assertElementExists(matchElement: boolean, element: html.Element) {\n    const /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n\n    if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n      let /** @type {?} */ errorMsg = `'${elName}' is not a known element:\\n`;\n      errorMsg +=\n          `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n`;\n      if (elName.indexOf('-') > -1) {\n        errorMsg +=\n            `2. If '${elName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n      } else {\n        errorMsg +=\n            `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n      }\n      this._reportError(errorMsg, /** @type {?} */(( element.sourceSpan)));\n    }\n  }\n/**\n * @param {?} directives\n * @param {?} elementProps\n * @param {?} sourceSpan\n * @return {?}\n */\n\nprivate _assertNoComponentsNorElementBindingsOnTemplate(\n      directives: DirectiveAst[], elementProps: BoundElementPropertyAst[],\n      sourceSpan: ParseSourceSpan) {\n    const /** @type {?} */ componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(\n          `Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n          sourceSpan);\n    });\n  }\n/**\n * @param {?} directives\n * @param {?} events\n * @return {?}\n */\n\nprivate _assertAllEventsPublishedByDirectives(\n      directives: DirectiveAst[], events: BoundEventAst[]) {\n    const /** @type {?} */ allDirectiveEvents = new Set<string>();\n\n    directives.forEach(directive => {\n      Object.keys(directive.directive.outputs).forEach(k => {\n        const /** @type {?} */ eventName = directive.directive.outputs[k];\n        allDirectiveEvents.add(eventName);\n      });\n    });\n\n    events.forEach(event => {\n      if (event.target != null || !allDirectiveEvents.has(event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`,\n            event.sourceSpan);\n      }\n    });\n  }\n/**\n * @param {?} elementName\n * @param {?} boundProps\n * @return {?}\n */\n\nprivate _checkPropertiesInSchema(elementName: string, boundProps: BoundElementPropertyAst[]):\n      BoundElementPropertyAst[] {\n    // Note: We can't filter out empty expressions before this method,\n    // as we still want to validate them!\n    return boundProps.filter((boundProp) => {\n      if (boundProp.type === PropertyBindingType.Property &&\n          !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n        let /** @type {?} */ errorMsg =\n            `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n        if (elementName.startsWith('ng-')) {\n          errorMsg +=\n              `\\n1. If '${boundProp.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.` +\n              `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        } else if (elementName.indexOf('-') > -1) {\n          errorMsg +=\n              `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n              `\\n2. If '${elementName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.` +\n              `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n        }\n        this._reportError(errorMsg, boundProp.sourceSpan);\n      }\n      return !isEmptyExpression(boundProp.value);\n    });\n  }\n/**\n * @param {?} message\n * @param {?} sourceSpan\n * @param {?=} level\n * @return {?}\n */\n\nprivate _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.ERROR) {\n    this._targetErrors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nfunction TemplateParseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateParseVisitor.prototype.selectorMatcher;\n/** @type {?} */\nTemplateParseVisitor.prototype.directivesIndex;\n/** @type {?} */\nTemplateParseVisitor.prototype.ngContentCount;\n/** @type {?} */\nTemplateParseVisitor.prototype.contentQueryStartId;\n/** @type {?} */\nTemplateParseVisitor.prototype.reflector;\n/** @type {?} */\nTemplateParseVisitor.prototype.config;\n/** @type {?} */\nTemplateParseVisitor.prototype.providerViewContext;\n/** @type {?} */\nTemplateParseVisitor.prototype._bindingParser;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemaRegistry;\n/** @type {?} */\nTemplateParseVisitor.prototype._schemas;\n/** @type {?} */\nTemplateParseVisitor.prototype._targetErrors;\n}\n\nclass NonBindableVisitor implements html.Visitor {\n/**\n * @param {?} ast\n * @param {?} parent\n * @return {?}\n */\nvisitElement(ast: html.Element, parent: ElementContext): ElementAst|null {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const /** @type {?} */ attrNameAndValues = ast.attrs.map((attr): [string, string] => [attr.name, attr.value]);\n    const /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n    const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n    const /** @type {?} */ children: TemplateAst[] = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new ElementAst(\n        ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children,\n        ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n  }\n/**\n * @param {?} comment\n * @param {?} context\n * @return {?}\n */\nvisitComment(comment: html.Comment, context: any): any { return null; }\n/**\n * @param {?} attribute\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(attribute: html.Attribute, context: any): AttrAst {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n/**\n * @param {?} text\n * @param {?} parent\n * @return {?}\n */\nvisitText(text: html.Text, parent: ElementContext): TextAst {\n    const /** @type {?} */ ngContentIndex = /** @type {?} */(( parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n    return new TextAst(text.value, ngContentIndex, /** @type {?} */(( text.sourceSpan)));\n  }\n/**\n * @param {?} expansion\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n/**\n * @param {?} expansionCase\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\nclass ElementOrDirectiveRef {\n/**\n * @param {?} name\n * @param {?} value\n * @param {?} sourceSpan\n */\nconstructor(public name: string,\npublic value: string,\npublic sourceSpan: ParseSourceSpan) {}\n}\n\nfunction ElementOrDirectiveRef_tsickle_Closure_declarations() {\n/** @type {?} */\nElementOrDirectiveRef.prototype.name;\n/** @type {?} */\nElementOrDirectiveRef.prototype.value;\n/** @type {?} */\nElementOrDirectiveRef.prototype.sourceSpan;\n}\n\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\nclass ElementContext {\n/**\n * @param {?} isTemplateElement\n * @param {?} directives\n * @param {?} providerContext\n * @return {?}\n */\nstatic create(\n      isTemplateElement: boolean, directives: DirectiveAst[],\n      providerContext: ProviderElementContext): ElementContext {\n    const /** @type {?} */ matcher = new SelectorMatcher();\n    let /** @type {?} */ wildcardNgContentIndex: number = /** @type {?} */(( null));\n    const /** @type {?} */ component = directives.find(directive => directive.directive.isComponent);\n    if (component) {\n      const /** @type {?} */ ngContentSelectors = /** @type {?} */(( component.directive.template)).ngContentSelectors;\n      for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n        const /** @type {?} */ selector = ngContentSelectors[i];\n        if (selector === '*') {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n/**\n * @param {?} isTemplateElement\n * @param {?} _ngContentIndexMatcher\n * @param {?} _wildcardNgContentIndex\n * @param {?} providerContext\n */\nconstructor(\npublic isTemplateElement: boolean,\nprivate _ngContentIndexMatcher: SelectorMatcher,\nprivate _wildcardNgContentIndex: number|null,\npublic providerContext: ProviderElementContext|null) {}\n/**\n * @param {?} selector\n * @return {?}\n */\nfindNgContentIndex(selector: CssSelector): number|null {\n    const /** @type {?} */ ngContentIndices: number[] = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ngContentIndices.sort();\n    if (this._wildcardNgContentIndex != null) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n}\n\nfunction ElementContext_tsickle_Closure_declarations() {\n/** @type {?} */\nElementContext.prototype.isTemplateElement;\n/** @type {?} */\nElementContext.prototype._ngContentIndexMatcher;\n/** @type {?} */\nElementContext.prototype._wildcardNgContentIndex;\n/** @type {?} */\nElementContext.prototype.providerContext;\n}\n\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const /** @type {?} */ cssSelector = new CssSelector();\n  const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n    const /** @type {?} */ attrName = attributes[i][0];\n    const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    const /** @type {?} */ attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nconst /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nexport function removeSummaryDuplicates<T extends{type: CompileTypeMetadata}>(items: T[]): T[] {\n  const /** @type {?} */ map = new Map<any, T>();\n\n  items.forEach((item) => {\n    if (!map.get(item.type.reference)) {\n      map.set(item.type.reference, item);\n    }\n  });\n\n  return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast: AST): boolean {\n  if (ast instanceof ASTWithSource) {\n    ast = ast.ast;\n  }\n  return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(\n    el: html.Element, enableLegacyTemplate: boolean,\n    reportDeprecation: (m: string, span: ParseSourceSpan) => void): boolean {\n  if (isNgTemplate(el.name)) return true;\n  const /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n  // `<template>` is HTML and case insensitive\n  if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n    if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n      reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */(( el.sourceSpan)));\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nexport class ResourceLoader {\n/**\n * @param {?} url\n * @return {?}\n */\nget(url: string): Promise<string>|string { return ''; }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, InjectionToken, PACKAGE_ROOT_URL} from '@angular/core';\n\nimport {CompilerInjectable} from './injectable';\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nexport function createUrlResolverWithoutPackagePrefix(): UrlResolver {\n  return new UrlResolver();\n}\n/**\n * @return {?}\n */\nexport function createOfflineCompileUrlResolver(): UrlResolver {\n  return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nexport const /** @type {?} */ DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n * \n * This class can be overridden by the application developer to create custom behavior.\n * \n * See {\\@link Compiler}\n * \n * ## Example\n * \n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n * \n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class UrlResolver {\n/**\n * @param {?=} _packagePrefix\n */\nconstructor(\nprivate _packagePrefix: string|null = null) {}\n/**\n * Resolves the `url` given the `baseUrl`:\n * - when the `url` is null, the `baseUrl` is returned,\n * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n * `baseUrl` and `url`,\n * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n * returned as is (ignoring the `baseUrl`)\n * @param {?} baseUrl\n * @param {?} url\n * @return {?}\n */\nresolve(baseUrl: string, url: string): string {\n    let /** @type {?} */ resolvedUrl = url;\n    if (baseUrl != null && baseUrl.length > 0) {\n      resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n    }\n    const /** @type {?} */ resolvedParts = _split(resolvedUrl);\n    let /** @type {?} */ prefix = this._packagePrefix;\n    if (prefix != null && resolvedParts != null &&\n        resolvedParts[_ComponentIndex.Scheme] == 'package') {\n      let /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n      prefix = prefix.replace(/\\/+$/, '');\n      path = path.replace(/^\\/+/, '');\n      return `${prefix}/${path}`;\n    }\n    return resolvedUrl;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [PACKAGE_ROOT_URL, ] }, ]},\n];\n}\n\nfunction UrlResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nUrlResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUrlResolver.ctorParameters;\n/** @type {?} */\nUrlResolver.prototype._packagePrefix;\n}\n\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nexport function getUrlScheme(url: string): string {\n  const /** @type {?} */ match = _split(url);\n  return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n * \n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n * \n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(\n    opt_scheme?: string, opt_userInfo?: string, opt_domain?: string, opt_port?: string,\n    opt_path?: string, opt_queryData?: string, opt_fragment?: string): string {\n  const /** @type {?} */ out: string[] = [];\n\n  if (opt_scheme != null) {\n    out.push(opt_scheme + ':');\n  }\n\n  if (opt_domain != null) {\n    out.push('//');\n\n    if (opt_userInfo != null) {\n      out.push(opt_userInfo + '@');\n    }\n\n    out.push(opt_domain);\n\n    if (opt_port != null) {\n      out.push(':' + opt_port);\n    }\n  }\n\n  if (opt_path != null) {\n    out.push(opt_path);\n  }\n\n  if (opt_queryData != null) {\n    out.push('?' + opt_queryData);\n  }\n\n  if (opt_fragment != null) {\n    out.push('#' + opt_fragment);\n  }\n\n  return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n * \n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n * \n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n * \n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n * \n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n * \n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nconst /** @type {?} */ _splitRe = new RegExp(\n    '^' +\n    '(?:' +\n    '([^:/?#.]+)' +  // scheme - ignore special characters\n                     // used by other URL parts such as :,\n                     // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +                  // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +  // domain - restrict to letters,\n                                         // digits, dashes, dots, percent\n                                         // escapes, and unicode characters.\n    '(?::([0-9]+))?' +                   // port\n    ')?' +\n    '([^?#]+)?' +        // path\n    '(?:\\\\?([^#]*))?' +  // query\n    '(?:#(.*))?' +       // fragment\n    '$');\ntype _ComponentIndex = number;\nlet _ComponentIndex: any = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n\n/**\n * Splits a URI into its component parts.\n * \n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n * \n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri: string): Array<string|any> {\n  return /** @type {?} */(( uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n * \n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path: string): string {\n  if (path == '/') return '/';\n\n  const /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n  const /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n  const /** @type {?} */ segments = path.split('/');\n\n  const /** @type {?} */ out: string[] = [];\n  let /** @type {?} */ up = 0;\n  for (let /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n    const /** @type {?} */ segment = segments[pos];\n    switch (segment) {\n      case '':\n      case '.':\n        break;\n      case '..':\n        if (out.length > 0) {\n          out.pop();\n        } else {\n          up++;\n        }\n        break;\n      default:\n        out.push(segment);\n    }\n  }\n\n  if (leadingSlash == '') {\n    while (up-- > 0) {\n      out.unshift('..');\n    }\n\n    if (out.length === 0) out.push('.');\n  }\n\n  return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts: any[]): string {\n  let /** @type {?} */ path = parts[_ComponentIndex.Path];\n  path = path == null ? '' : _removeDotSegments(path);\n  parts[_ComponentIndex.Path] = path;\n\n  return _buildFromEncodedParts(\n      parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain],\n      parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData],\n      parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base: string, url: string): string {\n  const /** @type {?} */ parts = _split(encodeURI(url));\n  const /** @type {?} */ baseParts = _split(base);\n\n  if (parts[_ComponentIndex.Scheme] != null) {\n    return _joinAndCanonicalizePath(parts);\n  } else {\n    parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n  }\n\n  for (let /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n    if (parts[i] == null) {\n      parts[i] = baseParts[i];\n    }\n  }\n\n  if (parts[_ComponentIndex.Path][0] == '/') {\n    return _joinAndCanonicalizePath(parts);\n  }\n\n  let /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n  if (path == null) path = '/';\n  const /** @type {?} */ index = path.lastIndexOf('/');\n  path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n  parts[_ComponentIndex.Path] = path;\n  return _joinAndCanonicalizePath(parts);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileAnimationEntryMetadata, CompileDirectiveMetadata, CompileStylesheetMetadata, CompileTemplateMetadata, templateSourceUrl} from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {CompilerInjectable} from './injectable';\nimport * as html from './ml_parser/ast';\nimport {HtmlParser} from './ml_parser/html_parser';\nimport {InterpolationConfig} from './ml_parser/interpolation_config';\nimport {ResourceLoader} from './resource_loader';\nimport {extractStyleUrls, isStyleUrlResolvable} from './style_url_resolver';\nimport {PreparsedElementType, preparseElement} from './template_parser/template_preparser';\nimport {UrlResolver} from './url_resolver';\nimport {SyncAsync, isDefined, syntaxError} from './util';\n/**\n * @record\n */\nexport function PrenormalizedTemplateMetadata() {}\n\n\nfunction PrenormalizedTemplateMetadata_tsickle_Closure_declarations() {\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.ngModuleType;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.componentType;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.moduleUrl;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.template;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.templateUrl;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.styles;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.styleUrls;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.interpolation;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.encapsulation;\n/** @type {?} */\nPrenormalizedTemplateMetadata.prototype.animations;\n}\n\n\nexport interface PrenormalizedTemplateMetadata {\n  ngModuleType: any;\n  componentType: any;\n  moduleUrl: string;\n  template: string|null;\n  templateUrl: string|null;\n  styles: string[];\n  styleUrls: string[];\n  interpolation: [string, string]|null;\n  encapsulation: ViewEncapsulation|null;\n  animations: CompileAnimationEntryMetadata[];\n}\nexport class DirectiveNormalizer {\nprivate _resourceLoaderCache = new Map<string, SyncAsync<string>>();\n/**\n * @param {?} _resourceLoader\n * @param {?} _urlResolver\n * @param {?} _htmlParser\n * @param {?} _config\n */\nconstructor(\nprivate _resourceLoader: ResourceLoader,\nprivate _urlResolver: UrlResolver,\nprivate _htmlParser: HtmlParser,\nprivate _config: CompilerConfig) {}\n/**\n * @return {?}\n */\nclearCache(): void { this._resourceLoaderCache.clear(); }\n/**\n * @param {?} normalizedDirective\n * @return {?}\n */\nclearCacheFor(normalizedDirective: CompileDirectiveMetadata): void {\n    if (!normalizedDirective.isComponent) {\n      return;\n    }\n    const /** @type {?} */ template = /** @type {?} */(( normalizedDirective.template));\n    this._resourceLoaderCache.delete( /** @type {?} */((template.templateUrl)));\n    template.externalStylesheets.forEach(\n        (stylesheet) => { this._resourceLoaderCache.delete( /** @type {?} */((stylesheet.moduleUrl))); });\n  }\n/**\n * @param {?} url\n * @return {?}\n */\n\nprivate _fetch(url: string): SyncAsync<string> {\n    let /** @type {?} */ result = this._resourceLoaderCache.get(url);\n    if (!result) {\n      result = this._resourceLoader.get(url);\n      this._resourceLoaderCache.set(url, result);\n    }\n    return result;\n  }\n/**\n * @param {?} prenormData\n * @return {?}\n */\nnormalizeTemplate(prenormData: PrenormalizedTemplateMetadata):\n      SyncAsync<CompileTemplateMetadata> {\n    if (isDefined(prenormData.template)) {\n      if (isDefined(prenormData.templateUrl)) {\n        throw syntaxError(\n            `'${stringify(prenormData.componentType)}' component cannot define both template and templateUrl`);\n      }\n      if (typeof prenormData.template !== 'string') {\n        throw syntaxError(\n            `The template specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n    } else if (isDefined(prenormData.templateUrl)) {\n      if (typeof prenormData.templateUrl !== 'string') {\n        throw syntaxError(\n            `The templateUrl specified for component ${stringify(prenormData.componentType)} is not a string`);\n      }\n    } else {\n      throw syntaxError(\n          `No template specified for component ${stringify(prenormData.componentType)}`);\n    }\n    return SyncAsync.then(\n        this.normalizeTemplateOnly(prenormData),\n        (result: CompileTemplateMetadata) => this.normalizeExternalStylesheets(result));\n  }\n/**\n * @param {?} prenomData\n * @return {?}\n */\nnormalizeTemplateOnly(prenomData: PrenormalizedTemplateMetadata):\n      SyncAsync<CompileTemplateMetadata> {\n    let /** @type {?} */ template: SyncAsync<string>;\n    let /** @type {?} */ templateUrl: string;\n    if (prenomData.template != null) {\n      template = prenomData.template;\n      templateUrl = prenomData.moduleUrl;\n    } else {\n      templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */(( prenomData.templateUrl)));\n      template = this._fetch(templateUrl);\n    }\n    return SyncAsync.then(\n        template, (template) => this.normalizeLoadedTemplate(prenomData, template, templateUrl));\n  }\n/**\n * @param {?} prenormData\n * @param {?} template\n * @param {?} templateAbsUrl\n * @return {?}\n */\nnormalizeLoadedTemplate(\n      prenormData: PrenormalizedTemplateMetadata, template: string,\n      templateAbsUrl: string): CompileTemplateMetadata {\n    const /** @type {?} */ isInline = !!prenormData.template;\n    const /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray( /** @type {?} */((prenormData.interpolation)));\n    const /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(\n        template,\n        templateSourceUrl(\n            {reference: prenormData.ngModuleType}, {type: {reference: prenormData.componentType}},\n            {isInline, templateUrl: templateAbsUrl}),\n        true, interpolationConfig);\n    if (rootNodesAndErrors.errors.length > 0) {\n      const /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n      throw syntaxError(`Template parse errors:\\n${errorString}`);\n    }\n\n    const /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n      styles: prenormData.styles,\n      styleUrls: prenormData.styleUrls,\n      moduleUrl: prenormData.moduleUrl\n    }));\n\n    const /** @type {?} */ visitor = new TemplatePreparseVisitor();\n    html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n    const /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata(\n        {styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl}));\n\n    let /** @type {?} */ encapsulation = prenormData.encapsulation;\n    if (encapsulation == null) {\n      encapsulation = this._config.defaultEncapsulation;\n    }\n\n    const /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n    const /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n\n    if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n        styleUrls.length === 0) {\n      encapsulation = ViewEncapsulation.None;\n    }\n\n    return new CompileTemplateMetadata({\n      encapsulation,\n      template,\n      templateUrl: templateAbsUrl, styles, styleUrls,\n      ngContentSelectors: visitor.ngContentSelectors,\n      animations: prenormData.animations,\n      interpolation: prenormData.interpolation, isInline,\n      externalStylesheets: []\n    });\n  }\n/**\n * @param {?} templateMeta\n * @return {?}\n */\nnormalizeExternalStylesheets(templateMeta: CompileTemplateMetadata):\n      SyncAsync<CompileTemplateMetadata> {\n    return SyncAsync.then(\n        this._loadMissingExternalStylesheets(templateMeta.styleUrls),\n        (externalStylesheets) => new CompileTemplateMetadata({\n          encapsulation: templateMeta.encapsulation,\n          template: templateMeta.template,\n          templateUrl: templateMeta.templateUrl,\n          styles: templateMeta.styles,\n          styleUrls: templateMeta.styleUrls,\n          externalStylesheets: externalStylesheets,\n          ngContentSelectors: templateMeta.ngContentSelectors,\n          animations: templateMeta.animations,\n          interpolation: templateMeta.interpolation,\n          isInline: templateMeta.isInline,\n        }));\n  }\n/**\n * @param {?} styleUrls\n * @param {?=} loadedStylesheets\n * @return {?}\n */\n\nprivate _loadMissingExternalStylesheets(\n      styleUrls: string[],\n      loadedStylesheets:\n          Map<string, CompileStylesheetMetadata> = new Map<string, CompileStylesheetMetadata>()):\n      SyncAsync<CompileStylesheetMetadata[]> {\n    return SyncAsync.then(\n        SyncAsync.all(styleUrls.filter((styleUrl) => !loadedStylesheets.has(styleUrl))\n                          .map(\n                              styleUrl => SyncAsync.then(\n                                  this._fetch(styleUrl),\n                                  (loadedStyle) => {\n                                    const /** @type {?} */ stylesheet =\n                                        this.normalizeStylesheet(new CompileStylesheetMetadata(\n                                            {styles: [loadedStyle], moduleUrl: styleUrl}));\n                                    loadedStylesheets.set(styleUrl, stylesheet);\n                                    return this._loadMissingExternalStylesheets(\n                                        stylesheet.styleUrls, loadedStylesheets);\n                                  }))),\n        (_) => Array.from(loadedStylesheets.values()));\n  }\n/**\n * @param {?} stylesheet\n * @return {?}\n */\nnormalizeStylesheet(stylesheet: CompileStylesheetMetadata): CompileStylesheetMetadata {\n    const /** @type {?} */ moduleUrl = /** @type {?} */(( stylesheet.moduleUrl));\n    const /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n                             .map(url => this._urlResolver.resolve(moduleUrl, url));\n\n    const /** @type {?} */ allStyles = stylesheet.styles.map(style => {\n      const /** @type {?} */ styleWithImports = extractStyleUrls(this._urlResolver, moduleUrl, style);\n      allStyleUrls.push(...styleWithImports.styleUrls);\n      return styleWithImports.style;\n    });\n\n    return new CompileStylesheetMetadata(\n        {styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl});\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ResourceLoader, },\n{type: UrlResolver, },\n{type: HtmlParser, },\n{type: CompilerConfig, },\n];\n}\n\nfunction DirectiveNormalizer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectiveNormalizer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectiveNormalizer.ctorParameters;\n/** @type {?} */\nDirectiveNormalizer.prototype._resourceLoaderCache;\n/** @type {?} */\nDirectiveNormalizer.prototype._resourceLoader;\n/** @type {?} */\nDirectiveNormalizer.prototype._urlResolver;\n/** @type {?} */\nDirectiveNormalizer.prototype._htmlParser;\n/** @type {?} */\nDirectiveNormalizer.prototype._config;\n}\n\nclass TemplatePreparseVisitor implements html.Visitor {\n  ngContentSelectors: string[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n  ngNonBindableStackCount: number = 0;\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: html.Element, context: any): any {\n    const /** @type {?} */ preparsedElement = preparseElement(ast);\n    switch (preparsedElement.type) {\n      case PreparsedElementType.NG_CONTENT:\n        if (this.ngNonBindableStackCount === 0) {\n          this.ngContentSelectors.push(preparsedElement.selectAttr);\n        }\n        break;\n      case PreparsedElementType.STYLE:\n        let /** @type {?} */ textContent = '';\n        ast.children.forEach(child => {\n          if (child instanceof html.Text) {\n            textContent += child.value;\n          }\n        });\n        this.styles.push(textContent);\n        break;\n      case PreparsedElementType.STYLESHEET:\n        this.styleUrls.push(preparsedElement.hrefAttr);\n        break;\n      default:\n        break;\n    }\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount++;\n    }\n    html.visitAll(this, ast.children);\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount--;\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansion(ast: html.Expansion, context: any): any { html.visitAll(this, ast.cases); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExpansionCase(ast: html.ExpansionCase, context: any): any {\n    html.visitAll(this, ast.expression);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitComment(ast: html.Comment, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttribute(ast: html.Attribute, context: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: html.Text, context: any): any { return null; }\n}\n\nfunction TemplatePreparseVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplatePreparseVisitor.prototype.ngContentSelectors;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.styles;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.styleUrls;\n/** @type {?} */\nTemplatePreparseVisitor.prototype.ngNonBindableStackCount;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, Directive, HostBinding, HostListener, Input, Output, Query, Type, resolveForwardRef, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileReflector} from './compile_reflector';\nimport {CompilerInjectable} from './injectable';\nimport {splitAtColon} from './util';\nexport class DirectiveResolver {\n/**\n * @param {?} _reflector\n */\nconstructor(private _reflector: CompileReflector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: Type<any>) {\n    const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n  }\n\n  /**\n   * Return {@link Directive} for a given `Type`.\n   */\n  resolve(type: Type<any>): Directive;\n  resolve(type: Type<any>, throwIfNotFound: true): Directive;\n  resolve(type: Type<any>, throwIfNotFound: boolean): Directive|null;\n/**\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): Directive|null {\n    const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    if (typeMetadata) {\n      const /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n      if (metadata) {\n        const /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n        return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n      }\n    }\n\n    if (throwIfNotFound) {\n      throw new Error(`No Directive annotation found on ${stringify(type)}`);\n    }\n\n    return null;\n  }\n/**\n * @param {?} dm\n * @param {?} propertyMetadata\n * @param {?} directiveType\n * @return {?}\n */\n\nprivate _mergeWithPropertyMetadata(\n      dm: Directive, propertyMetadata: {[key: string]: any[]},\n      directiveType: Type<any>): Directive {\n    const /** @type {?} */ inputs: string[] = [];\n    const /** @type {?} */ outputs: string[] = [];\n    const /** @type {?} */ host: {[key: string]: string} = {};\n    const /** @type {?} */ queries: {[key: string]: any} = {};\n\n    Object.keys(propertyMetadata).forEach((propName: string) => {\n      const /** @type {?} */ input = findLast(propertyMetadata[propName], (a) => a instanceof Input);\n      if (input) {\n        if (input.bindingPropertyName) {\n          inputs.push(`${propName}: ${input.bindingPropertyName}`);\n        } else {\n          inputs.push(propName);\n        }\n      }\n      const /** @type {?} */ output = findLast(propertyMetadata[propName], (a) => a instanceof Output);\n      if (output) {\n        if (output.bindingPropertyName) {\n          outputs.push(`${propName}: ${output.bindingPropertyName}`);\n        } else {\n          outputs.push(propName);\n        }\n      }\n      const /** @type {?} */ hostBindings = propertyMetadata[propName].filter(a => a && a instanceof HostBinding);\n      hostBindings.forEach(hostBinding => {\n        if (hostBinding.hostPropertyName) {\n          const /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n          if (startWith === '(') {\n            throw new Error(`@HostBinding can not bind to events. Use @HostListener instead.`);\n          } else if (startWith === '[') {\n            throw new Error(\n                `@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.`);\n          }\n          host[`[${hostBinding.hostPropertyName}]`] = propName;\n        } else {\n          host[`[${propName}]`] = propName;\n        }\n      });\n      const /** @type {?} */ hostListeners = propertyMetadata[propName].filter(a => a && a instanceof HostListener);\n      hostListeners.forEach(hostListener => {\n        const /** @type {?} */ args = hostListener.args || [];\n        host[`(${hostListener.eventName})`] = `${propName}(${args.join(',')})`;\n      });\n      const /** @type {?} */ query = findLast(propertyMetadata[propName], (a) => a instanceof Query);\n      if (query) {\n        queries[propName] = query;\n      }\n    });\n    return this._merge(dm, inputs, outputs, host, queries, directiveType);\n  }\n/**\n * @param {?} def\n * @return {?}\n */\n\nprivate _extractPublicName(def: string) { return splitAtColon(def, [ /** @type {?} */((null)), def])[1].trim(); }\n/**\n * @param {?} bindings\n * @return {?}\n */\n\nprivate _dedupeBindings(bindings: string[]): string[] {\n    const /** @type {?} */ names = new Set<string>();\n    const /** @type {?} */ reversedResult: string[] = [];\n    // go last to first to allow later entries to overwrite previous entries\n    for (let /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n      const /** @type {?} */ binding = bindings[i];\n      const /** @type {?} */ name = this._extractPublicName(binding);\n      if (!names.has(name)) {\n        names.add(name);\n        reversedResult.push(binding);\n      }\n    }\n    return reversedResult.reverse();\n  }\n/**\n * @param {?} directive\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} host\n * @param {?} queries\n * @param {?} directiveType\n * @return {?}\n */\n\nprivate _merge(\n      directive: Directive, inputs: string[], outputs: string[], host: {[key: string]: string},\n      queries: {[key: string]: any}, directiveType: Type<any>): Directive {\n    const /** @type {?} */ mergedInputs =\n        this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n    const /** @type {?} */ mergedOutputs =\n        this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n    const /** @type {?} */ mergedHost = directive.host ? {...directive.host, ...host} : host;\n    const /** @type {?} */ mergedQueries = directive.queries ? {...directive.queries, ...queries} : queries;\n\n    if (directive instanceof Component) {\n      return new Component({\n        selector: directive.selector,\n        inputs: mergedInputs,\n        outputs: mergedOutputs,\n        host: mergedHost,\n        exportAs: directive.exportAs,\n        moduleId: directive.moduleId,\n        queries: mergedQueries,\n        changeDetection: directive.changeDetection,\n        providers: directive.providers,\n        viewProviders: directive.viewProviders,\n        entryComponents: directive.entryComponents,\n        template: directive.template,\n        templateUrl: directive.templateUrl,\n        styles: directive.styles,\n        styleUrls: directive.styleUrls,\n        encapsulation: directive.encapsulation,\n        animations: directive.animations,\n        interpolation: directive.interpolation\n      });\n    } else {\n      return new Directive({\n        selector: directive.selector,\n        inputs: mergedInputs,\n        outputs: mergedOutputs,\n        host: mergedHost,\n        exportAs: directive.exportAs,\n        queries: mergedQueries,\n        providers: directive.providers\n      });\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompileReflector, },\n];\n}\n\nfunction DirectiveResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectiveResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectiveResolver.ctorParameters;\n/** @type {?} */\nDirectiveResolver.prototype._reflector;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type: any): type is Directive {\n  return type instanceof Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nexport function findLast<T>(arr: T[], condition: (value: T) => boolean): T|null {\n  for (let /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n    if (condition(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst /** @type {?} */ STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst /** @type {?} */ GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nconst /** @type {?} */ GENERATED_MODULE = /\\.ngfactory$|\\.ngsummary$/;\nconst /** @type {?} */ JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nconst /** @type {?} */ JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function ngfactoryFilePath(filePath: string, forceSourceFile = false): string {\n  const /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n  return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripGeneratedFileSuffix(filePath: string): string {\n  return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function isGeneratedFile(filePath: string): boolean {\n  return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function splitTypescriptSuffix(path: string, forceSourceFile = false): string[] {\n  if (path.endsWith('.d.ts')) {\n    return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n  }\n\n  const /** @type {?} */ lastDot = path.lastIndexOf('.');\n\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  }\n\n  return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nexport function summaryFileName(fileName: string): string {\n  const /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n  return `${fileNameWithoutSuffix}.ngsummary.json`;\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function summaryForJitFileName(fileName: string, forceSourceFile = false): string {\n  const /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n  return `${urlWithSuffix[0]}.ngsummary${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripSummaryForJitFileSuffix(filePath: string): string {\n  return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nexport function summaryForJitName(symbolName: string): string {\n  return `${symbolName}NgSummary`;\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nexport function stripSummaryForJitNameSuffix(symbolName: string): string {\n  return symbolName.replace(JIT_SUMMARY_NAME, '');\n}","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector} from './compile_reflector';\nexport type LifecycleHooks = number;\nexport let LifecycleHooks: any = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\n\n\nexport const /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n  LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n  LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n  LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nexport function hasLifecycleHook(\n    reflector: CompileReflector, hook: LifecycleHooks, token: any): boolean {\n  return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nexport function getAllLifecycleHooks(reflector: CompileReflector, token: any): LifecycleHooks[] {\n  return LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(reflector, hook, token));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook: LifecycleHooks): string {\n  switch (hook) {\n    case LifecycleHooks.OnInit:\n      return 'ngOnInit';\n    case LifecycleHooks.OnDestroy:\n      return 'ngOnDestroy';\n    case LifecycleHooks.DoCheck:\n      return 'ngDoCheck';\n    case LifecycleHooks.OnChanges:\n      return 'ngOnChanges';\n    case LifecycleHooks.AfterContentInit:\n      return 'ngAfterContentInit';\n    case LifecycleHooks.AfterContentChecked:\n      return 'ngAfterContentChecked';\n    case LifecycleHooks.AfterViewInit:\n      return 'ngAfterViewInit';\n    case LifecycleHooks.AfterViewChecked:\n      return 'ngAfterViewChecked';\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, Type, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileReflector} from './compile_reflector';\nimport {findLast} from './directive_resolver';\nimport {CompilerInjectable} from './injectable';\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj: any): obj is NgModule {\n  return obj instanceof NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nexport class NgModuleResolver {\n/**\n * @param {?} _reflector\n */\nconstructor(private _reflector: CompileReflector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nisNgModule(type: any) { return this._reflector.annotations(type).some(_isNgModuleMetadata); }\n/**\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): NgModule|null {\n    const /** @type {?} */ ngModuleMeta: NgModule = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n\n    if (ngModuleMeta) {\n      return ngModuleMeta;\n    } else {\n      if (throwIfNotFound) {\n        throw new Error(`No NgModule metadata found for '${stringify(type)}'.`);\n      }\n      return null;\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompileReflector, },\n];\n}\n\nfunction NgModuleResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgModuleResolver.ctorParameters;\n/** @type {?} */\nNgModuleResolver.prototype._reflector;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, Type, resolveForwardRef, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileReflector} from './compile_reflector';\nimport {findLast} from './directive_resolver';\nimport {CompilerInjectable} from './injectable';\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type: any): boolean {\n  return type instanceof Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n * \n * This interface can be overridden by the application developer to create custom behavior.\n * \n * See {\\@link Compiler}\n */\nexport class PipeResolver {\n/**\n * @param {?} _reflector\n */\nconstructor(private _reflector: CompileReflector) {}\n/**\n * @param {?} type\n * @return {?}\n */\nisPipe(type: Type<any>) {\n    const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n    return typeMetadata && typeMetadata.some(_isPipeMetadata);\n  }\n/**\n * Return {\\@link Pipe} for a given `Type`.\n * @param {?} type\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nresolve(type: Type<any>, throwIfNotFound = true): Pipe|null {\n    const /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n    if (metas) {\n      const /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n      if (annotation) {\n        return annotation;\n      }\n    }\n    if (throwIfNotFound) {\n      throw new Error(`No Pipe decorator found on ${stringify(type)}`);\n    }\n    return null;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompileReflector, },\n];\n}\n\nfunction PipeResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nPipeResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPipeResolver.ctorParameters;\n/** @type {?} */\nPipeResolver.prototype._reflector;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Type} from '@angular/core';\nimport {CompileTypeSummary} from './compile_metadata';\nimport {CompilerInjectable} from './injectable';\n/**\n * @record\n */\nexport function Summary() {}\n\n\nfunction Summary_tsickle_Closure_declarations() {\n/** @type {?} */\nSummary.prototype.symbol;\n/** @type {?} */\nSummary.prototype.metadata;\n/** @type {?|undefined} */\nSummary.prototype.type;\n}\n\n\nexport interface Summary<T> {\n  symbol: T;\n  metadata: any;\n  type?: CompileTypeSummary;\n}\n/**\n * @abstract\n */\nexport abstract class SummaryResolver<T> {\n  abstract isLibraryFile(fileName: string): boolean;\n  abstract getLibraryFileName(fileName: string): string|null;\n  abstract resolveSummary(reference: T): Summary<T>|null;\n  abstract getSymbolsOf(filePath: string): T[];\n  abstract getImportAs(reference: T): T;\n  abstract addSummary(summary: Summary<T>): void;\n}\n\nfunction SummaryResolver_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} fileName\n * @return {?}\n */\nSummaryResolver.prototype.isLibraryFile = function(fileName) {};\n\n/**\n * @abstract\n * @param {?} fileName\n * @return {?}\n */\nSummaryResolver.prototype.getLibraryFileName = function(fileName) {};\n\n/**\n * @abstract\n * @param {?} reference\n * @return {?}\n */\nSummaryResolver.prototype.resolveSummary = function(reference) {};\n\n/**\n * @abstract\n * @param {?} filePath\n * @return {?}\n */\nSummaryResolver.prototype.getSymbolsOf = function(filePath) {};\n\n/**\n * @abstract\n * @param {?} reference\n * @return {?}\n */\nSummaryResolver.prototype.getImportAs = function(reference) {};\n\n/**\n * @abstract\n * @param {?} summary\n * @return {?}\n */\nSummaryResolver.prototype.addSummary = function(summary) {};\n}\n\nexport class JitSummaryResolver implements SummaryResolver<Type<any>> {\nprivate _summaries = new Map<Type<any>, Summary<Type<any>>>();\n/**\n * @param {?} fileName\n * @return {?}\n */\nisLibraryFile(fileName: string): boolean { return false; };\n/**\n * @param {?} fileName\n * @return {?}\n */\ngetLibraryFileName(fileName: string): string|null { return null; }\n/**\n * @param {?} reference\n * @return {?}\n */\nresolveSummary(reference: Type<any>): Summary<Type<any>>|null {\n    return this._summaries.get(reference) || null;\n  };\n/**\n * @param {?} filePath\n * @return {?}\n */\ngetSymbolsOf(filePath: string): Type<any>[] { return []; }\n/**\n * @param {?} reference\n * @return {?}\n */\ngetImportAs(reference: Type<any>): Type<any> { return reference; }\n/**\n * @param {?} summary\n * @return {?}\n */\naddSummary(summary: Summary<Type<any>>) { this._summaries.set(summary.symbol, summary); };\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction JitSummaryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nJitSummaryResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJitSummaryResolver.ctorParameters;\n/** @type {?} */\nJitSummaryResolver.prototype._summaries;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, ChangeDetectionStrategy, Component, ComponentFactory, Directive, Host, Inject, Injectable, InjectionToken, ModuleWithProviders, Optional, Provider, Query, RendererType2, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef, ɵConsole as Console, ɵERROR_COMPONENT_TYPE, ɵccf as createComponentFactory, ɵisPromise as isPromise, ɵstringify as stringify} from '@angular/core';\n\nimport {StaticSymbol, StaticSymbolCache} from './aot/static_symbol';\nimport {ngfactoryFilePath} from './aot/util';\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {CompilerConfig} from './config';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {Identifiers} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport {getAllLifecycleHooks} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {SummaryResolver} from './summary_resolver';\nimport {SyncAsync, ValueTransformer, noUndefined, syntaxError, visitValue} from './util';\n\nexport type ErrorCollector = (error: any, type?: any) => void;\nexport const /** @type {?} */ ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\nexport class CompileMetadataResolver {\nprivate _nonNormalizedDirectiveCache =\n      new Map<Type<any>, {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}>();\nprivate _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\nprivate _summaryCache = new Map<Type<any>, cpl.CompileTypeSummary|null>();\nprivate _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\nprivate _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\nprivate _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n/**\n * @param {?} _config\n * @param {?} _ngModuleResolver\n * @param {?} _directiveResolver\n * @param {?} _pipeResolver\n * @param {?} _summaryResolver\n * @param {?} _schemaRegistry\n * @param {?} _directiveNormalizer\n * @param {?} _console\n * @param {?} _staticSymbolCache\n * @param {?} _reflector\n * @param {?=} _errorCollector\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _ngModuleResolver: NgModuleResolver,\nprivate _directiveResolver: DirectiveResolver,\nprivate _pipeResolver: PipeResolver,\nprivate _summaryResolver: SummaryResolver<any>,\nprivate _schemaRegistry: ElementSchemaRegistry,\nprivate _directiveNormalizer: DirectiveNormalizer,\nprivate _console: Console,\nprivate _staticSymbolCache: StaticSymbolCache,\nprivate _reflector: CompileReflector,\nprivate _errorCollector?: ErrorCollector) {}\n/**\n * @return {?}\n */\ngetReflector(): CompileReflector { return this._reflector; }\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    const /** @type {?} */ dirMeta = this._directiveCache.get(type);\n    this._directiveCache.delete(type);\n    this._nonNormalizedDirectiveCache.delete(type);\n    this._summaryCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n    if (dirMeta) {\n      this._directiveNormalizer.clearCacheFor(dirMeta);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._directiveCache.clear();\n    this._nonNormalizedDirectiveCache.clear();\n    this._summaryCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n    this._directiveNormalizer.clearCache();\n  }\n/**\n * @param {?} baseType\n * @param {?} name\n * @return {?}\n */\n\nprivate _createProxyClass(baseType: any, name: string): cpl.ProxyClass {\n    let /** @type {?} */ delegate: any = null;\n    const /** @type {?} */ proxyClass: cpl.ProxyClass = /** @type {?} */(( <any>function() {\n      if (!delegate) {\n        throw new Error(\n            `Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n      }\n      return delegate.apply(this, arguments);\n    }));\n    proxyClass.setDelegate = (d) => {\n      delegate = d;\n      ( /** @type {?} */((<any>proxyClass))).prototype = d.prototype;\n    };\n    // Make stringify work correctly\n    ( /** @type {?} */((<any>proxyClass))).overriddenName = name;\n    return proxyClass;\n  }\n/**\n * @param {?} dirType\n * @param {?} name\n * @return {?}\n */\n\nprivate getGeneratedClass(dirType: any, name: string): StaticSymbol|cpl.ProxyClass {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n    } else {\n      return this._createProxyClass(dirType, name);\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\n\nprivate getComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentViewClass(dirType: any): StaticSymbol|cpl.ProxyClass {\n    return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetHostComponentType(dirType: any): StaticSymbol|Type<any> {\n    const /** @type {?} */ name = `${cpl.identifierName({reference: dirType})}_Host`;\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(dirType.filePath, name);\n    } else {\n      const /** @type {?} */ HostClass = /** @type {?} */(( <any>function HostClass() {}));\n      HostClass.overriddenName = name;\n\n      return HostClass;\n    }\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\n\nprivate getRendererType(dirType: any): StaticSymbol|RendererType2 {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n    } else {\n      // returning an object as proxy,\n      // that we fill later during runtime compilation.\n      return /** @type {?} */(( <any>{}));\n    }\n  }\n/**\n * @param {?} selector\n * @param {?} dirType\n * @param {?} inputs\n * @param {?} outputs\n * @return {?}\n */\n\nprivate getComponentFactory(\n      selector: string, dirType: any, inputs: {[key: string]: string}|null,\n      outputs: {[key: string]: string}): StaticSymbol|ComponentFactory<any> {\n    if (dirType instanceof StaticSymbol) {\n      return this._staticSymbolCache.get(\n          ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n    } else {\n      const /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n      // Note: ngContentSelectors will be filled later once the template is\n      // loaded.\n      return createComponentFactory(selector, dirType, /** @type {?} */(( <any>hostView)), inputs, outputs, []);\n    }\n  }\n/**\n * @param {?} factory\n * @param {?} ngContentSelectors\n * @return {?}\n */\n\nprivate initComponentFactory(\n      factory: StaticSymbol|ComponentFactory<any>, ngContentSelectors: string[]) {\n    if (!(factory instanceof StaticSymbol)) {\n      factory.ngContentSelectors.push(...ngContentSelectors);\n    }\n  }\n/**\n * @param {?} type\n * @param {?} kind\n * @return {?}\n */\n\nprivate _loadSummary(type: any, kind: cpl.CompileSummaryKind): cpl.CompileTypeSummary|null {\n    let /** @type {?} */ typeSummary = this._summaryCache.get(type);\n    if (!typeSummary) {\n      const /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n      typeSummary = summary ? summary.type : null;\n      this._summaryCache.set(type, typeSummary || null);\n    }\n    return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n  }\n/**\n * @param {?} ngModuleType\n * @param {?} directiveType\n * @param {?} isSync\n * @return {?}\n */\nloadDirectiveMetadata(ngModuleType: any, directiveType: any, isSync: boolean): SyncAsync<null> {\n    if (this._directiveCache.has(directiveType)) {\n      return null;\n    }\n    directiveType = resolveForwardRef(directiveType);\n    const {annotation, metadata} = /** @type {?} */(( this.getNonNormalizedDirectiveMetadata(directiveType)));\n\n    const /** @type {?} */ createDirectiveMetadata = (templateMetadata: cpl.CompileTemplateMetadata | null) => {\n      const /** @type {?} */ normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n        isHost: false,\n        type: metadata.type,\n        isComponent: metadata.isComponent,\n        selector: metadata.selector,\n        exportAs: metadata.exportAs,\n        changeDetection: metadata.changeDetection,\n        inputs: metadata.inputs,\n        outputs: metadata.outputs,\n        hostListeners: metadata.hostListeners,\n        hostProperties: metadata.hostProperties,\n        hostAttributes: metadata.hostAttributes,\n        providers: metadata.providers,\n        viewProviders: metadata.viewProviders,\n        queries: metadata.queries,\n        viewQueries: metadata.viewQueries,\n        entryComponents: metadata.entryComponents,\n        componentViewType: metadata.componentViewType,\n        rendererType: metadata.rendererType,\n        componentFactory: metadata.componentFactory,\n        template: templateMetadata\n      });\n      if (templateMetadata) {\n        this.initComponentFactory( /** @type {?} */((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n      }\n      this._directiveCache.set(directiveType, normalizedDirMeta);\n      this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n      return null;\n    };\n\n    if (metadata.isComponent) {\n      const /** @type {?} */ template = /** @type {?} */(( metadata.template));\n      const /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n        ngModuleType,\n        componentType: directiveType,\n        moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n        encapsulation: template.encapsulation,\n        template: template.template,\n        templateUrl: template.templateUrl,\n        styles: template.styles,\n        styleUrls: template.styleUrls,\n        animations: template.animations,\n        interpolation: template.interpolation\n      });\n      if (isPromise(templateMeta) && isSync) {\n        this._reportError(componentStillLoadingError(directiveType), directiveType);\n        return null;\n      }\n      return SyncAsync.then(templateMeta, createDirectiveMetadata);\n    } else {\n      // directive\n      createDirectiveMetadata(null);\n      return null;\n    }\n  }\n/**\n * @param {?} directiveType\n * @return {?}\n */\ngetNonNormalizedDirectiveMetadata(directiveType: any):\n      {annotation: Directive, metadata: cpl.CompileDirectiveMetadata}|null {\n    directiveType = resolveForwardRef(directiveType);\n    if (!directiveType) {\n      return null;\n    }\n    let /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n    if (cacheEntry) {\n      return cacheEntry;\n    }\n    const /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n    if (!dirMeta) {\n      return null;\n    }\n    let /** @type {?} */ nonNormalizedTemplateMetadata: cpl.CompileTemplateMetadata = /** @type {?} */(( undefined));\n\n    if (dirMeta instanceof Component) {\n      // component\n      assertArrayOfStrings('styles', dirMeta.styles);\n      assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n      assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n      const /** @type {?} */ animations = dirMeta.animations;\n\n      nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n        encapsulation: noUndefined(dirMeta.encapsulation),\n        template: noUndefined(dirMeta.template),\n        templateUrl: noUndefined(dirMeta.templateUrl),\n        styles: dirMeta.styles || [],\n        styleUrls: dirMeta.styleUrls || [],\n        animations: animations || [],\n        interpolation: noUndefined(dirMeta.interpolation),\n        isInline: !!dirMeta.template,\n        externalStylesheets: [],\n        ngContentSelectors: []\n      });\n    }\n\n    let /** @type {?} */ changeDetectionStrategy: ChangeDetectionStrategy = /** @type {?} */(( null));\n    let /** @type {?} */ viewProviders: cpl.CompileProviderMetadata[] = [];\n    let /** @type {?} */ entryComponentMetadata: cpl.CompileEntryComponentMetadata[] = [];\n    let /** @type {?} */ selector = dirMeta.selector;\n\n    if (dirMeta instanceof Component) {\n      // Component\n      changeDetectionStrategy = /** @type {?} */(( dirMeta.changeDetection));\n      if (dirMeta.viewProviders) {\n        viewProviders = this._getProvidersMetadata(\n            dirMeta.viewProviders, entryComponentMetadata,\n            `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n      }\n      if (dirMeta.entryComponents) {\n        entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                                     .map((type) => /** @type {?} */(( this._getEntryComponentMetadata(type))))\n                                     .concat(entryComponentMetadata);\n      }\n      if (!selector) {\n        selector = this._schemaRegistry.getDefaultComponentElementName();\n      }\n    } else {\n      // Directive\n      if (!selector) {\n        this._reportError(\n            syntaxError(\n                `Directive ${stringifyType(directiveType)} has no selector, please add it!`),\n            directiveType);\n        selector = 'error';\n      }\n    }\n\n    let /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    if (dirMeta.providers != null) {\n      providers = this._getProvidersMetadata(\n          dirMeta.providers, entryComponentMetadata,\n          `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n    }\n    let /** @type {?} */ queries: cpl.CompileQueryMetadata[] = [];\n    let /** @type {?} */ viewQueries: cpl.CompileQueryMetadata[] = [];\n    if (dirMeta.queries != null) {\n      queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n      viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n    }\n\n    const /** @type {?} */ metadata = cpl.CompileDirectiveMetadata.create({\n      isHost: false,\n      selector: selector,\n      exportAs: noUndefined(dirMeta.exportAs),\n      isComponent: !!nonNormalizedTemplateMetadata,\n      type: this._getTypeMetadata(directiveType),\n      template: nonNormalizedTemplateMetadata,\n      changeDetection: changeDetectionStrategy,\n      inputs: dirMeta.inputs || [],\n      outputs: dirMeta.outputs || [],\n      host: dirMeta.host || {},\n      providers: providers || [],\n      viewProviders: viewProviders || [],\n      queries: queries || [],\n      viewQueries: viewQueries || [],\n      entryComponents: entryComponentMetadata,\n      componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                                                         null,\n      rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n      componentFactory: null\n    });\n    if (nonNormalizedTemplateMetadata) {\n      metadata.componentFactory =\n          this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n    }\n    cacheEntry = {metadata, annotation: dirMeta};\n    this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n    return cacheEntry;\n  }\n/**\n * Gets the metadata for the given directive.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} directiveType\n * @return {?}\n */\ngetDirectiveMetadata(directiveType: any): cpl.CompileDirectiveMetadata {\n    const /** @type {?} */ dirMeta = /** @type {?} */(( this._directiveCache.get(directiveType)));\n    if (!dirMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`),\n          directiveType);\n    }\n    return dirMeta;\n  }\n/**\n * @param {?} dirType\n * @return {?}\n */\ngetDirectiveSummary(dirType: any): cpl.CompileDirectiveSummary {\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (!dirSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`),\n          dirType);\n    }\n    return dirSummary;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisDirective(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n        this._directiveResolver.isDirective(type);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisPipe(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n        this._pipeResolver.isPipe(type);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisNgModule(type: any) {\n    return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n        this._ngModuleResolver.isNgModule(type);\n  }\n/**\n * @param {?} moduleType\n * @return {?}\n */\ngetNgModuleSummary(moduleType: any): cpl.CompileNgModuleSummary|null {\n    let /** @type {?} */ moduleSummary: cpl.CompileNgModuleSummary|null = /** @type {?} */((\n        <cpl.CompileNgModuleSummary>this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule)));\n    if (!moduleSummary) {\n      const /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n      moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n      if (moduleSummary) {\n        this._summaryCache.set(moduleType, moduleSummary);\n      }\n    }\n    return moduleSummary;\n  }\n/**\n * Loads the declared directives and pipes of an NgModule.\n * @param {?} moduleType\n * @param {?} isSync\n * @param {?=} throwIfNotFound\n * @return {?}\n */\nloadNgModuleDirectiveAndPipeMetadata(moduleType: any, isSync: boolean, throwIfNotFound = true):\n      Promise<any> {\n    const /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    if (ngModule) {\n      ngModule.declaredDirectives.forEach((id) => {\n        const /** @type {?} */ promise = this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n    }\n    return Promise.all(loading);\n  }\n/**\n * @param {?} moduleType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\ngetNgModuleMetadata(moduleType: any, throwIfNotFound = true): cpl.CompileNgModuleMetadata|null {\n    moduleType = resolveForwardRef(moduleType);\n    let /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n    if (compileMeta) {\n      return compileMeta;\n    }\n    const /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n    if (!meta) {\n      return null;\n    }\n    const /** @type {?} */ declaredDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedNonModuleIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ declaredPipes: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ importedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ exportedModules: cpl.CompileNgModuleSummary[] = [];\n    const /** @type {?} */ providers: cpl.CompileProviderMetadata[] = [];\n    const /** @type {?} */ entryComponents: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ bootstrapComponents: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ schemas: SchemaMetadata[] = [];\n\n    if (meta.imports) {\n      flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n        let /** @type {?} */ importedModuleType: Type<any> = /** @type {?} */(( undefined));\n        if (isValidType(importedType)) {\n          importedModuleType = importedType;\n        } else if (importedType && importedType.ngModule) {\n          const /** @type {?} */ moduleWithProviders: ModuleWithProviders = importedType;\n          importedModuleType = moduleWithProviders.ngModule;\n          if (moduleWithProviders.providers) {\n            providers.push(...this._getProvidersMetadata(\n                moduleWithProviders.providers, entryComponents,\n                `provider for the NgModule '${stringifyType(importedModuleType)}'`, [],\n                importedType));\n          }\n        }\n\n        if (importedModuleType) {\n          if (this._checkSelfImport(moduleType, importedModuleType)) return;\n          const /** @type {?} */ importedModuleSummary = this.getNgModuleSummary(importedModuleType);\n          if (!importedModuleSummary) {\n            this._reportError(\n                syntaxError(\n                    `Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'. Please add a @NgModule annotation.`),\n                moduleType);\n            return;\n          }\n          importedModules.push(importedModuleSummary);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    if (meta.exports) {\n      flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n        if (!isValidType(exportedType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ exportedModuleSummary = this.getNgModuleSummary(exportedType);\n        if (exportedModuleSummary) {\n          exportedModules.push(exportedModuleSummary);\n        } else {\n          exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n        }\n      });\n    }\n\n    // Note: This will be modified later, so we rely on\n    // getting a new instance every time!\n    const /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n    if (meta.declarations) {\n      flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n        if (!isValidType(declaredType)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        const /** @type {?} */ declaredIdentifier = this._getIdentifierMetadata(declaredType);\n        if (this.isDirective(declaredType)) {\n          transitiveModule.addDirective(declaredIdentifier);\n          declaredDirectives.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else if (this.isPipe(declaredType)) {\n          transitiveModule.addPipe(declaredIdentifier);\n          transitiveModule.pipes.push(declaredIdentifier);\n          declaredPipes.push(declaredIdentifier);\n          this._addTypeToModule(declaredType, moduleType);\n        } else {\n          this._reportError(\n              syntaxError(\n                  `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`),\n              moduleType);\n          return;\n        }\n      });\n    }\n\n    const /** @type {?} */ exportedDirectives: cpl.CompileIdentifierMetadata[] = [];\n    const /** @type {?} */ exportedPipes: cpl.CompileIdentifierMetadata[] = [];\n    exportedNonModuleIdentifiers.forEach((exportedId) => {\n      if (transitiveModule.directivesSet.has(exportedId.reference)) {\n        exportedDirectives.push(exportedId);\n        transitiveModule.addExportedDirective(exportedId);\n      } else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n        exportedPipes.push(exportedId);\n        transitiveModule.addExportedPipe(exportedId);\n      } else {\n        this._reportError(\n            syntaxError(\n                `Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`),\n            moduleType);\n        return;\n      }\n    });\n\n    // The providers of the module have to go last\n    // so that they overwrite any other provider we already added.\n    if (meta.providers) {\n      providers.push(...this._getProvidersMetadata(\n          meta.providers, entryComponents,\n          `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n    }\n\n    if (meta.entryComponents) {\n      entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                               .map(type => /** @type {?} */(( this._getEntryComponentMetadata(type)))));\n    }\n\n    if (meta.bootstrap) {\n      flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n        if (!isValidType(type)) {\n          this._reportError(\n              syntaxError(\n                  `Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`),\n              moduleType);\n          return;\n        }\n        bootstrapComponents.push(this._getIdentifierMetadata(type));\n      });\n    }\n\n    entryComponents.push(\n        ...bootstrapComponents.map(type => /** @type {?} */(( this._getEntryComponentMetadata(type.reference)))));\n\n    if (meta.schemas) {\n      schemas.push(...flattenAndDedupeArray(meta.schemas));\n    }\n\n    compileMeta = new cpl.CompileNgModuleMetadata({\n      type: this._getTypeMetadata(moduleType),\n      providers,\n      entryComponents,\n      bootstrapComponents,\n      schemas,\n      declaredDirectives,\n      exportedDirectives,\n      declaredPipes,\n      exportedPipes,\n      importedModules,\n      exportedModules,\n      transitiveModule,\n      id: meta.id || null,\n    });\n\n    entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n    providers.forEach((provider) => transitiveModule.addProvider(provider, /** @type {?} */(( compileMeta)).type));\n    transitiveModule.addModule(compileMeta.type);\n    this._ngModuleCache.set(moduleType, compileMeta);\n    return compileMeta;\n  }\n/**\n * @param {?} moduleType\n * @param {?} importedModuleType\n * @return {?}\n */\n\nprivate _checkSelfImport(moduleType: Type<any>, importedModuleType: Type<any>): boolean {\n    if (moduleType === importedModuleType) {\n      this._reportError(\n          syntaxError(`'${stringifyType(moduleType)}' module can't import itself`), moduleType);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _getTypeDescriptor(type: Type<any>): string {\n    if (this.isDirective(type)) {\n      return 'directive';\n    }\n\n    if (this.isPipe(type)) {\n      return 'pipe';\n    }\n\n    if (this.isNgModule(type)) {\n      return 'module';\n    }\n\n    if (( /** @type {?} */((type as any))).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n/**\n * @param {?} type\n * @param {?} moduleType\n * @return {?}\n */\n\nprivate _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      this._reportError(\n          syntaxError(\n              `Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n              `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n              `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`),\n          moduleType);\n      return;\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n/**\n * @param {?} importedModules\n * @param {?} exportedModules\n * @return {?}\n */\n\nprivate _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleSummary[],\n      exportedModules: cpl.CompileNgModuleSummary[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const /** @type {?} */ result = new cpl.TransitiveCompileNgModuleMetadata();\n    const /** @type {?} */ modulesByToken = new Map<any, Set<any>>();\n    importedModules.concat(exportedModules).forEach((modSummary) => {\n      modSummary.modules.forEach((mod) => result.addModule(mod));\n      modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n      const /** @type {?} */ addedTokens = new Set<any>();\n      modSummary.providers.forEach((entry) => {\n        const /** @type {?} */ tokenRef = cpl.tokenReference(entry.provider.token);\n        let /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n        if (!prevModules) {\n          prevModules = new Set<any>();\n          modulesByToken.set(tokenRef, prevModules);\n        }\n        const /** @type {?} */ moduleRef = entry.module.reference;\n        // Note: the providers of one module may still contain multiple providers\n        // per token (e.g. for multi providers), and we need to preserve these.\n        if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n          prevModules.add(moduleRef);\n          addedTokens.add(tokenRef);\n          result.addProvider(entry.provider, entry.module);\n        }\n      });\n    });\n    exportedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n    });\n    importedModules.forEach((modSummary) => {\n      modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n      modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n    });\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _getIdentifierMetadata(type: Type<any>): cpl.CompileIdentifierMetadata {\n    type = resolveForwardRef(type);\n    return {reference: type};\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nisInjectable(type: any): boolean {\n    const /** @type {?} */ annotations = this._reflector.annotations(type);\n    // Note: We need an exact check here as @Component / @Directive / ... inherit\n    // from @CompilerInjectable!\n    return annotations.some(ann => ann.constructor === Injectable);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\ngetInjectableSummary(type: any): cpl.CompileTypeSummary {\n    return {\n      summaryKind: cpl.CompileSummaryKind.Injectable,\n      type: this._getTypeMetadata(type, null, false)\n    };\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @return {?}\n */\n\nprivate _getInjectableMetadata(type: Type<any>, dependencies: any[]|null = null):\n      cpl.CompileTypeMetadata {\n    const /** @type {?} */ typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n    if (typeSummary) {\n      return typeSummary.type;\n    }\n    return this._getTypeMetadata(type, dependencies);\n  }\n/**\n * @param {?} type\n * @param {?=} dependencies\n * @param {?=} throwOnUnknownDeps\n * @return {?}\n */\n\nprivate _getTypeMetadata(\n      type: Type<any>, dependencies: any[]|null = null,\n      throwOnUnknownDeps = true): cpl.CompileTypeMetadata {\n    const /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n    return {\n      reference: identifier.reference,\n      diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n      lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n    };\n  }\n/**\n * @param {?} factory\n * @param {?=} dependencies\n * @return {?}\n */\n\nprivate _getFactoryMetadata(factory: Function, dependencies: any[]|null = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return {reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies)};\n  }\n/**\n * Gets the metadata for the given pipe.\n * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeMetadata(pipeType: any): cpl.CompilePipeMetadata|null {\n    const /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeMeta || null;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetPipeSummary(pipeType: any): cpl.CompilePipeSummary {\n    const /** @type {?} */ pipeSummary = /** @type {?} */((\n        <cpl.CompilePipeSummary>this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe)));\n    if (!pipeSummary) {\n      this._reportError(\n          syntaxError(\n              `Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`),\n          pipeType);\n    }\n    return pipeSummary;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\ngetOrLoadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    let /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n    if (!pipeMeta) {\n      pipeMeta = this._loadPipeMetadata(pipeType);\n    }\n    return pipeMeta;\n  }\n/**\n * @param {?} pipeType\n * @return {?}\n */\n\nprivate _loadPipeMetadata(pipeType: any): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    const /** @type {?} */ pipeAnnotation = /** @type {?} */(( this._pipeResolver.resolve(pipeType)));\n\n    const /** @type {?} */ pipeMeta = new cpl.CompilePipeMetadata({\n      type: this._getTypeMetadata(pipeType),\n      name: pipeAnnotation.name,\n      pure: !!pipeAnnotation.pure\n    });\n    this._pipeCache.set(pipeType, pipeMeta);\n    this._summaryCache.set(pipeType, pipeMeta.toSummary());\n    return pipeMeta;\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @param {?=} throwOnUnknownDeps\n * @return {?}\n */\n\nprivate _getDependenciesMetadata(\n      typeOrFunc: Type<any>|Function, dependencies: any[]|null,\n      throwOnUnknownDeps = true): cpl.CompileDiDependencyMetadata[] {\n    let /** @type {?} */ hasUnknownDeps = false;\n    const /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    const /** @type {?} */ dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let /** @type {?} */ isAttribute = false;\n      let /** @type {?} */ isHost = false;\n      let /** @type {?} */ isSelf = false;\n      let /** @type {?} */ isSkipSelf = false;\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (paramEntry instanceof InjectionToken) {\n            token = paramEntry;\n          } else if (isValidType(paramEntry) && token == null) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (token == null) {\n        hasUnknownDeps = true;\n        return /** @type {?} */(( null));\n      }\n\n      return {\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        token: this._getTokenMetadata(token)\n      };\n\n    });\n\n    if (hasUnknownDeps) {\n      const /** @type {?} */ depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n      const /** @type {?} */ message =\n          `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`;\n      if (throwOnUnknownDeps) {\n        this._reportError(syntaxError(message), typeOrFunc);\n      } else {\n        this._console.warn(`Warning: ${message} This will become an error in Angular v5.x`);\n      }\n    }\n\n    return dependenciesMetadata;\n  }\n/**\n * @param {?} token\n * @return {?}\n */\n\nprivate _getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let /** @type {?} */ compileToken: cpl.CompileTokenMetadata;\n    if (typeof token === 'string') {\n      compileToken = {value: token};\n    } else {\n      compileToken = {identifier: {reference: token}};\n    }\n    return compileToken;\n  }\n/**\n * @param {?} providers\n * @param {?} targetEntryComponents\n * @param {?=} debugInfo\n * @param {?=} compileProviders\n * @param {?=} type\n * @return {?}\n */\n\nprivate _getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileEntryComponentMetadata[],\n      debugInfo?: string, compileProviders: cpl.CompileProviderMetadata[] = [],\n      type?: any): cpl.CompileProviderMetadata[] {\n    providers.forEach((provider: any, providerIdx: number) => {\n      if (Array.isArray(provider)) {\n        this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n      } else {\n        provider = resolveForwardRef(provider);\n        let /** @type {?} */ providerMeta: cpl.ProviderMeta = /** @type {?} */(( undefined));\n        if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n          this._validateProvider(provider);\n          providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n        } else if (isValidType(provider)) {\n          providerMeta = new cpl.ProviderMeta(provider, {useClass: provider});\n        } else if (provider === void 0) {\n          this._reportError(syntaxError(\n              `Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.`));\n          return;\n        } else {\n          const /** @type {?} */ providersInfo =\n              ( /** @type {?} */((<string[]>providers.reduce(\n                   (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                     if (seenProviderIdx < providerIdx) {\n                       soFar.push(`${stringifyType(seenProvider)}`);\n                     } else if (seenProviderIdx == providerIdx) {\n                       soFar.push(`?${stringifyType(seenProvider)}?`);\n                     } else if (seenProviderIdx == providerIdx + 1) {\n                       soFar.push('...');\n                     }\n                     return soFar;\n                   },\n                   []))))\n                  .join(', ');\n          this._reportError(\n              syntaxError(\n                  `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`),\n              type);\n          return;\n        }\n        if (providerMeta.token ===\n            this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n        } else {\n          compileProviders.push(this.getProviderMetadata(providerMeta));\n        }\n      }\n    });\n    return compileProviders;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\n\nprivate _validateProvider(provider: any): void {\n    if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n      this._reportError(syntaxError(\n          `Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n    }\n  }\n/**\n * @param {?} provider\n * @param {?=} type\n * @return {?}\n */\n\nprivate _getEntryComponentsFromProvider(provider: cpl.ProviderMeta, type?: any):\n      cpl.CompileEntryComponentMetadata[] {\n    const /** @type {?} */ components: cpl.CompileEntryComponentMetadata[] = [];\n    const /** @type {?} */ collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n      return [];\n    }\n\n    if (!provider.multi) {\n      this._reportError(\n          syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`),\n          type);\n      return [];\n    }\n\n    extractIdentifiers(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const /** @type {?} */ entry = this._getEntryComponentMetadata(identifier.reference, false);\n      if (entry) {\n        components.push(entry);\n      }\n    });\n    return components;\n  }\n/**\n * @param {?} dirType\n * @param {?=} throwIfNotFound\n * @return {?}\n */\n\nprivate _getEntryComponentMetadata(dirType: any, throwIfNotFound = true):\n      cpl.CompileEntryComponentMetadata|null {\n    const /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n    if (dirMeta && dirMeta.metadata.isComponent) {\n      return {componentType: dirType, componentFactory: /** @type {?} */(( dirMeta.metadata.componentFactory))};\n    }\n    const /** @type {?} */ dirSummary = /** @type {?} */((\n        <cpl.CompileDirectiveSummary>this._loadSummary(dirType, cpl.CompileSummaryKind.Directive)));\n    if (dirSummary && dirSummary.isComponent) {\n      return {componentType: dirType, componentFactory: /** @type {?} */(( dirSummary.componentFactory))};\n    }\n    if (throwIfNotFound) {\n      throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n    }\n    return null;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ngetProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let /** @type {?} */ compileDeps: cpl.CompileDiDependencyMetadata[] = /** @type {?} */(( undefined));\n    let /** @type {?} */ compileTypeMetadata: cpl.CompileTypeMetadata = /** @type {?} */(( null));\n    let /** @type {?} */ compileFactoryMetadata: cpl.CompileFactoryMetadata = /** @type {?} */(( null));\n    let /** @type {?} */ token: cpl.CompileTokenMetadata = this._getTokenMetadata(provider.token);\n\n    if (provider.useClass) {\n      compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n      if (provider.token === provider.useClass) {\n        // use the compileTypeMetadata as it contains information about lifecycleHooks...\n        token = {identifier: compileTypeMetadata};\n      }\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return {\n      token: token,\n      useClass: compileTypeMetadata,\n      useValue: provider.useValue,\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n      deps: compileDeps,\n      multi: provider.multi\n    };\n  }\n/**\n * @param {?} queries\n * @param {?} isViewQuery\n * @param {?} directiveType\n * @return {?}\n */\n\nprivate _getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const /** @type {?} */ res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const /** @type {?} */ query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this._getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\n\nprivate _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n/**\n * @param {?} q\n * @param {?} propertyName\n * @param {?} typeOrFunc\n * @return {?}\n */\n\nprivate _getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    let /** @type {?} */ selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors =\n          this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        this._reportError(\n            syntaxError(\n                `Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`),\n            typeOrFunc);\n        selectors = [];\n      } else {\n        selectors = [this._getTokenMetadata(q.selector)];\n      }\n    }\n\n    return {\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */(( null))\n    };\n  }\n/**\n * @param {?} error\n * @param {?=} type\n * @param {?=} otherType\n * @return {?}\n */\n\nprivate _reportError(error: any, type?: any, otherType?: any) {\n    if (this._errorCollector) {\n      this._errorCollector(error, type);\n      if (otherType) {\n        this._errorCollector(error, otherType);\n      }\n    } else {\n      throw error;\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompilerConfig, },\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: SummaryResolver, },\n{type: ElementSchemaRegistry, },\n{type: DirectiveNormalizer, },\n{type: Console, },\n{type: StaticSymbolCache, decorators: [{ type: Optional }, ]},\n{type: CompileReflector, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_COLLECTOR_TOKEN, ] }, ]},\n];\n}\n\nfunction CompileMetadataResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCompileMetadataResolver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompileMetadataResolver.ctorParameters;\n/** @type {?} */\nCompileMetadataResolver.prototype._nonNormalizedDirectiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleOfTypes;\n/** @type {?} */\nCompileMetadataResolver.prototype._config;\n/** @type {?} */\nCompileMetadataResolver.prototype._ngModuleResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._pipeResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._summaryResolver;\n/** @type {?} */\nCompileMetadataResolver.prototype._schemaRegistry;\n/** @type {?} */\nCompileMetadataResolver.prototype._directiveNormalizer;\n/** @type {?} */\nCompileMetadataResolver.prototype._console;\n/** @type {?} */\nCompileMetadataResolver.prototype._staticSymbolCache;\n/** @type {?} */\nCompileMetadataResolver.prototype._reflector;\n/** @type {?} */\nCompileMetadataResolver.prototype._errorCollector;\n}\n\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n      const /** @type {?} */ item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array: any[]): Array<any> {\n  if (array) {\n    return Array.from(new Set(array));\n  }\n  return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree: any[]): Array<any> {\n  return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value: any): boolean {\n  return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]) {\n  visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nvisitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    targetIdentifiers.push({reference: value});\n  }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type: any): string {\n  if (type instanceof StaticSymbol) {\n    return `${type.name} in ${type.filePath}`;\n  } else {\n    return stringify(type);\n  }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType: Type<any>) {\n  const /** @type {?} */ error =\n      Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n  ( /** @type {?} */((error as any)))[ɵERROR_COMPONENT_TYPE] = compType;\n  return error;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ParseSourceSpan} from '../parse_util';\nexport type TypeModifier = number;\nexport let TypeModifier: any = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n\n/**\n * @abstract\n */\nexport abstract class Type {\n/**\n * @param {?=} modifiers\n */\nconstructor(public modifiers: TypeModifier[]|null = null) {\n    if (!modifiers) {\n      this.modifiers = [];\n    }\n  }\n  abstract visitType(visitor: TypeVisitor, context: any): any;\n/**\n * @param {?} modifier\n * @return {?}\n */\nhasModifier(modifier: TypeModifier): boolean { return /** @type {?} */(( this.modifiers)).indexOf(modifier) !== -1; }\n}\n\nfunction Type_tsickle_Closure_declarations() {\n/** @type {?} */\nType.prototype.modifiers;\n\n/**\n * @abstract\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nType.prototype.visitType = function(visitor, context) {};\n}\n\nexport type BuiltinTypeName = number;\nexport let BuiltinTypeName: any = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\n\nexport class BuiltinType extends Type {\n/**\n * @param {?} name\n * @param {?=} modifiers\n */\nconstructor(public name: BuiltinTypeName, modifiers: TypeModifier[]|null = null) {\n    super(modifiers);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitBuiltintType(this, context);\n  }\n}\n\nfunction BuiltinType_tsickle_Closure_declarations() {\n/** @type {?} */\nBuiltinType.prototype.name;\n}\n\nexport class ExpressionType extends Type {\n/**\n * @param {?} value\n * @param {?=} modifiers\n */\nconstructor(public value: Expression, modifiers: TypeModifier[]|null = null) { super(modifiers); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitExpressionType(this, context);\n  }\n}\n\nfunction ExpressionType_tsickle_Closure_declarations() {\n/** @type {?} */\nExpressionType.prototype.value;\n}\n\nexport class ArrayType extends Type {\n/**\n * @param {?} of\n * @param {?=} modifiers\n */\nconstructor(public of : Type, modifiers: TypeModifier[]|null = null) { super(modifiers); }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any {\n    return visitor.visitArrayType(this, context);\n  }\n}\n\nfunction ArrayType_tsickle_Closure_declarations() {\n/** @type {?} */\nArrayType.prototype.of;\n}\n\nexport class MapType extends Type {\npublic valueType: Type|null;\n/**\n * @param {?} valueType\n * @param {?=} modifiers\n */\nconstructor(valueType: Type|null|undefined, modifiers: TypeModifier[]|null = null) {\n    super(modifiers);\n    this.valueType = valueType || null;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitType(visitor: TypeVisitor, context: any): any { return visitor.visitMapType(this, context); }\n}\n\nfunction MapType_tsickle_Closure_declarations() {\n/** @type {?} */\nMapType.prototype.valueType;\n}\n\n\nexport const /** @type {?} */ DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nexport const /** @type {?} */ INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nexport const /** @type {?} */ BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nexport const /** @type {?} */ INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nexport const /** @type {?} */ NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nexport const /** @type {?} */ STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nexport const /** @type {?} */ FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\nexport function TypeVisitor() {}\n\n\nfunction TypeVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nTypeVisitor.prototype.visitBuiltintType;\n/** @type {?} */\nTypeVisitor.prototype.visitExpressionType;\n/** @type {?} */\nTypeVisitor.prototype.visitArrayType;\n/** @type {?} */\nTypeVisitor.prototype.visitMapType;\n}\n\n\nexport interface TypeVisitor {\n  visitBuiltintType(type: BuiltinType, context: any): any;\n  visitExpressionType(type: ExpressionType, context: any): any;\n  visitArrayType(type: ArrayType, context: any): any;\n  visitMapType(type: MapType, context: any): any;\n}\nexport type BinaryOperator = number;\nexport let BinaryOperator: any = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n\n/**\n * @abstract\n */\nexport abstract class Expression {\npublic type: Type|null;\npublic sourceSpan: ParseSourceSpan|null;\n/**\n * @param {?} type\n * @param {?=} sourceSpan\n */\nconstructor(type: Type|null|undefined, sourceSpan?: ParseSourceSpan|null) {\n    this.type = type || null;\n    this.sourceSpan = sourceSpan || null;\n  }\n\n  abstract visitExpression(visitor: ExpressionVisitor, context: any): any;\n/**\n * @param {?} name\n * @param {?=} sourceSpan\n * @return {?}\n */\nprop(name: string, sourceSpan?: ParseSourceSpan|null): ReadPropExpr {\n    return new ReadPropExpr(this, name, null, sourceSpan);\n  }\n/**\n * @param {?} index\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nkey(index: Expression, type?: Type|null, sourceSpan?: ParseSourceSpan|null): ReadKeyExpr {\n    return new ReadKeyExpr(this, index, type, sourceSpan);\n  }\n/**\n * @param {?} name\n * @param {?} params\n * @param {?=} sourceSpan\n * @return {?}\n */\ncallMethod(name: string|BuiltinMethod, params: Expression[], sourceSpan?: ParseSourceSpan|null):\n      InvokeMethodExpr {\n    return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n  }\n/**\n * @param {?} params\n * @param {?=} sourceSpan\n * @return {?}\n */\ncallFn(params: Expression[], sourceSpan?: ParseSourceSpan|null): InvokeFunctionExpr {\n    return new InvokeFunctionExpr(this, params, null, sourceSpan);\n  }\n/**\n * @param {?} params\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\ninstantiate(params: Expression[], type?: Type|null, sourceSpan?: ParseSourceSpan|null):\n      InstantiateExpr {\n    return new InstantiateExpr(this, params, type, sourceSpan);\n  }\n/**\n * @param {?} trueCase\n * @param {?=} falseCase\n * @param {?=} sourceSpan\n * @return {?}\n */\nconditional(\n      trueCase: Expression, falseCase: Expression|null = null,\n      sourceSpan?: ParseSourceSpan|null): ConditionalExpr {\n    return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nequals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nnotEquals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nidentical(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nnotIdentical(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nminus(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nplus(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\ndivide(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nmultiply(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nmodulo(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nand(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nor(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nlower(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nlowerEquals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nbigger(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?} rhs\n * @param {?=} sourceSpan\n * @return {?}\n */\nbiggerEquals(rhs: Expression, sourceSpan?: ParseSourceSpan|null): BinaryOperatorExpr {\n    return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n  }\n/**\n * @param {?=} sourceSpan\n * @return {?}\n */\nisBlank(sourceSpan?: ParseSourceSpan|null): Expression {\n    // Note: We use equals by purpose here to compare to null and undefined in JS.\n    // We use the typed null to allow strictNullChecks to narrow types.\n    return this.equals(TYPED_NULL_EXPR, sourceSpan);\n  }\n/**\n * @param {?} type\n * @param {?=} sourceSpan\n * @return {?}\n */\ncast(type: Type, sourceSpan?: ParseSourceSpan|null): Expression {\n    return new CastExpr(this, type, sourceSpan);\n  }\n/**\n * @return {?}\n */\ntoStmt(): Statement { return new ExpressionStatement(this, null); }\n}\n\nfunction Expression_tsickle_Closure_declarations() {\n/** @type {?} */\nExpression.prototype.type;\n/** @type {?} */\nExpression.prototype.sourceSpan;\n\n/**\n * @abstract\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nExpression.prototype.visitExpression = function(visitor, context) {};\n}\n\nexport type BuiltinVar = number;\nexport let BuiltinVar: any = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\n\nexport class ReadVarExpr extends Expression {\npublic name: string|null;\npublic builtin: BuiltinVar|null;\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(name: string|BuiltinVar, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    if (typeof name === 'string') {\n      this.name = name;\n      this.builtin = null;\n    } else {\n      this.name = null;\n      this.builtin = /** @type {?} */(( <BuiltinVar>name));\n    }\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadVarExpr(this, context);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset(value: Expression): WriteVarExpr {\n    if (!this.name) {\n      throw new Error(`Built in variable ${this.builtin} can not be assigned to.`);\n    }\n    return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n  }\n}\n\nfunction ReadVarExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nReadVarExpr.prototype.name;\n/** @type {?} */\nReadVarExpr.prototype.builtin;\n}\n\nexport class WriteVarExpr extends Expression {\npublic value: Expression;\n/**\n * @param {?} name\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic name: string, value: Expression, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type || value.type, sourceSpan);\n    this.value = value;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWriteVarExpr(this, context);\n  }\n/**\n * @param {?=} type\n * @param {?=} modifiers\n * @return {?}\n */\ntoDeclStmt(type?: Type|null, modifiers?: StmtModifier[]|null): DeclareVarStmt {\n    return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n  }\n}\n\nfunction WriteVarExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nWriteVarExpr.prototype.value;\n/** @type {?} */\nWriteVarExpr.prototype.name;\n}\n\nexport class WriteKeyExpr extends Expression {\npublic value: Expression;\n/**\n * @param {?} receiver\n * @param {?} index\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic receiver: Expression,\npublic index: Expression, value: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type || value.type, sourceSpan);\n    this.value = value;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWriteKeyExpr(this, context);\n  }\n}\n\nfunction WriteKeyExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nWriteKeyExpr.prototype.value;\n/** @type {?} */\nWriteKeyExpr.prototype.receiver;\n/** @type {?} */\nWriteKeyExpr.prototype.index;\n}\n\nexport class WritePropExpr extends Expression {\npublic value: Expression;\n/**\n * @param {?} receiver\n * @param {?} name\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic receiver: Expression,\npublic name: string, value: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type || value.type, sourceSpan);\n    this.value = value;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitWritePropExpr(this, context);\n  }\n}\n\nfunction WritePropExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nWritePropExpr.prototype.value;\n/** @type {?} */\nWritePropExpr.prototype.receiver;\n/** @type {?} */\nWritePropExpr.prototype.name;\n}\n\nexport type BuiltinMethod = number;\nexport let BuiltinMethod: any = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\n\nexport class InvokeMethodExpr extends Expression {\npublic name: string|null;\npublic builtin: BuiltinMethod|null;\n/**\n * @param {?} receiver\n * @param {?} method\n * @param {?} args\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic receiver: Expression, method: string|BuiltinMethod,\npublic args: Expression[],\n      type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    if (typeof method === 'string') {\n      this.name = method;\n      this.builtin = null;\n    } else {\n      this.name = null;\n      this.builtin = /** @type {?} */(( <BuiltinMethod>method));\n    }\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInvokeMethodExpr(this, context);\n  }\n}\n\nfunction InvokeMethodExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nInvokeMethodExpr.prototype.name;\n/** @type {?} */\nInvokeMethodExpr.prototype.builtin;\n/** @type {?} */\nInvokeMethodExpr.prototype.receiver;\n/** @type {?} */\nInvokeMethodExpr.prototype.args;\n}\n\nexport class InvokeFunctionExpr extends Expression {\n/**\n * @param {?} fn\n * @param {?} args\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic fn: Expression,\npublic args: Expression[], type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInvokeFunctionExpr(this, context);\n  }\n}\n\nfunction InvokeFunctionExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nInvokeFunctionExpr.prototype.fn;\n/** @type {?} */\nInvokeFunctionExpr.prototype.args;\n}\n\nexport class InstantiateExpr extends Expression {\n/**\n * @param {?} classExpr\n * @param {?} args\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic classExpr: Expression,\npublic args: Expression[], type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitInstantiateExpr(this, context);\n  }\n}\n\nfunction InstantiateExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nInstantiateExpr.prototype.classExpr;\n/** @type {?} */\nInstantiateExpr.prototype.args;\n}\n\nexport class LiteralExpr extends Expression {\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(public value: any, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralExpr(this, context);\n  }\n}\n\nfunction LiteralExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralExpr.prototype.value;\n}\n\nexport class ExternalExpr extends Expression {\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n */\nconstructor(\npublic value: ExternalReference, type?: Type|null,\npublic typeParams: Type[]|null = null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitExternalExpr(this, context);\n  }\n}\n\nfunction ExternalExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nExternalExpr.prototype.value;\n/** @type {?} */\nExternalExpr.prototype.typeParams;\n}\n\nexport class ExternalReference {\n/**\n * @param {?} moduleName\n * @param {?} name\n * @param {?} runtime\n */\nconstructor(public moduleName: string|null,\npublic name: string|null,\npublic runtime: any|null) {}\n}\n\nfunction ExternalReference_tsickle_Closure_declarations() {\n/** @type {?} */\nExternalReference.prototype.moduleName;\n/** @type {?} */\nExternalReference.prototype.name;\n/** @type {?} */\nExternalReference.prototype.runtime;\n}\n\nexport class ConditionalExpr extends Expression {\npublic trueCase: Expression;\n/**\n * @param {?} condition\n * @param {?} trueCase\n * @param {?=} falseCase\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic condition: Expression, trueCase: Expression,\npublic falseCase: Expression|null = null,\n      type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type || trueCase.type, sourceSpan);\n    this.trueCase = trueCase;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitConditionalExpr(this, context);\n  }\n}\n\nfunction ConditionalExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nConditionalExpr.prototype.trueCase;\n/** @type {?} */\nConditionalExpr.prototype.condition;\n/** @type {?} */\nConditionalExpr.prototype.falseCase;\n}\n\nexport class NotExpr extends Expression {\n/**\n * @param {?} condition\n * @param {?=} sourceSpan\n */\nconstructor(public condition: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(BOOL_TYPE, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitNotExpr(this, context);\n  }\n}\n\nfunction NotExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nNotExpr.prototype.condition;\n}\n\nexport class AssertNotNull extends Expression {\n/**\n * @param {?} condition\n * @param {?=} sourceSpan\n */\nconstructor(public condition: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(condition.type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitAssertNotNullExpr(this, context);\n  }\n}\n\nfunction AssertNotNull_tsickle_Closure_declarations() {\n/** @type {?} */\nAssertNotNull.prototype.condition;\n}\n\nexport class CastExpr extends Expression {\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(public value: Expression, type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitCastExpr(this, context);\n  }\n}\n\nfunction CastExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nCastExpr.prototype.value;\n}\n\nexport class FnParam {\n/**\n * @param {?} name\n * @param {?=} type\n */\nconstructor(public name: string,\npublic type: Type|null = null) {}\n}\n\nfunction FnParam_tsickle_Closure_declarations() {\n/** @type {?} */\nFnParam.prototype.name;\n/** @type {?} */\nFnParam.prototype.type;\n}\n\nexport class FunctionExpr extends Expression {\n/**\n * @param {?} params\n * @param {?} statements\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic params: FnParam[],\npublic statements: Statement[], type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitFunctionExpr(this, context);\n  }\n/**\n * @param {?} name\n * @param {?=} modifiers\n * @return {?}\n */\ntoDeclStmt(name: string, modifiers: StmtModifier[]|null = null): DeclareFunctionStmt {\n    return new DeclareFunctionStmt(\n        name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n  }\n}\n\nfunction FunctionExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nFunctionExpr.prototype.params;\n/** @type {?} */\nFunctionExpr.prototype.statements;\n}\n\nexport class BinaryOperatorExpr extends Expression {\npublic lhs: Expression;\n/**\n * @param {?} operator\n * @param {?} lhs\n * @param {?} rhs\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic operator: BinaryOperator, lhs: Expression,\npublic rhs: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type || lhs.type, sourceSpan);\n    this.lhs = lhs;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitBinaryOperatorExpr(this, context);\n  }\n}\n\nfunction BinaryOperatorExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nBinaryOperatorExpr.prototype.lhs;\n/** @type {?} */\nBinaryOperatorExpr.prototype.operator;\n/** @type {?} */\nBinaryOperatorExpr.prototype.rhs;\n}\n\nexport class ReadPropExpr extends Expression {\n/**\n * @param {?} receiver\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic receiver: Expression,\npublic name: string, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadPropExpr(this, context);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset(value: Expression): WritePropExpr {\n    return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n  }\n}\n\nfunction ReadPropExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nReadPropExpr.prototype.receiver;\n/** @type {?} */\nReadPropExpr.prototype.name;\n}\n\nexport class ReadKeyExpr extends Expression {\n/**\n * @param {?} receiver\n * @param {?} index\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic receiver: Expression,\npublic index: Expression, type?: Type|null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitReadKeyExpr(this, context);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset(value: Expression): WriteKeyExpr {\n    return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n  }\n}\n\nfunction ReadKeyExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nReadKeyExpr.prototype.receiver;\n/** @type {?} */\nReadKeyExpr.prototype.index;\n}\n\nexport class LiteralArrayExpr extends Expression {\npublic entries: Expression[];\n/**\n * @param {?} entries\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(entries: Expression[], type?: Type|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    this.entries = entries;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralArrayExpr(this, context);\n  }\n}\n\nfunction LiteralArrayExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralArrayExpr.prototype.entries;\n}\n\nexport class LiteralMapEntry {\n/**\n * @param {?} key\n * @param {?} value\n * @param {?} quoted\n */\nconstructor(public key: string,\npublic value: Expression,\npublic quoted: boolean) {}\n}\n\nfunction LiteralMapEntry_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralMapEntry.prototype.key;\n/** @type {?} */\nLiteralMapEntry.prototype.value;\n/** @type {?} */\nLiteralMapEntry.prototype.quoted;\n}\n\nexport class LiteralMapExpr extends Expression {\npublic valueType: Type|null = null;\n/**\n * @param {?} entries\n * @param {?=} type\n * @param {?=} sourceSpan\n */\nconstructor(\npublic entries: LiteralMapEntry[], type?: MapType|null, sourceSpan?: ParseSourceSpan|null) {\n    super(type, sourceSpan);\n    if (type) {\n      this.valueType = type.valueType;\n    }\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitLiteralMapExpr(this, context);\n  }\n}\n\nfunction LiteralMapExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nLiteralMapExpr.prototype.valueType;\n/** @type {?} */\nLiteralMapExpr.prototype.entries;\n}\n\nexport class CommaExpr extends Expression {\n/**\n * @param {?} parts\n * @param {?=} sourceSpan\n */\nconstructor(public parts: Expression[], sourceSpan?: ParseSourceSpan|null) {\n    super(parts[parts.length - 1].type, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitExpression(visitor: ExpressionVisitor, context: any): any {\n    return visitor.visitCommaExpr(this, context);\n  }\n}\n\nfunction CommaExpr_tsickle_Closure_declarations() {\n/** @type {?} */\nCommaExpr.prototype.parts;\n}\n\n/**\n * @record\n */\nexport function ExpressionVisitor() {}\n\n\nfunction ExpressionVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nExpressionVisitor.prototype.visitReadVarExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitWriteVarExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitWriteKeyExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitWritePropExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitInvokeMethodExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitInvokeFunctionExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitInstantiateExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitLiteralExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitExternalExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitConditionalExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitNotExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitAssertNotNullExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitCastExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitFunctionExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitBinaryOperatorExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitReadPropExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitReadKeyExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitLiteralArrayExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitLiteralMapExpr;\n/** @type {?} */\nExpressionVisitor.prototype.visitCommaExpr;\n}\n\n\nexport interface ExpressionVisitor {\n  visitReadVarExpr(ast: ReadVarExpr, context: any): any;\n  visitWriteVarExpr(expr: WriteVarExpr, context: any): any;\n  visitWriteKeyExpr(expr: WriteKeyExpr, context: any): any;\n  visitWritePropExpr(expr: WritePropExpr, context: any): any;\n  visitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any;\n  visitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any;\n  visitInstantiateExpr(ast: InstantiateExpr, context: any): any;\n  visitLiteralExpr(ast: LiteralExpr, context: any): any;\n  visitExternalExpr(ast: ExternalExpr, context: any): any;\n  visitConditionalExpr(ast: ConditionalExpr, context: any): any;\n  visitNotExpr(ast: NotExpr, context: any): any;\n  visitAssertNotNullExpr(ast: AssertNotNull, context: any): any;\n  visitCastExpr(ast: CastExpr, context: any): any;\n  visitFunctionExpr(ast: FunctionExpr, context: any): any;\n  visitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any;\n  visitReadPropExpr(ast: ReadPropExpr, context: any): any;\n  visitReadKeyExpr(ast: ReadKeyExpr, context: any): any;\n  visitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any;\n  visitLiteralMapExpr(ast: LiteralMapExpr, context: any): any;\n  visitCommaExpr(ast: CommaExpr, context: any): any;\n}\n\nexport const /** @type {?} */ THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nexport const /** @type {?} */ SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nexport const /** @type {?} */ CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nexport const /** @type {?} */ CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nexport const /** @type {?} */ NULL_EXPR = new LiteralExpr(null, null, null);\nexport const /** @type {?} */ TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nexport type StmtModifier = number;\nexport let StmtModifier: any = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n\n/**\n * @abstract\n */\nexport abstract class Statement {\npublic modifiers: StmtModifier[];\npublic sourceSpan: ParseSourceSpan|null;\n/**\n * @param {?=} modifiers\n * @param {?=} sourceSpan\n */\nconstructor(modifiers?: StmtModifier[]|null, sourceSpan?: ParseSourceSpan|null) {\n    this.modifiers = modifiers || [];\n    this.sourceSpan = sourceSpan || null;\n  }\n\n  abstract visitStatement(visitor: StatementVisitor, context: any): any;\n/**\n * @param {?} modifier\n * @return {?}\n */\nhasModifier(modifier: StmtModifier): boolean { return /** @type {?} */(( this.modifiers)).indexOf(modifier) !== -1; }\n}\n\nfunction Statement_tsickle_Closure_declarations() {\n/** @type {?} */\nStatement.prototype.modifiers;\n/** @type {?} */\nStatement.prototype.sourceSpan;\n\n/**\n * @abstract\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nStatement.prototype.visitStatement = function(visitor, context) {};\n}\n\nexport class DeclareVarStmt extends Statement {\npublic type: Type|null;\n/**\n * @param {?} name\n * @param {?} value\n * @param {?=} type\n * @param {?=} modifiers\n * @param {?=} sourceSpan\n */\nconstructor(\npublic name: string,\npublic value: Expression, type?: Type|null,\n      modifiers: StmtModifier[]|null = null, sourceSpan?: ParseSourceSpan|null) {\n    super(modifiers, sourceSpan);\n    this.type = type || value.type;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareVarStmt(this, context);\n  }\n}\n\nfunction DeclareVarStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nDeclareVarStmt.prototype.type;\n/** @type {?} */\nDeclareVarStmt.prototype.name;\n/** @type {?} */\nDeclareVarStmt.prototype.value;\n}\n\nexport class DeclareFunctionStmt extends Statement {\npublic type: Type|null;\n/**\n * @param {?} name\n * @param {?} params\n * @param {?} statements\n * @param {?=} type\n * @param {?=} modifiers\n * @param {?=} sourceSpan\n */\nconstructor(\npublic name: string,\npublic params: FnParam[],\npublic statements: Statement[],\n      type?: Type|null, modifiers: StmtModifier[]|null = null, sourceSpan?: ParseSourceSpan|null) {\n    super(modifiers, sourceSpan);\n    this.type = type || null;\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareFunctionStmt(this, context);\n  }\n}\n\nfunction DeclareFunctionStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nDeclareFunctionStmt.prototype.type;\n/** @type {?} */\nDeclareFunctionStmt.prototype.name;\n/** @type {?} */\nDeclareFunctionStmt.prototype.params;\n/** @type {?} */\nDeclareFunctionStmt.prototype.statements;\n}\n\nexport class ExpressionStatement extends Statement {\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n */\nconstructor(public expr: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitExpressionStmt(this, context);\n  }\n}\n\nfunction ExpressionStatement_tsickle_Closure_declarations() {\n/** @type {?} */\nExpressionStatement.prototype.expr;\n}\n\nexport class ReturnStatement extends Statement {\n/**\n * @param {?} value\n * @param {?=} sourceSpan\n */\nconstructor(public value: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitReturnStmt(this, context);\n  }\n}\n\nfunction ReturnStatement_tsickle_Closure_declarations() {\n/** @type {?} */\nReturnStatement.prototype.value;\n}\n\nexport class AbstractClassPart {\npublic type: Type|null;\n/**\n * @param {?} type\n * @param {?} modifiers\n */\nconstructor(type: Type|null|undefined,\npublic modifiers: StmtModifier[]|null) {\n    if (!modifiers) {\n      this.modifiers = [];\n    }\n    this.type = type || null;\n  }\n/**\n * @param {?} modifier\n * @return {?}\n */\nhasModifier(modifier: StmtModifier): boolean { return /** @type {?} */(( this.modifiers)).indexOf(modifier) !== -1; }\n}\n\nfunction AbstractClassPart_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractClassPart.prototype.type;\n/** @type {?} */\nAbstractClassPart.prototype.modifiers;\n}\n\nexport class ClassField extends AbstractClassPart {\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(public name: string, type?: Type|null, modifiers: StmtModifier[]|null = null) {\n    super(type, modifiers);\n  }\n}\n\nfunction ClassField_tsickle_Closure_declarations() {\n/** @type {?} */\nClassField.prototype.name;\n}\n\nexport class ClassMethod extends AbstractClassPart {\n/**\n * @param {?} name\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(\npublic name: string|null,\npublic params: FnParam[],\npublic body: Statement[],\n      type?: Type|null, modifiers: StmtModifier[]|null = null) {\n    super(type, modifiers);\n  }\n}\n\nfunction ClassMethod_tsickle_Closure_declarations() {\n/** @type {?} */\nClassMethod.prototype.name;\n/** @type {?} */\nClassMethod.prototype.params;\n/** @type {?} */\nClassMethod.prototype.body;\n}\n\nexport class ClassGetter extends AbstractClassPart {\n/**\n * @param {?} name\n * @param {?} body\n * @param {?=} type\n * @param {?=} modifiers\n */\nconstructor(\npublic name: string,\npublic body: Statement[], type?: Type|null,\n      modifiers: StmtModifier[]|null = null) {\n    super(type, modifiers);\n  }\n}\n\nfunction ClassGetter_tsickle_Closure_declarations() {\n/** @type {?} */\nClassGetter.prototype.name;\n/** @type {?} */\nClassGetter.prototype.body;\n}\n\nexport class ClassStmt extends Statement {\n/**\n * @param {?} name\n * @param {?} parent\n * @param {?} fields\n * @param {?} getters\n * @param {?} constructorMethod\n * @param {?} methods\n * @param {?=} modifiers\n * @param {?=} sourceSpan\n */\nconstructor(\npublic name: string,\npublic parent: Expression|null,\npublic fields: ClassField[],\npublic getters: ClassGetter[],\npublic constructorMethod: ClassMethod,\npublic methods: ClassMethod[], modifiers: StmtModifier[]|null = null,\n      sourceSpan?: ParseSourceSpan|null) {\n    super(modifiers, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitDeclareClassStmt(this, context);\n  }\n}\n\nfunction ClassStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nClassStmt.prototype.name;\n/** @type {?} */\nClassStmt.prototype.parent;\n/** @type {?} */\nClassStmt.prototype.fields;\n/** @type {?} */\nClassStmt.prototype.getters;\n/** @type {?} */\nClassStmt.prototype.constructorMethod;\n/** @type {?} */\nClassStmt.prototype.methods;\n}\n\nexport class IfStmt extends Statement {\n/**\n * @param {?} condition\n * @param {?} trueCase\n * @param {?=} falseCase\n * @param {?=} sourceSpan\n */\nconstructor(\npublic condition: Expression,\npublic trueCase: Statement[],\npublic falseCase: Statement[] = [], sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitIfStmt(this, context);\n  }\n}\n\nfunction IfStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nIfStmt.prototype.condition;\n/** @type {?} */\nIfStmt.prototype.trueCase;\n/** @type {?} */\nIfStmt.prototype.falseCase;\n}\n\nexport class CommentStmt extends Statement {\n/**\n * @param {?} comment\n * @param {?=} sourceSpan\n */\nconstructor(public comment: string, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitCommentStmt(this, context);\n  }\n}\n\nfunction CommentStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nCommentStmt.prototype.comment;\n}\n\nexport class TryCatchStmt extends Statement {\n/**\n * @param {?} bodyStmts\n * @param {?} catchStmts\n * @param {?=} sourceSpan\n */\nconstructor(\npublic bodyStmts: Statement[],\npublic catchStmts: Statement[],\n      sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitTryCatchStmt(this, context);\n  }\n}\n\nfunction TryCatchStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nTryCatchStmt.prototype.bodyStmts;\n/** @type {?} */\nTryCatchStmt.prototype.catchStmts;\n}\n\nexport class ThrowStmt extends Statement {\n/**\n * @param {?} error\n * @param {?=} sourceSpan\n */\nconstructor(public error: Expression, sourceSpan?: ParseSourceSpan|null) {\n    super(null, sourceSpan);\n  }\n/**\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nvisitStatement(visitor: StatementVisitor, context: any): any {\n    return visitor.visitThrowStmt(this, context);\n  }\n}\n\nfunction ThrowStmt_tsickle_Closure_declarations() {\n/** @type {?} */\nThrowStmt.prototype.error;\n}\n\n/**\n * @record\n */\nexport function StatementVisitor() {}\n\n\nfunction StatementVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nStatementVisitor.prototype.visitDeclareVarStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitDeclareFunctionStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitExpressionStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitReturnStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitDeclareClassStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitIfStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitTryCatchStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitThrowStmt;\n/** @type {?} */\nStatementVisitor.prototype.visitCommentStmt;\n}\n\n\nexport interface StatementVisitor {\n  visitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any;\n  visitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any;\n  visitExpressionStmt(stmt: ExpressionStatement, context: any): any;\n  visitReturnStmt(stmt: ReturnStatement, context: any): any;\n  visitDeclareClassStmt(stmt: ClassStmt, context: any): any;\n  visitIfStmt(stmt: IfStmt, context: any): any;\n  visitTryCatchStmt(stmt: TryCatchStmt, context: any): any;\n  visitThrowStmt(stmt: ThrowStmt, context: any): any;\n  visitCommentStmt(stmt: CommentStmt, context: any): any;\n}\nexport class AstTransformer implements StatementVisitor, ExpressionVisitor {\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\ntransformExpr(expr: Expression, context: any): Expression { return expr; }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\ntransformStmt(stmt: Statement, context: any): Statement { return stmt; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: ReadVarExpr, context: any): any { return this.transformExpr(ast, context); }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteVarExpr(expr: WriteVarExpr, context: any): any {\n    return this.transformExpr(\n        new WriteVarExpr(\n            expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan),\n        context);\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteKeyExpr(expr: WriteKeyExpr, context: any): any {\n    return this.transformExpr(\n        new WriteKeyExpr(\n            expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context),\n            expr.value.visitExpression(this, context), expr.type, expr.sourceSpan),\n        context);\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWritePropExpr(expr: WritePropExpr, context: any): any {\n    return this.transformExpr(\n        new WritePropExpr(\n            expr.receiver.visitExpression(this, context), expr.name,\n            expr.value.visitExpression(this, context), expr.type, expr.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any {\n    const /** @type {?} */ method = ast.builtin || ast.name;\n    return this.transformExpr(\n        new InvokeMethodExpr(\n            ast.receiver.visitExpression(this, context), /** @type {?} */(( method)),\n            this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any {\n    return this.transformExpr(\n        new InvokeFunctionExpr(\n            ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context),\n            ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInstantiateExpr(ast: InstantiateExpr, context: any): any {\n    return this.transformExpr(\n        new InstantiateExpr(\n            ast.classExpr.visitExpression(this, context),\n            this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralExpr(ast: LiteralExpr, context: any): any { return this.transformExpr(ast, context); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExternalExpr(ast: ExternalExpr, context: any): any {\n    return this.transformExpr(ast, context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditionalExpr(ast: ConditionalExpr, context: any): any {\n    return this.transformExpr(\n        new ConditionalExpr(\n            ast.condition.visitExpression(this, context),\n            ast.trueCase.visitExpression(this, context), /** @type {?} */((\n            ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNotExpr(ast: NotExpr, context: any): any {\n    return this.transformExpr(\n        new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAssertNotNullExpr(ast: AssertNotNull, context: any): any {\n    return this.transformExpr(\n        new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitCastExpr(ast: CastExpr, context: any): any {\n    return this.transformExpr(\n        new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionExpr(ast: FunctionExpr, context: any): any {\n    return this.transformExpr(\n        new FunctionExpr(\n            ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any {\n    return this.transformExpr(\n        new BinaryOperatorExpr(\n            ast.operator, ast.lhs.visitExpression(this, context),\n            ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadPropExpr(ast: ReadPropExpr, context: any): any {\n    return this.transformExpr(\n        new ReadPropExpr(\n            ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadKeyExpr(ast: ReadKeyExpr, context: any): any {\n    return this.transformExpr(\n        new ReadKeyExpr(\n            ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context),\n            ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any {\n    return this.transformExpr(\n        new LiteralArrayExpr(\n            this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan),\n        context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMapExpr(ast: LiteralMapExpr, context: any): any {\n    const /** @type {?} */ entries = ast.entries.map(\n        (entry): LiteralMapEntry => new LiteralMapEntry(\n            entry.key, entry.value.visitExpression(this, context), entry.quoted));\n    const /** @type {?} */ mapType = new MapType(ast.valueType, null);\n    return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitCommaExpr(ast: CommaExpr, context: any): any {\n    return this.transformExpr(\n        new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n  }\n/**\n * @param {?} exprs\n * @param {?} context\n * @return {?}\n */\nvisitAllExpressions(exprs: Expression[], context: any): Expression[] {\n    return exprs.map(expr => expr.visitExpression(this, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any {\n    return this.transformStmt(\n        new DeclareVarStmt(\n            stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers,\n            stmt.sourceSpan),\n        context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    return this.transformStmt(\n        new DeclareFunctionStmt(\n            stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type,\n            stmt.modifiers, stmt.sourceSpan),\n        context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitExpressionStmt(stmt: ExpressionStatement, context: any): any {\n    return this.transformStmt(\n        new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan),\n        context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitReturnStmt(stmt: ReturnStatement, context: any): any {\n    return this.transformStmt(\n        new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: ClassStmt, context: any): any {\n    const /** @type {?} */ parent = /** @type {?} */(( stmt.parent)).visitExpression(this, context);\n    const /** @type {?} */ getters = stmt.getters.map(\n        getter => new ClassGetter(\n            getter.name, this.visitAllStatements(getter.body, context), getter.type,\n            getter.modifiers));\n    const /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n        new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params,\n                        this.visitAllStatements(stmt.constructorMethod.body, context),\n                        stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n    const /** @type {?} */ methods = stmt.methods.map(\n        method => new ClassMethod(\n            method.name, method.params, this.visitAllStatements(method.body, context), method.type,\n            method.modifiers));\n    return this.transformStmt(\n        new ClassStmt(\n            stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers,\n            stmt.sourceSpan),\n        context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitIfStmt(stmt: IfStmt, context: any): any {\n    return this.transformStmt(\n        new IfStmt(\n            stmt.condition.visitExpression(this, context),\n            this.visitAllStatements(stmt.trueCase, context),\n            this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan),\n        context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitTryCatchStmt(stmt: TryCatchStmt, context: any): any {\n    return this.transformStmt(\n        new TryCatchStmt(\n            this.visitAllStatements(stmt.bodyStmts, context),\n            this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan),\n        context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitThrowStmt(stmt: ThrowStmt, context: any): any {\n    return this.transformStmt(\n        new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitCommentStmt(stmt: CommentStmt, context: any): any {\n    return this.transformStmt(stmt, context);\n  }\n/**\n * @param {?} stmts\n * @param {?} context\n * @return {?}\n */\nvisitAllStatements(stmts: Statement[], context: any): Statement[] {\n    return stmts.map(stmt => stmt.visitStatement(this, context));\n  }\n}\nexport class RecursiveAstVisitor implements StatementVisitor, ExpressionVisitor {\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: ReadVarExpr, context: any): any { return ast; }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteVarExpr(expr: WriteVarExpr, context: any): any {\n    expr.value.visitExpression(this, context);\n    return expr;\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWriteKeyExpr(expr: WriteKeyExpr, context: any): any {\n    expr.receiver.visitExpression(this, context);\n    expr.index.visitExpression(this, context);\n    expr.value.visitExpression(this, context);\n    return expr;\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\nvisitWritePropExpr(expr: WritePropExpr, context: any): any {\n    expr.receiver.visitExpression(this, context);\n    expr.value.visitExpression(this, context);\n    return expr;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeMethodExpr(ast: InvokeMethodExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInvokeFunctionExpr(ast: InvokeFunctionExpr, context: any): any {\n    ast.fn.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitInstantiateExpr(ast: InstantiateExpr, context: any): any {\n    ast.classExpr.visitExpression(this, context);\n    this.visitAllExpressions(ast.args, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralExpr(ast: LiteralExpr, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitExternalExpr(ast: ExternalExpr, context: any): any { return ast; }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitConditionalExpr(ast: ConditionalExpr, context: any): any {\n    ast.condition.visitExpression(this, context);\n    ast.trueCase.visitExpression(this, context); /** @type {?} */((\n    ast.falseCase)).visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNotExpr(ast: NotExpr, context: any): any {\n    ast.condition.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAssertNotNullExpr(ast: AssertNotNull, context: any): any {\n    ast.condition.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitCastExpr(ast: CastExpr, context: any): any {\n    ast.value.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitFunctionExpr(ast: FunctionExpr, context: any): any {\n    this.visitAllStatements(ast.statements, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBinaryOperatorExpr(ast: BinaryOperatorExpr, context: any): any {\n    ast.lhs.visitExpression(this, context);\n    ast.rhs.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadPropExpr(ast: ReadPropExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadKeyExpr(ast: ReadKeyExpr, context: any): any {\n    ast.receiver.visitExpression(this, context);\n    ast.index.visitExpression(this, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: LiteralArrayExpr, context: any): any {\n    this.visitAllExpressions(ast.entries, context);\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMapExpr(ast: LiteralMapExpr, context: any): any {\n    ast.entries.forEach((entry) => entry.value.visitExpression(this, context));\n    return ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitCommaExpr(ast: CommaExpr, context: any): any {\n    this.visitAllExpressions(ast.parts, context);\n  }\n/**\n * @param {?} exprs\n * @param {?} context\n * @return {?}\n */\nvisitAllExpressions(exprs: Expression[], context: any): void {\n    exprs.forEach(expr => expr.visitExpression(this, context));\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: DeclareVarStmt, context: any): any {\n    stmt.value.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    this.visitAllStatements(stmt.statements, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitExpressionStmt(stmt: ExpressionStatement, context: any): any {\n    stmt.expr.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitReturnStmt(stmt: ReturnStatement, context: any): any {\n    stmt.value.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: ClassStmt, context: any): any { /** @type {?} */((\n    stmt.parent)).visitExpression(this, context);\n    stmt.getters.forEach(getter => this.visitAllStatements(getter.body, context));\n    if (stmt.constructorMethod) {\n      this.visitAllStatements(stmt.constructorMethod.body, context);\n    }\n    stmt.methods.forEach(method => this.visitAllStatements(method.body, context));\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitIfStmt(stmt: IfStmt, context: any): any {\n    stmt.condition.visitExpression(this, context);\n    this.visitAllStatements(stmt.trueCase, context);\n    this.visitAllStatements(stmt.falseCase, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitTryCatchStmt(stmt: TryCatchStmt, context: any): any {\n    this.visitAllStatements(stmt.bodyStmts, context);\n    this.visitAllStatements(stmt.catchStmts, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitThrowStmt(stmt: ThrowStmt, context: any): any {\n    stmt.error.visitExpression(this, context);\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitCommentStmt(stmt: CommentStmt, context: any): any { return stmt; }\n/**\n * @param {?} stmts\n * @param {?} context\n * @return {?}\n */\nvisitAllStatements(stmts: Statement[], context: any): void {\n    stmts.forEach(stmt => stmt.visitStatement(this, context));\n  }\n}\n/**\n * @param {?} stmts\n * @return {?}\n */\nexport function findReadVarNames(stmts: Statement[]): Set<string> {\n  const /** @type {?} */ visitor = new _ReadVarVisitor();\n  visitor.visitAllStatements(stmts, null);\n  return visitor.varNames;\n}\nclass _ReadVarVisitor extends RecursiveAstVisitor {\n  varNames = new Set<string>();\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any): any {\n    // Don't descend into nested functions\n    return stmt;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: ClassStmt, context: any): any {\n    // Don't descend into nested classes\n    return stmt;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReadVarExpr(ast: ReadVarExpr, context: any): any {\n    if (ast.name) {\n      this.varNames.add(ast.name);\n    }\n    return null;\n  }\n}\n\nfunction _ReadVarVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_ReadVarVisitor.prototype.varNames;\n}\n\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nexport function applySourceSpanToStatementIfNeeded(\n    stmt: Statement, sourceSpan: ParseSourceSpan | null): Statement {\n  if (!sourceSpan) {\n    return stmt;\n  }\n  const /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n  return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nexport function applySourceSpanToExpressionIfNeeded(\n    expr: Expression, sourceSpan: ParseSourceSpan | null): Expression {\n  if (!sourceSpan) {\n    return expr;\n  }\n  const /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n  return expr.visitExpression(transformer, null);\n}\nclass _ApplySourceSpanTransformer extends AstTransformer {\n/**\n * @param {?} sourceSpan\n */\nconstructor(private sourceSpan: ParseSourceSpan) { super(); }\n/**\n * @param {?} obj\n * @return {?}\n */\n\nprivate _clone(obj: any): any {\n    const /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n    for (let /** @type {?} */ prop in obj) {\n      clone[prop] = obj[prop];\n    }\n    return clone;\n  }\n/**\n * @param {?} expr\n * @param {?} context\n * @return {?}\n */\ntransformExpr(expr: Expression, context: any): Expression {\n    if (!expr.sourceSpan) {\n      expr = this._clone(expr);\n      expr.sourceSpan = this.sourceSpan;\n    }\n    return expr;\n  }\n/**\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\ntransformStmt(stmt: Statement, context: any): Statement {\n    if (!stmt.sourceSpan) {\n      stmt = this._clone(stmt);\n      stmt.sourceSpan = this.sourceSpan;\n    }\n    return stmt;\n  }\n}\n\nfunction _ApplySourceSpanTransformer_tsickle_Closure_declarations() {\n/** @type {?} */\n_ApplySourceSpanTransformer.prototype.sourceSpan;\n}\n\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function variable(\n    name: string, type?: Type | null, sourceSpan?: ParseSourceSpan | null): ReadVarExpr {\n  return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function importExpr(\n    id: ExternalReference, typeParams: Type[] | null = null,\n    sourceSpan?: ParseSourceSpan | null): ExternalExpr {\n  return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nexport function importType(\n    id: ExternalReference, typeParams: Type[] | null = null,\n    typeModifiers: TypeModifier[] | null = null): ExpressionType|null {\n  return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nexport function expressionType(\n    expr: Expression, typeModifiers: TypeModifier[] | null = null): ExpressionType|null {\n  return expr != null ? /** @type {?} */(( new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function literalArr(\n    values: Expression[], type?: Type | null,\n    sourceSpan?: ParseSourceSpan | null): LiteralArrayExpr {\n  return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nexport function literalMap(\n    values: {key: string, quoted: boolean, value: Expression}[],\n    type: MapType | null = null): LiteralMapExpr {\n  return new LiteralMapExpr(\n      values.map(e => new LiteralMapEntry(e.key, e.value, e.quoted)), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function not(expr: Expression, sourceSpan?: ParseSourceSpan | null): NotExpr {\n  return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function assertNotNull(\n    expr: Expression, sourceSpan?: ParseSourceSpan | null): AssertNotNull {\n  return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function fn(\n    params: FnParam[], body: Statement[], type?: Type | null,\n    sourceSpan?: ParseSourceSpan | null): FunctionExpr {\n  return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function literal(\n    value: any, type?: Type | null, sourceSpan?: ParseSourceSpan | null): LiteralExpr {\n  return new LiteralExpr(value, type, sourceSpan);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OutputContext, ValueTransformer, visitValue} from '../util';\n\nimport * as o from './output_ast';\n\nexport const /** @type {?} */ QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nexport function convertValueToOutputAst(\n    ctx: OutputContext, value: any, type: o.Type | null = null): o.Expression {\n  return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nclass _ValueOutputAstTransformer implements ValueTransformer {\n/**\n * @param {?} ctx\n */\nconstructor(private ctx: OutputContext) {}\n/**\n * @param {?} arr\n * @param {?} type\n * @return {?}\n */\nvisitArray(arr: any[], type: o.Type): o.Expression {\n    return o.literalArr(arr.map(value => visitValue(value, this, null)), type);\n  }\n/**\n * @param {?} map\n * @param {?} type\n * @return {?}\n */\nvisitStringMap(map: {[key: string]: any}, type: o.MapType): o.Expression {\n    const /** @type {?} */ entries: o.LiteralMapEntry[] = [];\n    const /** @type {?} */ quotedSet = new Set<string>(map && map[QUOTED_KEYS]);\n    Object.keys(map).forEach(key => {\n      entries.push(\n          new o.LiteralMapEntry(key, visitValue(map[key], this, null), quotedSet.has(key)));\n    });\n    return new o.LiteralMapExpr(entries, type);\n  }\n/**\n * @param {?} value\n * @param {?} type\n * @return {?}\n */\nvisitPrimitive(value: any, type: o.Type): o.Expression { return o.literal(value, type); }\n/**\n * @param {?} value\n * @param {?} type\n * @return {?}\n */\nvisitOther(value: any, type: o.Type): o.Expression {\n    if (value instanceof o.Expression) {\n      return value;\n    } else {\n      return this.ctx.importExpr(value);\n    }\n  }\n}\n\nfunction _ValueOutputAstTransformer_tsickle_Closure_declarations() {\n/** @type {?} */\n_ValueOutputAstTransformer.prototype.ctx;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵDepFlags as DepFlags, ɵNodeFlags as NodeFlags} from '@angular/core';\n\nimport {CompileDiDependencyMetadata, CompileEntryComponentMetadata, CompileProviderMetadata, CompileTokenMetadata} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {Identifiers, createTokenForExternalReference} from '../identifiers';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {ProviderAst, ProviderAstType} from '../template_parser/template_ast';\nimport {OutputContext} from '../util';\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nexport function providerDef(ctx: OutputContext, providerAst: ProviderAst): {\n  providerExpr: o.Expression,\n  flags: NodeFlags,\n  depsExpr: o.Expression,\n  tokenExpr: o.Expression\n} {\n  let /** @type {?} */ flags = NodeFlags.None;\n  if (!providerAst.eager) {\n    flags |= NodeFlags.LazyProvider;\n  }\n  if (providerAst.providerType === ProviderAstType.PrivateService) {\n    flags |= NodeFlags.PrivateProvider;\n  }\n  providerAst.lifecycleHooks.forEach((lifecycleHook) => {\n    // for regular providers, we only support ngOnDestroy\n    if (lifecycleHook === LifecycleHooks.OnDestroy ||\n        providerAst.providerType === ProviderAstType.Directive ||\n        providerAst.providerType === ProviderAstType.Component) {\n      flags |= lifecycleHookToNodeFlag(lifecycleHook);\n    }\n  });\n  const {providerExpr, flags: providerFlags, depsExpr} = providerAst.multiProvider ?\n      multiProviderDef(ctx, flags, providerAst.providers) :\n      singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]);\n  return {\n    providerExpr,\n    flags: providerFlags, depsExpr,\n    tokenExpr: tokenExpr(ctx, providerAst.token),\n  };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(\n    ctx: OutputContext, flags: NodeFlags, providers: CompileProviderMetadata[]):\n    {providerExpr: o.Expression, flags: NodeFlags, depsExpr: o.Expression} {\n  const /** @type {?} */ allDepDefs: o.Expression[] = [];\n  const /** @type {?} */ allParams: o.FnParam[] = [];\n  const /** @type {?} */ exprs = providers.map((provider, providerIndex) => {\n    let /** @type {?} */ expr: o.Expression;\n    if (provider.useClass) {\n      const /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n      expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n    } else if (provider.useFactory) {\n      const /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n      expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n    } else if (provider.useExisting) {\n      const /** @type {?} */ depExprs = convertDeps(providerIndex, [{token: provider.useExisting}]);\n      expr = depExprs[0];\n    } else {\n      expr = convertValueToOutputAst(ctx, provider.useValue);\n    }\n    return expr;\n  });\n  const /** @type {?} */ providerExpr =\n      o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))], o.INFERRED_TYPE);\n  return {\n    providerExpr,\n    flags: flags | NodeFlags.TypeFactoryProvider,\n    depsExpr: o.literalArr(allDepDefs)\n  };\n/**\n * @param {?} providerIndex\n * @param {?} deps\n * @return {?}\n */\nfunction convertDeps(providerIndex: number, deps: CompileDiDependencyMetadata[]) {\n    return deps.map((dep, depIndex) => {\n      const /** @type {?} */ paramName = `p${providerIndex}_${depIndex}`;\n      allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n      allDepDefs.push(depDef(ctx, dep));\n      return o.variable(paramName);\n    });\n  }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(\n    ctx: OutputContext, flags: NodeFlags, providerType: ProviderAstType,\n    providerMeta: CompileProviderMetadata):\n    {providerExpr: o.Expression, flags: NodeFlags, depsExpr: o.Expression} {\n  let /** @type {?} */ providerExpr: o.Expression;\n  let /** @type {?} */ deps: CompileDiDependencyMetadata[];\n  if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n    providerExpr = ctx.importExpr( /** @type {?} */((providerMeta.useClass)).reference);\n    flags |= NodeFlags.TypeDirective;\n    deps = providerMeta.deps || /** @type {?} */(( providerMeta.useClass)).diDeps;\n  } else {\n    if (providerMeta.useClass) {\n      providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n      flags |= NodeFlags.TypeClassProvider;\n      deps = providerMeta.deps || providerMeta.useClass.diDeps;\n    } else if (providerMeta.useFactory) {\n      providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n      flags |= NodeFlags.TypeFactoryProvider;\n      deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n    } else if (providerMeta.useExisting) {\n      providerExpr = o.NULL_EXPR;\n      flags |= NodeFlags.TypeUseExistingProvider;\n      deps = [{token: providerMeta.useExisting}];\n    } else {\n      providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n      flags |= NodeFlags.TypeValueProvider;\n      deps = [];\n    }\n  }\n  const /** @type {?} */ depsExpr = o.literalArr(deps.map(dep => depDef(ctx, dep)));\n  return {providerExpr, flags, depsExpr};\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx: OutputContext, tokenMeta: CompileTokenMetadata): o.Expression {\n  return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n                                o.literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nexport function depDef(ctx: OutputContext, dep: CompileDiDependencyMetadata): o.Expression {\n  // Note: the following fields have already been normalized out by provider_analyzer:\n  // - isAttribute, isSelf, isHost\n  const /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */(( dep.token)));\n  let /** @type {?} */ flags = DepFlags.None;\n  if (dep.isSkipSelf) {\n    flags |= DepFlags.SkipSelf;\n  }\n  if (dep.isOptional) {\n    flags |= DepFlags.Optional;\n  }\n  if (dep.isValue) {\n    flags |= DepFlags.Value;\n  }\n  return flags === DepFlags.None ? expr : o.literalArr([o.literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nexport function lifecycleHookToNodeFlag(lifecycleHook: LifecycleHooks): NodeFlags {\n  let /** @type {?} */ nodeFlag = NodeFlags.None;\n  switch (lifecycleHook) {\n    case LifecycleHooks.AfterContentChecked:\n      nodeFlag = NodeFlags.AfterContentChecked;\n      break;\n    case LifecycleHooks.AfterContentInit:\n      nodeFlag = NodeFlags.AfterContentInit;\n      break;\n    case LifecycleHooks.AfterViewChecked:\n      nodeFlag = NodeFlags.AfterViewChecked;\n      break;\n    case LifecycleHooks.AfterViewInit:\n      nodeFlag = NodeFlags.AfterViewInit;\n      break;\n    case LifecycleHooks.DoCheck:\n      nodeFlag = NodeFlags.DoCheck;\n      break;\n    case LifecycleHooks.OnChanges:\n      nodeFlag = NodeFlags.OnChanges;\n      break;\n    case LifecycleHooks.OnDestroy:\n      nodeFlag = NodeFlags.OnDestroy;\n      break;\n    case LifecycleHooks.OnInit:\n      nodeFlag = NodeFlags.OnInit;\n      break;\n  }\n  return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nexport function componentFactoryResolverProviderDef(\n    reflector: CompileReflector, ctx: OutputContext, flags: NodeFlags,\n    entryComponents: CompileEntryComponentMetadata[]): {\n  providerExpr: o.Expression,\n  flags: NodeFlags,\n  depsExpr: o.Expression,\n  tokenExpr: o.Expression\n} {\n  const /** @type {?} */ entryComponentFactories =\n      entryComponents.map((entryComponent) => ctx.importExpr(entryComponent.componentFactory));\n  const /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n  const /** @type {?} */ classMeta = {\n    diDeps: [\n      {isValue: true, value: o.literalArr(entryComponentFactories)},\n      {token: token, isSkipSelf: true, isOptional: true},\n      {token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef)},\n    ],\n    lifecycleHooks: [],\n    reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n  };\n  const {providerExpr, flags: providerFlags, depsExpr} =\n      singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token,\n        multi: false,\n        useClass: classMeta,\n      });\n  return {providerExpr, flags: providerFlags, depsExpr, tokenExpr: tokenExpr(ctx, token)};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵNodeFlags as NodeFlags} from '@angular/core';\n\nimport {CompileNgModuleMetadata, CompileProviderMetadata, identifierName} from './compile_metadata';\nimport {CompileReflector} from './compile_reflector';\nimport {Identifiers} from './identifiers';\nimport {CompilerInjectable} from './injectable';\nimport * as o from './output/output_ast';\nimport {typeSourceSpan} from './parse_util';\nimport {NgModuleProviderAnalyzer} from './provider_analyzer';\nimport {OutputContext} from './util';\nimport {componentFactoryResolverProviderDef, depDef, providerDef} from './view_compiler/provider_compiler';\nexport class NgModuleCompileResult {\n/**\n * @param {?} ngModuleFactoryVar\n */\nconstructor(public ngModuleFactoryVar: string) {}\n}\n\nfunction NgModuleCompileResult_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleCompileResult.prototype.ngModuleFactoryVar;\n}\n\n\nconst /** @type {?} */ LOG_VAR = o.variable('_l');\nexport class NgModuleCompiler {\n/**\n * @param {?} reflector\n */\nconstructor(private reflector: CompileReflector) {}\n/**\n * @param {?} ctx\n * @param {?} ngModuleMeta\n * @param {?} extraProviders\n * @return {?}\n */\ncompile(\n      ctx: OutputContext, ngModuleMeta: CompileNgModuleMetadata,\n      extraProviders: CompileProviderMetadata[]): NgModuleCompileResult {\n    const /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n    const /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n    const /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n    const /** @type {?} */ providerParser =\n        new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n    const /** @type {?} */ providerDefs =\n        [componentFactoryResolverProviderDef(\n             this.reflector, ctx, NodeFlags.None, entryComponentFactories)]\n            .concat(providerParser.parse().map((provider) => providerDef(ctx, provider)))\n            .map(({providerExpr, depsExpr, flags, tokenExpr}) => {\n              return o.importExpr(Identifiers.moduleProviderDef).callFn([\n                o.literal(flags), tokenExpr, providerExpr, depsExpr\n              ]);\n            });\n\n    const /** @type {?} */ ngModuleDef = o.importExpr(Identifiers.moduleDef).callFn([o.literalArr(providerDefs)]);\n    const /** @type {?} */ ngModuleDefFactory = o.fn(\n        [new o.FnParam( /** @type {?} */((LOG_VAR.name)))], [new o.ReturnStatement(ngModuleDef)], o.INFERRED_TYPE);\n\n    const /** @type {?} */ ngModuleFactoryVar = `${identifierName(ngModuleMeta.type)}NgFactory`;\n    this._createNgModuleFactory(\n        ctx, ngModuleMeta.type.reference, o.importExpr(Identifiers.createModuleFactory).callFn([\n          ctx.importExpr(ngModuleMeta.type.reference),\n          o.literalArr(bootstrapComponents.map(id => ctx.importExpr(id.reference))),\n          ngModuleDefFactory\n        ]));\n\n    if (ngModuleMeta.id) {\n      const /** @type {?} */ registerFactoryStmt =\n          o.importExpr(Identifiers.RegisterModuleFactoryFn)\n              .callFn([o.literal(ngModuleMeta.id), o.variable(ngModuleFactoryVar)])\n              .toStmt();\n      ctx.statements.push(registerFactoryStmt);\n    }\n\n    return new NgModuleCompileResult(ngModuleFactoryVar);\n  }\n/**\n * @param {?} ctx\n * @param {?} ngModuleReference\n * @return {?}\n */\ncreateStub(ctx: OutputContext, ngModuleReference: any) {\n    this._createNgModuleFactory(ctx, ngModuleReference, o.NULL_EXPR);\n  }\n/**\n * @param {?} ctx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\n\nprivate _createNgModuleFactory(ctx: OutputContext, reference: any, value: o.Expression) {\n    const /** @type {?} */ ngModuleFactoryVar = `${identifierName({reference: reference})}NgFactory`;\n    const /** @type {?} */ ngModuleFactoryStmt =\n        o.variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(\n                o.importType(\n                    Identifiers.NgModuleFactory, [ /** @type {?} */((o.expressionType(ctx.importExpr(reference))))],\n                    [o.TypeModifier.Const]),\n                [o.StmtModifier.Final, o.StmtModifier.Exported]);\n\n    ctx.statements.push(ngModuleFactoryStmt);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompileReflector, },\n];\n}\n\nfunction NgModuleCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgModuleCompiler.ctorParameters;\n/** @type {?} */\nNgModuleCompiler.prototype.reflector;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {utf8Encode} from '../util';\n\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nconst /** @type {?} */ VERSION = 3;\n\nconst /** @type {?} */ JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\n\ntype Segment = {\n  col0: number,\n  sourceUrl?: string,\n  sourceLine0?: number,\n  sourceCol0?: number,\n};\n\nexport type SourceMap = {\n  version: number,\n  file?: string,\n  sourceRoot: string,\n  sources: string[],\n  sourcesContent: (string | null)[],\n  mappings: string,\n};\nexport class SourceMapGenerator {\nprivate sourcesContent: Map<string, string|null> = new Map();\nprivate lines: Segment[][] = [];\nprivate lastCol0: number = 0;\nprivate hasMappings = false;\n/**\n * @param {?=} file\n */\nconstructor(private file: string|null = null) {}\n/**\n * @param {?} url\n * @param {?=} content\n * @return {?}\n */\naddSource(url: string, content: string|null = null): this {\n    if (!this.sourcesContent.has(url)) {\n      this.sourcesContent.set(url, content);\n    }\n    return this;\n  }\n/**\n * @return {?}\n */\naddLine(): this {\n    this.lines.push([]);\n    this.lastCol0 = 0;\n    return this;\n  }\n/**\n * @param {?} col0\n * @param {?=} sourceUrl\n * @param {?=} sourceLine0\n * @param {?=} sourceCol0\n * @return {?}\n */\naddMapping(col0: number, sourceUrl?: string, sourceLine0?: number, sourceCol0?: number): this {\n    if (!this.currentLine) {\n      throw new Error(`A line must be added before mappings can be added`);\n    }\n    if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n      throw new Error(`Unknown source file \"${sourceUrl}\"`);\n    }\n    if (col0 == null) {\n      throw new Error(`The column in the generated code must be provided`);\n    }\n    if (col0 < this.lastCol0) {\n      throw new Error(`Mapping should be added in output order`);\n    }\n    if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n      throw new Error(`The source location must be provided when a source url is provided`);\n    }\n\n    this.hasMappings = true;\n    this.lastCol0 = col0;\n    this.currentLine.push({col0, sourceUrl, sourceLine0, sourceCol0});\n    return this;\n  }\n/**\n * @return {?}\n */\n\nprivate get currentLine(): Segment[]|null { return this.lines.slice(-1)[0]; }\n/**\n * @return {?}\n */\ntoJSON(): SourceMap|null {\n    if (!this.hasMappings) {\n      return null;\n    }\n\n    const /** @type {?} */ sourcesIndex = new Map<string, number>();\n    const /** @type {?} */ sources: string[] = [];\n    const /** @type {?} */ sourcesContent: (string | null)[] = [];\n\n    Array.from(this.sourcesContent.keys()).forEach((url: string, i: number) => {\n      sourcesIndex.set(url, i);\n      sources.push(url);\n      sourcesContent.push(this.sourcesContent.get(url) || null);\n    });\n\n    let /** @type {?} */ mappings: string = '';\n    let /** @type {?} */ lastCol0: number = 0;\n    let /** @type {?} */ lastSourceIndex: number = 0;\n    let /** @type {?} */ lastSourceLine0: number = 0;\n    let /** @type {?} */ lastSourceCol0: number = 0;\n\n    this.lines.forEach(segments => {\n      lastCol0 = 0;\n\n      mappings += segments\n                      .map(segment => {\n                        // zero-based starting column of the line in the generated code\n                        let /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                        lastCol0 = segment.col0;\n\n                        if (segment.sourceUrl != null) {\n                          // zero-based index into the “sources” list\n                          segAsStr +=\n                              toBase64VLQ( /** @type {?} */((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                          lastSourceIndex = /** @type {?} */(( sourcesIndex.get(segment.sourceUrl)));\n                          // the zero-based starting line in the original source\n                          segAsStr += toBase64VLQ( /** @type {?} */((segment.sourceLine0)) - lastSourceLine0);\n                          lastSourceLine0 = /** @type {?} */(( segment.sourceLine0));\n                          // the zero-based starting column in the original source\n                          segAsStr += toBase64VLQ( /** @type {?} */((segment.sourceCol0)) - lastSourceCol0);\n                          lastSourceCol0 = /** @type {?} */(( segment.sourceCol0));\n                        }\n\n                        return segAsStr;\n                      })\n                      .join(',');\n      mappings += ';';\n    });\n\n    mappings = mappings.slice(0, -1);\n\n    return {\n      'file': this.file || '',\n      'version': VERSION,\n      'sourceRoot': '',\n      'sources': sources,\n      'sourcesContent': sourcesContent,\n      'mappings': mappings,\n    };\n  }\n/**\n * @return {?}\n */\ntoJsComment(): string {\n    return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n                              '';\n  }\n}\n\nfunction SourceMapGenerator_tsickle_Closure_declarations() {\n/** @type {?} */\nSourceMapGenerator.prototype.sourcesContent;\n/** @type {?} */\nSourceMapGenerator.prototype.lines;\n/** @type {?} */\nSourceMapGenerator.prototype.lastCol0;\n/** @type {?} */\nSourceMapGenerator.prototype.hasMappings;\n/** @type {?} */\nSourceMapGenerator.prototype.file;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nexport function toBase64String(value: string): string {\n  let /** @type {?} */ b64 = '';\n  value = utf8Encode(value);\n  for (let /** @type {?} */ i = 0; i < value.length;) {\n    const /** @type {?} */ i1 = value.charCodeAt(i++);\n    const /** @type {?} */ i2 = value.charCodeAt(i++);\n    const /** @type {?} */ i3 = value.charCodeAt(i++);\n    b64 += toBase64Digit(i1 >> 2);\n    b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n    b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n    b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n  }\n\n  return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value: number): string {\n  value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n\n  let /** @type {?} */ out = '';\n  do {\n    let /** @type {?} */ digit = value & 31;\n    value = value >> 5;\n    if (value > 0) {\n      digit = digit | 32;\n    }\n    out += toBase64Digit(digit);\n  } while (value > 0);\n\n  return out;\n}\n\nconst /** @type {?} */ B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value: number): string {\n  if (value < 0 || value >= 64) {\n    throw new Error(`Can only encode value in the range [0, 63]`);\n  }\n\n  return B64_DIGITS[value];\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '../parse_util';\n\nimport * as o from './output_ast';\nimport {SourceMapGenerator} from './source_map';\n\nconst /** @type {?} */ _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nconst /** @type {?} */ _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nconst /** @type {?} */ _INDENT_WITH = '  ';\nexport const /** @type {?} */ CATCH_ERROR_VAR = o.variable('error', null, null);\nexport const /** @type {?} */ CATCH_STACK_VAR = o.variable('stack', null, null);\n/**\n * @abstract\n */\nexport abstract class OutputEmitter {\n  abstract emitStatements(\n      srcFilePath: string, genFilePath: string, stmts: o.Statement[],\n      preamble?: string|null): string;\n}\n\nfunction OutputEmitter_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} srcFilePath\n * @param {?} genFilePath\n * @param {?} stmts\n * @param {?=} preamble\n * @return {?}\n */\nOutputEmitter.prototype.emitStatements = function(srcFilePath, genFilePath, stmts, preamble) {};\n}\n\nclass _EmittedLine {\n  partsLength = 0;\n  parts: string[] = [];\n  srcSpans: (ParseSourceSpan|null)[] = [];\n/**\n * @param {?} indent\n */\nconstructor(public indent: number) {}\n}\n\nfunction _EmittedLine_tsickle_Closure_declarations() {\n/** @type {?} */\n_EmittedLine.prototype.partsLength;\n/** @type {?} */\n_EmittedLine.prototype.parts;\n/** @type {?} */\n_EmittedLine.prototype.srcSpans;\n/** @type {?} */\n_EmittedLine.prototype.indent;\n}\n\nexport class EmitterVisitorContext {\n/**\n * @return {?}\n */\nstatic createRoot(): EmitterVisitorContext { return new EmitterVisitorContext(0); }\nprivate _lines: _EmittedLine[];\nprivate _classes: o.ClassStmt[] = [];\nprivate _preambleLineCount = 0;\n/**\n * @param {?} _indent\n */\nconstructor(private _indent: number) { this._lines = [new _EmittedLine(_indent)]; }\n/**\n * @return {?}\n */\n\nprivate get _currentLine(): _EmittedLine { return this._lines[this._lines.length - 1]; }\n/**\n * @param {?=} from\n * @param {?=} lastPart\n * @return {?}\n */\nprintln(from?: {sourceSpan: ParseSourceSpan | null}|null, lastPart: string = ''): void {\n    this.print(from || null, lastPart, true);\n  }\n/**\n * @return {?}\n */\nlineIsEmpty(): boolean { return this._currentLine.parts.length === 0; }\n/**\n * @return {?}\n */\nlineLength(): number {\n    return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n  }\n/**\n * @param {?} from\n * @param {?} part\n * @param {?=} newLine\n * @return {?}\n */\nprint(from: {sourceSpan: ParseSourceSpan | null}|null, part: string, newLine: boolean = false) {\n    if (part.length > 0) {\n      this._currentLine.parts.push(part);\n      this._currentLine.partsLength += part.length;\n      this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n    }\n    if (newLine) {\n      this._lines.push(new _EmittedLine(this._indent));\n    }\n  }\n/**\n * @return {?}\n */\nremoveEmptyLastLine() {\n    if (this.lineIsEmpty()) {\n      this._lines.pop();\n    }\n  }\n/**\n * @return {?}\n */\nincIndent() {\n    this._indent++;\n    if (this.lineIsEmpty()) {\n      this._currentLine.indent = this._indent;\n    }\n  }\n/**\n * @return {?}\n */\ndecIndent() {\n    this._indent--;\n    if (this.lineIsEmpty()) {\n      this._currentLine.indent = this._indent;\n    }\n  }\n/**\n * @param {?} clazz\n * @return {?}\n */\npushClass(clazz: o.ClassStmt) { this._classes.push(clazz); }\n/**\n * @return {?}\n */\npopClass(): o.ClassStmt { return /** @type {?} */(( this._classes.pop())); }\n/**\n * @return {?}\n */\nget currentClass(): o.ClassStmt|null {\n    return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n  }\n/**\n * @return {?}\n */\ntoSource(): string {\n    return this.sourceLines\n        .map(l => l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : '')\n        .join('\\n');\n  }\n/**\n * @param {?} sourceFilePath\n * @param {?} genFilePath\n * @param {?=} startsAtLine\n * @return {?}\n */\ntoSourceMapGenerator(sourceFilePath: string, genFilePath: string, startsAtLine: number = 0):\n      SourceMapGenerator {\n    const /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n\n    let /** @type {?} */ firstOffsetMapped = false;\n    const /** @type {?} */ mapFirstOffsetIfNeeded = () => {\n      if (!firstOffsetMapped) {\n        // Add a single space so that tools won't try to load the file from disk.\n        // Note: We are using virtual urls like `ng:///`, so we have to\n        // provide a content here.\n        map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n        firstOffsetMapped = true;\n      }\n    };\n\n    for (let /** @type {?} */ i = 0; i < startsAtLine; i++) {\n      map.addLine();\n      mapFirstOffsetIfNeeded();\n    }\n\n    this.sourceLines.forEach((line, lineIdx) => {\n      map.addLine();\n\n      const /** @type {?} */ spans = line.srcSpans;\n      const /** @type {?} */ parts = line.parts;\n      let /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n      let /** @type {?} */ spanIdx = 0;\n      // skip leading parts without source spans\n      while (spanIdx < spans.length && !spans[spanIdx]) {\n        col0 += parts[spanIdx].length;\n        spanIdx++;\n      }\n      if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n        firstOffsetMapped = true;\n      } else {\n        mapFirstOffsetIfNeeded();\n      }\n\n      while (spanIdx < spans.length) {\n        const /** @type {?} */ span = /** @type {?} */(( spans[spanIdx]));\n        const /** @type {?} */ source = span.start.file;\n        const /** @type {?} */ sourceLine = span.start.line;\n        const /** @type {?} */ sourceCol = span.start.col;\n        map.addSource(source.url, source.content)\n            .addMapping(col0, source.url, sourceLine, sourceCol);\n\n        col0 += parts[spanIdx].length;\n        spanIdx++;\n\n        // assign parts without span or the same span to the previous segment\n        while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n          col0 += parts[spanIdx].length;\n          spanIdx++;\n        }\n      }\n    });\n\n    return map;\n  }\n/**\n * @param {?} count\n * @return {?}\n */\nsetPreambleLineCount(count: number) { return this._preambleLineCount = count; }\n/**\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nspanOf(line: number, column: number): ParseSourceSpan|null {\n    const /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n    if (emittedLine) {\n      let /** @type {?} */ columnsLeft = column - emittedLine.indent;\n      for (let /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n        const /** @type {?} */ part = emittedLine.parts[partIndex];\n        if (part.length > columnsLeft) {\n          return emittedLine.srcSpans[partIndex];\n        }\n        columnsLeft -= part.length;\n      }\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\n\nprivate get sourceLines(): _EmittedLine[] {\n    if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n      return this._lines.slice(0, -1);\n    }\n    return this._lines;\n  }\n}\n\nfunction EmitterVisitorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nEmitterVisitorContext.prototype._lines;\n/** @type {?} */\nEmitterVisitorContext.prototype._classes;\n/** @type {?} */\nEmitterVisitorContext.prototype._preambleLineCount;\n/** @type {?} */\nEmitterVisitorContext.prototype._indent;\n}\n\n/**\n * @abstract\n */\nexport abstract class AbstractEmitterVisitor implements o.StatementVisitor, o.ExpressionVisitor {\n/**\n * @param {?} _escapeDollarInStrings\n */\nconstructor(private _escapeDollarInStrings: boolean) {}\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitExpressionStmt(stmt: o.ExpressionStatement, ctx: EmitterVisitorContext): any {\n    stmt.expr.visitExpression(this, ctx);\n    ctx.println(stmt, ';');\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitReturnStmt(stmt: o.ReturnStatement, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `return `);\n    stmt.value.visitExpression(this, ctx);\n    ctx.println(stmt, ';');\n    return null;\n  }\n\n  abstract visitCastExpr(ast: o.CastExpr, context: any): any;\n\n  abstract visitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any;\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitIfStmt(stmt: o.IfStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `if (`);\n    stmt.condition.visitExpression(this, ctx);\n    ctx.print(stmt, `) {`);\n    const /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n    if (stmt.trueCase.length <= 1 && !hasElseCase) {\n      ctx.print(stmt, ` `);\n      this.visitAllStatements(stmt.trueCase, ctx);\n      ctx.removeEmptyLastLine();\n      ctx.print(stmt, ` `);\n    } else {\n      ctx.println();\n      ctx.incIndent();\n      this.visitAllStatements(stmt.trueCase, ctx);\n      ctx.decIndent();\n      if (hasElseCase) {\n        ctx.println(stmt, `} else {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.falseCase, ctx);\n        ctx.decIndent();\n      }\n    }\n    ctx.println(stmt, `}`);\n    return null;\n  }\n\n  abstract visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any;\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitThrowStmt(stmt: o.ThrowStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `throw `);\n    stmt.error.visitExpression(this, ctx);\n    ctx.println(stmt, `;`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitCommentStmt(stmt: o.CommentStmt, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ lines = stmt.comment.split('\\n');\n    lines.forEach((line) => { ctx.println(stmt, `// ${line}`); });\n    return null;\n  }\n  abstract visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any;\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWriteVarExpr(expr: o.WriteVarExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n    if (!lineWasEmpty) {\n      ctx.print(expr, '(');\n    }\n    ctx.print(expr, `${expr.name} = `);\n    expr.value.visitExpression(this, ctx);\n    if (!lineWasEmpty) {\n      ctx.print(expr, ')');\n    }\n    return null;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWriteKeyExpr(expr: o.WriteKeyExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n    if (!lineWasEmpty) {\n      ctx.print(expr, '(');\n    }\n    expr.receiver.visitExpression(this, ctx);\n    ctx.print(expr, `[`);\n    expr.index.visitExpression(this, ctx);\n    ctx.print(expr, `] = `);\n    expr.value.visitExpression(this, ctx);\n    if (!lineWasEmpty) {\n      ctx.print(expr, ')');\n    }\n    return null;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWritePropExpr(expr: o.WritePropExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n    if (!lineWasEmpty) {\n      ctx.print(expr, '(');\n    }\n    expr.receiver.visitExpression(this, ctx);\n    ctx.print(expr, `.${expr.name} = `);\n    expr.value.visitExpression(this, ctx);\n    if (!lineWasEmpty) {\n      ctx.print(expr, ')');\n    }\n    return null;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitInvokeMethodExpr(expr: o.InvokeMethodExpr, ctx: EmitterVisitorContext): any {\n    expr.receiver.visitExpression(this, ctx);\n    let /** @type {?} */ name = expr.name;\n    if (expr.builtin != null) {\n      name = this.getBuiltinMethodName(expr.builtin);\n      if (name == null) {\n        // some builtins just mean to skip the call.\n        return null;\n      }\n    }\n    ctx.print(expr, `.${name}(`);\n    this.visitAllExpressions(expr.args, ctx, `,`);\n    ctx.print(expr, `)`);\n    return null;\n  }\n\n  abstract getBuiltinMethodName(method: o.BuiltinMethod): string;\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitInvokeFunctionExpr(expr: o.InvokeFunctionExpr, ctx: EmitterVisitorContext): any {\n    expr.fn.visitExpression(this, ctx);\n    ctx.print(expr, `(`);\n    this.visitAllExpressions(expr.args, ctx, ',');\n    ctx.print(expr, `)`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadVarExpr(ast: o.ReadVarExpr, ctx: EmitterVisitorContext): any {\n    let /** @type {?} */ varName = /** @type {?} */(( ast.name));\n    if (ast.builtin != null) {\n      switch (ast.builtin) {\n        case o.BuiltinVar.Super:\n          varName = 'super';\n          break;\n        case o.BuiltinVar.This:\n          varName = 'this';\n          break;\n        case o.BuiltinVar.CatchError:\n          varName = /** @type {?} */(( CATCH_ERROR_VAR.name));\n          break;\n        case o.BuiltinVar.CatchStack:\n          varName = /** @type {?} */(( CATCH_STACK_VAR.name));\n          break;\n        default:\n          throw new Error(`Unknown builtin variable ${ast.builtin}`);\n      }\n    }\n    ctx.print(ast, varName);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitInstantiateExpr(ast: o.InstantiateExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `new `);\n    ast.classExpr.visitExpression(this, ctx);\n    ctx.print(ast, `(`);\n    this.visitAllExpressions(ast.args, ctx, ',');\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralExpr(ast: o.LiteralExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value;\n    if (typeof value === 'string') {\n      ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n    } else {\n      ctx.print(ast, `${value}`);\n    }\n    return null;\n  }\n\n  abstract visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any;\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitConditionalExpr(ast: o.ConditionalExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(`);\n    ast.condition.visitExpression(this, ctx);\n    ctx.print(ast, '? ');\n    ast.trueCase.visitExpression(this, ctx);\n    ctx.print(ast, ': '); /** @type {?} */((\n    ast.falseCase)).visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitNotExpr(ast: o.NotExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, '!');\n    ast.condition.visitExpression(this, ctx);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitAssertNotNullExpr(ast: o.AssertNotNull, ctx: EmitterVisitorContext): any {\n    ast.condition.visitExpression(this, ctx);\n    return null;\n  }\n  abstract visitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any;\n  abstract visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, context: any): any;\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: EmitterVisitorContext): any {\n    let /** @type {?} */ opStr: string;\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        opStr = '==';\n        break;\n      case o.BinaryOperator.Identical:\n        opStr = '===';\n        break;\n      case o.BinaryOperator.NotEquals:\n        opStr = '!=';\n        break;\n      case o.BinaryOperator.NotIdentical:\n        opStr = '!==';\n        break;\n      case o.BinaryOperator.And:\n        opStr = '&&';\n        break;\n      case o.BinaryOperator.Or:\n        opStr = '||';\n        break;\n      case o.BinaryOperator.Plus:\n        opStr = '+';\n        break;\n      case o.BinaryOperator.Minus:\n        opStr = '-';\n        break;\n      case o.BinaryOperator.Divide:\n        opStr = '/';\n        break;\n      case o.BinaryOperator.Multiply:\n        opStr = '*';\n        break;\n      case o.BinaryOperator.Modulo:\n        opStr = '%';\n        break;\n      case o.BinaryOperator.Lower:\n        opStr = '<';\n        break;\n      case o.BinaryOperator.LowerEquals:\n        opStr = '<=';\n        break;\n      case o.BinaryOperator.Bigger:\n        opStr = '>';\n        break;\n      case o.BinaryOperator.BiggerEquals:\n        opStr = '>=';\n        break;\n      default:\n        throw new Error(`Unknown operator ${ast.operator}`);\n    }\n    ctx.print(ast, `(`);\n    ast.lhs.visitExpression(this, ctx);\n    ctx.print(ast, ` ${opStr} `);\n    ast.rhs.visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadPropExpr(ast: o.ReadPropExpr, ctx: EmitterVisitorContext): any {\n    ast.receiver.visitExpression(this, ctx);\n    ctx.print(ast, `.`);\n    ctx.print(ast, ast.name);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadKeyExpr(ast: o.ReadKeyExpr, ctx: EmitterVisitorContext): any {\n    ast.receiver.visitExpression(this, ctx);\n    ctx.print(ast, `[`);\n    ast.index.visitExpression(this, ctx);\n    ctx.print(ast, `]`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `[`);\n    this.visitAllExpressions(ast.entries, ctx, ',');\n    ctx.print(ast, `]`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralMapExpr(ast: o.LiteralMapExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `{`);\n    this.visitAllObjects(entry => {\n      ctx.print(ast, `${escapeIdentifier(entry.key, this._escapeDollarInStrings, entry.quoted)}:`);\n      entry.value.visitExpression(this, ctx);\n    }, ast.entries, ctx, ',');\n    ctx.print(ast, `}`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitCommaExpr(ast: o.CommaExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, '(');\n    this.visitAllExpressions(ast.parts, ctx, ',');\n    ctx.print(ast, ')');\n    return null;\n  }\n/**\n * @param {?} expressions\n * @param {?} ctx\n * @param {?} separator\n * @return {?}\n */\nvisitAllExpressions(expressions: o.Expression[], ctx: EmitterVisitorContext, separator: string):\n      void {\n    this.visitAllObjects(expr => expr.visitExpression(this, ctx), expressions, ctx, separator);\n  }\n/**\n * @template T\n * @param {?} handler\n * @param {?} expressions\n * @param {?} ctx\n * @param {?} separator\n * @return {?}\n */\nvisitAllObjects<T>(\n      handler: (t: T) => void, expressions: T[], ctx: EmitterVisitorContext,\n      separator: string): void {\n    let /** @type {?} */ incrementedIndent = false;\n    for (let /** @type {?} */ i = 0; i < expressions.length; i++) {\n      if (i > 0) {\n        if (ctx.lineLength() > 80) {\n          ctx.print(null, separator, true);\n          if (!incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.incIndent();\n            ctx.incIndent();\n            incrementedIndent = true;\n          }\n        } else {\n          ctx.print(null, separator, false);\n        }\n      }\n      handler(expressions[i]);\n    }\n    if (incrementedIndent) {\n      // continuation are marked with double indent.\n      ctx.decIndent();\n      ctx.decIndent();\n    }\n  }\n/**\n * @param {?} statements\n * @param {?} ctx\n * @return {?}\n */\nvisitAllStatements(statements: o.Statement[], ctx: EmitterVisitorContext): void {\n    statements.forEach((stmt) => stmt.visitStatement(this, ctx));\n  }\n}\n\nfunction AbstractEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractEmitterVisitor.prototype._escapeDollarInStrings;\n\n/**\n * @abstract\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.visitCastExpr = function(ast, context) {};\n\n/**\n * @abstract\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.visitDeclareClassStmt = function(stmt, ctx) {};\n\n/**\n * @abstract\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.visitTryCatchStmt = function(stmt, ctx) {};\n\n/**\n * @abstract\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.visitDeclareVarStmt = function(stmt, ctx) {};\n\n/**\n * @abstract\n * @param {?} method\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.getBuiltinMethodName = function(method) {};\n\n/**\n * @abstract\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.visitExternalExpr = function(ast, ctx) {};\n\n/**\n * @abstract\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.visitFunctionExpr = function(ast, ctx) {};\n\n/**\n * @abstract\n * @param {?} stmt\n * @param {?} context\n * @return {?}\n */\nAbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function(stmt, context) {};\n}\n\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nexport function escapeIdentifier(\n    input: string, escapeDollar: boolean, alwaysQuote: boolean = true): any {\n  if (input == null) {\n    return null;\n  }\n  const /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, (...match: string[]) => {\n    if (match[0] == '$') {\n      return escapeDollar ? '\\\\$' : '$';\n    } else if (match[0] == '\\n') {\n      return '\\\\n';\n    } else if (match[0] == '\\r') {\n      return '\\\\r';\n    } else {\n      return `\\\\${match[0]}`;\n    }\n  });\n  const /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n  return requiresQuotes ? `'${body}'` : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count: number): string {\n  let /** @type {?} */ res = '';\n  for (let /** @type {?} */ i = 0; i < count; i++) {\n    res += _INDENT_WITH;\n  }\n  return res;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {StaticSymbol} from '../aot/static_symbol';\nimport {CompileIdentifierMetadata} from '../compile_metadata';\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext, OutputEmitter} from './abstract_emitter';\nimport * as o from './output_ast';\n\nconst /** @type {?} */ _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function debugOutputAstAsTypeScript(ast: o.Statement | o.Expression | o.Type | any[]):\n    string {\n  const /** @type {?} */ converter = new _TsEmitterVisitor();\n  const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n  const /** @type {?} */ asts: any[] = Array.isArray(ast) ? ast : [ast];\n\n  asts.forEach((ast) => {\n    if (ast instanceof o.Statement) {\n      ast.visitStatement(converter, ctx);\n    } else if (ast instanceof o.Expression) {\n      ast.visitExpression(converter, ctx);\n    } else if (ast instanceof o.Type) {\n      ast.visitType(converter, ctx);\n    } else {\n      throw new Error(`Don't know how to print debug info for ${ast}`);\n    }\n  });\n  return ctx.toSource();\n}\nexport class TypeScriptEmitter implements OutputEmitter {\n/**\n * @param {?} srcFilePath\n * @param {?} genFilePath\n * @param {?} stmts\n * @param {?=} preamble\n * @param {?=} emitSourceMaps\n * @return {?}\n */\nemitStatementsAndContext(\n      srcFilePath: string, genFilePath: string, stmts: o.Statement[], preamble: string = '',\n      emitSourceMaps: boolean = true): {sourceText: string, context: EmitterVisitorContext} {\n    const /** @type {?} */ converter = new _TsEmitterVisitor();\n\n    const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n\n    converter.visitAllStatements(stmts, ctx);\n\n    const /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n    converter.reexports.forEach((reexports, exportedModuleName) => {\n      const /** @type {?} */ reexportsCode =\n          reexports.map(reexport => `${reexport.name} as ${reexport.as}`).join(',');\n      preambleLines.push(`export {${reexportsCode}} from '${exportedModuleName}';`);\n    });\n\n    converter.importsWithPrefixes.forEach((prefix, importedModuleName) => {\n      // Note: can't write the real word for import as it screws up system.js auto detection...\n      preambleLines.push(\n          `imp` +\n          `ort * as ${prefix} from '${importedModuleName}';`);\n    });\n\n    const /** @type {?} */ sm = emitSourceMaps ?\n        ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n        '';\n    const /** @type {?} */ lines = [...preambleLines, ctx.toSource(), sm];\n    if (sm) {\n      // always add a newline at the end, as some tools have bugs without it.\n      lines.push('');\n    }\n    ctx.setPreambleLineCount(preambleLines.length);\n    return {sourceText: lines.join('\\n'), context: ctx};\n  }\n/**\n * @param {?} srcFilePath\n * @param {?} genFilePath\n * @param {?} stmts\n * @param {?=} preamble\n * @return {?}\n */\nemitStatements(\n      srcFilePath: string, genFilePath: string, stmts: o.Statement[], preamble: string = '') {\n    return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n  }\n}\nclass _TsEmitterVisitor extends AbstractEmitterVisitor implements o.TypeVisitor {\nprivate typeExpression = 0;\nconstructor() { super(false); }\n\n  importsWithPrefixes = new Map<string, string>();\n  reexports = new Map<string, {name: string, as: string}[]>();\n/**\n * @param {?} t\n * @param {?} ctx\n * @param {?=} defaultType\n * @return {?}\n */\nvisitType(t: o.Type|null, ctx: EmitterVisitorContext, defaultType: string = 'any') {\n    if (t) {\n      this.typeExpression++;\n      t.visitType(this, ctx);\n      this.typeExpression--;\n    } else {\n      ctx.print(null, defaultType);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralExpr(ast: o.LiteralExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value;\n    if (value == null && ast.type != o.INFERRED_TYPE) {\n      ctx.print(ast, `(${value} as any)`);\n      return null;\n    }\n    return super.visitLiteralExpr(ast, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: EmitterVisitorContext): any {\n    if (ast.entries.length === 0) {\n      ctx.print(ast, '(');\n    }\n    const /** @type {?} */ result = super.visitLiteralArrayExpr(ast, ctx);\n    if (ast.entries.length === 0) {\n      ctx.print(ast, ' as any[])');\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    this._visitIdentifier(ast.value, ast.typeParams, ctx);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitAssertNotNullExpr(ast: o.AssertNotNull, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ result = super.visitAssertNotNullExpr(ast, ctx);\n    ctx.print(ast, '!');\n    return result;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n        !stmt.type) {\n      // check for a reexport\n      const {name, moduleName} = stmt.value.value;\n      if (moduleName) {\n        let /** @type {?} */ reexports = this.reexports.get(moduleName);\n        if (!reexports) {\n          reexports = [];\n          this.reexports.set(moduleName, reexports);\n        }\n        reexports.push({name: /** @type {?} */(( name)), as: stmt.name});\n        return null;\n      }\n    }\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    if (stmt.hasModifier(o.StmtModifier.Final)) {\n      ctx.print(stmt, `const`);\n    } else {\n      ctx.print(stmt, `var`);\n    }\n    ctx.print(stmt, ` ${stmt.name}`);\n    this._printColonType(stmt.type, ctx);\n    ctx.print(stmt, ` = `);\n    stmt.value.visitExpression(this, ctx);\n    ctx.println(stmt, `;`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(<`); /** @type {?} */((\n    ast.type)).visitType(this, ctx);\n    ctx.print(ast, `>`);\n    ast.value.visitExpression(this, ctx);\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitInstantiateExpr(ast: o.InstantiateExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `new `);\n    this.typeExpression++;\n    ast.classExpr.visitExpression(this, ctx);\n    this.typeExpression--;\n    ctx.print(ast, `(`);\n    this.visitAllExpressions(ast.args, ctx, ',');\n    ctx.print(ast, `)`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `class ${stmt.name}`);\n    if (stmt.parent != null) {\n      ctx.print(stmt, ` extends `);\n      this.typeExpression++;\n      stmt.parent.visitExpression(this, ctx);\n      this.typeExpression--;\n    }\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n    if (stmt.constructorMethod != null) {\n      this._visitClassConstructor(stmt, ctx);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    ctx.popClass();\n    return null;\n  }\n/**\n * @param {?} field\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassField(field: o.ClassField, ctx: EmitterVisitorContext) {\n    if (field.hasModifier(o.StmtModifier.Private)) {\n      // comment out as a workaround for #10967\n      ctx.print(null, `/*private*/ `);\n    }\n    ctx.print(null, field.name);\n    this._printColonType(field.type, ctx);\n    ctx.println(null, `;`);\n  }\n/**\n * @param {?} getter\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassGetter(getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    if (getter.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `get ${getter.name}()`);\n    this._printColonType(getter.type, ctx);\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(getter.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `constructor(`);\n    this._visitParams(stmt.constructorMethod.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n/**\n * @param {?} method\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassMethod(method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    if (method.hasModifier(o.StmtModifier.Private)) {\n      ctx.print(null, `private `);\n    }\n    ctx.print(null, `${method.name}(`);\n    this._visitParams(method.params, ctx);\n    ctx.print(null, `)`);\n    this._printColonType(method.type, ctx, 'void');\n    ctx.println(null, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(method.body, ctx);\n    ctx.decIndent();\n    ctx.println(null, `}`);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `(`);\n    this._visitParams(ast.params, ctx);\n    ctx.print(ast, `)`);\n    this._printColonType(ast.type, ctx, 'void');\n    ctx.println(ast, ` => {`);\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.print(stmt, `export `);\n    }\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.print(stmt, `)`);\n    this._printColonType(stmt.type, ctx, 'void');\n    ctx.println(stmt, ` {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const /** @type {?} */ catchStmts =\n        [ /** @type {?} */((<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])))].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitBuiltintType(type: o.BuiltinType, ctx: EmitterVisitorContext): any {\n    let /** @type {?} */ typeStr: string;\n    switch (type.name) {\n      case o.BuiltinTypeName.Bool:\n        typeStr = 'boolean';\n        break;\n      case o.BuiltinTypeName.Dynamic:\n        typeStr = 'any';\n        break;\n      case o.BuiltinTypeName.Function:\n        typeStr = 'Function';\n        break;\n      case o.BuiltinTypeName.Number:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.Int:\n        typeStr = 'number';\n        break;\n      case o.BuiltinTypeName.String:\n        typeStr = 'string';\n        break;\n      default:\n        throw new Error(`Unsupported builtin type ${type.name}`);\n    }\n    ctx.print(null, typeStr);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExpressionType(ast: o.ExpressionType, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitArrayType(type: o.ArrayType, ctx: EmitterVisitorContext): any {\n    this.visitType(type.of, ctx);\n    ctx.print(null, `[]`);\n    return null;\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @return {?}\n */\nvisitMapType(type: o.MapType, ctx: EmitterVisitorContext): any {\n    ctx.print(null, `{[key: string]:`);\n    this.visitType(type.valueType, ctx);\n    ctx.print(null, `}`);\n    return null;\n  }\n/**\n * @param {?} method\n * @return {?}\n */\ngetBuiltinMethodName(method: o.BuiltinMethod): string {\n    let /** @type {?} */ name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n/**\n * @param {?} params\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => {\n      ctx.print(null, param.name);\n      this._printColonType(param.type, ctx);\n    }, params, ctx, ',');\n  }\n/**\n * @param {?} value\n * @param {?} typeParams\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitIdentifier(\n      value: o.ExternalReference, typeParams: o.Type[]|null, ctx: EmitterVisitorContext): void {\n    const {name, moduleName} = value;\n    if (moduleName) {\n      let /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n      if (prefix == null) {\n        prefix = `i${this.importsWithPrefixes.size}`;\n        this.importsWithPrefixes.set(moduleName, prefix);\n      }\n      ctx.print(null, `${prefix}.`);\n    }\n    ctx.print(null, /** @type {?} */(( name)));\n\n    if (this.typeExpression > 0) {\n      // If we are in a type expression that refers to a generic type then supply\n      // the required type parameters. If there were not enough type parameters\n      // supplied, supply any as the type. Outside a type expression the reference\n      // should not supply type parameters and be treated as a simple value reference\n      // to the constructor function itself.\n      const /** @type {?} */ suppliedParameters = typeParams || [];\n      if (suppliedParameters.length > 0) {\n        ctx.print(null, `<`);\n        this.visitAllObjects(type => type.visitType(this, ctx), /** @type {?} */(( typeParams)), ctx, ',');\n        ctx.print(null, `>`);\n      }\n    }\n  }\n/**\n * @param {?} type\n * @param {?} ctx\n * @param {?=} defaultType\n * @return {?}\n */\n\nprivate _printColonType(type: o.Type|null, ctx: EmitterVisitorContext, defaultType?: string) {\n    if (type !== o.INFERRED_TYPE) {\n      ctx.print(null, ':');\n      this.visitType(type, ctx, defaultType);\n    }\n  }\n}\n\nfunction _TsEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_TsEmitterVisitor.prototype.typeExpression;\n/** @type {?} */\n_TsEmitterVisitor.prototype.importsWithPrefixes;\n/** @type {?} */\n_TsEmitterVisitor.prototype.reexports;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '@angular/core';\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nexport const /** @type {?} */ SECURITY_SCHEMA: {[k: string]: SecurityContext} = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx: SecurityContext, specs: string[]) {\n  for (const /** @type {?} */ spec of specs) SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n}\n\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\n\nregisterContext(SecurityContext.HTML, [\n  'iframe|srcdoc',\n  '*|innerHTML',\n  '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n  '*|formAction', 'area|href',       'area|ping',       'audio|src',    'a|href',\n  'a|ping',       'blockquote|cite', 'body|background', 'del|cite',     'form|action',\n  'img|src',      'img|srcset',      'input|src',       'ins|cite',     'q|cite',\n  'source|src',   'source|srcset',   'track|src',       'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n  'applet|code',\n  'applet|codebase',\n  'base|href',\n  'embed|src',\n  'frame|src',\n  'head|profile',\n  'html|manifest',\n  'iframe|src',\n  'link|href',\n  'media|src',\n  'object|codebase',\n  'object|data',\n  'script|src',\n]);\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, SchemaMetadata, SecurityContext} from '@angular/core';\n\nimport {CompilerInjectable} from '../injectable';\nimport {isNgContainer, isNgContent} from '../ml_parser/tags';\nimport {dashCaseToCamelCase} from '../util';\n\nimport {SECURITY_SCHEMA} from './dom_security_schema';\nimport {ElementSchemaRegistry} from './element_schema_registry';\n\nconst /** @type {?} */ BOOLEAN = 'boolean';\nconst /** @type {?} */ NUMBER = 'number';\nconst /** @type {?} */ STRING = 'string';\nconst /** @type {?} */ OBJECT = 'object';\n\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\n\nconst /** @type {?} */ SCHEMA: string[] = [\n  '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n      /* added manually to avoid breaking changes */\n      ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n  '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n  'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n  'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n  ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n  ':svg:graphics^:svg:|',\n  ':svg:animation^:svg:|*begin,*end,*repeat',\n  ':svg:geometry^:svg:|',\n  ':svg:componentTransferFunction^:svg:|',\n  ':svg:gradient^:svg:|',\n  ':svg:textContent^:svg:graphics|',\n  ':svg:textPositioning^:svg:textContent|',\n  'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n  'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n  'audio^media|',\n  'br^[HTMLElement]|clear',\n  'base^[HTMLElement]|href,target',\n  'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n  'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n  'canvas^[HTMLElement]|#height,#width',\n  'content^[HTMLElement]|select',\n  'dl^[HTMLElement]|!compact',\n  'datalist^[HTMLElement]|',\n  'details^[HTMLElement]|!open',\n  'dialog^[HTMLElement]|!open,returnValue',\n  'dir^[HTMLElement]|!compact',\n  'div^[HTMLElement]|align',\n  'embed^[HTMLElement]|align,height,name,src,type,width',\n  'fieldset^[HTMLElement]|!disabled,name',\n  'font^[HTMLElement]|color,face,size',\n  'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n  'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n  'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n  'hr^[HTMLElement]|align,color,!noShade,size,width',\n  'head^[HTMLElement]|',\n  'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n  'html^[HTMLElement]|version',\n  'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n  'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n  'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n  'li^[HTMLElement]|type,#value',\n  'label^[HTMLElement]|htmlFor',\n  'legend^[HTMLElement]|align',\n  'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n  'map^[HTMLElement]|name',\n  'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n  'menu^[HTMLElement]|!compact',\n  'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n  'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n  'ins,del^[HTMLElement]|cite,dateTime',\n  'ol^[HTMLElement]|!compact,!reversed,#start,type',\n  'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n  'optgroup^[HTMLElement]|!disabled,label',\n  'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n  'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n  'p^[HTMLElement]|align',\n  'param^[HTMLElement]|name,type,value,valueType',\n  'picture^[HTMLElement]|',\n  'pre^[HTMLElement]|#width',\n  'progress^[HTMLElement]|#max,#value',\n  'q,blockquote,cite^[HTMLElement]|',\n  'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n  'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n  'shadow^[HTMLElement]|',\n  'slot^[HTMLElement]|name',\n  'source^[HTMLElement]|media,sizes,src,srcset,type',\n  'span^[HTMLElement]|',\n  'style^[HTMLElement]|!disabled,media,type',\n  'caption^[HTMLElement]|align',\n  'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n  'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n  'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n  'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n  'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n  'template^[HTMLElement]|',\n  'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n  'title^[HTMLElement]|text',\n  'track^[HTMLElement]|!default,kind,label,src,srclang',\n  'ul^[HTMLElement]|!compact,type',\n  'unknown^[HTMLElement]|',\n  'video^media|#height,poster,#width',\n  ':svg:a^:svg:graphics|',\n  ':svg:animate^:svg:animation|',\n  ':svg:animateMotion^:svg:animation|',\n  ':svg:animateTransform^:svg:animation|',\n  ':svg:circle^:svg:geometry|',\n  ':svg:clipPath^:svg:graphics|',\n  ':svg:defs^:svg:graphics|',\n  ':svg:desc^:svg:|',\n  ':svg:discard^:svg:|',\n  ':svg:ellipse^:svg:geometry|',\n  ':svg:feBlend^:svg:|',\n  ':svg:feColorMatrix^:svg:|',\n  ':svg:feComponentTransfer^:svg:|',\n  ':svg:feComposite^:svg:|',\n  ':svg:feConvolveMatrix^:svg:|',\n  ':svg:feDiffuseLighting^:svg:|',\n  ':svg:feDisplacementMap^:svg:|',\n  ':svg:feDistantLight^:svg:|',\n  ':svg:feDropShadow^:svg:|',\n  ':svg:feFlood^:svg:|',\n  ':svg:feFuncA^:svg:componentTransferFunction|',\n  ':svg:feFuncB^:svg:componentTransferFunction|',\n  ':svg:feFuncG^:svg:componentTransferFunction|',\n  ':svg:feFuncR^:svg:componentTransferFunction|',\n  ':svg:feGaussianBlur^:svg:|',\n  ':svg:feImage^:svg:|',\n  ':svg:feMerge^:svg:|',\n  ':svg:feMergeNode^:svg:|',\n  ':svg:feMorphology^:svg:|',\n  ':svg:feOffset^:svg:|',\n  ':svg:fePointLight^:svg:|',\n  ':svg:feSpecularLighting^:svg:|',\n  ':svg:feSpotLight^:svg:|',\n  ':svg:feTile^:svg:|',\n  ':svg:feTurbulence^:svg:|',\n  ':svg:filter^:svg:|',\n  ':svg:foreignObject^:svg:graphics|',\n  ':svg:g^:svg:graphics|',\n  ':svg:image^:svg:graphics|',\n  ':svg:line^:svg:geometry|',\n  ':svg:linearGradient^:svg:gradient|',\n  ':svg:mpath^:svg:|',\n  ':svg:marker^:svg:|',\n  ':svg:mask^:svg:|',\n  ':svg:metadata^:svg:|',\n  ':svg:path^:svg:geometry|',\n  ':svg:pattern^:svg:|',\n  ':svg:polygon^:svg:geometry|',\n  ':svg:polyline^:svg:geometry|',\n  ':svg:radialGradient^:svg:gradient|',\n  ':svg:rect^:svg:geometry|',\n  ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n  ':svg:script^:svg:|type',\n  ':svg:set^:svg:animation|',\n  ':svg:stop^:svg:|',\n  ':svg:style^:svg:|!disabled,media,title,type',\n  ':svg:switch^:svg:graphics|',\n  ':svg:symbol^:svg:|',\n  ':svg:tspan^:svg:textPositioning|',\n  ':svg:text^:svg:textPositioning|',\n  ':svg:textPath^:svg:textContent|',\n  ':svg:title^:svg:|',\n  ':svg:use^:svg:graphics|',\n  ':svg:view^:svg:|#zoomAndPan',\n  'data^[HTMLElement]|value',\n  'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n  'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n  'summary^[HTMLElement]|',\n  'time^[HTMLElement]|dateTime',\n  ':svg:cursor^:svg:|',\n];\n\nconst /** @type {?} */ _ATTR_TO_PROP: {[name: string]: string} = {\n  'class': 'className',\n  'for': 'htmlFor',\n  'formaction': 'formAction',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\nexport class DomElementSchemaRegistry extends ElementSchemaRegistry {\nprivate _schema: {[element: string]: {[property: string]: string}} = {};\nconstructor() {\n    super();\n    SCHEMA.forEach(encodedType => {\n      const /** @type {?} */ type: {[property: string]: string} = {};\n      const [strType, strProperties] = encodedType.split('|');\n      const /** @type {?} */ properties = strProperties.split(',');\n      const [typeNames, superName] = strType.split('^');\n      typeNames.split(',').forEach(tag => this._schema[tag.toLowerCase()] = type);\n      const /** @type {?} */ superType = superName && this._schema[superName.toLowerCase()];\n      if (superType) {\n        Object.keys(superType).forEach((prop: string) => { type[prop] = superType[prop]; });\n      }\n      properties.forEach((property: string) => {\n        if (property.length > 0) {\n          switch (property[0]) {\n            case '*':\n              // We don't yet support events.\n              // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n              // will\n              // almost certainly introduce bad XSS vulnerabilities.\n              // type[property.substring(1)] = EVENT;\n              break;\n            case '!':\n              type[property.substring(1)] = BOOLEAN;\n              break;\n            case '#':\n              type[property.substring(1)] = NUMBER;\n              break;\n            case '%':\n              type[property.substring(1)] = OBJECT;\n              break;\n            default:\n              type[property] = STRING;\n          }\n        }\n      });\n    });\n  }\n/**\n * @param {?} tagName\n * @param {?} propName\n * @param {?} schemaMetas\n * @return {?}\n */\nhasProperty(tagName: string, propName: string, schemaMetas: SchemaMetadata[]): boolean {\n    if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n      return true;\n    }\n\n    if (tagName.indexOf('-') > -1) {\n      if (isNgContainer(tagName) || isNgContent(tagName)) {\n        return false;\n      }\n\n      if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n        // Can't tell now as we don't know which properties a custom element will get\n        // once it is instantiated\n        return true;\n      }\n    }\n\n    const /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n    return !!elementProperties[propName];\n  }\n/**\n * @param {?} tagName\n * @param {?} schemaMetas\n * @return {?}\n */\nhasElement(tagName: string, schemaMetas: SchemaMetadata[]): boolean {\n    if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n      return true;\n    }\n\n    if (tagName.indexOf('-') > -1) {\n      if (isNgContainer(tagName) || isNgContent(tagName)) {\n        return true;\n      }\n\n      if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n        // Allow any custom elements\n        return true;\n      }\n    }\n\n    return !!this._schema[tagName.toLowerCase()];\n  }\n/**\n * securityContext returns the security context for the given property on the given DOM tag.\n * \n * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n * possible to bind a value into a changing attribute or tag name.\n * \n * The filtering is white list based. All attributes in the schema above are assumed to have the\n * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n * attack vectors are assigned their appropriate context.\n * @param {?} tagName\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nsecurityContext(tagName: string, propName: string, isAttribute: boolean): SecurityContext {\n    if (isAttribute) {\n      // NB: For security purposes, use the mapped property name, not the attribute name.\n      propName = this.getMappedPropName(propName);\n    }\n\n    // Make sure comparisons are case insensitive, so that case differences between attribute and\n    // property names do not have a security impact.\n    tagName = tagName.toLowerCase();\n    propName = propName.toLowerCase();\n    let /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n    if (ctx) {\n      return ctx;\n    }\n    ctx = SECURITY_SCHEMA['*|' + propName];\n    return ctx ? ctx : SecurityContext.NONE;\n  }\n/**\n * @param {?} propName\n * @return {?}\n */\ngetMappedPropName(propName: string): string { return _ATTR_TO_PROP[propName] || propName; }\n/**\n * @return {?}\n */\ngetDefaultComponentElementName(): string { return 'ng-component'; }\n/**\n * @param {?} name\n * @return {?}\n */\nvalidateProperty(name: string): {error: boolean, msg?: string} {\n    if (name.toLowerCase().startsWith('on')) {\n      const /** @type {?} */ msg = `Binding to event property '${name}' is disallowed for security reasons, ` +\n          `please use (${name.slice(2)})=...` +\n          `\\nIf '${name}' is a directive input, make sure the directive is imported by the` +\n          ` current module.`;\n      return {error: true, msg: msg};\n    } else {\n      return {error: false};\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nvalidateAttribute(name: string): {error: boolean, msg?: string} {\n    if (name.toLowerCase().startsWith('on')) {\n      const /** @type {?} */ msg = `Binding to event attribute '${name}' is disallowed for security reasons, ` +\n          `please use (${name.slice(2)})=...`;\n      return {error: true, msg: msg};\n    } else {\n      return {error: false};\n    }\n  }\n/**\n * @return {?}\n */\nallKnownElementNames(): string[] { return Object.keys(this._schema); }\n/**\n * @param {?} propName\n * @return {?}\n */\nnormalizeAnimationStyleProperty(propName: string): string {\n    return dashCaseToCamelCase(propName);\n  }\n/**\n * @param {?} camelCaseProp\n * @param {?} userProvidedProp\n * @param {?} val\n * @return {?}\n */\nnormalizeAnimationStyleValue(camelCaseProp: string, userProvidedProp: string, val: string|number):\n      {error: string, value: string} {\n    let /** @type {?} */ unit: string = '';\n    const /** @type {?} */ strVal = val.toString().trim();\n    let /** @type {?} */ errorMsg: string = /** @type {?} */(( null));\n\n    if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n      if (typeof val === 'number') {\n        unit = 'px';\n      } else {\n        const /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n          errorMsg = `Please provide a CSS unit value for ${userProvidedProp}:${val}`;\n        }\n      }\n    }\n    return {error: errorMsg, value: strVal + unit};\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction DomElementSchemaRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nDomElementSchemaRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomElementSchemaRegistry.ctorParameters;\n/** @type {?} */\nDomElementSchemaRegistry.prototype._schema;\n}\n\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop: string): boolean {\n  switch (prop) {\n    case 'width':\n    case 'height':\n    case 'minWidth':\n    case 'minHeight':\n    case 'maxWidth':\n    case 'maxHeight':\n    case 'left':\n    case 'top':\n    case 'bottom':\n    case 'right':\n    case 'fontSize':\n    case 'outlineWidth':\n    case 'outlineOffset':\n    case 'paddingTop':\n    case 'paddingLeft':\n    case 'paddingBottom':\n    case 'paddingRight':\n    case 'marginTop':\n    case 'marginLeft':\n    case 'marginBottom':\n    case 'marginRight':\n    case 'borderRadius':\n    case 'borderWidth':\n    case 'borderTopWidth':\n    case 'borderLeftWidth':\n    case 'borderRightWidth':\n    case 'borderBottomWidth':\n    case 'textIndent':\n      return true;\n\n    default:\n      return false;\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport class ShadowCss {\n  strictStyling: boolean = true;\nconstructor() {}\n/**\n * @param {?} cssText\n * @param {?} selector\n * @param {?=} hostSelector\n * @return {?}\n */\nshimCssText(cssText: string, selector: string, hostSelector: string = ''): string {\n    const /** @type {?} */ sourceMappingUrl: string = extractSourceMappingUrl(cssText);\n    cssText = stripComments(cssText);\n    cssText = this._insertDirectives(cssText);\n    return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _insertDirectives(cssText: string): string {\n    cssText = this._insertPolyfillDirectivesInCssText(cssText);\n    return this._insertPolyfillRulesInCssText(cssText);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _insertPolyfillDirectivesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(\n        _cssContentNextSelectorRe, function(...m: string[]) { return m[2] + '{'; });\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _insertPolyfillRulesInCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    return cssText.replace(_cssContentRuleRe, (...m: string[]) => {\n      const /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n      return m[4] + rule;\n    });\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _scopeCssText(cssText: string, scopeSelector: string, hostSelector: string): string {\n    const /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n    // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertShadowDOMSelectors(cssText);\n    if (scopeSelector) {\n      cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n    }\n    cssText = cssText + '\\n' + unscopedRules;\n    return cssText.trim();\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _extractUnscopedRulesFromCssText(cssText: string): string {\n    // Difference with webcomponents.js: does not handle comments\n    let /** @type {?} */ r = '';\n    let /** @type {?} */ m: RegExpExecArray|null;\n    _cssContentUnscopedRuleRe.lastIndex = 0;\n    while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n      const /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n      r += rule + '\\n\\n';\n    }\n    return r;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _convertColonHost(cssText: string): string {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _convertColonHostContext(cssText: string): string {\n    return this._convertColonRule(\n        cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n  }\n/**\n * @param {?} cssText\n * @param {?} regExp\n * @param {?} partReplacer\n * @return {?}\n */\n\nprivate _convertColonRule(cssText: string, regExp: RegExp, partReplacer: Function): string {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function(...m: string[]) {\n      if (m[2]) {\n        const /** @type {?} */ parts = m[2].split(',');\n        const /** @type {?} */ r: string[] = [];\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n          const /** @type {?} */ p = parts[i].trim();\n          if (!p) break;\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\n\nprivate _colonHostContextPartReplacer(host: string, part: string, suffix: string): string {\n    if (part.indexOf(_polyfillHost) > -1) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  }\n/**\n * @param {?} host\n * @param {?} part\n * @param {?} suffix\n * @return {?}\n */\n\nprivate _colonHostPartReplacer(host: string, part: string, suffix: string): string {\n    return host + part.replace(_polyfillHost, '') + suffix;\n  }\n/**\n * @param {?} cssText\n * @return {?}\n */\n\nprivate _convertShadowDOMSelectors(cssText: string): string {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n  }\n/**\n * @param {?} cssText\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _scopeSelectors(cssText: string, scopeSelector: string, hostSelector: string): string {\n    return processRules(cssText, (rule: CssRule) => {\n      let /** @type {?} */ selector = rule.selector;\n      let /** @type {?} */ content = rule.content;\n      if (rule.selector[0] != '@') {\n        selector =\n            this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n      } else if (\n          rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n          rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n      }\n      return new CssRule(selector, content);\n    });\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @param {?} strict\n * @return {?}\n */\n\nprivate _scopeSelector(\n      selector: string, scopeSelector: string, hostSelector: string, strict: boolean): string {\n    return selector.split(',')\n        .map(part => part.trim().split(_shadowDeepSelectors))\n        .map((deepParts) => {\n          const [shallowPart, ...otherParts] = deepParts;\n          const /** @type {?} */ applyScope = (shallowPart: string) => {\n            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n              return strict ?\n                  this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                  this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n            } else {\n              return shallowPart;\n            }\n          };\n          return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n        .join(', ');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @return {?}\n */\n\nprivate _selectorNeedsScoping(selector: string, scopeSelector: string): boolean {\n    const /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n  }\n/**\n * @param {?} scopeSelector\n * @return {?}\n */\n\nprivate _makeScopeMatcher(scopeSelector: string): RegExp {\n    const /** @type {?} */ lre = /\\[/g;\n    const /** @type {?} */ rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _applySelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // Difference from webcomponents.js: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _applySimpleSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n      const /** @type {?} */ replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n      return selector\n          .replace(\n              _polyfillHostNoCombinatorRe,\n              (hnc, selector) => {\n                return selector.replace(\n                    /([^:]*)(:*)(.*)/,\n                    (_: string, before: string, colon: string, after: string) => {\n                      return before + replaceBy + colon + after;\n                    });\n              })\n          .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n\n    return scopeSelector + ' ' + selector;\n  }\n/**\n * @param {?} selector\n * @param {?} scopeSelector\n * @param {?} hostSelector\n * @return {?}\n */\n\nprivate _applyStrictSelectorScope(selector: string, scopeSelector: string, hostSelector: string):\n      string {\n    const /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_: string, ...parts: string[]) => parts[0]);\n\n    const /** @type {?} */ attrName = '[' + scopeSelector + ']';\n\n    const /** @type {?} */ _scopeSelectorPart = (p: string) => {\n      let /** @type {?} */ scopedP = p.trim();\n\n      if (!scopedP) {\n        return '';\n      }\n\n      if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n        scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n      } else {\n        // remove :host since it should be unnecessary\n        const /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n        if (t.length > 0) {\n          const /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n          if (matches) {\n            scopedP = matches[1] + attrName + matches[2] + matches[3];\n          }\n        }\n      }\n\n      return scopedP;\n    };\n\n    const /** @type {?} */ safeContent = new SafeSelector(selector);\n    selector = safeContent.content();\n\n    let /** @type {?} */ scopedSelector = '';\n    let /** @type {?} */ startIndex = 0;\n    let /** @type {?} */ res: RegExpExecArray|null;\n    const /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n    const /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n\n    while ((res = sep.exec(selector)) !== null) {\n      const /** @type {?} */ separator = res[1];\n      const /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n      // if a selector appears before :host-context it should not be shimmed as it\n      // matches on ancestor elements and not on elements in the host's shadow\n      const /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n      scopedSelector += `${scopedPart} ${separator} `;\n      startIndex = sep.lastIndex;\n    }\n\n    scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n\n    // replace the placeholders with their original values\n    return safeContent.restore(scopedSelector);\n  }\n/**\n * @param {?} selector\n * @return {?}\n */\n\nprivate _insertPolyfillHostInCssText(selector: string): string {\n    return selector.replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost);\n  }\n}\n\nfunction ShadowCss_tsickle_Closure_declarations() {\n/** @type {?} */\nShadowCss.prototype.strictStyling;\n}\n\nclass SafeSelector {\nprivate placeholders: string[] = [];\nprivate index = 0;\nprivate _content: string;\n/**\n * @param {?} selector\n */\nconstructor(selector: string) {\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n      const /** @type {?} */ replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(keep);\n      this.index++;\n      return replaceBy;\n    });\n\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n      const /** @type {?} */ replaceBy = `__ph-${this.index}__`;\n      this.placeholders.push(exp);\n      this.index++;\n      return pseudo + replaceBy;\n    });\n  };\n/**\n * @param {?} content\n * @return {?}\n */\nrestore(content: string): string {\n    return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n  }\n/**\n * @return {?}\n */\ncontent(): string { return this._content; }\n}\n\nfunction SafeSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeSelector.prototype.placeholders;\n/** @type {?} */\nSafeSelector.prototype.index;\n/** @type {?} */\nSafeSelector.prototype._content;\n}\n\n\nconst /** @type {?} */ _cssContentNextSelectorRe =\n    /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nconst /** @type {?} */ _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _cssContentUnscopedRuleRe =\n    /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst /** @type {?} */ _polyfillHostContext = '-shadowcsscontext';\nconst /** @type {?} */ _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst /** @type {?} */ _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst /** @type {?} */ _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst /** @type {?} */ _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst /** @type {?} */ _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst /** @type {?} */ _shadowDOMSelectorsRe = [\n  /::shadow/g,\n  /::content/g,\n  // Deprecated selectors\n  /\\/shadow-deep\\//g,\n  /\\/shadow\\//g,\n];\n\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nconst /** @type {?} */ _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nconst /** @type {?} */ _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst /** @type {?} */ _polyfillHostRe = /-shadowcsshost/gim;\nconst /** @type {?} */ _colonHostRe = /:host/gim;\nconst /** @type {?} */ _colonHostContextRe = /:host-context/gim;\n\nconst /** @type {?} */ _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input: string): string {\n  return input.replace(_commentRe, '');\n}\n\n// all comments except inline source mapping\nconst /** @type {?} */ _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input: string): string {\n  const /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n  return matcher ? matcher[0] : '';\n}\n\nconst /** @type {?} */ _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst /** @type {?} */ _curlyRe = /([{}])/g;\nconst /** @type {?} */ OPEN_CURLY = '{';\nconst /** @type {?} */ CLOSE_CURLY = '}';\nconst /** @type {?} */ BLOCK_PLACEHOLDER = '%BLOCK%';\nexport class CssRule {\n/**\n * @param {?} selector\n * @param {?} content\n */\nconstructor(public selector: string,\npublic content: string) {}\n}\n\nfunction CssRule_tsickle_Closure_declarations() {\n/** @type {?} */\nCssRule.prototype.selector;\n/** @type {?} */\nCssRule.prototype.content;\n}\n\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nexport function processRules(input: string, ruleCallback: (rule: CssRule) => CssRule): string {\n  const /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n  let /** @type {?} */ nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function(...m: string[]) {\n    const /** @type {?} */ selector = m[2];\n    let /** @type {?} */ content = '';\n    let /** @type {?} */ suffix = m[4];\n    let /** @type {?} */ contentPrefix = '';\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n    const /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n    return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n  });\n}\nclass StringWithEscapedBlocks {\n/**\n * @param {?} escapedString\n * @param {?} blocks\n */\nconstructor(public escapedString: string,\npublic blocks: string[]) {}\n}\n\nfunction StringWithEscapedBlocks_tsickle_Closure_declarations() {\n/** @type {?} */\nStringWithEscapedBlocks.prototype.escapedString;\n/** @type {?} */\nStringWithEscapedBlocks.prototype.blocks;\n}\n\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input: string): StringWithEscapedBlocks {\n  const /** @type {?} */ inputParts = input.split(_curlyRe);\n  const /** @type {?} */ resultParts: string[] = [];\n  const /** @type {?} */ escapedBlocks: string[] = [];\n  let /** @type {?} */ bracketCount = 0;\n  let /** @type {?} */ currentBlockParts: string[] = [];\n  for (let /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    const /** @type {?} */ part = inputParts[partIndex];\n    if (part == CLOSE_CURLY) {\n      bracketCount--;\n    }\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n      resultParts.push(part);\n    }\n    if (part == OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileStylesheetMetadata, identifierModuleUrl, identifierName} from './compile_metadata';\nimport {CompilerInjectable} from './injectable';\nimport * as o from './output/output_ast';\nimport {ShadowCss} from './shadow_css';\nimport {UrlResolver} from './url_resolver';\nimport {OutputContext} from './util';\n\nconst /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\nconst /** @type {?} */ HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst /** @type {?} */ CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nexport class StylesCompileDependency {\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} setValue\n */\nconstructor(\npublic name: string,\npublic moduleUrl: string,\npublic setValue: (value: any) => void) {}\n}\n\nfunction StylesCompileDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nStylesCompileDependency.prototype.name;\n/** @type {?} */\nStylesCompileDependency.prototype.moduleUrl;\n/** @type {?} */\nStylesCompileDependency.prototype.setValue;\n}\n\nexport class CompiledStylesheet {\n/**\n * @param {?} outputCtx\n * @param {?} stylesVar\n * @param {?} dependencies\n * @param {?} isShimmed\n * @param {?} meta\n */\nconstructor(\npublic outputCtx: OutputContext,\npublic stylesVar: string,\npublic dependencies: StylesCompileDependency[],\npublic isShimmed: boolean,\npublic meta: CompileStylesheetMetadata) {}\n}\n\nfunction CompiledStylesheet_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiledStylesheet.prototype.outputCtx;\n/** @type {?} */\nCompiledStylesheet.prototype.stylesVar;\n/** @type {?} */\nCompiledStylesheet.prototype.dependencies;\n/** @type {?} */\nCompiledStylesheet.prototype.isShimmed;\n/** @type {?} */\nCompiledStylesheet.prototype.meta;\n}\n\nexport class StyleCompiler {\nprivate _shadowCss: ShadowCss = new ShadowCss();\n/**\n * @param {?} _urlResolver\n */\nconstructor(private _urlResolver: UrlResolver) {}\n/**\n * @param {?} outputCtx\n * @param {?} comp\n * @return {?}\n */\ncompileComponent(outputCtx: OutputContext, comp: CompileDirectiveMetadata): CompiledStylesheet {\n    const /** @type {?} */ template = /** @type {?} */(( comp.template));\n    return this._compileStyles(\n        outputCtx, comp, new CompileStylesheetMetadata({\n          styles: template.styles,\n          styleUrls: template.styleUrls,\n          moduleUrl: identifierModuleUrl(comp.type)\n        }),\n        true);\n  }\n/**\n * @param {?} outputCtx\n * @param {?} comp\n * @param {?} stylesheet\n * @return {?}\n */\ncompileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata): CompiledStylesheet {\n    return this._compileStyles(outputCtx, comp, stylesheet, false);\n  }\n/**\n * @param {?} comp\n * @return {?}\n */\nneedsStyleShim(comp: CompileDirectiveMetadata): boolean {\n    return /** @type {?} */(( comp.template)).encapsulation === ViewEncapsulation.Emulated;\n  }\n/**\n * @param {?} outputCtx\n * @param {?} comp\n * @param {?} stylesheet\n * @param {?} isComponentStylesheet\n * @return {?}\n */\n\nprivate _compileStyles(\n      outputCtx: OutputContext, comp: CompileDirectiveMetadata,\n      stylesheet: CompileStylesheetMetadata, isComponentStylesheet: boolean): CompiledStylesheet {\n    const /** @type {?} */ shim = this.needsStyleShim(comp);\n    const /** @type {?} */ styleExpressions: o.Expression[] =\n        stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n    const /** @type {?} */ dependencies: StylesCompileDependency[] = [];\n    stylesheet.styleUrls.forEach((styleUrl) => {\n      const /** @type {?} */ exprIndex = styleExpressions.length;\n      // Note: This placeholder will be filled later.\n      styleExpressions.push( /** @type {?} */((null)));\n      dependencies.push(new StylesCompileDependency(\n          getStylesVarName(null), styleUrl,\n          (value) => styleExpressions[exprIndex] = outputCtx.importExpr(value)));\n    });\n    // styles variable contains plain strings and arrays of other styles arrays (recursive),\n    // so we set its type to dynamic.\n    const /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n    const /** @type {?} */ stmt = o.variable(stylesVar)\n                     .set(o.literalArr(\n                         styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n                     .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n                       o.StmtModifier.Final, o.StmtModifier.Exported\n                     ]);\n    outputCtx.statements.push(stmt);\n    return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n  }\n/**\n * @param {?} style\n * @param {?} shim\n * @return {?}\n */\n\nprivate _shimIfNeeded(style: string, shim: boolean): string {\n    return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: UrlResolver, },\n];\n}\n\nfunction StyleCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStyleCompiler.ctorParameters;\n/** @type {?} */\nStyleCompiler.prototype._shadowCss;\n/** @type {?} */\nStyleCompiler.prototype._urlResolver;\n}\n\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component: CompileDirectiveMetadata | null): string {\n  let /** @type {?} */ result = `styles`;\n  if (component) {\n    result += `_${identifierName(component.type)}`;\n  }\n  return result;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport * as cdAst from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport * as o from '../output/output_ast';\nexport class EventHandlerVars { static event = o.variable('$event'); }\n\nfunction EventHandlerVars_tsickle_Closure_declarations() {\n/** @type {?} */\nEventHandlerVars.event;\n}\n\n/**\n * @record\n */\nexport function LocalResolver() {}\n\n\nfunction LocalResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalResolver.prototype.getLocal;\n}\n\n\nexport interface LocalResolver { getLocal(name: string): o.Expression|null; }\nexport class ConvertActionBindingResult {\n/**\n * @param {?} stmts\n * @param {?} allowDefault\n */\nconstructor(public stmts: o.Statement[],\npublic allowDefault: o.ReadVarExpr) {}\n}\n\nfunction ConvertActionBindingResult_tsickle_Closure_declarations() {\n/** @type {?} */\nConvertActionBindingResult.prototype.stmts;\n/** @type {?} */\nConvertActionBindingResult.prototype.allowDefault;\n}\n\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nexport function convertActionBinding(\n    localResolver: LocalResolver | null, implicitReceiver: o.Expression, action: cdAst.AST,\n    bindingId: string): ConvertActionBindingResult {\n  if (!localResolver) {\n    localResolver = new DefaultLocalResolver();\n  }\n  const /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins(\n      {\n        createLiteralArrayConverter: (argCount: number) => {\n          // Note: no caching for literal arrays in actions.\n          return (args: o.Expression[]) => o.literalArr(args);\n        },\n        createLiteralMapConverter: (keys: {key: string, quoted: boolean}[]) => {\n          // Note: no caching for literal maps in actions.\n          return (values: o.Expression[]) => {\n            const /** @type {?} */ entries = keys.map((k, i) => ({\n                                       key: k.key,\n                                       value: values[i],\n                                       quoted: k.quoted,\n                                     }));\n            return o.literalMap(entries);\n          };\n        },\n        createPipeConverter: (name: string) => {\n          throw new Error(`Illegal State: Actions are not allowed to contain pipes. Pipe: ${name}`);\n        }\n      },\n      action);\n\n  const /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n  const /** @type {?} */ actionStmts: o.Statement[] = [];\n  flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n  prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n  const /** @type {?} */ lastIndex = actionStmts.length - 1;\n  let /** @type {?} */ preventDefaultVar: o.ReadVarExpr = /** @type {?} */(( null));\n  if (lastIndex >= 0) {\n    const /** @type {?} */ lastStatement = actionStmts[lastIndex];\n    const /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n    if (returnExpr) {\n      // Note: We need to cast the result of the method call to dynamic,\n      // as it might be a void method!\n      preventDefaultVar = createPreventDefaultVar(bindingId);\n      actionStmts[lastIndex] =\n          preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n              .toDeclStmt(null, [o.StmtModifier.Final]);\n    }\n  }\n  return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\nexport function BuiltinConverter() {}\n\n\nfunction BuiltinConverter_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(args: o.Expression[]): o.Expression;\n*/\n}\n\n\nexport interface BuiltinConverter { (args: o.Expression[]): o.Expression; }\n/**\n * @record\n */\nexport function BuiltinConverterFactory() {}\n\n\nfunction BuiltinConverterFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nBuiltinConverterFactory.prototype.createLiteralArrayConverter;\n/** @type {?} */\nBuiltinConverterFactory.prototype.createLiteralMapConverter;\n/** @type {?} */\nBuiltinConverterFactory.prototype.createPipeConverter;\n}\n\n\nexport interface BuiltinConverterFactory {\n  createLiteralArrayConverter(argCount: number): BuiltinConverter;\n  createLiteralMapConverter(keys: {key: string, quoted: boolean}[]): BuiltinConverter;\n  createPipeConverter(name: string, argCount: number): BuiltinConverter;\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nexport function convertPropertyBindingBuiltins(\n    converterFactory: BuiltinConverterFactory, ast: cdAst.AST): cdAst.AST {\n  return convertBuiltins(converterFactory, ast);\n}\nexport class ConvertPropertyBindingResult {\n/**\n * @param {?} stmts\n * @param {?} currValExpr\n */\nconstructor(public stmts: o.Statement[],\npublic currValExpr: o.Expression) {}\n}\n\nfunction ConvertPropertyBindingResult_tsickle_Closure_declarations() {\n/** @type {?} */\nConvertPropertyBindingResult.prototype.stmts;\n/** @type {?} */\nConvertPropertyBindingResult.prototype.currValExpr;\n}\n\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nexport function convertPropertyBinding(\n    localResolver: LocalResolver | null, implicitReceiver: o.Expression,\n    expressionWithoutBuiltins: cdAst.AST, bindingId: string): ConvertPropertyBindingResult {\n  if (!localResolver) {\n    localResolver = new DefaultLocalResolver();\n  }\n  const /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n  const /** @type {?} */ stmts: o.Statement[] = [];\n  const /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n  const /** @type {?} */ outputExpr: o.Expression = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n\n  if (visitor.temporaryCount) {\n    for (let /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n      stmts.push(temporaryDeclaration(bindingId, i));\n    }\n  }\n\n  stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [o.StmtModifier.Final]));\n  return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory: BuiltinConverterFactory, ast: cdAst.AST): cdAst.AST {\n  const /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n  return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId: string, temporaryNumber: number): string {\n  return `tmp_${bindingId}_${temporaryNumber}`;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nexport function temporaryDeclaration(bindingId: string, temporaryNumber: number): o.Statement {\n  return new o.DeclareVarStmt(temporaryName(bindingId, temporaryNumber), o.NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(\n    temporaryCount: number, bindingId: string, statements: o.Statement[]) {\n  for (let /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n    statements.unshift(temporaryDeclaration(bindingId, i));\n  }\n}\ntype _Mode = number;\nlet _Mode: any = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode: _Mode, ast: cdAst.AST) {\n  if (mode !== _Mode.Statement) {\n    throw new Error(`Expected a statement, but saw ${ast}`);\n  }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode: _Mode, ast: cdAst.AST) {\n  if (mode !== _Mode.Expression) {\n    throw new Error(`Expected an expression, but saw ${ast}`);\n  }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode: _Mode, expr: o.Expression): o.Expression|o.Statement {\n  if (mode === _Mode.Statement) {\n    return expr.toStmt();\n  } else {\n    return expr;\n  }\n}\nclass _BuiltinAstConverter extends cdAst.AstTransformer {\n/**\n * @param {?} _converterFactory\n */\nconstructor(private _converterFactory: BuiltinConverterFactory) { super(); }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitPipe(ast: cdAst.BindingPipe, context: any): any {\n    const /** @type {?} */ args = [ast.exp, ...ast.args].map(ast => ast.visit(this, context));\n    return new BuiltinFunctionCall(\n        ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralArray(ast: cdAst.LiteralArray, context: any): any {\n    const /** @type {?} */ args = ast.expressions.map(ast => ast.visit(this, context));\n    return new BuiltinFunctionCall(\n        ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitLiteralMap(ast: cdAst.LiteralMap, context: any): any {\n    const /** @type {?} */ args = ast.values.map(ast => ast.visit(this, context));\n\n    return new BuiltinFunctionCall(\n        ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n  }\n}\n\nfunction _BuiltinAstConverter_tsickle_Closure_declarations() {\n/** @type {?} */\n_BuiltinAstConverter.prototype._converterFactory;\n}\n\nclass _AstToIrVisitor implements cdAst.AstVisitor {\nprivate _nodeMap = new Map<cdAst.AST, cdAst.AST>();\nprivate _resultMap = new Map<cdAst.AST, o.Expression>();\nprivate _currentTemporary: number = 0;\npublic temporaryCount: number = 0;\n/**\n * @param {?} _localResolver\n * @param {?} _implicitReceiver\n * @param {?} bindingId\n */\nconstructor(\nprivate _localResolver: LocalResolver,\nprivate _implicitReceiver: o.Expression,\nprivate bindingId: string) {}\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitBinary(ast: cdAst.Binary, mode: _Mode): any {\n    let /** @type {?} */ op: o.BinaryOperator;\n    switch (ast.operation) {\n      case '+':\n        op = o.BinaryOperator.Plus;\n        break;\n      case '-':\n        op = o.BinaryOperator.Minus;\n        break;\n      case '*':\n        op = o.BinaryOperator.Multiply;\n        break;\n      case '/':\n        op = o.BinaryOperator.Divide;\n        break;\n      case '%':\n        op = o.BinaryOperator.Modulo;\n        break;\n      case '&&':\n        op = o.BinaryOperator.And;\n        break;\n      case '||':\n        op = o.BinaryOperator.Or;\n        break;\n      case '==':\n        op = o.BinaryOperator.Equals;\n        break;\n      case '!=':\n        op = o.BinaryOperator.NotEquals;\n        break;\n      case '===':\n        op = o.BinaryOperator.Identical;\n        break;\n      case '!==':\n        op = o.BinaryOperator.NotIdentical;\n        break;\n      case '<':\n        op = o.BinaryOperator.Lower;\n        break;\n      case '>':\n        op = o.BinaryOperator.Bigger;\n        break;\n      case '<=':\n        op = o.BinaryOperator.LowerEquals;\n        break;\n      case '>=':\n        op = o.BinaryOperator.BiggerEquals;\n        break;\n      default:\n        throw new Error(`Unsupported operation ${ast.operation}`);\n    }\n\n    return convertToStatementIfNeeded(\n        mode,\n        new o.BinaryOperatorExpr(\n            op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitChain(ast: cdAst.Chain, mode: _Mode): any {\n    ensureStatementMode(mode, ast);\n    return this.visitAll(ast.expressions, mode);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitConditional(ast: cdAst.Conditional, mode: _Mode): any {\n    const /** @type {?} */ value: o.Expression = this._visit(ast.condition, _Mode.Expression);\n    return convertToStatementIfNeeded(\n        mode, value.conditional(\n                  this._visit(ast.trueExp, _Mode.Expression),\n                  this._visit(ast.falseExp, _Mode.Expression)));\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitPipe(ast: cdAst.BindingPipe, mode: _Mode): any {\n    throw new Error(\n        `Illegal state: Pipes should have been converted into functions. Pipe: ${ast.name}`);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitFunctionCall(ast: cdAst.FunctionCall, mode: _Mode): any {\n    const /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n    let /** @type {?} */ fnResult: o.Expression;\n    if (ast instanceof BuiltinFunctionCall) {\n      fnResult = ast.converter(convertedArgs);\n    } else {\n      fnResult = this._visit( /** @type {?} */((ast.target)), _Mode.Expression).callFn(convertedArgs);\n    }\n    return convertToStatementIfNeeded(mode, fnResult);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitImplicitReceiver(ast: cdAst.ImplicitReceiver, mode: _Mode): any {\n    ensureExpressionMode(mode, ast);\n    return this._implicitReceiver;\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitInterpolation(ast: cdAst.Interpolation, mode: _Mode): any {\n    ensureExpressionMode(mode, ast);\n    const /** @type {?} */ args = [o.literal(ast.expressions.length)];\n    for (let /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n      args.push(o.literal(ast.strings[i]));\n      args.push(this._visit(ast.expressions[i], _Mode.Expression));\n    }\n    args.push(o.literal(ast.strings[ast.strings.length - 1]));\n\n    return ast.expressions.length <= 9 ?\n        o.importExpr(Identifiers.inlineInterpolate).callFn(args) :\n        o.importExpr(Identifiers.interpolate).callFn([args[0], o.literalArr(args.slice(1))]);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitKeyedRead(ast: cdAst.KeyedRead, mode: _Mode): any {\n    const /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n    if (leftMostSafe) {\n      return this.convertSafeAccess(ast, leftMostSafe, mode);\n    } else {\n      return convertToStatementIfNeeded(\n          mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitKeyedWrite(ast: cdAst.KeyedWrite, mode: _Mode): any {\n    const /** @type {?} */ obj: o.Expression = this._visit(ast.obj, _Mode.Expression);\n    const /** @type {?} */ key: o.Expression = this._visit(ast.key, _Mode.Expression);\n    const /** @type {?} */ value: o.Expression = this._visit(ast.value, _Mode.Expression);\n    return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitLiteralArray(ast: cdAst.LiteralArray, mode: _Mode): any {\n    throw new Error(`Illegal State: literal arrays should have been converted into functions`);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitLiteralMap(ast: cdAst.LiteralMap, mode: _Mode): any {\n    throw new Error(`Illegal State: literal maps should have been converted into functions`);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitLiteralPrimitive(ast: cdAst.LiteralPrimitive, mode: _Mode): any {\n    return convertToStatementIfNeeded(mode, o.literal(ast.value));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\n\nprivate _getLocal(name: string): o.Expression|null { return this._localResolver.getLocal(name); }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitMethodCall(ast: cdAst.MethodCall, mode: _Mode): any {\n    const /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n    if (leftMostSafe) {\n      return this.convertSafeAccess(ast, leftMostSafe, mode);\n    } else {\n      const /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n      let /** @type {?} */ result: any = null;\n      const /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n      if (receiver === this._implicitReceiver) {\n        const /** @type {?} */ varExpr = this._getLocal(ast.name);\n        if (varExpr) {\n          result = varExpr.callFn(args);\n        }\n      }\n      if (result == null) {\n        result = receiver.callMethod(ast.name, args);\n      }\n      return convertToStatementIfNeeded(mode, result);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitPrefixNot(ast: cdAst.PrefixNot, mode: _Mode): any {\n    return convertToStatementIfNeeded(mode, o.not(this._visit(ast.expression, _Mode.Expression)));\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitNonNullAssert(ast: cdAst.NonNullAssert, mode: _Mode): any {\n    return convertToStatementIfNeeded(\n        mode, o.assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitPropertyRead(ast: cdAst.PropertyRead, mode: _Mode): any {\n    const /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n    if (leftMostSafe) {\n      return this.convertSafeAccess(ast, leftMostSafe, mode);\n    } else {\n      let /** @type {?} */ result: any = null;\n      const /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n      if (receiver === this._implicitReceiver) {\n        result = this._getLocal(ast.name);\n      }\n      if (result == null) {\n        result = receiver.prop(ast.name);\n      }\n      return convertToStatementIfNeeded(mode, result);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitPropertyWrite(ast: cdAst.PropertyWrite, mode: _Mode): any {\n    const /** @type {?} */ receiver: o.Expression = this._visit(ast.receiver, _Mode.Expression);\n    if (receiver === this._implicitReceiver) {\n      const /** @type {?} */ varExpr = this._getLocal(ast.name);\n      if (varExpr) {\n        throw new Error('Cannot assign to a reference or variable!');\n      }\n    }\n    return convertToStatementIfNeeded(\n        mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitSafePropertyRead(ast: cdAst.SafePropertyRead, mode: _Mode): any {\n    return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitSafeMethodCall(ast: cdAst.SafeMethodCall, mode: _Mode): any {\n    return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n  }\n/**\n * @param {?} asts\n * @param {?} mode\n * @return {?}\n */\nvisitAll(asts: cdAst.AST[], mode: _Mode): any { return asts.map(ast => this._visit(ast, mode)); }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\nvisitQuote(ast: cdAst.Quote, mode: _Mode): any {\n    throw new Error(`Quotes are not supported for evaluation!\n        Statement: ${ast.uninterpretedExpression} located at ${ast.location}`);\n  }\n/**\n * @param {?} ast\n * @param {?} mode\n * @return {?}\n */\n\nprivate _visit(ast: cdAst.AST, mode: _Mode): any {\n    const /** @type {?} */ result = this._resultMap.get(ast);\n    if (result) return result;\n    return (this._nodeMap.get(ast) || ast).visit(this, mode);\n  }\n/**\n * @param {?} ast\n * @param {?} leftMostSafe\n * @param {?} mode\n * @return {?}\n */\n\nprivate convertSafeAccess(\n      ast: cdAst.AST, leftMostSafe: cdAst.SafeMethodCall|cdAst.SafePropertyRead, mode: _Mode): any {\n    // If the expression contains a safe access node on the left it needs to be converted to\n    // an expression that guards the access to the member by checking the receiver for blank. As\n    // execution proceeds from left to right, the left most part of the expression must be guarded\n    // first but, because member access is left associative, the right side of the expression is at\n    // the top of the AST. The desired result requires lifting a copy of the the left part of the\n    // expression up to test it for blank before generating the unguarded version.\n\n    // Consider, for example the following expression: a?.b.c?.d.e\n\n    // This results in the ast:\n    //         .\n    //        / \\\n    //       ?.   e\n    //      /  \\\n    //     .    d\n    //    / \\\n    //   ?.  c\n    //  /  \\\n    // a    b\n\n    // The following tree should be generated:\n    //\n    //        /---- ? ----\\\n    //       /      |      \\\n    //     a   /--- ? ---\\  null\n    //        /     |     \\\n    //       .      .     null\n    //      / \\    / \\\n    //     .  c   .   e\n    //    / \\    / \\\n    //   a   b  ,   d\n    //         / \\\n    //        .   c\n    //       / \\\n    //      a   b\n    //\n    // Notice that the first guard condition is the left hand of the left most safe access node\n    // which comes in as leftMostSafe to this routine.\n\n    let /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n    let /** @type {?} */ temporary: o.ReadVarExpr = /** @type {?} */(( undefined));\n    if (this.needsTemporary(leftMostSafe.receiver)) {\n      // If the expression has method calls or pipes then we need to save the result into a\n      // temporary variable to avoid calling stateful or impure code more than once.\n      temporary = this.allocateTemporary();\n\n      // Preserve the result in the temporary variable\n      guardedExpression = temporary.set(guardedExpression);\n\n      // Ensure all further references to the guarded expression refer to the temporary instead.\n      this._resultMap.set(leftMostSafe.receiver, temporary);\n    }\n    const /** @type {?} */ condition = guardedExpression.isBlank();\n\n    // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n    // leftMostNode with its unguarded version in the call to `this.visit()`.\n    if (leftMostSafe instanceof cdAst.SafeMethodCall) {\n      this._nodeMap.set(\n          leftMostSafe,\n          new cdAst.MethodCall(\n              leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n    } else {\n      this._nodeMap.set(\n          leftMostSafe,\n          new cdAst.PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n    }\n\n    // Recursively convert the node now without the guarded member access.\n    const /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n\n    // Remove the mapping. This is not strictly required as the converter only traverses each node\n    // once but is safer if the conversion is changed to traverse the nodes more than once.\n    this._nodeMap.delete(leftMostSafe);\n\n    // If we allocated a temporary, release it.\n    if (temporary) {\n      this.releaseTemporary(temporary);\n    }\n\n    // Produce the conditional\n    return convertToStatementIfNeeded(mode, condition.conditional(o.literal(null), access));\n  }\n/**\n * @param {?} ast\n * @return {?}\n */\n\nprivate leftMostSafeNode(ast: cdAst.AST): cdAst.SafePropertyRead|cdAst.SafeMethodCall {\n    const /** @type {?} */ visit = (visitor: cdAst.AstVisitor, ast: cdAst.AST): any => {\n      return (this._nodeMap.get(ast) || ast).visit(visitor);\n    };\n    return ast.visit({\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitBinary(ast: cdAst.Binary) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitChain(ast: cdAst.Chain) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitConditional(ast: cdAst.Conditional) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitFunctionCall(ast: cdAst.FunctionCall) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitImplicitReceiver(ast: cdAst.ImplicitReceiver) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitInterpolation(ast: cdAst.Interpolation) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitKeyedRead(ast: cdAst.KeyedRead) { return visit(this, ast.obj); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitKeyedWrite(ast: cdAst.KeyedWrite) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralArray(ast: cdAst.LiteralArray) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralMap(ast: cdAst.LiteralMap) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralPrimitive(ast: cdAst.LiteralPrimitive) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitMethodCall(ast: cdAst.MethodCall) { return visit(this, ast.receiver); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPipe(ast: cdAst.BindingPipe) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPrefixNot(ast: cdAst.PrefixNot) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitNonNullAssert(ast: cdAst.NonNullAssert) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPropertyRead(ast: cdAst.PropertyRead) { return visit(this, ast.receiver); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPropertyWrite(ast: cdAst.PropertyWrite) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitQuote(ast: cdAst.Quote) { return null; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitSafeMethodCall(ast: cdAst.SafeMethodCall) { return visit(this, ast.receiver) || ast; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitSafePropertyRead(ast: cdAst.SafePropertyRead) {\n        return visit(this, ast.receiver) || ast;\n      }\n    });\n  }\n/**\n * @param {?} ast\n * @return {?}\n */\n\nprivate needsTemporary(ast: cdAst.AST): boolean {\n    const /** @type {?} */ visit = (visitor: cdAst.AstVisitor, ast: cdAst.AST): boolean => {\n      return ast && (this._nodeMap.get(ast) || ast).visit(visitor);\n    };\n    const /** @type {?} */ visitSome = (visitor: cdAst.AstVisitor, ast: cdAst.AST[]): boolean => {\n      return ast.some(ast => visit(visitor, ast));\n    };\n    return ast.visit({\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitBinary(ast: cdAst.Binary):\n          boolean{return visit(this, ast.left) || visit(this, ast.right);},\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitChain(ast: cdAst.Chain) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitConditional(ast: cdAst.Conditional):\n          boolean{return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                      visit(this, ast.falseExp);},\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitFunctionCall(ast: cdAst.FunctionCall) { return true; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitImplicitReceiver(ast: cdAst.ImplicitReceiver) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitInterpolation(ast: cdAst.Interpolation) { return visitSome(this, ast.expressions); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitKeyedRead(ast: cdAst.KeyedRead) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitKeyedWrite(ast: cdAst.KeyedWrite) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralArray(ast: cdAst.LiteralArray) { return true; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralMap(ast: cdAst.LiteralMap) { return true; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitLiteralPrimitive(ast: cdAst.LiteralPrimitive) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitMethodCall(ast: cdAst.MethodCall) { return true; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPipe(ast: cdAst.BindingPipe) { return true; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPrefixNot(ast: cdAst.PrefixNot) { return visit(this, ast.expression); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitNonNullAssert(ast: cdAst.PrefixNot) { return visit(this, ast.expression); },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPropertyRead(ast: cdAst.PropertyRead) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitPropertyWrite(ast: cdAst.PropertyWrite) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitQuote(ast: cdAst.Quote) { return false; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitSafeMethodCall(ast: cdAst.SafeMethodCall) { return true; },\n/**\n * @param {?} ast\n * @return {?}\n */\nvisitSafePropertyRead(ast: cdAst.SafePropertyRead) { return false; }\n    });\n  }\n/**\n * @return {?}\n */\n\nprivate allocateTemporary(): o.ReadVarExpr {\n    const /** @type {?} */ tempNumber = this._currentTemporary++;\n    this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n    return new o.ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n  }\n/**\n * @param {?} temporary\n * @return {?}\n */\n\nprivate releaseTemporary(temporary: o.ReadVarExpr) {\n    this._currentTemporary--;\n    if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n      throw new Error(`Temporary ${temporary.name} released out of order`);\n    }\n  }\n}\n\nfunction _AstToIrVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\n_AstToIrVisitor.prototype._nodeMap;\n/** @type {?} */\n_AstToIrVisitor.prototype._resultMap;\n/** @type {?} */\n_AstToIrVisitor.prototype._currentTemporary;\n/** @type {?} */\n_AstToIrVisitor.prototype.temporaryCount;\n/** @type {?} */\n_AstToIrVisitor.prototype._localResolver;\n/** @type {?} */\n_AstToIrVisitor.prototype._implicitReceiver;\n/** @type {?} */\n_AstToIrVisitor.prototype.bindingId;\n}\n\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg: any, output: o.Statement[]) {\n  if (Array.isArray(arg)) {\n    ( /** @type {?} */((<any[]>arg))).forEach((entry) => flattenStatements(entry, output));\n  } else {\n    output.push(arg);\n  }\n}\nclass DefaultLocalResolver implements LocalResolver {\n/**\n * @param {?} name\n * @return {?}\n */\ngetLocal(name: string): o.Expression|null {\n    if (name === EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    return null;\n  }\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId: string): o.ReadVarExpr {\n  return o.variable(`currVal_${bindingId}`);  // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId: string): o.ReadVarExpr {\n  return o.variable(`pd_${bindingId}`);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt: o.Statement): o.Expression|null {\n  if (stmt instanceof o.ExpressionStatement) {\n    return stmt.expr;\n  } else if (stmt instanceof o.ReturnStatement) {\n    return stmt.value;\n  }\n  return null;\n}\nclass BuiltinFunctionCall extends cdAst.FunctionCall {\n/**\n * @param {?} span\n * @param {?} args\n * @param {?} converter\n */\nconstructor(span: cdAst.ParseSpan,\npublic args: cdAst.AST[],\npublic converter: BuiltinConverter) {\n    super(span, null, args);\n  }\n}\n\nfunction BuiltinFunctionCall_tsickle_Closure_declarations() {\n/** @type {?} */\nBuiltinFunctionCall.prototype.args;\n/** @type {?} */\nBuiltinFunctionCall.prototype.converter;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, ɵArgumentType as ArgumentType, ɵBindingFlags as BindingFlags, ɵDepFlags as DepFlags, ɵNodeFlags as NodeFlags, ɵQueryBindingType as QueryBindingType, ɵQueryValueType as QueryValueType, ɵViewFlags as ViewFlags, ɵelementEventFullName as elementEventFullName} from '@angular/core';\n\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompilePipeSummary, CompileProviderMetadata, CompileTokenMetadata, CompileTypeMetadata, rendererTypeName, tokenReference, viewClassName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {BuiltinConverter, EventHandlerVars, LocalResolver, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins} from '../compiler_util/expression_converter';\nimport {CompilerConfig} from '../config';\nimport {AST, ASTWithSource, Interpolation} from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport {CompilerInjectable} from '../injectable';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport {isNgContainer} from '../ml_parser/tags';\nimport * as o from '../output/output_ast';\nimport {convertValueToOutputAst} from '../output/value_util';\nimport {ParseSourceSpan} from '../parse_util';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, ProviderAstType, QueryMatch, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {OutputContext} from '../util';\n\nimport {componentFactoryResolverProviderDef, depDef, lifecycleHookToNodeFlag, providerDef} from './provider_compiler';\n\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ STYLE_ATTR = 'style';\nconst /** @type {?} */ IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nconst /** @type {?} */ NG_CONTAINER_TAG = 'ng-container';\nexport class ViewCompileResult {\n/**\n * @param {?} viewClassVar\n * @param {?} rendererTypeVar\n */\nconstructor(public viewClassVar: string,\npublic rendererTypeVar: string) {}\n}\n\nfunction ViewCompileResult_tsickle_Closure_declarations() {\n/** @type {?} */\nViewCompileResult.prototype.viewClassVar;\n/** @type {?} */\nViewCompileResult.prototype.rendererTypeVar;\n}\n\nexport class ViewCompiler {\n/**\n * @param {?} _config\n * @param {?} _reflector\n * @param {?} _schemaRegistry\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _reflector: CompileReflector,\nprivate _schemaRegistry: ElementSchemaRegistry) {}\n/**\n * @param {?} outputCtx\n * @param {?} component\n * @param {?} template\n * @param {?} styles\n * @param {?} usedPipes\n * @return {?}\n */\ncompileComponent(\n      outputCtx: OutputContext, component: CompileDirectiveMetadata, template: TemplateAst[],\n      styles: o.Expression, usedPipes: CompilePipeSummary[]): ViewCompileResult {\n    let /** @type {?} */ embeddedViewCount = 0;\n    const /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n\n    let /** @type {?} */ renderComponentVarName: string = /** @type {?} */(( undefined));\n    if (!component.isHost) {\n      const /** @type {?} */ template = /** @type {?} */(( component.template));\n      const /** @type {?} */ customRenderData: o.LiteralMapEntry[] = [];\n      if (template.animations && template.animations.length) {\n        customRenderData.push(new o.LiteralMapEntry(\n            'animation', convertValueToOutputAst(outputCtx, template.animations), true));\n      }\n\n      const /** @type {?} */ renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n      renderComponentVarName = /** @type {?} */(( renderComponentVar.name));\n      outputCtx.statements.push(\n          renderComponentVar\n              .set(o.importExpr(Identifiers.createRendererType2).callFn([new o.LiteralMapExpr([\n                new o.LiteralMapEntry('encapsulation', o.literal(template.encapsulation), false),\n                new o.LiteralMapEntry('styles', styles, false),\n                new o.LiteralMapEntry('data', new o.LiteralMapExpr(customRenderData), false)\n              ])]))\n              .toDeclStmt(\n                  o.importType(Identifiers.RendererType2),\n                  [o.StmtModifier.Final, o.StmtModifier.Exported]));\n    }\n\n    const /** @type {?} */ viewBuilderFactory = (parent: ViewBuilder | null): ViewBuilder => {\n      const /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n      return new ViewBuilder(\n          this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes,\n          staticQueryIds, viewBuilderFactory);\n    };\n\n    const /** @type {?} */ visitor = viewBuilderFactory(null);\n    visitor.visitAll([], template);\n\n    outputCtx.statements.push(...visitor.build());\n\n    return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: CompilerConfig, },\n{type: CompileReflector, },\n{type: ElementSchemaRegistry, },\n];\n}\n\nfunction ViewCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nViewCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nViewCompiler.ctorParameters;\n/** @type {?} */\nViewCompiler.prototype._config;\n/** @type {?} */\nViewCompiler.prototype._reflector;\n/** @type {?} */\nViewCompiler.prototype._schemaRegistry;\n}\n\n/**\n * @record\n */\nfunction ViewBuilderFactory() {}\n\n\nfunction ViewBuilderFactory_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(parent: ViewBuilder): ViewBuilder;\n*/\n}\n\n\ninterface ViewBuilderFactory {\n  (parent: ViewBuilder): ViewBuilder;\n}\n/**\n * @record\n */\nfunction UpdateExpression() {}\n\n\nfunction UpdateExpression_tsickle_Closure_declarations() {\n/** @type {?} */\nUpdateExpression.prototype.context;\n/** @type {?} */\nUpdateExpression.prototype.nodeIndex;\n/** @type {?} */\nUpdateExpression.prototype.bindingIndex;\n/** @type {?} */\nUpdateExpression.prototype.sourceSpan;\n/** @type {?} */\nUpdateExpression.prototype.value;\n}\n\n\ninterface UpdateExpression {\n  context: o.Expression;\n  nodeIndex: number;\n  bindingIndex: number;\n  sourceSpan: ParseSourceSpan;\n  value: AST;\n}\n\nconst /** @type {?} */ LOG_VAR = o.variable('_l');\nconst /** @type {?} */ VIEW_VAR = o.variable('_v');\nconst /** @type {?} */ CHECK_VAR = o.variable('_ck');\nconst /** @type {?} */ COMP_VAR = o.variable('_co');\nconst /** @type {?} */ EVENT_NAME_VAR = o.variable('en');\nconst /** @type {?} */ ALLOW_DEFAULT_VAR = o.variable(`ad`);\nclass ViewBuilder implements TemplateAstVisitor, LocalResolver {\nprivate compType: o.Type;\nprivate nodes: (() => {\n    sourceSpan: ParseSourceSpan | null,\n    nodeDef: o.Expression,\n    nodeFlags: NodeFlags, updateDirectives?: UpdateExpression[], updateRenderer?: UpdateExpression[]\n  })[] = [];\nprivate purePipeNodeIndices: {[pipeName: string]: number} = Object.create(null);\nprivate refNodeIndices: {[refName: string]: number} = Object.create(null);\nprivate variables: VariableAst[] = [];\nprivate children: ViewBuilder[] = [];\n/**\n * @param {?} reflector\n * @param {?} outputCtx\n * @param {?} parent\n * @param {?} component\n * @param {?} embeddedViewIndex\n * @param {?} usedPipes\n * @param {?} staticQueryIds\n * @param {?} viewBuilderFactory\n */\nconstructor(\nprivate reflector: CompileReflector,\nprivate outputCtx: OutputContext,\nprivate parent: ViewBuilder|null,\nprivate component: CompileDirectiveMetadata,\nprivate embeddedViewIndex: number,\nprivate usedPipes: CompilePipeSummary[],\nprivate staticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>,\nprivate viewBuilderFactory: ViewBuilderFactory) {\n    // TODO(tbosch): The old view compiler used to use an `any` type\n    // for the context in any embedded view. We keep this behaivor for now\n    // to be able to introduce the new view compiler without too many errors.\n    this.compType = this.embeddedViewIndex > 0 ?\n        o.DYNAMIC_TYPE : /** @type {?} */((\n        o.expressionType(outputCtx.importExpr(this.component.type.reference))));\n  }\n/**\n * @return {?}\n */\nget viewName(): string {\n    return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n  }\n/**\n * @param {?} variables\n * @param {?} astNodes\n * @return {?}\n */\nvisitAll(variables: VariableAst[], astNodes: TemplateAst[]) {\n    this.variables = variables;\n    // create the pipes for the pure pipes immediately, so that we know their indices.\n    if (!this.parent) {\n      this.usedPipes.forEach((pipe) => {\n        if (pipe.pure) {\n          this.purePipeNodeIndices[pipe.name] = this._createPipe(null, pipe);\n        }\n      });\n    }\n\n    if (!this.parent) {\n      const /** @type {?} */ queryIds = staticViewQueryIds(this.staticQueryIds);\n      this.component.viewQueries.forEach((query, queryIndex) => {\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        const /** @type {?} */ queryId = queryIndex + 1;\n        const /** @type {?} */ bindingType = query.first ? QueryBindingType.First : QueryBindingType.All;\n        const /** @type {?} */ flags =\n            NodeFlags.TypeViewQuery | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n        this.nodes.push(() => ({\n                          sourceSpan: null,\n                          nodeFlags: flags,\n                          nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                            o.literal(flags), o.literal(queryId),\n                            new o.LiteralMapExpr([new o.LiteralMapEntry(\n                                query.propertyName, o.literal(bindingType), false)])\n                          ])\n                        }));\n      });\n    }\n    templateVisitAll(this, astNodes);\n    if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n      // if the view is an embedded view, then we need to add an additional root node in some cases\n      this.nodes.push(() => ({\n                        sourceSpan: null,\n                        nodeFlags: NodeFlags.TypeElement,\n                        nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                          o.literal(NodeFlags.None), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n                        ])\n                      }));\n    }\n  }\n/**\n * @param {?=} targetStatements\n * @return {?}\n */\nbuild(targetStatements: o.Statement[] = []): o.Statement[] {\n    this.children.forEach((child) => child.build(targetStatements));\n\n    const {updateRendererStmts, updateDirectivesStmts, nodeDefExprs} =\n        this._createNodeExpressions();\n\n    const /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n    const /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n\n\n    let /** @type {?} */ viewFlags = ViewFlags.None;\n    if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n      viewFlags |= ViewFlags.OnPush;\n    }\n    const /** @type {?} */ viewFactory = new o.DeclareFunctionStmt(\n        this.viewName, [new o.FnParam( /** @type {?} */((LOG_VAR.name)))],\n        [new o.ReturnStatement(o.importExpr(Identifiers.viewDef).callFn([\n          o.literal(viewFlags),\n          o.literalArr(nodeDefExprs),\n          updateDirectivesFn,\n          updateRendererFn,\n        ]))],\n        o.importType(Identifiers.ViewDefinition),\n        this.embeddedViewIndex === 0 ? [o.StmtModifier.Exported] : []);\n\n    targetStatements.push(viewFactory);\n    return targetStatements;\n  }\n/**\n * @param {?} updateStmts\n * @return {?}\n */\n\nprivate _createUpdateFn(updateStmts: o.Statement[]): o.Expression {\n    let /** @type {?} */ updateFn: o.Expression;\n    if (updateStmts.length > 0) {\n      const /** @type {?} */ preStmts: o.Statement[] = [];\n      if (!this.component.isHost && o.findReadVarNames(updateStmts).has( /** @type {?} */((COMP_VAR.name)))) {\n        preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n      }\n      updateFn = o.fn(\n          [\n            new o.FnParam( /** @type {?} */((CHECK_VAR.name)), o.INFERRED_TYPE),\n            new o.FnParam( /** @type {?} */((VIEW_VAR.name)), o.INFERRED_TYPE)\n          ],\n          [...preStmts, ...updateStmts], o.INFERRED_TYPE);\n    } else {\n      updateFn = o.NULL_EXPR;\n    }\n    return updateFn;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitNgContent(ast: NgContentAst, context: any): any {\n    // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n    this.nodes.push(() => ({\n                      sourceSpan: ast.sourceSpan,\n                      nodeFlags: NodeFlags.TypeNgContent,\n                      nodeDef: o.importExpr(Identifiers.ngContentDef).callFn([\n                        o.literal(ast.ngContentIndex), o.literal(ast.index)\n                      ])\n                    }));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitText(ast: TextAst, context: any): any {\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodes.push(() => ({\n                      sourceSpan: ast.sourceSpan,\n                      nodeFlags: NodeFlags.TypeText,\n                      nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                        o.literal(ast.ngContentIndex), o.literalArr([o.literal(ast.value)])\n                      ])\n                    }));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitBoundText(ast: BoundTextAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array\n    this.nodes.push( /** @type {?} */((null)));\n\n    const /** @type {?} */ astWithSource = /** @type {?} */(( <ASTWithSource>ast.value));\n    const /** @type {?} */ inter = /** @type {?} */(( <Interpolation>astWithSource.ast));\n\n    const /** @type {?} */ updateRendererExpressions = inter.expressions.map(\n        (expr, bindingIndex) => this._preprocessUpdateExpression(\n            {nodeIndex, bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr}));\n\n    // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeText,\n      nodeDef: o.importExpr(Identifiers.textDef).callFn([\n        o.literal(ast.ngContentIndex), o.literalArr(inter.strings.map(s => o.literal(s)))\n      ]),\n      updateRenderer: updateRendererExpressions\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array\n    this.nodes.push( /** @type {?} */((null)));\n\n    const {flags, queryMatchesExpr, hostEvents} = this._visitElementOrTemplate(nodeIndex, ast);\n\n    const /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n    this.children.push(childVisitor);\n    childVisitor.visitAll(ast.variables, ast.children);\n\n    const /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n\n    // anchorDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n    //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n    //   ViewDefinitionFactory): NodeDef;\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeElement | flags,\n      nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n        o.literal(flags),\n        queryMatchesExpr,\n        o.literal(ast.ngContentIndex),\n        o.literal(childCount),\n        this._createElementHandleEventFn(nodeIndex, hostEvents),\n        o.variable(childVisitor.viewName),\n      ])\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElement(ast: ElementAst, context: any): any {\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodes.push( /** @type {?} */((null)));\n\n    // Using a null element name creates an anchor.\n    const /** @type {?} */ elName: string|null = isNgContainer(ast.name) ? null : ast.name;\n\n    const {flags, usedEvents, queryMatchesExpr, hostBindings: dirHostBindings, hostEvents} =\n        this._visitElementOrTemplate(nodeIndex, ast);\n\n    let /** @type {?} */ inputDefs: o.Expression[] = [];\n    let /** @type {?} */ updateRendererExpressions: UpdateExpression[] = [];\n    let /** @type {?} */ outputDefs: o.Expression[] = [];\n    if (elName) {\n      const /** @type {?} */ hostBindings: any[] = ast.inputs\n                                      .map((inputAst) => ({\n                                             context: /** @type {?} */(( COMP_VAR as o.Expression)),\n                                             inputAst,\n                                             dirAst: /** @type {?} */(( null as any)),\n                                           }))\n                                      .concat(dirHostBindings);\n      if (hostBindings.length) {\n        updateRendererExpressions =\n            hostBindings.map((hostBinding, bindingIndex) => this._preprocessUpdateExpression({\n              context: hostBinding.context,\n              nodeIndex,\n              bindingIndex,\n              sourceSpan: hostBinding.inputAst.sourceSpan,\n              value: hostBinding.inputAst.value\n            }));\n        inputDefs = hostBindings.map(\n            hostBinding => elementBindingDef(hostBinding.inputAst, hostBinding.dirAst));\n      }\n      outputDefs = usedEvents.map(\n          ([target, eventName]) => o.literalArr([o.literal(target), o.literal(eventName)]));\n    }\n\n    templateVisitAll(this, ast.children);\n\n    const /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n\n    const /** @type {?} */ compAst = ast.directives.find(dirAst => dirAst.directive.isComponent);\n    let /** @type {?} */ compRendererType = /** @type {?} */(( o.NULL_EXPR as o.Expression));\n    let /** @type {?} */ compView = /** @type {?} */(( o.NULL_EXPR as o.Expression));\n    if (compAst) {\n      compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n      compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n    }\n\n    // elementDef(\n    //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n    //   fixedAttrs: [string, string][] = [],\n    //   bindings?: [BindingFlags, string, string | SecurityContext][],\n    //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n    //   handleEvent?: ElementHandleEventFn,\n    //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: ast.sourceSpan,\n      nodeFlags: NodeFlags.TypeElement | flags,\n      nodeDef: o.importExpr(Identifiers.elementDef).callFn([\n        o.literal(flags),\n        queryMatchesExpr,\n        o.literal(ast.ngContentIndex),\n        o.literal(childCount),\n        o.literal(elName),\n        elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n        inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n        outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR,\n        this._createElementHandleEventFn(nodeIndex, hostEvents),\n        compView,\n        compRendererType,\n      ]),\n      updateRenderer: updateRendererExpressions\n    });\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} ast\n * @return {?}\n */\n\nprivate _visitElementOrTemplate(nodeIndex: number, ast: {\n    hasViewContainer: boolean,\n    outputs: BoundEventAst[],\n    directives: DirectiveAst[],\n    providers: ProviderAst[],\n    references: ReferenceAst[],\n    queryMatches: QueryMatch[]\n  }): {\n    flags: NodeFlags,\n    usedEvents: [string | null, string][],\n    queryMatchesExpr: o.Expression,\n    hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[],\n  } {\n    let /** @type {?} */ flags = NodeFlags.None;\n    if (ast.hasViewContainer) {\n      flags |= NodeFlags.EmbeddedViews;\n    }\n    const /** @type {?} */ usedEvents = new Map<string, [string | null, string]>();\n    ast.outputs.forEach((event) => {\n      const {name, target} = elementEventNameAndTarget(event, null);\n      usedEvents.set(elementEventFullName(target, name), [target, name]);\n    });\n    ast.directives.forEach((dirAst) => {\n      dirAst.hostEvents.forEach((event) => {\n        const {name, target} = elementEventNameAndTarget(event, dirAst);\n        usedEvents.set(elementEventFullName(target, name), [target, name]);\n      });\n    });\n    const /** @type {?} */ hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[] = [];\n    const /** @type {?} */ hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[] = [];\n    this._visitComponentFactoryResolverProvider(ast.directives);\n\n    ast.providers.forEach((providerAst, providerIndex) => {\n      let /** @type {?} */ dirAst: DirectiveAst = /** @type {?} */(( undefined));\n      let /** @type {?} */ dirIndex: number = /** @type {?} */(( undefined));\n      ast.directives.forEach((localDirAst, i) => {\n        if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n          dirAst = localDirAst;\n          dirIndex = i;\n        }\n      });\n      if (dirAst) {\n        const {hostBindings: dirHostBindings, hostEvents: dirHostEvents} = this._visitDirective(\n            providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */((\n            this.staticQueryIds.get( /** @type {?} */((<any>ast))))));\n        hostBindings.push(...dirHostBindings);\n        hostEvents.push(...dirHostEvents);\n      } else {\n        this._visitProvider(providerAst, ast.queryMatches);\n      }\n    });\n\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n    ast.queryMatches.forEach((match) => {\n      let /** @type {?} */ valueType: QueryValueType = /** @type {?} */(( undefined));\n      if (tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n        valueType = QueryValueType.ElementRef;\n      } else if (\n          tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n        valueType = QueryValueType.ViewContainerRef;\n      } else if (\n          tokenReference(match.value) ===\n          this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n        valueType = QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n      }\n    });\n    ast.references.forEach((ref) => {\n      let /** @type {?} */ valueType: QueryValueType = /** @type {?} */(( undefined));\n      if (!ref.value) {\n        valueType = QueryValueType.RenderElement;\n      } else if (\n          tokenReference(ref.value) ===\n          this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n        valueType = QueryValueType.TemplateRef;\n      }\n      if (valueType != null) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n      }\n    });\n    ast.outputs.forEach((outputAst) => {\n      hostEvents.push({context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */(( null))});\n    });\n\n    return {\n      flags,\n      usedEvents: Array.from(usedEvents.values()),\n      queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n      hostBindings,\n      hostEvents: hostEvents\n    };\n  }\n/**\n * @param {?} providerAst\n * @param {?} dirAst\n * @param {?} directiveIndex\n * @param {?} elementNodeIndex\n * @param {?} refs\n * @param {?} queryMatches\n * @param {?} usedEvents\n * @param {?} queryIds\n * @return {?}\n */\n\nprivate _visitDirective(\n      providerAst: ProviderAst, dirAst: DirectiveAst, directiveIndex: number,\n      elementNodeIndex: number, refs: ReferenceAst[], queryMatches: QueryMatch[],\n      usedEvents: Map<string, any>, queryIds: StaticAndDynamicQueryIds): {\n    hostBindings:\n        {context: o.Expression, inputAst: BoundElementPropertyAst, dirAst: DirectiveAst}[],\n    hostEvents: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[]\n  } {\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    // reserve the space in the nodeDefs array so we can add children\n    this.nodes.push( /** @type {?} */((null)));\n\n    dirAst.directive.queries.forEach((query, queryIndex) => {\n      const /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n      const /** @type {?} */ flags =\n          NodeFlags.TypeContentQuery | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n      const /** @type {?} */ bindingType = query.first ? QueryBindingType.First : QueryBindingType.All;\n      this.nodes.push(() => ({\n                        sourceSpan: dirAst.sourceSpan,\n                        nodeFlags: flags,\n                        nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                          o.literal(flags), o.literal(queryId),\n                          new o.LiteralMapExpr([new o.LiteralMapEntry(\n                              query.propertyName, o.literal(bindingType), false)])\n                        ]),\n                      }));\n    });\n\n    // Note: the operation below might also create new nodeDefs,\n    // but we don't want them to be a child of a directive,\n    // as they might be a provider/pipe on their own.\n    // I.e. we only allow queries as children of directives nodes.\n    const /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n\n    let {flags, queryMatchExprs, providerExpr, depsExpr} =\n        this._visitProviderOrDirective(providerAst, queryMatches);\n\n    refs.forEach((ref) => {\n      if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n        this.refNodeIndices[ref.name] = nodeIndex;\n        queryMatchExprs.push(\n            o.literalArr([o.literal(ref.name), o.literal(QueryValueType.Provider)]));\n      }\n    });\n\n    if (dirAst.directive.isComponent) {\n      flags |= NodeFlags.Component;\n    }\n\n    const /** @type {?} */ inputDefs = dirAst.inputs.map((inputAst, inputIndex) => {\n      const /** @type {?} */ mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n      // Note: it's important to not quote the key so that we can capture renames by minifiers!\n      return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n    });\n\n    const /** @type {?} */ outputDefs: o.LiteralMapEntry[] = [];\n    const /** @type {?} */ dirMeta = dirAst.directive;\n    Object.keys(dirMeta.outputs).forEach((propName) => {\n      const /** @type {?} */ eventName = dirMeta.outputs[propName];\n      if (usedEvents.has(eventName)) {\n        // Note: it's important to not quote the key so that we can capture renames by minifiers!\n        outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n      }\n    });\n    let /** @type {?} */ updateDirectiveExpressions: UpdateExpression[] = [];\n    if (dirAst.inputs.length || (flags & (NodeFlags.DoCheck | NodeFlags.OnInit)) > 0) {\n      updateDirectiveExpressions =\n          dirAst.inputs.map((input, bindingIndex) => this._preprocessUpdateExpression({\n            nodeIndex,\n            bindingIndex,\n            sourceSpan: input.sourceSpan,\n            context: COMP_VAR,\n            value: input.value\n          }));\n    }\n\n    const /** @type {?} */ dirContextExpr =\n        o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n    const /** @type {?} */ hostBindings = dirAst.hostProperties.map((inputAst) => ({\n                                                     context: dirContextExpr,\n                                                     dirAst,\n                                                     inputAst,\n                                                   }));\n    const /** @type {?} */ hostEvents = dirAst.hostEvents.map((hostEventAst) => ({\n                                               context: dirContextExpr,\n                                               eventAst: hostEventAst, dirAst,\n                                             }));\n\n\n    // directiveDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n    //   any,\n    //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n    this.nodes[nodeIndex] = () => ({\n      sourceSpan: dirAst.sourceSpan,\n      nodeFlags: NodeFlags.TypeDirective | flags,\n      nodeDef: o.importExpr(Identifiers.directiveDef).callFn([\n        o.literal(flags), queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n        o.literal(childCount), providerExpr, depsExpr,\n        inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n        outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR\n      ]),\n      updateDirectives: updateDirectiveExpressions,\n      directive: dirAst.directive.type,\n    });\n\n    return {hostBindings, hostEvents};\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\n\nprivate _visitProvider(providerAst: ProviderAst, queryMatches: QueryMatch[]): void {\n    this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n  }\n/**\n * @param {?} directives\n * @return {?}\n */\n\nprivate _visitComponentFactoryResolverProvider(directives: DirectiveAst[]) {\n    const /** @type {?} */ componentDirMeta = directives.find(dirAst => dirAst.directive.isComponent);\n    if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n      const {providerExpr, depsExpr, flags, tokenExpr} = componentFactoryResolverProviderDef(\n          this.reflector, this.outputCtx, NodeFlags.PrivateProvider,\n          componentDirMeta.directive.entryComponents);\n      this._addProviderNode({\n        providerExpr,\n        depsExpr,\n        flags,\n        tokenExpr,\n        queryMatchExprs: [],\n        sourceSpan: componentDirMeta.sourceSpan\n      });\n    }\n  }\n/**\n * @param {?} data\n * @return {?}\n */\n\nprivate _addProviderNode(data: {\n    flags: NodeFlags,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    depsExpr: o.Expression,\n    tokenExpr: o.Expression,\n    sourceSpan: ParseSourceSpan\n  }) {\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    // providerDef(\n    //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n    //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n    this.nodes.push(\n        () => ({\n          sourceSpan: data.sourceSpan,\n          nodeFlags: data.flags,\n          nodeDef: o.importExpr(Identifiers.providerDef).callFn([\n            o.literal(data.flags),\n            data.queryMatchExprs.length ? o.literalArr(data.queryMatchExprs) : o.NULL_EXPR,\n            data.tokenExpr, data.providerExpr, data.depsExpr\n          ])\n        }));\n  }\n/**\n * @param {?} providerAst\n * @param {?} queryMatches\n * @return {?}\n */\n\nprivate _visitProviderOrDirective(providerAst: ProviderAst, queryMatches: QueryMatch[]): {\n    flags: NodeFlags,\n    tokenExpr: o.Expression,\n    sourceSpan: ParseSourceSpan,\n    queryMatchExprs: o.Expression[],\n    providerExpr: o.Expression,\n    depsExpr: o.Expression\n  } {\n    let /** @type {?} */ flags = NodeFlags.None;\n    let /** @type {?} */ queryMatchExprs: o.Expression[] = [];\n\n    queryMatches.forEach((match) => {\n      if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n        queryMatchExprs.push(\n            o.literalArr([o.literal(match.queryId), o.literal(QueryValueType.Provider)]));\n      }\n    });\n    const {providerExpr, depsExpr, flags: providerFlags, tokenExpr} =\n        providerDef(this.outputCtx, providerAst);\n    return {\n      flags: flags | providerFlags,\n      queryMatchExprs,\n      providerExpr,\n      depsExpr,\n      tokenExpr,\n      sourceSpan: providerAst.sourceSpan\n    };\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetLocal(name: string): o.Expression|null {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    let /** @type {?} */ currViewExpr: o.Expression = VIEW_VAR;\n    for (let /** @type {?} */ currBuilder: ViewBuilder|null = this; currBuilder; currBuilder = currBuilder.parent,\n                          currViewExpr = currViewExpr.prop('parent').cast(o.DYNAMIC_TYPE)) {\n      // check references\n      const /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n      if (refNodeIndex != null) {\n        return o.importExpr(Identifiers.nodeValue).callFn([currViewExpr, o.literal(refNodeIndex)]);\n      }\n\n      // check variables\n      const /** @type {?} */ varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n      if (varAst) {\n        const /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n        return currViewExpr.prop('context').prop(varValue);\n      }\n    }\n    return null;\n  }\n/**\n * @param {?} sourceSpan\n * @param {?} argCount\n * @return {?}\n */\ncreateLiteralArrayConverter(sourceSpan: ParseSourceSpan, argCount: number): BuiltinConverter {\n    if (argCount === 0) {\n      const /** @type {?} */ valueExpr = o.importExpr(Identifiers.EMPTY_ARRAY);\n      return () => valueExpr;\n    }\n\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    // pureArrayDef(argCount: number): NodeDef;\n    this.nodes.push(() => ({\n                      sourceSpan,\n                      nodeFlags: NodeFlags.TypePureArray,\n                      nodeDef: o.importExpr(Identifiers.pureArrayDef).callFn([o.literal(argCount)])\n                    }));\n\n    return (args: o.Expression[]) => callCheckStmt(nodeIndex, args);\n  }\n/**\n * @param {?} sourceSpan\n * @param {?} keys\n * @return {?}\n */\ncreateLiteralMapConverter(sourceSpan: ParseSourceSpan, keys: {key: string, quoted: boolean}[]):\n      BuiltinConverter {\n    if (keys.length === 0) {\n      const /** @type {?} */ valueExpr = o.importExpr(Identifiers.EMPTY_MAP);\n      return () => valueExpr;\n    }\n\n    // function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef\n    const /** @type {?} */ map = o.literalMap(keys.map((e, i) => ({...e, value: o.literal(i)})));\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    this.nodes.push(() => ({\n                      sourceSpan,\n                      nodeFlags: NodeFlags.TypePureObject,\n                      nodeDef: o.importExpr(Identifiers.pureObjectDef).callFn([map])\n                    }));\n\n    return (args: o.Expression[]) => callCheckStmt(nodeIndex, args);\n  }\n/**\n * @param {?} expression\n * @param {?} name\n * @param {?} argCount\n * @return {?}\n */\ncreatePipeConverter(expression: UpdateExpression, name: string, argCount: number):\n      BuiltinConverter {\n    const /** @type {?} */ pipe = /** @type {?} */(( this.usedPipes.find((pipeSummary) => pipeSummary.name === name)));\n    if (pipe.pure) {\n      const /** @type {?} */ nodeIndex = this.nodes.length;\n      // function purePipeDef(argCount: number): NodeDef;\n      this.nodes.push(() => ({\n                        sourceSpan: expression.sourceSpan,\n                        nodeFlags: NodeFlags.TypePurePipe,\n                        nodeDef: o.importExpr(Identifiers.purePipeDef).callFn([o.literal(argCount)])\n                      }));\n\n      // find underlying pipe in the component view\n      let /** @type {?} */ compViewExpr: o.Expression = VIEW_VAR;\n      let /** @type {?} */ compBuilder: ViewBuilder = this;\n      while (compBuilder.parent) {\n        compBuilder = compBuilder.parent;\n        compViewExpr = compViewExpr.prop('parent').cast(o.DYNAMIC_TYPE);\n      }\n      const /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n      const /** @type {?} */ pipeValueExpr: o.Expression =\n          o.importExpr(Identifiers.nodeValue).callFn([compViewExpr, o.literal(pipeNodeIndex)]);\n\n      return (args: o.Expression[]) => callUnwrapValue(\n                 expression.nodeIndex, expression.bindingIndex,\n                 callCheckStmt(nodeIndex, [pipeValueExpr].concat(args)));\n    } else {\n      const /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n      const /** @type {?} */ nodeValueExpr =\n          o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n\n      return (args: o.Expression[]) => callUnwrapValue(\n                 expression.nodeIndex, expression.bindingIndex,\n                 nodeValueExpr.callMethod('transform', args));\n    }\n  }\n/**\n * @param {?} sourceSpan\n * @param {?} pipe\n * @return {?}\n */\n\nprivate _createPipe(sourceSpan: ParseSourceSpan|null, pipe: CompilePipeSummary): number {\n    const /** @type {?} */ nodeIndex = this.nodes.length;\n    let /** @type {?} */ flags = NodeFlags.None;\n    pipe.type.lifecycleHooks.forEach((lifecycleHook) => {\n      // for pipes, we only support ngOnDestroy\n      if (lifecycleHook === LifecycleHooks.OnDestroy) {\n        flags |= lifecycleHookToNodeFlag(lifecycleHook);\n      }\n    });\n\n    const /** @type {?} */ depExprs = pipe.type.diDeps.map((diDep) => depDef(this.outputCtx, diDep));\n    // function pipeDef(\n    //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n    this.nodes.push(\n        () => ({\n          sourceSpan,\n          nodeFlags: NodeFlags.TypePipe,\n          nodeDef: o.importExpr(Identifiers.pipeDef).callFn([\n            o.literal(flags), this.outputCtx.importExpr(pipe.type.reference), o.literalArr(depExprs)\n          ])\n        }));\n    return nodeIndex;\n  }\n/**\n * @param {?} expression\n * @return {?}\n */\n\nprivate _preprocessUpdateExpression(expression: UpdateExpression): UpdateExpression {\n    return {\n      nodeIndex: expression.nodeIndex,\n      bindingIndex: expression.bindingIndex,\n      sourceSpan: expression.sourceSpan,\n      context: expression.context,\n      value: convertPropertyBindingBuiltins(\n          {\n            createLiteralArrayConverter: (argCount: number) => this.createLiteralArrayConverter(\n                                             expression.sourceSpan, argCount),\n            createLiteralMapConverter:\n                (keys: {key: string, quoted: boolean}[]) =>\n                    this.createLiteralMapConverter(expression.sourceSpan, keys),\n            createPipeConverter: (name: string, argCount: number) =>\n                                     this.createPipeConverter(expression, name, argCount)\n          },\n          expression.value)\n    };\n  }\n/**\n * @return {?}\n */\n\nprivate _createNodeExpressions(): {\n    updateRendererStmts: o.Statement[],\n    updateDirectivesStmts: o.Statement[],\n    nodeDefExprs: o.Expression[]\n  } {\n    const /** @type {?} */ self = this;\n    let /** @type {?} */ updateBindingCount = 0;\n    const /** @type {?} */ updateRendererStmts: o.Statement[] = [];\n    const /** @type {?} */ updateDirectivesStmts: o.Statement[] = [];\n    const /** @type {?} */ nodeDefExprs = this.nodes.map((factory, nodeIndex) => {\n      const {nodeDef, nodeFlags, updateDirectives, updateRenderer, sourceSpan} = factory();\n      if (updateRenderer) {\n        updateRendererStmts.push(\n            ...createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n      }\n      if (updateDirectives) {\n        updateDirectivesStmts.push(...createUpdateStatements(\n            nodeIndex, sourceSpan, updateDirectives,\n            (nodeFlags & (NodeFlags.DoCheck | NodeFlags.OnInit)) > 0));\n      }\n      // We use a comma expression to call the log function before\n      // the nodeDef function, but still use the result of the nodeDef function\n      // as the value.\n      // Note: We only add the logger to elements / text nodes,\n      // so we don't generate too much code.\n      const /** @type {?} */ logWithNodeDef = nodeFlags & NodeFlags.CatRenderNode ?\n          new o.CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n          nodeDef;\n      return o.applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n    });\n    return {updateRendererStmts, updateDirectivesStmts, nodeDefExprs};\n/**\n * @param {?} nodeIndex\n * @param {?} sourceSpan\n * @param {?} expressions\n * @param {?} allowEmptyExprs\n * @return {?}\n */\nfunction createUpdateStatements(\n        nodeIndex: number, sourceSpan: ParseSourceSpan | null, expressions: UpdateExpression[],\n        allowEmptyExprs: boolean): o.Statement[] {\n      const /** @type {?} */ updateStmts: o.Statement[] = [];\n      const /** @type {?} */ exprs = expressions.map(({sourceSpan, context, value}) => {\n        const /** @type {?} */ bindingId = `${updateBindingCount++}`;\n        const /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n        const {stmts, currValExpr} =\n            convertPropertyBinding(nameResolver, context, value, bindingId);\n        updateStmts.push(...stmts.map(\n            (stmt: o.Statement) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n        return o.applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n      });\n      if (expressions.length || allowEmptyExprs) {\n        updateStmts.push(o.applySourceSpanToStatementIfNeeded(\n            callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n      }\n      return updateStmts;\n    }\n  }\n/**\n * @param {?} nodeIndex\n * @param {?} handlers\n * @return {?}\n */\n\nprivate _createElementHandleEventFn(\n      nodeIndex: number,\n      handlers: {context: o.Expression, eventAst: BoundEventAst, dirAst: DirectiveAst}[]) {\n    const /** @type {?} */ handleEventStmts: o.Statement[] = [];\n    let /** @type {?} */ handleEventBindingCount = 0;\n    handlers.forEach(({context, eventAst, dirAst}) => {\n      const /** @type {?} */ bindingId = `${handleEventBindingCount++}`;\n      const /** @type {?} */ nameResolver = context === COMP_VAR ? this : null;\n      const {stmts, allowDefault} =\n          convertActionBinding(nameResolver, context, eventAst.handler, bindingId);\n      const /** @type {?} */ trueStmts = stmts;\n      if (allowDefault) {\n        trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n      }\n      const {target: eventTarget, name: eventName} = elementEventNameAndTarget(eventAst, dirAst);\n      const /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n      handleEventStmts.push(o.applySourceSpanToStatementIfNeeded(\n          new o.IfStmt(o.literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts),\n          eventAst.sourceSpan));\n    });\n    let /** @type {?} */ handleEventFn: o.Expression;\n    if (handleEventStmts.length > 0) {\n      const /** @type {?} */ preStmts: o.Statement[] =\n          [ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE)];\n      if (!this.component.isHost && o.findReadVarNames(handleEventStmts).has( /** @type {?} */((COMP_VAR.name)))) {\n        preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n      }\n      handleEventFn = o.fn(\n          [\n            new o.FnParam( /** @type {?} */((VIEW_VAR.name)), o.INFERRED_TYPE),\n            new o.FnParam( /** @type {?} */((EVENT_NAME_VAR.name)), o.INFERRED_TYPE),\n            new o.FnParam( /** @type {?} */((EventHandlerVars.event.name)), o.INFERRED_TYPE)\n          ],\n          [...preStmts, ...handleEventStmts, new o.ReturnStatement(ALLOW_DEFAULT_VAR)],\n          o.INFERRED_TYPE);\n    } else {\n      handleEventFn = o.NULL_EXPR;\n    }\n    return handleEventFn;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirective(ast: DirectiveAst, context: {usedEvents: Set<string>}): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitReference(ast: ReferenceAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitVariable(ast: VariableAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitEvent(ast: BoundEventAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAttr(ast: AttrAst, context: any): any {}\n}\n\nfunction ViewBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nViewBuilder.prototype.compType;\n/** @type {?} */\nViewBuilder.prototype.nodes;\n/** @type {?} */\nViewBuilder.prototype.purePipeNodeIndices;\n/** @type {?} */\nViewBuilder.prototype.refNodeIndices;\n/** @type {?} */\nViewBuilder.prototype.variables;\n/** @type {?} */\nViewBuilder.prototype.children;\n/** @type {?} */\nViewBuilder.prototype.reflector;\n/** @type {?} */\nViewBuilder.prototype.outputCtx;\n/** @type {?} */\nViewBuilder.prototype.parent;\n/** @type {?} */\nViewBuilder.prototype.component;\n/** @type {?} */\nViewBuilder.prototype.embeddedViewIndex;\n/** @type {?} */\nViewBuilder.prototype.usedPipes;\n/** @type {?} */\nViewBuilder.prototype.staticQueryIds;\n/** @type {?} */\nViewBuilder.prototype.viewBuilderFactory;\n}\n\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes: TemplateAst[]): boolean {\n  const /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n  if (lastAstNode instanceof EmbeddedTemplateAst) {\n    return lastAstNode.hasViewContainer;\n  }\n\n  if (lastAstNode instanceof ElementAst) {\n    if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n      return needsAdditionalRootNode(lastAstNode.children);\n    }\n    return lastAstNode.hasViewContainer;\n  }\n\n  return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst: BoundElementPropertyAst, dirAst: DirectiveAst): o.Expression {\n  switch (inputAst.type) {\n    case PropertyBindingType.Attribute:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeElementAttribute), o.literal(inputAst.name),\n        o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Property:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeProperty), o.literal(inputAst.name),\n        o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Animation:\n      const /** @type {?} */ bindingType = BindingFlags.TypeProperty |\n          (dirAst && dirAst.directive.isComponent ? BindingFlags.SyntheticHostProperty :\n                                                    BindingFlags.SyntheticProperty);\n      return o.literalArr([\n        o.literal(bindingType), o.literal('@' + inputAst.name), o.literal(inputAst.securityContext)\n      ]);\n    case PropertyBindingType.Class:\n      return o.literalArr(\n          [o.literal(BindingFlags.TypeElementClass), o.literal(inputAst.name), o.NULL_EXPR]);\n    case PropertyBindingType.Style:\n      return o.literalArr([\n        o.literal(BindingFlags.TypeElementStyle), o.literal(inputAst.name), o.literal(inputAst.unit)\n      ]);\n  }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst: ElementAst): o.Expression {\n  const /** @type {?} */ mapResult: {[key: string]: string} = Object.create(null);\n  elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n  elementAst.directives.forEach(dirAst => {\n    Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n      const /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n      const /** @type {?} */ prevValue = mapResult[name];\n      mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  // Note: We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  return o.literalArr(Object.keys(mapResult).sort().map(\n      (attrName) => o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])])));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex: number, exprs: o.Expression[]): o.Expression {\n  if (exprs.length > 10) {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(ArgumentType.Dynamic), o.literalArr(exprs)]);\n  } else {\n    return CHECK_VAR.callFn(\n        [VIEW_VAR, o.literal(nodeIndex), o.literal(ArgumentType.Inline), ...exprs]);\n  }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex: number, bindingIdx: number, expr: o.Expression): o.Expression {\n  return o.importExpr(Identifiers.unwrapValue).callFn([\n    VIEW_VAR, o.literal(nodeIndex), o.literal(bindingIdx), expr\n  ]);\n}\n/**\n * @record\n */\nfunction StaticAndDynamicQueryIds() {}\n\n\nfunction StaticAndDynamicQueryIds_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticAndDynamicQueryIds.prototype.staticQueryIds;\n/** @type {?} */\nStaticAndDynamicQueryIds.prototype.dynamicQueryIds;\n}\n\n\ninterface StaticAndDynamicQueryIds {\n  staticQueryIds: Set<number>;\n  dynamicQueryIds: Set<number>;\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(\n    nodes: TemplateAst[], result = new Map<TemplateAst, StaticAndDynamicQueryIds>()):\n    Map<TemplateAst, StaticAndDynamicQueryIds> {\n  nodes.forEach((node) => {\n    const /** @type {?} */ staticQueryIds = new Set<number>();\n    const /** @type {?} */ dynamicQueryIds = new Set<number>();\n    let /** @type {?} */ queryMatches: QueryMatch[] = /** @type {?} */(( undefined));\n    if (node instanceof ElementAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const /** @type {?} */ childData = /** @type {?} */(( result.get(child)));\n        childData.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    } else if (node instanceof EmbeddedTemplateAst) {\n      findStaticQueryIds(node.children, result);\n      node.children.forEach((child) => {\n        const /** @type {?} */ childData = /** @type {?} */(( result.get(child)));\n        childData.staticQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n        childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n      });\n      queryMatches = node.queryMatches;\n    }\n    if (queryMatches) {\n      queryMatches.forEach((match) => staticQueryIds.add(match.queryId));\n    }\n    dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n    result.set(node, {staticQueryIds, dynamicQueryIds});\n  });\n  return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds: Map<TemplateAst, StaticAndDynamicQueryIds>):\n    StaticAndDynamicQueryIds {\n  const /** @type {?} */ staticQueryIds = new Set<number>();\n  const /** @type {?} */ dynamicQueryIds = new Set<number>();\n  Array.from(nodeStaticQueryIds.values()).forEach((entry) => {\n    entry.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n    entry.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n  });\n  dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n  return {staticQueryIds, dynamicQueryIds};\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(\n    eventAst: BoundEventAst, dirAst: DirectiveAst | null): {name: string, target: string | null} {\n  if (eventAst.isAnimation) {\n    return {\n      name: `@${eventAst.name}.${eventAst.phase}`,\n      target: dirAst && dirAst.directive.isComponent ? 'component' : null\n    };\n  } else {\n    return eventAst;\n  }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(\n    queryIds: StaticAndDynamicQueryIds, queryId: number, isFirst: boolean) {\n  let /** @type {?} */ flags = NodeFlags.None;\n  // Note: We only make queries static that query for a single item.\n  // This is because of backwards compatibility with the old view compiler...\n  if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n    flags |= NodeFlags.StaticQuery;\n  } else {\n    flags |= NodeFlags.DynamicQuery;\n  }\n  return flags;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {sourceUrl} from '../compile_metadata';\nimport {Statement} from '../output/output_ast';\nimport {TypeScriptEmitter} from '../output/ts_emitter';\nexport class GeneratedFile {\npublic source: string|null;\npublic stmts: Statement[]|null;\n/**\n * @param {?} srcFileUrl\n * @param {?} genFileUrl\n * @param {?} sourceOrStmts\n */\nconstructor(\npublic srcFileUrl: string,\npublic genFileUrl: string, sourceOrStmts: string|Statement[]) {\n    if (typeof sourceOrStmts === 'string') {\n      this.source = sourceOrStmts;\n      this.stmts = null;\n    } else {\n      this.source = null;\n      this.stmts = sourceOrStmts;\n    }\n  }\n}\n\nfunction GeneratedFile_tsickle_Closure_declarations() {\n/** @type {?} */\nGeneratedFile.prototype.source;\n/** @type {?} */\nGeneratedFile.prototype.stmts;\n/** @type {?} */\nGeneratedFile.prototype.srcFileUrl;\n/** @type {?} */\nGeneratedFile.prototype.genFileUrl;\n}\n\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nexport function toTypeScript(file: GeneratedFile, preamble: string = ''): string {\n  if (!file.stmts) {\n    throw new Error(`Illegal state: No stmts present on GeneratedFile ${file.genFileUrl}`);\n  }\n  return new TypeScriptEmitter().emitStatements(\n      sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompileNgModuleMetadata, CompileNgModuleSummary, CompilePipeMetadata, CompileProviderMetadata, CompileSummaryKind, CompileTypeMetadata, CompileTypeSummary} from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport {Summary, SummaryResolver} from '../summary_resolver';\nimport {OutputContext, ValueTransformer, ValueVisitor, visitValue} from '../util';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {ResolvedStaticSymbol, StaticSymbolResolver} from './static_symbol_resolver';\nimport {summaryForJitFileName, summaryForJitName} from './util';\n/**\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nexport function serializeSummaries(\n    forJitCtx: OutputContext, summaryResolver: SummaryResolver<StaticSymbol>,\n    symbolResolver: StaticSymbolResolver, symbols: ResolvedStaticSymbol[], types: {\n      summary: CompileTypeSummary,\n      metadata: CompileNgModuleMetadata | CompileDirectiveMetadata | CompilePipeMetadata |\n          CompileTypeMetadata\n    }[]): {json: string, exportAs: {symbol: StaticSymbol, exportAs: string}[]} {\n  const /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n  const /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n\n  // for symbols, we use everything except for the class metadata itself\n  // (we keep the statics though), as the class metadata is contained in the\n  // CompileTypeSummary.\n  symbols.forEach(\n      (resolvedSymbol) => toJsonSerializer.addOrMergeSummary(\n          {symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata}));\n  // Add summaries that are referenced by the given symbols (transitively)\n  // Note: the serializer.symbols array might be growing while\n  // we execute the loop!\n  for (let /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n    const /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n    if (summaryResolver.isLibraryFile(symbol.filePath)) {\n      let /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n      if (!summary) {\n        // some symbols might originate from a plain typescript library\n        // that just exported .d.ts and .metadata.json files, i.e. where no summary\n        // files were created.\n        const /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n          summary = {symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata};\n        }\n      }\n      if (summary) {\n        if (summary.type) {\n          forJitSerializer.addLibType(summary.type);\n        }\n        toJsonSerializer.addOrMergeSummary(summary);\n      }\n    }\n  }\n\n  // Add type summaries.\n  // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n  // as the type summaries already contain the transitive data that they require\n  // (in a minimal way).\n  types.forEach(({summary, metadata}) => {\n    forJitSerializer.addSourceType(summary, metadata);\n    toJsonSerializer.addOrMergeSummary(\n        {symbol: summary.type.reference, metadata: null, type: summary});\n    if (summary.summaryKind === CompileSummaryKind.NgModule) {\n      const /** @type {?} */ ngModuleSummary = /** @type {?} */(( <CompileNgModuleSummary>summary));\n      ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach((id) => {\n        const /** @type {?} */ symbol: StaticSymbol = id.reference;\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n          const /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n          if (summary) {\n            toJsonSerializer.addOrMergeSummary(summary);\n          }\n        }\n      });\n    }\n  });\n  const {json, exportAs} = toJsonSerializer.serialize();\n  forJitSerializer.serialize(exportAs);\n  return {json, exportAs};\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nexport function deserializeSummaries(symbolCache: StaticSymbolCache, json: string):\n    {summaries: Summary<StaticSymbol>[], importAs: {symbol: StaticSymbol, importAs: string}[]} {\n  const /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n  return deserializer.deserialize(json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nexport function createForJitStub(outputCtx: OutputContext, reference: StaticSymbol) {\n  return createSummaryForJitFunction(outputCtx, reference, o.NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(\n    outputCtx: OutputContext, reference: StaticSymbol, value: o.Expression) {\n  const /** @type {?} */ fnName = summaryForJitName(reference.name);\n  outputCtx.statements.push(\n      o.fn([], [new o.ReturnStatement(value)], new o.ArrayType(o.DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        o.StmtModifier.Final, o.StmtModifier.Exported\n      ]));\n}\nclass ToJsonSerializer extends ValueTransformer {\n  // Note: This only contains symbols without members.\n  symbols: StaticSymbol[] = [];\nprivate indexBySymbol = new Map<StaticSymbol, number>();\nprivate processedSummaryBySymbol = new Map<StaticSymbol, any>();\nprivate processedSummaries: any[] = [];\n/**\n * @param {?} symbolResolver\n * @param {?} summaryResolver\n */\nconstructor(\nprivate symbolResolver: StaticSymbolResolver,\nprivate summaryResolver: SummaryResolver<StaticSymbol>) {\n    super();\n  }\n/**\n * @param {?} summary\n * @return {?}\n */\naddOrMergeSummary(summary: Summary<StaticSymbol>) {\n    let /** @type {?} */ symbolMeta = summary.metadata;\n    if (symbolMeta && symbolMeta.__symbolic === 'class') {\n      // For classes, we keep everything except their class decorators.\n      // We need to keep e.g. the ctor args, method names, method decorators\n      // so that the class can be extended in another compilation unit.\n      // We don't keep the class decorators as\n      // 1) they refer to data\n      //   that should not cause a rebuild of downstream compilation units\n      //   (e.g. inline templates of @Component, or @NgModule.declarations)\n      // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n      const /** @type {?} */ clone: {[key: string]: any} = {};\n      Object.keys(symbolMeta).forEach((propName) => {\n        if (propName !== 'decorators') {\n          clone[propName] = symbolMeta[propName];\n        }\n      });\n      symbolMeta = clone;\n    }\n\n    let /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n    if (!processedSummary) {\n      processedSummary = this.processValue({symbol: summary.symbol});\n      this.processedSummaries.push(processedSummary);\n      this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n    }\n    // Note: == on purpose to compare with undefined!\n    if (processedSummary.metadata == null && symbolMeta != null) {\n      processedSummary.metadata = this.processValue(symbolMeta);\n    }\n    // Note: == on purpose to compare with undefined!\n    if (processedSummary.type == null && summary.type != null) {\n      processedSummary.type = this.processValue(summary.type);\n    }\n  }\n/**\n * @return {?}\n */\nserialize(): {json: string, exportAs: {symbol: StaticSymbol, exportAs: string}[]} {\n    const /** @type {?} */ exportAs: {symbol: StaticSymbol, exportAs: string}[] = [];\n    const /** @type {?} */ json = JSON.stringify({\n      summaries: this.processedSummaries,\n      symbols: this.symbols.map((symbol, index) => {\n        symbol.assertNoMembers();\n        let /** @type {?} */ importAs: string = /** @type {?} */(( undefined));\n        if (this.summaryResolver.isLibraryFile(symbol.filePath)) {\n          importAs = `${symbol.name}_${index}`;\n          exportAs.push({symbol, exportAs: importAs});\n        }\n        return {\n          __symbol: index,\n          name: symbol.name,\n          // We convert the source filenames tinto output filenames,\n          // as the generated summary file will be used when the current\n          // compilation unit is used as a library\n          filePath: this.summaryResolver.getLibraryFileName(symbol.filePath),\n          importAs: importAs\n        };\n      })\n    });\n    return {json, exportAs};\n  }\n/**\n * @param {?} value\n * @return {?}\n */\n\nprivate processValue(value: any): any { return visitValue(value, this, null); }\n/**\n * @param {?} value\n * @param {?} context\n * @return {?}\n */\nvisitOther(value: any, context: any): any {\n    if (value instanceof StaticSymbol) {\n      const /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n      let /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n      // Note: == on purpose to compare with undefined!\n      if (index == null) {\n        index = this.indexBySymbol.size;\n        this.indexBySymbol.set(baseSymbol, index);\n        this.symbols.push(baseSymbol);\n      }\n      return {__symbol: index, members: value.members};\n    }\n  }\n}\n\nfunction ToJsonSerializer_tsickle_Closure_declarations() {\n/** @type {?} */\nToJsonSerializer.prototype.symbols;\n/** @type {?} */\nToJsonSerializer.prototype.indexBySymbol;\n/** @type {?} */\nToJsonSerializer.prototype.processedSummaryBySymbol;\n/** @type {?} */\nToJsonSerializer.prototype.processedSummaries;\n/** @type {?} */\nToJsonSerializer.prototype.symbolResolver;\n/** @type {?} */\nToJsonSerializer.prototype.summaryResolver;\n}\n\nclass ForJitSerializer {\nprivate data = new Map<StaticSymbol, {\n    summary: CompileTypeSummary,\n    metadata: CompileNgModuleMetadata|CompileDirectiveMetadata|CompilePipeMetadata|\n    CompileTypeMetadata|null,\n    isLibrary: boolean\n  }>();\n/**\n * @param {?} outputCtx\n * @param {?} symbolResolver\n */\nconstructor(private outputCtx: OutputContext,\nprivate symbolResolver: StaticSymbolResolver) {}\n/**\n * @param {?} summary\n * @param {?} metadata\n * @return {?}\n */\naddSourceType(\n      summary: CompileTypeSummary, metadata: CompileNgModuleMetadata|CompileDirectiveMetadata|\n      CompilePipeMetadata|CompileTypeMetadata) {\n    this.data.set(summary.type.reference, {summary, metadata, isLibrary: false});\n  }\n/**\n * @param {?} summary\n * @return {?}\n */\naddLibType(summary: CompileTypeSummary) {\n    this.data.set(summary.type.reference, {summary, metadata: null, isLibrary: true});\n  }\n/**\n * @param {?} exportAs\n * @return {?}\n */\nserialize(exportAs: {symbol: StaticSymbol, exportAs: string}[]): void {\n    const /** @type {?} */ ngModuleSymbols = new Set<StaticSymbol>();\n\n    Array.from(this.data.values()).forEach(({summary, metadata, isLibrary}) => {\n      if (summary.summaryKind === CompileSummaryKind.NgModule) {\n        // collect the symbols that refer to NgModule classes.\n        // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n        // we don't add the summaries of all referenced symbols when we serialize type summaries.\n        // See serializeSummaries for details.\n        ngModuleSymbols.add(summary.type.reference);\n        const /** @type {?} */ modSummary = /** @type {?} */(( <CompileNgModuleSummary>summary));\n        modSummary.modules.forEach((mod) => { ngModuleSymbols.add(mod.reference); });\n      }\n      if (!isLibrary) {\n        const /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n        createSummaryForJitFunction(\n            this.outputCtx, summary.type.reference,\n            this.serializeSummaryWithDeps(summary, /** @type {?} */(( metadata))));\n      }\n    });\n\n    exportAs.forEach((entry) => {\n      const /** @type {?} */ symbol = entry.symbol;\n      if (ngModuleSymbols.has(symbol)) {\n        const /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n        this.outputCtx.statements.push(\n            o.variable(jitExportAsName).set(this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n              o.StmtModifier.Exported\n            ]));\n      }\n    });\n  }\n/**\n * @param {?} summary\n * @param {?} metadata\n * @return {?}\n */\n\nprivate serializeSummaryWithDeps(\n      summary: CompileTypeSummary, metadata: CompileNgModuleMetadata|CompileDirectiveMetadata|\n      CompilePipeMetadata|CompileTypeMetadata): o.Expression {\n    const /** @type {?} */ expressions: o.Expression[] = [this.serializeSummary(summary)];\n    let /** @type {?} */ providers: CompileProviderMetadata[] = [];\n    if (metadata instanceof CompileNgModuleMetadata) {\n      expressions.push(...\n                       // For directives / pipes, we only add the declared ones,\n                       // and rely on transitively importing NgModules to get the transitive\n                       // summaries.\n                       metadata.declaredDirectives.concat(metadata.declaredPipes)\n                           .map(type => type.reference)\n                           // For modules,\n                           // we also add the summaries for modules\n                           // from libraries.\n                           // This is ok as we produce reexports for all transitive modules.\n                           .concat(metadata.transitiveModule.modules.map(type => type.reference)\n                                       .filter(ref => ref !== metadata.type.reference))\n                           .map((ref) => this.serializeSummaryRef(ref)));\n      // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n      // and we already have transitive modules.\n      providers = metadata.providers;\n    } else if (summary.summaryKind === CompileSummaryKind.Directive) {\n      const /** @type {?} */ dirSummary = /** @type {?} */(( <CompileDirectiveSummary>summary));\n      providers = dirSummary.providers.concat(dirSummary.viewProviders);\n    }\n    // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n    // declaredDirectives / declaredPipes), as we allow\n    // providers without ctor arguments to skip the `@Injectable` decorator,\n    // i.e. we didn't generate .ngsummary.ts files for these.\n    expressions.push(\n        ...providers.filter(provider => !!provider.useClass).map(provider => this.serializeSummary( /** @type {?} */(({\n          summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        } as CompileTypeSummary)))));\n    return o.literalArr(expressions);\n  }\n/**\n * @param {?} typeSymbol\n * @return {?}\n */\n\nprivate serializeSummaryRef(typeSymbol: StaticSymbol): o.Expression {\n    const /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(\n        summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n    return this.outputCtx.importExpr(jitImportedSymbol);\n  }\n/**\n * @param {?} data\n * @return {?}\n */\n\nprivate serializeSummary(data: {[key: string]: any}): o.Expression {\n    const /** @type {?} */ outputCtx = this.outputCtx;\nclass Transformer implements ValueVisitor {\n/**\n * @param {?} arr\n * @param {?} context\n * @return {?}\n */\nvisitArray(arr: any[], context: any): any {\n        return o.literalArr(arr.map(entry => visitValue(entry, this, context)));\n      }\n/**\n * @param {?} map\n * @param {?} context\n * @return {?}\n */\nvisitStringMap(map: {[key: string]: any}, context: any): any {\n        return new o.LiteralMapExpr(Object.keys(map).map(\n            (key) => new o.LiteralMapEntry(key, visitValue(map[key], this, context), false)));\n      }\n/**\n * @param {?} value\n * @param {?} context\n * @return {?}\n */\nvisitPrimitive(value: any, context: any): any { return o.literal(value); }\n/**\n * @param {?} value\n * @param {?} context\n * @return {?}\n */\nvisitOther(value: any, context: any): any {\n        if (value instanceof StaticSymbol) {\n          return outputCtx.importExpr(value);\n        } else {\n          throw new Error(`Illegal State: Encountered value ${value}`);\n        }\n      }\n    }\n\n    return visitValue(data, new Transformer(), null);\n  }\n}\n\nfunction ForJitSerializer_tsickle_Closure_declarations() {\n/** @type {?} */\nForJitSerializer.prototype.data;\n/** @type {?} */\nForJitSerializer.prototype.outputCtx;\n/** @type {?} */\nForJitSerializer.prototype.symbolResolver;\n}\n\nclass FromJsonDeserializer extends ValueTransformer {\nprivate symbols: StaticSymbol[];\n/**\n * @param {?} symbolCache\n */\nconstructor(private symbolCache: StaticSymbolCache) { super(); }\n/**\n * @param {?} json\n * @return {?}\n */\ndeserialize(json: string):\n      {summaries: Summary<StaticSymbol>[], importAs: {symbol: StaticSymbol, importAs: string}[]} {\n    const /** @type {?} */ data: {summaries: any[], symbols: any[]} = JSON.parse(json);\n    const /** @type {?} */ importAs: {symbol: StaticSymbol, importAs: string}[] = [];\n    this.symbols = [];\n    data.symbols.forEach((serializedSymbol) => {\n      const /** @type {?} */ symbol = this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n      this.symbols.push(symbol);\n      if (serializedSymbol.importAs) {\n        importAs.push({symbol: symbol, importAs: serializedSymbol.importAs});\n      }\n    });\n    const /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n    return {summaries, importAs};\n  }\n/**\n * @param {?} map\n * @param {?} context\n * @return {?}\n */\nvisitStringMap(map: {[key: string]: any}, context: any): any {\n    if ('__symbol' in map) {\n      const /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n      const /** @type {?} */ members = map['members'];\n      return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                              baseSymbol;\n    } else {\n      return super.visitStringMap(map, context);\n    }\n  }\n}\n\nfunction FromJsonDeserializer_tsickle_Closure_declarations() {\n/** @type {?} */\nFromJsonDeserializer.prototype.symbols;\n/** @type {?} */\nFromJsonDeserializer.prototype.symbolCache;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompileIdentifierMetadata, CompileNgModuleMetadata, CompileNgModuleSummary, CompilePipeMetadata, CompileProviderMetadata, CompileStylesheetMetadata, CompileSummaryKind, CompileTypeMetadata, CompileTypeSummary, componentFactoryName, createHostComponentMeta, flatten, identifierName, sourceUrl, templateSourceUrl} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {Identifiers, createTokenForExternalReference} from '../identifiers';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {OutputEmitter} from '../output/abstract_emitter';\nimport * as o from '../output/output_ast';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {SummaryResolver} from '../summary_resolver';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {OutputContext, syntaxError} from '../util';\nimport {ViewCompileResult, ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {AotCompilerHost} from './compiler_host';\nimport {GeneratedFile} from './generated_file';\nimport {StaticReflector} from './static_reflector';\nimport {StaticSymbol} from './static_symbol';\nimport {ResolvedStaticSymbol, StaticSymbolResolver} from './static_symbol_resolver';\nimport {createForJitStub, serializeSummaries} from './summary_serializer';\nimport {ngfactoryFilePath, splitTypescriptSuffix, summaryFileName, summaryForJitFileName, summaryForJitName} from './util';\nexport class AotCompiler {\n/**\n * @param {?} _config\n * @param {?} _host\n * @param {?} _reflector\n * @param {?} _metadataResolver\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _ngModuleCompiler\n * @param {?} _outputEmitter\n * @param {?} _summaryResolver\n * @param {?} _localeId\n * @param {?} _translationFormat\n * @param {?} _enableSummariesForJit\n * @param {?} _symbolResolver\n */\nconstructor(\nprivate _config: CompilerConfig,\nprivate _host: AotCompilerHost,\nprivate _reflector: StaticReflector,\nprivate _metadataResolver: CompileMetadataResolver,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _ngModuleCompiler: NgModuleCompiler,\nprivate _outputEmitter: OutputEmitter,\nprivate _summaryResolver: SummaryResolver<StaticSymbol>,\nprivate _localeId: string|null,\nprivate _translationFormat: string|null,\nprivate _enableSummariesForJit: boolean|null,\nprivate _symbolResolver: StaticSymbolResolver) {}\n/**\n * @return {?}\n */\nclearCache() { this._metadataResolver.clearCache(); }\n/**\n * @param {?} rootFiles\n * @return {?}\n */\nanalyzeModulesSync(rootFiles: string[]): NgAnalyzedModules {\n    const /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n    const /** @type {?} */ analyzeResult =\n        analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n    analyzeResult.ngModules.forEach(\n        ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n            ngModule.type.reference, true));\n    return analyzeResult;\n  }\n/**\n * @param {?} rootFiles\n * @return {?}\n */\nanalyzeModulesAsync(rootFiles: string[]): Promise<NgAnalyzedModules> {\n    const /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n    const /** @type {?} */ analyzeResult =\n        analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n    return Promise\n        .all(analyzeResult.ngModules.map(\n            ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, false)))\n        .then(() => analyzeResult);\n  }\n/**\n * @param {?} analyzeResult\n * @return {?}\n */\nemitAllStubs(analyzeResult: NgAnalyzedModules): GeneratedFile[] {\n    const {files} = analyzeResult;\n    const /** @type {?} */ sourceModules = files.map(\n        file =>\n            this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, false));\n    return flatten(sourceModules);\n  }\n/**\n * @param {?} analyzeResult\n * @return {?}\n */\nemitPartialStubs(analyzeResult: NgAnalyzedModules): GeneratedFile[] {\n    const {files} = analyzeResult;\n    const /** @type {?} */ sourceModules = files.map(\n        file =>\n            this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, true));\n    return flatten(sourceModules);\n  }\n/**\n * @param {?} analyzeResult\n * @return {?}\n */\nemitAllImpls(analyzeResult: NgAnalyzedModules): GeneratedFile[] {\n    const {ngModuleByPipeOrDirective, files} = analyzeResult;\n    const /** @type {?} */ sourceModules = files.map(\n        file => this._compileImplFile(\n            file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules,\n            file.injectables));\n    return flatten(sourceModules);\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} directives\n * @param {?} pipes\n * @param {?} ngModules\n * @param {?} partial\n * @return {?}\n */\n\nprivate _compileStubFile(\n      srcFileUrl: string, directives: StaticSymbol[], pipes: StaticSymbol[],\n      ngModules: StaticSymbol[], partial: boolean): GeneratedFile[] {\n    // partial is true when we only need the files we are certain will produce a factory and/or\n    // summary.\n    // This is the normal case for `ngc` but if we assume libraryies are generating their own\n    // factories\n    // then we might need a factory for a file that re-exports a module or factory which we cannot\n    // know\n    // ahead of time so we need a stub generate for all non-.d.ts files. The .d.ts files do not need\n    // to\n    // be excluded here because they are excluded when the modules are analyzed. If a factory ends\n    // up\n    // not being needed, the factory file is not written in writeFile callback.\n    const /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n    const /** @type {?} */ generatedFiles: GeneratedFile[] = [];\n\n    const /** @type {?} */ ngFactoryOutputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n    const /** @type {?} */ jitSummaryOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n\n    // create exports that user code can reference\n    ngModules.forEach((ngModuleReference) => {\n      this._ngModuleCompiler.createStub(ngFactoryOutputCtx, ngModuleReference);\n      createForJitStub(jitSummaryOutputCtx, ngModuleReference);\n    });\n\n    let /** @type {?} */ partialJitStubRequired = false;\n    let /** @type {?} */ partialFactoryStubRequired = false;\n\n    // create stubs for external stylesheets (always empty, as users should not import anything from\n    // the generated code)\n    directives.forEach((dirType) => {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata( /** @type {?} */((<any>dirType)));\n\n      partialJitStubRequired = true;\n\n      if (!compMeta.isComponent) {\n        return;\n      } /** @type {?} */((\n      // Note: compMeta is a component and therefore template is non null.\n      compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n        const /** @type {?} */ styleContext = this._createOutputContext(_stylesModuleUrl( /** @type {?} */((\n            stylesheetMeta.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        _createTypeReferenceStub(styleContext, Identifiers.ComponentFactory);\n        generatedFiles.push(this._codegenSourceModule( /** @type {?} */((stylesheetMeta.moduleUrl)), styleContext));\n      });\n\n      partialFactoryStubRequired = true;\n    });\n\n    // If we need all the stubs to be generated then insert an arbitrary reference into the stub\n    if ((partialFactoryStubRequired || !partial) && ngFactoryOutputCtx.statements.length <= 0) {\n      _createTypeReferenceStub(ngFactoryOutputCtx, Identifiers.ComponentFactory);\n    }\n    if ((partialJitStubRequired || !partial || (pipes && pipes.length > 0)) &&\n        jitSummaryOutputCtx.statements.length <= 0) {\n      _createTypeReferenceStub(jitSummaryOutputCtx, Identifiers.ComponentFactory);\n    }\n\n    // Note: we are creating stub ngfactory/ngsummary for all source files,\n    // as the real calculation requires almost the same logic as producing the real content for\n    // them. Our pipeline will filter out empty ones at the end. Because of this filter, however,\n    // stub references to the reference type needs to be generated even if the user cannot\n    // refer to type from the `.d.ts` file to prevent the file being elided from the emit.\n    generatedFiles.push(this._codegenSourceModule(srcFileUrl, ngFactoryOutputCtx));\n    if (this._enableSummariesForJit) {\n      generatedFiles.push(this._codegenSourceModule(srcFileUrl, jitSummaryOutputCtx));\n    }\n\n    return generatedFiles;\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} ngModuleByPipeOrDirective\n * @param {?} directives\n * @param {?} pipes\n * @param {?} ngModules\n * @param {?} injectables\n * @return {?}\n */\n\nprivate _compileImplFile(\n      srcFileUrl: string, ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>,\n      directives: StaticSymbol[], pipes: StaticSymbol[], ngModules: StaticSymbol[],\n      injectables: StaticSymbol[]): GeneratedFile[] {\n    const /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n    const /** @type {?} */ generatedFiles: GeneratedFile[] = [];\n\n    const /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n\n    generatedFiles.push(\n        ...this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n\n    // compile all ng modules\n    ngModules.forEach((ngModuleType) => this._compileModule(outputCtx, ngModuleType));\n\n    // compile components\n    directives.forEach((dirType) => {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata( /** @type {?} */((<any>dirType)));\n      if (!compMeta.isComponent) {\n        return;\n      }\n      const /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n      if (!ngModule) {\n        throw new Error(\n            `Internal Error: cannot determine the module for component ${identifierName(compMeta.type)}!`);\n      }\n\n      // compile styles\n      const /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */((\n      // Note: compMeta is a component and therefore template is non null.\n      compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n        generatedFiles.push(\n            this._codegenStyles( /** @type {?} */((stylesheetMeta.moduleUrl)), compMeta, stylesheetMeta, fileSuffix));\n      });\n\n      // compile components\n      const /** @type {?} */ compViewVars = this._compileComponent(\n          outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet,\n          fileSuffix);\n      this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n    });\n    if (outputCtx.statements.length > 0) {\n      const /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n      generatedFiles.unshift(srcModule);\n    }\n    return generatedFiles;\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} directives\n * @param {?} pipes\n * @param {?} ngModules\n * @param {?} injectables\n * @param {?} ngFactoryCtx\n * @return {?}\n */\n\nprivate _createSummary(\n      srcFileUrl: string, directives: StaticSymbol[], pipes: StaticSymbol[],\n      ngModules: StaticSymbol[], injectables: StaticSymbol[],\n      ngFactoryCtx: OutputContext): GeneratedFile[] {\n    const /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n                                .map(symbol => this._symbolResolver.resolveSymbol(symbol));\n    const /** @type {?} */ typeData: {\n      summary: CompileTypeSummary,\n      metadata: CompileNgModuleMetadata | CompileDirectiveMetadata | CompilePipeMetadata |\n          CompileTypeMetadata\n    }[] =\n        [\n          ...ngModules.map(ref => ({\n                             summary: /** @type {?} */(( this._metadataResolver.getNgModuleSummary(ref))),\n                             metadata: /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(ref)))\n                           })),\n          ...directives.map(ref => ({\n                              summary: /** @type {?} */(( this._metadataResolver.getDirectiveSummary(ref))),\n                              metadata: /** @type {?} */(( this._metadataResolver.getDirectiveMetadata(ref)))\n                            })),\n          ...pipes.map(ref => ({\n                         summary: /** @type {?} */(( this._metadataResolver.getPipeSummary(ref))),\n                         metadata: /** @type {?} */(( this._metadataResolver.getPipeMetadata(ref)))\n                       })),\n          ...injectables.map(ref => ({\n                               summary: /** @type {?} */(( this._metadataResolver.getInjectableSummary(ref))),\n                               metadata: /** @type {?} */(( this._metadataResolver.getInjectableSummary(ref))).type\n                             }))\n        ];\n    const /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n    const {json, exportAs} = serializeSummaries(\n        forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData);\n    exportAs.forEach((entry) => {\n      ngFactoryCtx.statements.push(\n          o.variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n            o.StmtModifier.Exported\n          ]));\n    });\n    const /** @type {?} */ summaryJson = new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n    if (this._enableSummariesForJit) {\n      return [summaryJson, this._codegenSourceModule(srcFileUrl, forJitOutputCtx)];\n    };\n\n    return [summaryJson];\n  }\n/**\n * @param {?} outputCtx\n * @param {?} ngModuleType\n * @return {?}\n */\n\nprivate _compileModule(outputCtx: OutputContext, ngModuleType: StaticSymbol): void {\n    const /** @type {?} */ ngModule = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n    const /** @type {?} */ providers: CompileProviderMetadata[] = [];\n\n    if (this._localeId) {\n      providers.push({\n        token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n        useValue: this._localeId,\n      });\n    }\n\n    if (this._translationFormat) {\n      providers.push({\n        token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n        useValue: this._translationFormat\n      });\n    }\n\n    this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n  }\n/**\n * @param {?} outputCtx\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} fileSuffix\n * @return {?}\n */\n\nprivate _compileComponentFactory(\n      outputCtx: OutputContext, compMeta: CompileDirectiveMetadata,\n      ngModule: CompileNgModuleMetadata, fileSuffix: string): void {\n    const /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n    const /** @type {?} */ hostMeta = createHostComponentMeta(\n        hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n    const /** @type {?} */ hostViewFactoryVar =\n        this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n    const /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n    const /** @type {?} */ inputsExprs: o.LiteralMapEntry[] = [];\n    for (let /** @type {?} */ propName in compMeta.inputs) {\n      const /** @type {?} */ templateName = compMeta.inputs[propName];\n      // Don't quote so that the key gets minified...\n      inputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n    }\n    const /** @type {?} */ outputsExprs: o.LiteralMapEntry[] = [];\n    for (let /** @type {?} */ propName in compMeta.outputs) {\n      const /** @type {?} */ templateName = compMeta.outputs[propName];\n      // Don't quote so that the key gets minified...\n      outputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n    }\n\n    outputCtx.statements.push(\n        o.variable(compFactoryVar)\n            .set(o.importExpr(Identifiers.createComponentFactory).callFn([\n              o.literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n              o.variable(hostViewFactoryVar), new o.LiteralMapExpr(inputsExprs),\n              new o.LiteralMapExpr(outputsExprs),\n              o.literalArr( /** @type {?} */((\n                  compMeta.template)).ngContentSelectors.map(selector => o.literal(selector)))\n            ]))\n            .toDeclStmt(\n                o.importType(\n                    Identifiers.ComponentFactory,\n                    [ /** @type {?} */((o.expressionType(outputCtx.importExpr(compMeta.type.reference))))],\n                    [o.TypeModifier.Const]),\n                [o.StmtModifier.Final, o.StmtModifier.Exported]));\n  }\n/**\n * @param {?} outputCtx\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} directiveIdentifiers\n * @param {?} componentStyles\n * @param {?} fileSuffix\n * @return {?}\n */\n\nprivate _compileComponent(\n      outputCtx: OutputContext, compMeta: CompileDirectiveMetadata,\n      ngModule: CompileNgModuleMetadata, directiveIdentifiers: CompileIdentifierMetadata[],\n      componentStyles: CompiledStylesheet|null, fileSuffix: string): ViewCompileResult {\n    const /** @type {?} */ directives =\n        directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n\n    const {template: parsedTemplate, pipes: usedPipes} = this._templateParser.parse(\n        compMeta, /** @type {?} */(( /** @type {?} */(( compMeta.template)).template)), directives, pipes, ngModule.schemas,\n        templateSourceUrl(ngModule.type, compMeta, /** @type {?} */(( compMeta.template))));\n    const /** @type {?} */ stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n    const /** @type {?} */ viewResult = this._viewCompiler.compileComponent(\n        outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n    if (componentStyles) {\n      _resolveStyleStatements(\n          this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta),\n          fileSuffix);\n    }\n    return viewResult;\n  }\n/**\n * @param {?} genFilePath\n * @return {?}\n */\n\nprivate _createOutputContext(genFilePath: string): OutputContext {\n    const /** @type {?} */ importExpr = (symbol: StaticSymbol, typeParams: o.Type[] | null = null) => {\n      if (!(symbol instanceof StaticSymbol)) {\n        throw new Error(`Internal error: unknown identifier ${JSON.stringify(symbol)}`);\n      }\n      const /** @type {?} */ arity = this._symbolResolver.getTypeArity(symbol) || 0;\n      const {filePath, name, members} = this._symbolResolver.getImportAs(symbol) || symbol;\n      const /** @type {?} */ importModule = this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n\n      // It should be good enough to compare filePath to genFilePath and if they are equal\n      // there is a self reference. However, ngfactory files generate to .ts but their\n      // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n      // and is tracked by #17705.\n      const /** @type {?} */ selfReference = this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n      const /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n\n      // If we are in a type expression that refers to a generic type then supply\n      // the required type parameters. If there were not enough type parameters\n      // supplied, supply any as the type. Outside a type expression the reference\n      // should not supply type parameters and be treated as a simple value reference\n      // to the constructor function itself.\n      const /** @type {?} */ suppliedTypeParams = typeParams || [];\n      const /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n      const /** @type {?} */ allTypeParams =\n          suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(o.DYNAMIC_TYPE));\n      return members.reduce(\n          (expr, memberName) => expr.prop(memberName), /** @type {?} */((\n          <o.Expression>o.importExpr(\n              new o.ExternalReference(moduleName, name, null), allTypeParams))));\n    };\n\n    return {statements: [], genFilePath, importExpr};\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} compMeta\n * @param {?} stylesheetMetadata\n * @param {?} fileSuffix\n * @return {?}\n */\n\nprivate _codegenStyles(\n      srcFileUrl: string, compMeta: CompileDirectiveMetadata,\n      stylesheetMetadata: CompileStylesheetMetadata, fileSuffix: string): GeneratedFile {\n    const /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl( /** @type {?} */((\n        stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n    const /** @type {?} */ compiledStylesheet =\n        this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n    _resolveStyleStatements(\n        this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta),\n        fileSuffix);\n    return this._codegenSourceModule(srcFileUrl, outputCtx);\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _codegenSourceModule(srcFileUrl: string, ctx: OutputContext): GeneratedFile {\n    return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n  }\n}\n\nfunction AotCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nAotCompiler.prototype._config;\n/** @type {?} */\nAotCompiler.prototype._host;\n/** @type {?} */\nAotCompiler.prototype._reflector;\n/** @type {?} */\nAotCompiler.prototype._metadataResolver;\n/** @type {?} */\nAotCompiler.prototype._templateParser;\n/** @type {?} */\nAotCompiler.prototype._styleCompiler;\n/** @type {?} */\nAotCompiler.prototype._viewCompiler;\n/** @type {?} */\nAotCompiler.prototype._ngModuleCompiler;\n/** @type {?} */\nAotCompiler.prototype._outputEmitter;\n/** @type {?} */\nAotCompiler.prototype._summaryResolver;\n/** @type {?} */\nAotCompiler.prototype._localeId;\n/** @type {?} */\nAotCompiler.prototype._translationFormat;\n/** @type {?} */\nAotCompiler.prototype._enableSummariesForJit;\n/** @type {?} */\nAotCompiler.prototype._symbolResolver;\n}\n\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction _createTypeReferenceStub(outputCtx: OutputContext, reference: o.ExternalReference) {\n  outputCtx.statements.push(o.importExpr(reference).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(\n    symbolResolver: StaticSymbolResolver, compileResult: CompiledStylesheet, needsShim: boolean,\n    fileSuffix: string): void {\n  compileResult.dependencies.forEach((dep) => {\n    dep.setValue(symbolResolver.getStaticSymbol(\n        _stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n  });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl: string, shim: boolean, suffix: string): string {\n  return `${stylesheetUrl}${shim ? '.shim' : ''}.ngstyle${suffix}`;\n}\n/**\n * @record\n */\nexport function NgAnalyzedModules() {}\n\n\nfunction NgAnalyzedModules_tsickle_Closure_declarations() {\n/** @type {?} */\nNgAnalyzedModules.prototype.ngModules;\n/** @type {?} */\nNgAnalyzedModules.prototype.ngModuleByPipeOrDirective;\n/** @type {?} */\nNgAnalyzedModules.prototype.files;\n/** @type {?|undefined} */\nNgAnalyzedModules.prototype.symbolsMissingModule;\n}\n\n\nexport interface NgAnalyzedModules {\n  ngModules: CompileNgModuleMetadata[];\n  ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>;\n  files: Array<{\n    srcUrl: string,\n    directives: StaticSymbol[],\n    pipes: StaticSymbol[],\n    ngModules: StaticSymbol[],\n    injectables: StaticSymbol[]\n  }>;\n  symbolsMissingModule?: StaticSymbol[];\n}\n/**\n * @record\n */\nexport function NgAnalyzeModulesHost() {}\n\n\nfunction NgAnalyzeModulesHost_tsickle_Closure_declarations() {\n/** @type {?} */\nNgAnalyzeModulesHost.prototype.isSourceFile;\n}\n\n\nexport interface NgAnalyzeModulesHost { isSourceFile(filePath: string): boolean; }\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeNgModules(\n    programStaticSymbols: StaticSymbol[], host: NgAnalyzeModulesHost,\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const {ngModules, symbolsMissingModule} =\n      _createNgModules(programStaticSymbols, host, metadataResolver);\n  return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeAndValidateNgModules(\n    programStaticSymbols: StaticSymbol[], host: NgAnalyzeModulesHost,\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n  if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n    const /** @type {?} */ messages = result.symbolsMissingModule.map(\n        s =>\n            `Cannot determine the module for class ${s.name} in ${s.filePath}! Add ${s.name} to the NgModule to fix it.`);\n    throw syntaxError(messages.join('\\n'));\n  }\n  return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(\n    programSymbols: StaticSymbol[], ngModuleMetas: CompileNgModuleMetadata[],\n    symbolsMissingModule: StaticSymbol[],\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const /** @type {?} */ moduleMetasByRef = new Map<any, CompileNgModuleMetadata>();\n  ngModuleMetas.forEach((ngModule) => moduleMetasByRef.set(ngModule.type.reference, ngModule));\n  const /** @type {?} */ ngModuleByPipeOrDirective = new Map<StaticSymbol, CompileNgModuleMetadata>();\n  const /** @type {?} */ ngModulesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngDirectivesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngPipesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngInjectablesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ filePaths = new Set<string>();\n\n  // Make sure we produce an analyzed file for each input file\n  programSymbols.forEach((symbol) => {\n    const /** @type {?} */ filePath = symbol.filePath;\n    filePaths.add(filePath);\n    if (metadataResolver.isInjectable(symbol)) {\n      ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n    }\n  });\n\n  // Looping over all modules to construct:\n  // - a map from file to modules `ngModulesByFile`,\n  // - a map from file to directives `ngDirectivesByFile`,\n  // - a map from file to pipes `ngPipesByFile`,\n  // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n  ngModuleMetas.forEach((ngModuleMeta) => {\n    const /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n    filePaths.add(srcFileUrl);\n    ngModulesByFile.set(\n        srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n\n    ngModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n      const /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n      filePaths.add(fileUrl);\n      ngDirectivesByFile.set(\n          fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n      ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n    });\n    ngModuleMeta.declaredPipes.forEach((pipeIdentifier) => {\n      const /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n      filePaths.add(fileUrl);\n      ngPipesByFile.set(\n          fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n      ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n    });\n  });\n\n  const /** @type {?} */ files: {\n    srcUrl: string,\n    directives: StaticSymbol[],\n    pipes: StaticSymbol[],\n    ngModules: StaticSymbol[],\n    injectables: StaticSymbol[]\n  }[] = [];\n\n  filePaths.forEach((srcUrl) => {\n    const /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n    const /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n    const /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n    const /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n    files.push({srcUrl, directives, pipes, ngModules, injectables});\n  });\n\n  return {\n    // map directive/pipe to module\n    ngModuleByPipeOrDirective,\n    // list modules and directives for every source file\n    files,\n    ngModules: ngModuleMetas, symbolsMissingModule\n  };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nexport function extractProgramSymbols(\n    staticSymbolResolver: StaticSymbolResolver, files: string[],\n    host: NgAnalyzeModulesHost): StaticSymbol[] {\n  const /** @type {?} */ staticSymbols: StaticSymbol[] = [];\n  files.filter(fileName => host.isSourceFile(fileName)).forEach(sourceFile => {\n    staticSymbolResolver.getSymbolsOf(sourceFile).forEach((symbol) => {\n      const /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n      const /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n      if (symbolMeta) {\n        if (symbolMeta.__symbolic != 'error') {\n          // Ignore symbols that are only included to record error information.\n          staticSymbols.push(resolvedSymbol.symbol);\n        }\n      }\n    });\n  });\n\n  return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(\n    programStaticSymbols: StaticSymbol[], host: NgAnalyzeModulesHost,\n    metadataResolver: CompileMetadataResolver):\n    {ngModules: CompileNgModuleMetadata[], symbolsMissingModule: StaticSymbol[]} {\n  const /** @type {?} */ ngModules = new Map<any, CompileNgModuleMetadata>();\n  const /** @type {?} */ programPipesAndDirectives: StaticSymbol[] = [];\n  const /** @type {?} */ ngModulePipesAndDirective = new Set<StaticSymbol>();\n\n  const /** @type {?} */ addNgModule = (staticSymbol: any) => {\n    if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n      return false;\n    }\n    const /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n    if (ngModule) {\n      ngModules.set(ngModule.type.reference, ngModule);\n      ngModule.declaredDirectives.forEach((dir) => ngModulePipesAndDirective.add(dir.reference));\n      ngModule.declaredPipes.forEach((pipe) => ngModulePipesAndDirective.add(pipe.reference));\n      // For every input module add the list of transitively included modules\n      ngModule.transitiveModule.modules.forEach(modMeta => addNgModule(modMeta.reference));\n    }\n    return !!ngModule;\n  };\n  programStaticSymbols.forEach((staticSymbol) => {\n    if (!addNgModule(staticSymbol) &&\n        (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n      programPipesAndDirectives.push(staticSymbol);\n    }\n  });\n\n  // Throw an error if any of the program pipe or directives is not declared by a module\n  const /** @type {?} */ symbolsMissingModule =\n      programPipesAndDirectives.filter(s => !ngModulePipesAndDirective.has(s));\n\n  return {ngModules: Array.from(ngModules.values()), symbolsMissingModule};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, Component, ContentChild, ContentChildren, Directive, Host, HostBinding, HostListener, Inject, Injectable, Input, NgModule, Optional, Output, Pipe, Self, SkipSelf, ViewChild, ViewChildren, animate, group, keyframes, sequence, state, style, transition, trigger} from '@angular/core';\n\nimport {CompileSummaryKind} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport * as o from '../output/output_ast';\nimport {SummaryResolver} from '../summary_resolver';\nimport {syntaxError} from '../util';\n\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\n\nconst /** @type {?} */ ANGULAR_CORE = '@angular/core';\nconst /** @type {?} */ ANGULAR_ROUTER = '@angular/router';\n\nconst /** @type {?} */ HIDDEN_KEY = /^\\$.*\\$$/;\n\nconst /** @type {?} */ IGNORE = {\n  __symbolic: 'ignore'\n};\n\nconst /** @type {?} */ USE_VALUE = 'useValue';\nconst /** @type {?} */ PROVIDE = 'provide';\nconst /** @type {?} */ REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value: any): boolean {\n  return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector implements CompileReflector {\nprivate annotationCache = new Map<StaticSymbol, any[]>();\nprivate propertyCache = new Map<StaticSymbol, {[key: string]: any[]}>();\nprivate parameterCache = new Map<StaticSymbol, any[]>();\nprivate methodCache = new Map<StaticSymbol, {[key: string]: boolean}>();\nprivate conversionMap = new Map<StaticSymbol, (context: StaticSymbol, args: any[]) => any>();\nprivate injectionToken: StaticSymbol;\nprivate opaqueToken: StaticSymbol;\nprivate ROUTES: StaticSymbol;\nprivate ANALYZE_FOR_ENTRY_COMPONENTS: StaticSymbol;\nprivate annotationForParentClassWithSummaryKind = new Map<CompileSummaryKind, any[]>();\nprivate annotationNames = new Map<any, string>();\n/**\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?=} knownMetadataClasses\n * @param {?=} knownMetadataFunctions\n * @param {?=} errorRecorder\n */\nconstructor(\nprivate summaryResolver: SummaryResolver<StaticSymbol>,\nprivate symbolResolver: StaticSymbolResolver,\n      knownMetadataClasses: {name: string, filePath: string, ctor: any}[] = [],\n      knownMetadataFunctions: {name: string, filePath: string, fn: any}[] = [],\nprivate errorRecorder?: (error: any, fileName?: string) => void) {\n    this.initializeConversionMap();\n    knownMetadataClasses.forEach(\n        (kc) => this._registerDecoratorOrConstructor(\n            this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n    knownMetadataFunctions.forEach(\n        (kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Directive, [Directive, Component]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [Pipe]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [NgModule]);\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Injectable, [Injectable, Pipe, Directive, Component, NgModule]);\n    this.annotationNames.set(Directive, 'Directive');\n    this.annotationNames.set(Component, 'Component');\n    this.annotationNames.set(Pipe, 'Pipe');\n    this.annotationNames.set(NgModule, 'NgModule');\n    this.annotationNames.set(Injectable, 'Injectable');\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\ncomponentModuleUrl(typeOrFunc: StaticSymbol): string {\n    const /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n    return this.symbolResolver.getResourcePath(staticSymbol);\n  }\n/**\n * @param {?} ref\n * @return {?}\n */\nresolveExternalReference(ref: o.ExternalReference): StaticSymbol {\n    const /** @type {?} */ importSymbol = this.getStaticSymbol( /** @type {?} */((ref.moduleName)), /** @type {?} */(( ref.name)));\n    const /** @type {?} */ rootSymbol = this.findDeclaration( /** @type {?} */((ref.moduleName)), /** @type {?} */(( ref.name)));\n    if (importSymbol != rootSymbol) {\n      this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n    }\n    return rootSymbol;\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} name\n * @param {?=} containingFile\n * @return {?}\n */\nfindDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.findSymbolDeclaration(\n        this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n  }\n/**\n * @param {?} moduleUrl\n * @param {?} name\n * @return {?}\n */\ntryFindDeclaration(moduleUrl: string, name: string): StaticSymbol {\n    return this.symbolResolver.ignoreErrorsFor(() => this.findDeclaration(moduleUrl, name));\n  }\n/**\n * @param {?} symbol\n * @return {?}\n */\nfindSymbolDeclaration(symbol: StaticSymbol): StaticSymbol {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n    if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n      return this.findSymbolDeclaration(resolvedSymbol.metadata);\n    } else {\n      return symbol;\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\npublic annotations(type: StaticSymbol): any[] {\n    let /** @type {?} */ annotations = this.annotationCache.get(type);\n    if (!annotations) {\n      annotations = [];\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const /** @type {?} */ parentAnnotations = this.annotations(parentType);\n        annotations.push(...parentAnnotations);\n      }\n      let /** @type {?} */ ownAnnotations: any[] = [];\n      if (classMetadata['decorators']) {\n        ownAnnotations = this.simplify(type, classMetadata['decorators']);\n        annotations.push(...ownAnnotations);\n      }\n      if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n          this.summaryResolver.isLibraryFile(parentType.filePath)) {\n        const /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n        if (summary && summary.type) {\n          const /** @type {?} */ requiredAnnotationTypes = /** @type {?} */((\n              this.annotationForParentClassWithSummaryKind.get( /** @type {?} */((summary.type.summaryKind)))));\n          const /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(\n              (requiredType: any) => ownAnnotations.some(ann => ann instanceof requiredType));\n          if (!typeHasRequiredAnnotation) {\n            this.reportError(\n                syntaxError(\n                    `Class ${type.name} in ${type.filePath} extends from a ${CompileSummaryKind[( /** @type {?} */((summary.type.summaryKind)))]} in another compilation unit without duplicating the decorator. ` +\n                    `Please add a ${requiredAnnotationTypes.map((type: any) => this.annotationNames.get(type)).join(' or ')} decorator to the class.`),\n                type);\n          }\n        }\n      }\n      this.annotationCache.set(type, annotations.filter(ann => !!ann));\n    }\n    return annotations;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\npublic propMetadata(type: StaticSymbol): {[key: string]: any[]} {\n    let /** @type {?} */ propMetadata = this.propertyCache.get(type);\n    if (!propMetadata) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      propMetadata = {};\n      const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const /** @type {?} */ parentPropMetadata = this.propMetadata(parentType);\n        Object.keys(parentPropMetadata).forEach((parentProp) => { /** @type {?} */((\n          propMetadata))[parentProp] = parentPropMetadata[parentProp];\n        });\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ prop = ( /** @type {?} */((<any[]>propData)))\n                         .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n        const /** @type {?} */ decorators: any[] = [];\n        if ( /** @type {?} */((propMetadata))[propName]) {\n          decorators.push(... /** @type {?} */((propMetadata))[propName]);\n        } /** @type {?} */((\n        propMetadata))[propName] = decorators;\n        if (prop && prop['decorators']) {\n          decorators.push(...this.simplify(type, prop['decorators']));\n        }\n      });\n      this.propertyCache.set(type, propMetadata);\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\npublic parameters(type: StaticSymbol): any[] {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n      return [];\n    }\n    try {\n      let /** @type {?} */ parameters = this.parameterCache.get(type);\n      if (!parameters) {\n        const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n        const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n        const /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n        const /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n        if (ctorData) {\n          const /** @type {?} */ ctor = ( /** @type {?} */((<any[]>ctorData))).find(a => a['__symbolic'] == 'constructor');\n          const /** @type {?} */ rawParameterTypes = /** @type {?} */(( <any[]>ctor['parameters'])) || [];\n          const /** @type {?} */ parameterDecorators = /** @type {?} */(( <any[]>this.simplify(type, ctor['parameterDecorators'] || [])));\n          parameters = [];\n          rawParameterTypes.forEach((rawParamType, index) => {\n            const /** @type {?} */ nestedResult: any[] = [];\n            const /** @type {?} */ paramType = this.trySimplify(type, rawParamType);\n            if (paramType) nestedResult.push(paramType);\n            const /** @type {?} */ decorators = parameterDecorators ? parameterDecorators[index] : null;\n            if (decorators) {\n              nestedResult.push(...decorators);\n            } /** @type {?} */((\n            parameters)).push(nestedResult);\n          });\n        } else if (parentType) {\n          parameters = this.parameters(parentType);\n        }\n        if (!parameters) {\n          parameters = [];\n        }\n        this.parameterCache.set(type, parameters);\n      }\n      return parameters;\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _methodNames(type: any): {[key: string]: boolean} {\n    let /** @type {?} */ methodNames = this.methodCache.get(type);\n    if (!methodNames) {\n      const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n      methodNames = {};\n      const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const /** @type {?} */ parentMethodNames = this._methodNames(parentType);\n        Object.keys(parentMethodNames).forEach((parentProp) => { /** @type {?} */((\n          methodNames))[parentProp] = parentMethodNames[parentProp];\n        });\n      }\n\n      const /** @type {?} */ members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const /** @type {?} */ propData = members[propName];\n        const /** @type {?} */ isMethod = ( /** @type {?} */((<any[]>propData))).some(a => a['__symbolic'] == 'method'); /** @type {?} */((\n        methodNames))[propName] = /** @type {?} */(( methodNames))[propName] || isMethod;\n      });\n      this.methodCache.set(type, methodNames);\n    }\n    return methodNames;\n  }\n/**\n * @param {?} type\n * @param {?} classMetadata\n * @return {?}\n */\n\nprivate findParentType(type: StaticSymbol, classMetadata: any): StaticSymbol|undefined {\n    const /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n    if (parentType instanceof StaticSymbol) {\n      return parentType;\n    }\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(\n              `hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n    }\n    try {\n      return !!this._methodNames(type)[lcProperty];\n    } catch ( /** @type {?} */e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n/**\n * @param {?} type\n * @param {?} ctor\n * @return {?}\n */\n\nprivate _registerDecoratorOrConstructor(type: StaticSymbol, ctor: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => new ctor(...args));\n  }\n/**\n * @param {?} type\n * @param {?} fn\n * @return {?}\n */\n\nprivate _registerFunction(type: StaticSymbol, fn: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => fn.apply(undefined, args));\n  }\n/**\n * @return {?}\n */\n\nprivate initializeConversionMap(): void {\n    this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n    this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n    this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n    this.ANALYZE_FOR_ENTRY_COMPONENTS =\n        this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), Host);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Injectable'), Injectable);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), Inject);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), Optional);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Attribute'), Attribute);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChild'), ContentChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), ContentChildren);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChild'), ViewChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), ViewChildren);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), Input);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), Output);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), Pipe);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostBinding'), HostBinding);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostListener'), HostListener);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Directive'), Directive);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Component'), Component);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), NgModule);\n\n    // Note: Some metadata classes can be used directly with Provider.deps.\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), Host);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), Self);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), SkipSelf);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), Optional);\n\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), trigger);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), state);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), transition);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), style);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), animate);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), keyframes);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), sequence);\n    this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), group);\n  }\n/**\n * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n * All types passed to the StaticResolver should be pseudo-types returned by this method.\n * \n * @param {?} declarationFile the absolute path of the file where the symbol is declared\n * @param {?} name the name of the type.\n * @param {?=} members\n * @return {?}\n */\ngetStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n  }\n/**\n * @param {?} error\n * @param {?} context\n * @param {?=} path\n * @return {?}\n */\n\nprivate reportError(error: Error, context: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(error, (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n/**\n * Simplify but discard any errors\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\n\nprivate trySimplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName: string) => {};\n    const /** @type {?} */ result = this.simplify(context, value);\n    this.errorRecorder = originalRecorder;\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\n\npublic simplify(context: StaticSymbol, value: any): any {\n    const /** @type {?} */ self = this;\n    let /** @type {?} */ scope = BindingScope.empty;\n    const /** @type {?} */ calling = new Map<StaticSymbol, boolean>();\n/**\n * @param {?} context\n * @param {?} value\n * @param {?} depth\n * @param {?} references\n * @return {?}\n */\nfunction simplifyInContext(\n        context: StaticSymbol, value: any, depth: number, references: number): any {\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nfunction resolveReferenceValue(staticSymbol: StaticSymbol): any {\n        const /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n        return resolvedSymbol ? resolvedSymbol.metadata : null;\n      }\n/**\n * @param {?} functionSymbol\n * @param {?} targetFunction\n * @param {?} args\n * @return {?}\n */\nfunction simplifyCall(functionSymbol: StaticSymbol, targetFunction: any, args: any[]) {\n        if (targetFunction && targetFunction['__symbolic'] == 'function') {\n          if (calling.get(functionSymbol)) {\n            throw new Error('Recursion not supported');\n          }\n          try {\n            const /** @type {?} */ value = targetFunction['value'];\n            if (value && (depth != 0 || value.__symbolic != 'error')) {\n              const /** @type {?} */ parameters: string[] = targetFunction['parameters'];\n              const /** @type {?} */ defaults: any[] = targetFunction.defaults;\n              args = args.map(arg => simplifyInContext(context, arg, depth + 1, references))\n                         .map(arg => shouldIgnore(arg) ? undefined : arg);\n              if (defaults && defaults.length > args.length) {\n                args.push(...defaults.slice(args.length).map((value: any) => simplify(value)));\n              }\n              calling.set(functionSymbol, true);\n              const /** @type {?} */ functionScope = BindingScope.build();\n              for (let /** @type {?} */ i = 0; i < parameters.length; i++) {\n                functionScope.define(parameters[i], args[i]);\n              }\n              const /** @type {?} */ oldScope = scope;\n              let /** @type {?} */ result: any;\n              try {\n                scope = functionScope.done();\n                result = simplifyInContext(functionSymbol, value, depth + 1, references);\n              } finally {\n                scope = oldScope;\n              }\n              return result;\n            }\n          } finally {\n            calling.delete(functionSymbol);\n          }\n        }\n\n        if (depth === 0) {\n          // If depth is 0 we are evaluating the top level expression that is describing element\n          // decorator. In this case, it is a decorator we don't understand, such as a custom\n          // non-angular decorator, and we should just ignore it.\n          return IGNORE;\n        }\n        return simplify(\n            {__symbolic: 'error', message: 'Function call not supported', context: functionSymbol});\n      }\n/**\n * @param {?} expression\n * @return {?}\n */\nfunction simplify(expression: any): any {\n        if (isPrimitive(expression)) {\n          return expression;\n        }\n        if (expression instanceof Array) {\n          const /** @type {?} */ result: any[] = [];\n          for (const /** @type {?} */ item of ( /** @type {?} */((<any>expression)))) {\n            // Check for a spread expression\n            if (item && item.__symbolic === 'spread') {\n              const /** @type {?} */ spreadArray = simplify(item.expression);\n              if (Array.isArray(spreadArray)) {\n                for (const /** @type {?} */ spreadItem of spreadArray) {\n                  result.push(spreadItem);\n                }\n                continue;\n              }\n            }\n            const /** @type {?} */ value = simplify(item);\n            if (shouldIgnore(value)) {\n              continue;\n            }\n            result.push(value);\n          }\n          return result;\n        }\n        if (expression instanceof StaticSymbol) {\n          // Stop simplification at builtin symbols or if we are in a reference context\n          if (expression === self.injectionToken || expression === self.opaqueToken ||\n              self.conversionMap.has(expression) || references > 0) {\n            return expression;\n          } else {\n            const /** @type {?} */ staticSymbol = expression;\n            const /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n            if (declarationValue) {\n              return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n            } else {\n              return staticSymbol;\n            }\n          }\n        }\n        if (expression) {\n          if (expression['__symbolic']) {\n            let /** @type {?} */ staticSymbol: StaticSymbol;\n            switch (expression['__symbolic']) {\n              case 'binop':\n                let /** @type {?} */ left = simplify(expression['left']);\n                if (shouldIgnore(left)) return left;\n                let /** @type {?} */ right = simplify(expression['right']);\n                if (shouldIgnore(right)) return right;\n                switch (expression['operator']) {\n                  case '&&':\n                    return left && right;\n                  case '||':\n                    return left || right;\n                  case '|':\n                    return left | right;\n                  case '^':\n                    return left ^ right;\n                  case '&':\n                    return left & right;\n                  case '==':\n                    return left == right;\n                  case '!=':\n                    return left != right;\n                  case '===':\n                    return left === right;\n                  case '!==':\n                    return left !== right;\n                  case '<':\n                    return left < right;\n                  case '>':\n                    return left > right;\n                  case '<=':\n                    return left <= right;\n                  case '>=':\n                    return left >= right;\n                  case '<<':\n                    return left << right;\n                  case '>>':\n                    return left >> right;\n                  case '+':\n                    return left + right;\n                  case '-':\n                    return left - right;\n                  case '*':\n                    return left * right;\n                  case '/':\n                    return left / right;\n                  case '%':\n                    return left % right;\n                }\n                return null;\n              case 'if':\n                let /** @type {?} */ condition = simplify(expression['condition']);\n                return condition ? simplify(expression['thenExpression']) :\n                                   simplify(expression['elseExpression']);\n              case 'pre':\n                let /** @type {?} */ operand = simplify(expression['operand']);\n                if (shouldIgnore(operand)) return operand;\n                switch (expression['operator']) {\n                  case '+':\n                    return operand;\n                  case '-':\n                    return -operand;\n                  case '!':\n                    return !operand;\n                  case '~':\n                    return ~operand;\n                }\n                return null;\n              case 'index':\n                let /** @type {?} */ indexTarget = simplify(expression['expression']);\n                let /** @type {?} */ index = simplify(expression['index']);\n                if (indexTarget && isPrimitive(index)) return indexTarget[index];\n                return null;\n              case 'select':\n                const /** @type {?} */ member = expression['member'];\n                let /** @type {?} */ selectContext = context;\n                let /** @type {?} */ selectTarget = simplify(expression['expression']);\n                if (selectTarget instanceof StaticSymbol) {\n                  const /** @type {?} */ members = selectTarget.members.concat(member);\n                  selectContext =\n                      self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                  const /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                  if (declarationValue) {\n                    return simplifyInContext(\n                        selectContext, declarationValue, depth + 1, references);\n                  } else {\n                    return selectContext;\n                  }\n                }\n                if (selectTarget && isPrimitive(member))\n                  return simplifyInContext(\n                      selectContext, selectTarget[member], depth + 1, references);\n                return null;\n              case 'reference':\n                // Note: This only has to deal with variable references,\n                // as symbol references have been converted into StaticSymbols already\n                // in the StaticSymbolResolver!\n                const /** @type {?} */ name: string = expression['name'];\n                const /** @type {?} */ localValue = scope.resolve(name);\n                if (localValue != BindingScope.missing) {\n                  return localValue;\n                }\n                break;\n              case 'class':\n                return context;\n              case 'function':\n                return context;\n              case 'new':\n              case 'call':\n                // Determine if the function is a built-in conversion\n                staticSymbol = simplifyInContext(\n                    context, expression['expression'], depth + 1, /* references */ 0);\n                if (staticSymbol instanceof StaticSymbol) {\n                  if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                    // if somebody calls new InjectionToken, don't create an InjectionToken,\n                    // but rather return the symbol to which the InjectionToken is assigned to.\n                    return context;\n                  }\n                  const /** @type {?} */ argExpressions: any[] = expression['arguments'] || [];\n                  let /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                  if (converter) {\n                    const /** @type {?} */ args =\n                        argExpressions\n                            .map(arg => simplifyInContext(context, arg, depth + 1, references))\n                            .map(arg => shouldIgnore(arg) ? undefined : arg);\n                    return converter(context, args);\n                  } else {\n                    // Determine if the function is one we can simplify.\n                    const /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                    return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                  }\n                }\n                return IGNORE;\n              case 'error':\n                let /** @type {?} */ message = produceErrorMessage(expression);\n                if (expression['line']) {\n                  message =\n                      `${message} (position ${expression['line']+1}:${expression['character']+1} in the original .ts file)`;\n                  self.reportError(\n                      positionalError(\n                          message, context.filePath, expression['line'], expression['character']),\n                      context);\n                } else {\n                  self.reportError(new Error(message), context);\n                }\n                return IGNORE;\n              case 'ignore':\n                return expression;\n            }\n            return null;\n          }\n          return mapStringMap(expression, (value, name) => {\n            if (REFERENCE_SET.has(name)) {\n              if (name === USE_VALUE && PROVIDE in expression) {\n                // If this is a provider expression, check for special tokens that need the value\n                // during analysis.\n                const /** @type {?} */ provide = simplify(expression.provide);\n                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                  return simplify(value);\n                }\n              }\n              return simplifyInContext(context, value, depth, references + 1);\n            }\n            return simplify(value);\n          });\n        }\n        return IGNORE;\n      }\n\n      try {\n        return simplify(value);\n      } catch ( /** @type {?} */e) {\n        const /** @type {?} */ members = context.members.length ? `.${context.members.join('.')}` : '';\n        const /** @type {?} */ message =\n            `${e.message}, resolving symbol ${context.name}${members} in ${context.filePath}`;\n        if (e.fileName) {\n          throw positionalError(message, e.fileName, e.line, e.column);\n        }\n        throw syntaxError(message);\n      }\n    }\n\n    const /** @type {?} */ recordedSimplifyInContext = (context: StaticSymbol, value: any) => {\n      try {\n        return simplifyInContext(context, value, 0, 0);\n      } catch ( /** @type {?} */e) {\n        this.reportError(e, context);\n      }\n    };\n\n    const /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n                                        simplifyInContext(context, value, 0, 0);\n    if (shouldIgnore(result)) {\n      return undefined;\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate getTypeMetadata(type: StaticSymbol): {[key: string]: any} {\n    const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n    return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                                                       {__symbolic: 'class'};\n  }\n}\n\nfunction StaticReflector_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticReflector.prototype.annotationCache;\n/** @type {?} */\nStaticReflector.prototype.propertyCache;\n/** @type {?} */\nStaticReflector.prototype.parameterCache;\n/** @type {?} */\nStaticReflector.prototype.methodCache;\n/** @type {?} */\nStaticReflector.prototype.conversionMap;\n/** @type {?} */\nStaticReflector.prototype.injectionToken;\n/** @type {?} */\nStaticReflector.prototype.opaqueToken;\n/** @type {?} */\nStaticReflector.prototype.ROUTES;\n/** @type {?} */\nStaticReflector.prototype.ANALYZE_FOR_ENTRY_COMPONENTS;\n/** @type {?} */\nStaticReflector.prototype.annotationForParentClassWithSummaryKind;\n/** @type {?} */\nStaticReflector.prototype.annotationNames;\n/** @type {?} */\nStaticReflector.prototype.summaryResolver;\n/** @type {?} */\nStaticReflector.prototype.symbolResolver;\n/** @type {?} */\nStaticReflector.prototype.errorRecorder;\n}\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error: any): string {\n  switch (error.message) {\n    case 'Reference to non-exported class':\n      if (error.context && error.context.className) {\n        return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n      }\n      break;\n    case 'Variable not initialized':\n      return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n    case 'Destructuring not supported':\n      return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n    case 'Could not resolve type':\n      if (error.context && error.context.typeName) {\n        return `Could not resolve type ${error.context.typeName}`;\n      }\n      break;\n    case 'Function call not supported':\n      let /** @type {?} */ prefix =\n          error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n      return prefix +\n          'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n    case 'Reference to a local symbol':\n      if (error.context && error.context.name) {\n        return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n      }\n      break;\n  }\n  return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error: any): string {\n  return `Error encountered resolving symbol values statically. ${expandedMessage(error)}`;\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input: {[key: string]: any}, transform: (value: any, key: string) => any):\n    {[key: string]: any} {\n  if (!input) return {};\n  const /** @type {?} */ result: {[key: string]: any} = {};\n  Object.keys(input).forEach((key) => {\n    const /** @type {?} */ value = transform(input[key], key);\n    if (!shouldIgnore(value)) {\n      if (HIDDEN_KEY.test(key)) {\n        Object.defineProperty(result, key, {enumerable: false, configurable: true, value: value});\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o: any): boolean {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @record\n */\nfunction BindingScopeBuilder() {}\n\n\nfunction BindingScopeBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingScopeBuilder.prototype.define;\n/** @type {?} */\nBindingScopeBuilder.prototype.done;\n}\n\n\ninterface BindingScopeBuilder {\n  define(name: string, value: any): BindingScopeBuilder;\n  done(): BindingScope;\n}\n/**\n * @abstract\n */\nabstract class BindingScope {\n  abstract resolve(name: string): any;\npublic static missing = {};\npublic static empty: BindingScope = {resolve: name => BindingScope.missing};\n/**\n * @return {?}\n */\n\npublic static build(): BindingScopeBuilder {\n    const /** @type {?} */ current = new Map<string, any>();\n    return {\n      define: function(name, value) {\n        current.set(name, value);\n        return this;\n      },\n      done: function() {\n        return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n      }\n    };\n  }\n}\n\nfunction BindingScope_tsickle_Closure_declarations() {\n/** @type {?} */\nBindingScope.missing;\n/** @type {?} */\nBindingScope.empty;\n\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\nBindingScope.prototype.resolve = function(name) {};\n}\n\nclass PopulatedScope extends BindingScope {\n/**\n * @param {?} bindings\n */\nconstructor(private bindings: Map<string, any>) { super(); }\n/**\n * @param {?} name\n * @return {?}\n */\nresolve(name: string): any {\n    return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n  }\n}\n\nfunction PopulatedScope_tsickle_Closure_declarations() {\n/** @type {?} */\nPopulatedScope.prototype.bindings;\n}\n\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message: string, fileName: string, line: number, column: number): Error {\n  const /** @type {?} */ result = new Error(message);\n  ( /** @type {?} */((result as any))).fileName = fileName;\n  ( /** @type {?} */((result as any))).line = line;\n  ( /** @type {?} */((result as any))).column = column;\n  return result;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SummaryResolver} from '../summary_resolver';\nimport {ValueTransformer, visitValue} from '../util';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {isGeneratedFile, stripSummaryForJitFileSuffix, stripSummaryForJitNameSuffix, summaryForJitFileName, summaryForJitName} from './util';\nexport class ResolvedStaticSymbol {\n/**\n * @param {?} symbol\n * @param {?} metadata\n */\nconstructor(public symbol: StaticSymbol,\npublic metadata: any) {}\n}\n\nfunction ResolvedStaticSymbol_tsickle_Closure_declarations() {\n/** @type {?} */\nResolvedStaticSymbol.prototype.symbol;\n/** @type {?} */\nResolvedStaticSymbol.prototype.metadata;\n}\n\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\nexport function StaticSymbolResolverHost() {}\n\n\nfunction StaticSymbolResolverHost_tsickle_Closure_declarations() {\n/**\n * Return a ModuleMetadata for the given module.\n * Angular CLI will produce this metadata for a module whenever a .d.ts files is\n * produced and the module has exported variables or classes with decorators. Module metadata can\n * also be produced directly from TypeScript sources by using MetadataCollector in tools/metadata.\n * \n * \\@param modulePath is a string identifier for a module as an absolute path.\n * \\@return the metadata for the given module.\n * @type {?}\n */\nStaticSymbolResolverHost.prototype.getMetadataFor;\n/**\n * Converts a module name that is used in an `import` to a file path.\n * I.e.\n * `path/to/containingFile.ts` containing `import {...} from 'module-name'`.\n * @type {?}\n */\nStaticSymbolResolverHost.prototype.moduleNameToFileName;\n/**\n * Converts a file path to a module name that can be used as an `import.\n * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n * \n * See ImportResolver.\n * @type {?}\n */\nStaticSymbolResolverHost.prototype.fileNameToModuleName;\n}\n\n\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n */\nexport interface StaticSymbolResolverHost {\n  /**\n   * Return a ModuleMetadata for the given module.\n   * Angular CLI will produce this metadata for a module whenever a .d.ts files is\n   * produced and the module has exported variables or classes with decorators. Module metadata can\n   * also be produced directly from TypeScript sources by using MetadataCollector in tools/metadata.\n   *\n   * @param modulePath is a string identifier for a module as an absolute path.\n   * @returns the metadata for the given module.\n   */\n  getMetadataFor(modulePath: string): {[key: string]: any}[]|undefined;\n\n  /**\n   * Converts a module name that is used in an `import` to a file path.\n   * I.e.\n   * `path/to/containingFile.ts` containing `import {...} from 'module-name'`.\n   */\n  moduleNameToFileName(moduleName: string, containingFile?: string): string|null;\n  /**\n   * Converts a file path to a module name that can be used as an `import.\n   * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n   *\n   * See ImportResolver.\n   */\n  fileNameToModuleName(importedFilePath: string, containingFilePath: string): string|null;\n}\n\nconst /** @type {?} */ SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n * \n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nexport class StaticSymbolResolver {\nprivate metadataCache = new Map<string, {[key: string]: any}>();\nprivate resolvedSymbols = new Map<StaticSymbol, ResolvedStaticSymbol>();\nprivate resolvedFilePaths = new Set<string>();\nprivate importAs = new Map<StaticSymbol, StaticSymbol>();\nprivate symbolResourcePaths = new Map<StaticSymbol, string>();\nprivate symbolFromFile = new Map<string, StaticSymbol[]>();\nprivate knownFileNameToModuleNames = new Map<string, string>();\n/**\n * @param {?} host\n * @param {?} staticSymbolCache\n * @param {?} summaryResolver\n * @param {?=} errorRecorder\n */\nconstructor(\nprivate host: StaticSymbolResolverHost,\nprivate staticSymbolCache: StaticSymbolCache,\nprivate summaryResolver: SummaryResolver<StaticSymbol>,\nprivate errorRecorder?: (error: any, fileName?: string) => void) {}\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nresolveSymbol(staticSymbol: StaticSymbol): ResolvedStaticSymbol {\n    if (staticSymbol.members.length > 0) {\n      return /** @type {?} */(( this._resolveSymbolMembers(staticSymbol)));\n    }\n    let /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n    if (result) {\n      return result;\n    }\n    result = /** @type {?} */(( this._resolveSymbolFromSummary(staticSymbol)));\n    if (result) {\n      return result;\n    }\n    // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n    // have summaries, only .d.ts files. So we always need to check both, the summary\n    // and metadata.\n    this._createSymbolsOf(staticSymbol.filePath);\n    result = /** @type {?} */(( this.resolvedSymbols.get(staticSymbol)));\n    return result;\n  }\n/**\n * getImportAs produces a symbol that can be used to import the given symbol.\n * The import might be different than the symbol if the symbol is exported from\n * a library with a summary; in which case we want to import the symbol from the\n * ngfactory re-export instead of directly to avoid introducing a direct dependency\n * on an otherwise indirect dependency.\n * \n * @param {?} staticSymbol the symbol for which to generate a import symbol\n * @return {?}\n */\ngetImportAs(staticSymbol: StaticSymbol): StaticSymbol|null {\n    if (staticSymbol.members.length) {\n      const /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n      const /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n      return baseImportAs ?\n          this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n          null;\n    }\n    const /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n    if (summarizedFileName !== staticSymbol.filePath) {\n      const /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n      const /** @type {?} */ baseSymbol =\n          this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n      const /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n      return baseImportAs ?\n          this.getStaticSymbol(\n              summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name),\n              baseSymbol.members) :\n          null;\n    }\n    let /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n    if (!result) {\n      result = /** @type {?} */(( this.importAs.get(staticSymbol)));\n    }\n    return result;\n  }\n/**\n * getResourcePath produces the path to the original location of the symbol and should\n * be used to determine the relative location of resource references recorded in\n * symbol metadata.\n * @param {?} staticSymbol\n * @return {?}\n */\ngetResourcePath(staticSymbol: StaticSymbol): string {\n    return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n  }\n/**\n * getTypeArity returns the number of generic type parameters the given symbol\n * has. If the symbol is not a type the result is null.\n * @param {?} staticSymbol\n * @return {?}\n */\ngetTypeArity(staticSymbol: StaticSymbol): number|null {\n    // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n    // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n    // All references to generated classes must include the correct arity whenever\n    // generating code.\n    if (isGeneratedFile(staticSymbol.filePath)) {\n      return null;\n    }\n    let /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n    while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n      resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n    }\n    return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n  }\n/**\n * Converts a file path to a module name that can be used as an `import`.\n * @param {?} importedFilePath\n * @param {?} containingFilePath\n * @return {?}\n */\nfileNameToModuleName(importedFilePath: string, containingFilePath: string): string|null {\n    return this.knownFileNameToModuleNames.get(importedFilePath) ||\n        this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n  }\n/**\n * @param {?} sourceSymbol\n * @param {?} targetSymbol\n * @return {?}\n */\nrecordImportAs(sourceSymbol: StaticSymbol, targetSymbol: StaticSymbol) {\n    sourceSymbol.assertNoMembers();\n    targetSymbol.assertNoMembers();\n    this.importAs.set(sourceSymbol, targetSymbol);\n  }\n/**\n * Invalidate all information derived from the given file.\n * \n * @param {?} fileName the file to invalidate\n * @return {?}\n */\ninvalidateFile(fileName: string) {\n    this.metadataCache.delete(fileName);\n    this.resolvedFilePaths.delete(fileName);\n    const /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n    if (symbols) {\n      this.symbolFromFile.delete(fileName);\n      for (const /** @type {?} */ symbol of symbols) {\n        this.resolvedSymbols.delete(symbol);\n        this.importAs.delete(symbol);\n        this.symbolResourcePaths.delete(symbol);\n      }\n    }\n  }\n/**\n * @template T\n * @param {?} cb\n * @return {?}\n */\nignoreErrorsFor<T>(cb: () => T) {\n    const /** @type {?} */ recorder = this.errorRecorder;\n    this.errorRecorder = () => {};\n    try {\n      return cb();\n    } finally {\n      this.errorRecorder = recorder;\n    }\n  }\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\n\nprivate _resolveSymbolMembers(staticSymbol: StaticSymbol): ResolvedStaticSymbol|null {\n    const /** @type {?} */ members = staticSymbol.members;\n    const /** @type {?} */ baseResolvedSymbol =\n        this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n    if (!baseResolvedSymbol) {\n      return null;\n    }\n    const /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n    if (baseMetadata instanceof StaticSymbol) {\n      return new ResolvedStaticSymbol(\n          staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n    } else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n      if (baseMetadata.statics && members.length === 1) {\n        return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n      }\n    } else {\n      let /** @type {?} */ value = baseMetadata;\n      for (let /** @type {?} */ i = 0; i < members.length && value; i++) {\n        value = value[members[i]];\n      }\n      return new ResolvedStaticSymbol(staticSymbol, value);\n    }\n    return null;\n  }\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\n\nprivate _resolveSymbolFromSummary(staticSymbol: StaticSymbol): ResolvedStaticSymbol|null {\n    const /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n    return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n  }\n/**\n * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n * All types passed to the StaticResolver should be pseudo-types returned by this method.\n * \n * @param {?} declarationFile the absolute path of the file where the symbol is declared\n * @param {?} name the name of the type.\n * @param {?=} members a symbol for a static member of the named type\n * @return {?}\n */\ngetStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.staticSymbolCache.get(declarationFile, name, members);\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\ngetSymbolsOf(filePath: string): StaticSymbol[] {\n    // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n    // have summaries, only .d.ts files. So we always need to check both, the summary\n    // and metadata.\n    let /** @type {?} */ symbols = new Set<StaticSymbol>(this.summaryResolver.getSymbolsOf(filePath));\n    this._createSymbolsOf(filePath);\n    this.resolvedSymbols.forEach((resolvedSymbol) => {\n      if (resolvedSymbol.symbol.filePath === filePath) {\n        symbols.add(resolvedSymbol.symbol);\n      }\n    });\n    return Array.from(symbols);\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\n\nprivate _createSymbolsOf(filePath: string) {\n    if (this.resolvedFilePaths.has(filePath)) {\n      return;\n    }\n    this.resolvedFilePaths.add(filePath);\n    const /** @type {?} */ resolvedSymbols: ResolvedStaticSymbol[] = [];\n    const /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n    if (metadata['importAs']) {\n      // Index bundle indices should use the importAs module name defined\n      // in the bundle.\n      this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n    }\n    if (metadata['metadata']) {\n      // handle direct declarations of the symbol\n      const /** @type {?} */ topLevelSymbolNames =\n          new Set<string>(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n      const /** @type {?} */ origins: {[index: string]: string} = metadata['origins'] || {};\n      Object.keys(metadata['metadata']).forEach((metadataKey) => {\n        const /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n        const /** @type {?} */ name = unescapeIdentifier(metadataKey);\n\n        const /** @type {?} */ symbol = this.getStaticSymbol(filePath, name);\n\n        const /** @type {?} */ origin = origins.hasOwnProperty(metadataKey) && origins[metadataKey];\n        if (origin) {\n          // If the symbol is from a bundled index, use the declaration location of the\n          // symbol so relative references (such as './my.html') will be calculated\n          // correctly.\n          const /** @type {?} */ originFilePath = this.resolveModule(origin, filePath);\n          if (!originFilePath) {\n            this.reportError(\n                new Error(`Couldn't resolve original symbol for ${origin} from ${filePath}`));\n          } else {\n            this.symbolResourcePaths.set(symbol, originFilePath);\n          }\n        }\n        resolvedSymbols.push(\n            this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames, symbolMeta));\n      });\n    }\n\n    // handle the symbols in one of the re-export location\n    if (metadata['exports']) {\n      for (const /** @type {?} */ moduleExport of metadata['exports']) {\n        // handle the symbols in the list of explicitly re-exported symbols.\n        if (moduleExport.export) {\n          moduleExport.export.forEach((exportSymbol: any) => {\n            let /** @type {?} */ symbolName: string;\n            if (typeof exportSymbol === 'string') {\n              symbolName = exportSymbol;\n            } else {\n              symbolName = exportSymbol.as;\n            }\n            symbolName = unescapeIdentifier(symbolName);\n            let /** @type {?} */ symName = symbolName;\n            if (typeof exportSymbol !== 'string') {\n              symName = unescapeIdentifier(exportSymbol.name);\n            }\n            const /** @type {?} */ resolvedModule = this.resolveModule(moduleExport.from, filePath);\n            if (resolvedModule) {\n              const /** @type {?} */ targetSymbol = this.getStaticSymbol(resolvedModule, symName);\n              const /** @type {?} */ sourceSymbol = this.getStaticSymbol(filePath, symbolName);\n              resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n            }\n          });\n        } else {\n          // handle the symbols via export * directives.\n          const /** @type {?} */ resolvedModule = this.resolveModule(moduleExport.from, filePath);\n          if (resolvedModule) {\n            const /** @type {?} */ nestedExports = this.getSymbolsOf(resolvedModule);\n            nestedExports.forEach((targetSymbol) => {\n              const /** @type {?} */ sourceSymbol = this.getStaticSymbol(filePath, targetSymbol.name);\n              resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n            });\n          }\n        }\n      }\n    }\n    resolvedSymbols.forEach(\n        (resolvedSymbol) => this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol));\n    this.symbolFromFile.set(filePath, resolvedSymbols.map(resolvedSymbol => resolvedSymbol.symbol));\n  }\n/**\n * @param {?} sourceSymbol\n * @param {?} topLevelPath\n * @param {?} topLevelSymbolNames\n * @param {?} metadata\n * @return {?}\n */\n\nprivate createResolvedSymbol(\n      sourceSymbol: StaticSymbol, topLevelPath: string, topLevelSymbolNames: Set<string>,\n      metadata: any): ResolvedStaticSymbol {\n    // For classes that don't have Angular summaries / metadata,\n    // we only keep their arity, but nothing else\n    // (e.g. their constructor parameters).\n    // We do this to prevent introducing deep imports\n    // as we didn't generate .ngfactory.ts files with proper reexports.\n    if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n        metadata['__symbolic'] === 'class') {\n      const /** @type {?} */ transformedMeta = {__symbolic: 'class', arity: metadata.arity};\n      return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    }\n\n    const /** @type {?} */ self = this;\nclass ReferenceTransformer extends ValueTransformer {\n/**\n * @param {?} map\n * @param {?} functionParams\n * @return {?}\n */\nvisitStringMap(map: {[key: string]: any}, functionParams: string[]): any {\n        const /** @type {?} */ symbolic = map['__symbolic'];\n        if (symbolic === 'function') {\n          const /** @type {?} */ oldLen = functionParams.length;\n          functionParams.push(...(map['parameters'] || []));\n          const /** @type {?} */ result = super.visitStringMap(map, functionParams);\n          functionParams.length = oldLen;\n          return result;\n        } else if (symbolic === 'reference') {\n          const /** @type {?} */ module = map['module'];\n          const /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n          if (!name) {\n            return null;\n          }\n          let /** @type {?} */ filePath: string;\n          if (module) {\n            filePath = /** @type {?} */(( self.resolveModule(module, sourceSymbol.filePath)));\n            if (!filePath) {\n              return {\n                __symbolic: 'error',\n                message: `Could not resolve ${module} relative to ${sourceSymbol.filePath}.`\n              };\n            }\n            return self.getStaticSymbol(filePath, name);\n          } else if (functionParams.indexOf(name) >= 0) {\n            // reference to a function parameter\n            return {__symbolic: 'reference', name: name};\n          } else {\n            if (topLevelSymbolNames.has(name)) {\n              return self.getStaticSymbol(topLevelPath, name);\n            }\n            // ambient value\n            null;\n          }\n        } else {\n          return super.visitStringMap(map, functionParams);\n        }\n      }\n    }\n    const /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n    if (transformedMeta instanceof StaticSymbol) {\n      return this.createExport(sourceSymbol, transformedMeta);\n    }\n    return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n  }\n/**\n * @param {?} sourceSymbol\n * @param {?} targetSymbol\n * @return {?}\n */\n\nprivate createExport(sourceSymbol: StaticSymbol, targetSymbol: StaticSymbol):\n      ResolvedStaticSymbol {\n    sourceSymbol.assertNoMembers();\n    targetSymbol.assertNoMembers();\n    if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n      // This case is for an ng library importing symbols from a plain ts library\n      // transitively.\n      // Note: We rely on the fact that we discover symbols in the direction\n      // from source files to library files\n      this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n    }\n    return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n  }\n/**\n * @param {?} error\n * @param {?=} context\n * @param {?=} path\n * @return {?}\n */\n\nprivate reportError(error: Error, context?: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(error, (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n/**\n * @param {?} module an absolute path to a module file.\n * @return {?}\n */\n\nprivate getModuleMetadata(module: string): {[key: string]: any} {\n    let /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n    if (!moduleMetadata) {\n      const /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n      if (moduleMetadatas) {\n        let /** @type {?} */ maxVersion = -1;\n        moduleMetadatas.forEach((md) => {\n          if (md['version'] > maxVersion) {\n            maxVersion = md['version'];\n            moduleMetadata = md;\n          }\n        });\n      }\n      if (!moduleMetadata) {\n        moduleMetadata =\n            {__symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {}};\n      }\n      if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n        const /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n            `Unsupported metadata version ${moduleMetadata['version']} for module ${module}. This module should be compiled with a newer version of ngc` :\n            `Metadata version mismatch for module ${module}, found version ${moduleMetadata['version']}, expected ${SUPPORTED_SCHEMA_VERSION}`;\n        this.reportError(new Error(errorMessage));\n      }\n      this.metadataCache.set(module, moduleMetadata);\n    }\n    return moduleMetadata;\n  }\n/**\n * @param {?} module\n * @param {?} symbolName\n * @param {?=} containingFile\n * @return {?}\n */\ngetSymbolByModule(module: string, symbolName: string, containingFile?: string): StaticSymbol {\n    const /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n    if (!filePath) {\n      this.reportError(\n          new Error(`Could not resolve module ${module}${containingFile ? ` relative to $ {\n            containingFile\n          } `: ''}`));\n      return this.getStaticSymbol(`ERROR:${module}`, symbolName);\n    }\n    return this.getStaticSymbol(filePath, symbolName);\n  }\n/**\n * @param {?} module\n * @param {?=} containingFile\n * @return {?}\n */\n\nprivate resolveModule(module: string, containingFile?: string): string|null {\n    try {\n      return this.host.moduleNameToFileName(module, containingFile);\n    } catch ( /** @type {?} */e) {\n      console.error(`Could not resolve module '${module}' relative to file ${containingFile}`);\n      this.reportError(e, undefined, containingFile);\n    }\n    return null;\n  }\n}\n\nfunction StaticSymbolResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nStaticSymbolResolver.prototype.metadataCache;\n/** @type {?} */\nStaticSymbolResolver.prototype.resolvedSymbols;\n/** @type {?} */\nStaticSymbolResolver.prototype.resolvedFilePaths;\n/** @type {?} */\nStaticSymbolResolver.prototype.importAs;\n/** @type {?} */\nStaticSymbolResolver.prototype.symbolResourcePaths;\n/** @type {?} */\nStaticSymbolResolver.prototype.symbolFromFile;\n/** @type {?} */\nStaticSymbolResolver.prototype.knownFileNameToModuleNames;\n/** @type {?} */\nStaticSymbolResolver.prototype.host;\n/** @type {?} */\nStaticSymbolResolver.prototype.staticSymbolCache;\n/** @type {?} */\nStaticSymbolResolver.prototype.summaryResolver;\n/** @type {?} */\nStaticSymbolResolver.prototype.errorRecorder;\n}\n\n/**\n * @param {?} identifier\n * @return {?}\n */\nexport function unescapeIdentifier(identifier: string): string {\n  return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Summary, SummaryResolver} from '../summary_resolver';\n\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {deserializeSummaries} from './summary_serializer';\nimport {ngfactoryFilePath, stripGeneratedFileSuffix, summaryFileName} from './util';\n/**\n * @record\n */\nexport function AotSummaryResolverHost() {}\n\n\nfunction AotSummaryResolverHost_tsickle_Closure_declarations() {\n/**\n * Loads an NgModule/Directive/Pipe summary file\n * @type {?}\n */\nAotSummaryResolverHost.prototype.loadSummary;\n/**\n * Returns whether a file is a source file or not.\n * @type {?}\n */\nAotSummaryResolverHost.prototype.isSourceFile;\n/**\n * Returns the output file path of a source file.\n * E.g.\n * `some_file.ts` -> `some_file.d.ts`\n * @type {?}\n */\nAotSummaryResolverHost.prototype.getOutputFileName;\n}\n\n\nexport interface AotSummaryResolverHost {\n  /**\n   * Loads an NgModule/Directive/Pipe summary file\n   */\n  loadSummary(filePath: string): string|null;\n\n  /**\n   * Returns whether a file is a source file or not.\n   */\n  isSourceFile(sourceFilePath: string): boolean;\n  /**\n   * Returns the output file path of a source file.\n   * E.g.\n   * `some_file.ts` -> `some_file.d.ts`\n   */\n  getOutputFileName(sourceFilePath: string): string;\n}\nexport class AotSummaryResolver implements SummaryResolver<StaticSymbol> {\nprivate summaryCache = new Map<StaticSymbol, Summary<StaticSymbol>>();\nprivate loadedFilePaths = new Set<string>();\nprivate importAs = new Map<StaticSymbol, StaticSymbol>();\n/**\n * @param {?} host\n * @param {?} staticSymbolCache\n */\nconstructor(private host: AotSummaryResolverHost,\nprivate staticSymbolCache: StaticSymbolCache) {}\n/**\n * @param {?} filePath\n * @return {?}\n */\nisLibraryFile(filePath: string): boolean {\n    // Note: We need to strip the .ngfactory. file path,\n    // so this method also works for generated files\n    // (for which host.isSourceFile will always return false).\n    return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\ngetLibraryFileName(filePath: string) { return this.host.getOutputFileName(filePath); }\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\nresolveSummary(staticSymbol: StaticSymbol): Summary<StaticSymbol> {\n    staticSymbol.assertNoMembers();\n    let /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n    if (!summary) {\n      this._loadSummaryFile(staticSymbol.filePath);\n      summary = /** @type {?} */(( this.summaryCache.get(staticSymbol)));\n    }\n    return summary;\n  }\n/**\n * @param {?} filePath\n * @return {?}\n */\ngetSymbolsOf(filePath: string): StaticSymbol[] {\n    this._loadSummaryFile(filePath);\n    return Array.from(this.summaryCache.keys()).filter((symbol) => symbol.filePath === filePath);\n  }\n/**\n * @param {?} staticSymbol\n * @return {?}\n */\ngetImportAs(staticSymbol: StaticSymbol): StaticSymbol {\n    staticSymbol.assertNoMembers();\n    return /** @type {?} */(( this.importAs.get(staticSymbol)));\n  }\n/**\n * @param {?} summary\n * @return {?}\n */\naddSummary(summary: Summary<StaticSymbol>) { this.summaryCache.set(summary.symbol, summary); }\n/**\n * @param {?} filePath\n * @return {?}\n */\n\nprivate _loadSummaryFile(filePath: string) {\n    if (this.loadedFilePaths.has(filePath)) {\n      return;\n    }\n    this.loadedFilePaths.add(filePath);\n    if (this.isLibraryFile(filePath)) {\n      const /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n      let /** @type {?} */ json: string|null;\n      try {\n        json = this.host.loadSummary(summaryFilePath);\n      } catch ( /** @type {?} */e) {\n        console.error(`Error loading summary file ${summaryFilePath}`);\n        throw e;\n      }\n      if (json) {\n        const {summaries, importAs} = deserializeSummaries(this.staticSymbolCache, json);\n        summaries.forEach((summary) => this.summaryCache.set(summary.symbol, summary));\n        importAs.forEach((importAs) => {\n          this.importAs.set(\n              importAs.symbol,\n              this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n        });\n      }\n    }\n  }\n}\n\nfunction AotSummaryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nAotSummaryResolver.prototype.summaryCache;\n/** @type {?} */\nAotSummaryResolver.prototype.loadedFilePaths;\n/** @type {?} */\nAotSummaryResolver.prototype.importAs;\n/** @type {?} */\nAotSummaryResolver.prototype.host;\n/** @type {?} */\nAotSummaryResolver.prototype.staticSymbolCache;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy, ViewEncapsulation, ɵConsole as Console} from '@angular/core';\nimport {CompilerConfig} from '../config';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveResolver} from '../directive_resolver';\nimport {Lexer} from '../expression_parser/lexer';\nimport {Parser} from '../expression_parser/parser';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {NgModuleResolver} from '../ng_module_resolver';\nimport {TypeScriptEmitter} from '../output/ts_emitter';\nimport {PipeResolver} from '../pipe_resolver';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {StyleCompiler} from '../style_compiler';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {createOfflineCompileUrlResolver} from '../url_resolver';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {AotCompiler} from './compiler';\nimport {AotCompilerHost} from './compiler_host';\nimport {AotCompilerOptions} from './compiler_options';\nimport {StaticReflector} from './static_reflector';\nimport {StaticSymbol, StaticSymbolCache} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\nimport {AotSummaryResolver} from './summary_resolver';\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nexport function createAotCompiler(compilerHost: AotCompilerHost, options: AotCompilerOptions):\n    {compiler: AotCompiler, reflector: StaticReflector} {\n  let /** @type {?} */ translations: string = options.translations || '';\n\n  const /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n  const /** @type {?} */ symbolCache = new StaticSymbolCache();\n  const /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n  const /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n  const /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n  const /** @type {?} */ console = new Console();\n  const /** @type {?} */ htmlParser = new I18NHtmlParser(\n      new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n  const /** @type {?} */ config = new CompilerConfig({\n    defaultEncapsulation: ViewEncapsulation.Emulated,\n    useJit: false,\n    enableLegacyTemplate: options.enableLegacyTemplate !== false,\n    missingTranslation: options.missingTranslation,\n  });\n  const /** @type {?} */ normalizer = new DirectiveNormalizer(\n      {get: (url: string) => compilerHost.loadResource(url)}, urlResolver, htmlParser, config);\n  const /** @type {?} */ expressionParser = new Parser(new Lexer());\n  const /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n  const /** @type {?} */ tmplParser = new TemplateParser(\n      config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n  const /** @type {?} */ resolver = new CompileMetadataResolver(\n      config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector),\n      new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer,\n      console, symbolCache, staticReflector);\n  // TODO(vicb): do not pass options.i18nFormat here\n  const /** @type {?} */ viewCompiler = new ViewCompiler(config, staticReflector, elementSchemaRegistry);\n  const /** @type {?} */ compiler = new AotCompiler(\n      config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver),\n      viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver,\n      options.locale || null, options.i18nFormat || null, options.enableSummariesForJit || null,\n      symbolResolver);\n  return {compiler, reflector: staticReflector};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MissingTranslationStrategy} from '@angular/core';\n/**\n * @record\n */\nexport function AotCompilerOptions() {}\n\n\nfunction AotCompilerOptions_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nAotCompilerOptions.prototype.locale;\n/** @type {?|undefined} */\nAotCompilerOptions.prototype.i18nFormat;\n/** @type {?|undefined} */\nAotCompilerOptions.prototype.translations;\n/** @type {?|undefined} */\nAotCompilerOptions.prototype.missingTranslation;\n/** @type {?|undefined} */\nAotCompilerOptions.prototype.enableLegacyTemplate;\n/** @type {?|undefined} */\nAotCompilerOptions.prototype.enableSummariesForJit;\n}\n\n\nexport interface AotCompilerOptions {\n  locale?: string;\n  i18nFormat?: string;\n  translations?: string;\n  missingTranslation?: MissingTranslationStrategy;\n  enableLegacyTemplate?: boolean;\n  enableSummariesForJit?: boolean;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbolResolverHost} from './static_symbol_resolver';\nimport {AotSummaryResolverHost} from './summary_resolver';\n/**\n * The host of the AotCompiler disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\nexport function AotCompilerHost() {}\n\n\nfunction AotCompilerHost_tsickle_Closure_declarations() {\n/**\n * Loads a resource (e.g. html / css)\n * @type {?}\n */\nAotCompilerHost.prototype.loadResource;\n}\n\n\n/**\n * The host of the AotCompiler disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n */\nexport interface AotCompilerHost extends StaticSymbolResolverHost, AotSummaryResolverHost {\n  /**\n   * Loads a resource (e.g. html / css)\n   */\n  loadResource(path: string): Promise<string>|string;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport * as o from './output_ast';\nimport {debugOutputAstAsTypeScript} from './ts_emitter';\n/**\n * @param {?} statements\n * @return {?}\n */\nexport function interpretStatements(statements: o.Statement[]): {[key: string]: any} {\n  const /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map<string, any>());\n  const /** @type {?} */ visitor = new StatementInterpreter();\n  visitor.visitAllStatements(statements, ctx);\n  const /** @type {?} */ result: {[key: string]: any} = {};\n  ctx.exports.forEach((exportName) => { result[exportName] = ctx.vars.get(exportName); });\n  return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(\n    varNames: string[], varValues: any[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): any {\n  const /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n  for (let /** @type {?} */ i = 0; i < varNames.length; i++) {\n    childCtx.vars.set(varNames[i], varValues[i]);\n  }\n  const /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n  return result ? result.value : null;\n}\nclass _ExecutionContext {\n  exports: string[] = [];\n/**\n * @param {?} parent\n * @param {?} instance\n * @param {?} className\n * @param {?} vars\n */\nconstructor(\npublic parent: _ExecutionContext|null,\npublic instance: any,\npublic className: string|null,\npublic vars: Map<string, any>) {}\n/**\n * @return {?}\n */\ncreateChildWihtLocalVars(): _ExecutionContext {\n    return new _ExecutionContext(this, this.instance, this.className, new Map<string, any>());\n  }\n}\n\nfunction _ExecutionContext_tsickle_Closure_declarations() {\n/** @type {?} */\n_ExecutionContext.prototype.exports;\n/** @type {?} */\n_ExecutionContext.prototype.parent;\n/** @type {?} */\n_ExecutionContext.prototype.instance;\n/** @type {?} */\n_ExecutionContext.prototype.className;\n/** @type {?} */\n_ExecutionContext.prototype.vars;\n}\n\nclass ReturnValue {\n/**\n * @param {?} value\n */\nconstructor(public value: any) {}\n}\n\nfunction ReturnValue_tsickle_Closure_declarations() {\n/** @type {?} */\nReturnValue.prototype.value;\n}\n\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(\n    _classStmt: o.ClassStmt, _ctx: _ExecutionContext, _visitor: StatementInterpreter): Function {\n  const /** @type {?} */ propertyDescriptors: {[key: string]: any} = {};\n\n  _classStmt.getters.forEach((getter: o.ClassGetter) => {\n    // Note: use `function` instead of arrow function to capture `this`\n    propertyDescriptors[getter.name] = {\n      configurable: false,\n      get: function() {\n        const /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n      }\n    };\n  });\n  _classStmt.methods.forEach(function(method: o.ClassMethod) {\n    const /** @type {?} */ paramNames = method.params.map(param => param.name);\n    // Note: use `function` instead of arrow function to capture `this`\n    propertyDescriptors[ /** @type {?} */((method.name))] = {\n      writable: false,\n      configurable: false,\n      value: function(...args: any[]) {\n        const /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n      }\n    };\n  });\n\n  const /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(param => param.name);\n  // Note: use `function` instead of arrow function to capture `this`\n  const /** @type {?} */ ctor = function(...args: any[]) {\n    const /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n    _classStmt.fields.forEach((field) => { this[field.name] = undefined; });\n    _executeFunctionStatements(\n        ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n  };\n  const /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n  ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n  return ctor;\n}\nclass StatementInterpreter implements o.StatementVisitor, o.ExpressionVisitor {\n/**\n * @param {?} ast\n * @return {?}\n */\ndebugAst(ast: o.Expression|o.Statement|o.Type): string { return debugOutputAstAsTypeScript(ast); }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: _ExecutionContext): any {\n    ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.exports.push(stmt.name);\n    }\n    return null;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWriteVarExpr(expr: o.WriteVarExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n    let /** @type {?} */ currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(expr.name)) {\n        currCtx.vars.set(expr.name, value);\n        return value;\n      }\n      currCtx = /** @type {?} */(( currCtx.parent));\n    }\n    throw new Error(`Not declared variable ${expr.name}`);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadVarExpr(ast: o.ReadVarExpr, ctx: _ExecutionContext): any {\n    let /** @type {?} */ varName = /** @type {?} */(( ast.name));\n    if (ast.builtin != null) {\n      switch (ast.builtin) {\n        case o.BuiltinVar.Super:\n          return ctx.instance.__proto__;\n        case o.BuiltinVar.This:\n          return ctx.instance;\n        case o.BuiltinVar.CatchError:\n          varName = CATCH_ERROR_VAR;\n          break;\n        case o.BuiltinVar.CatchStack:\n          varName = CATCH_STACK_VAR;\n          break;\n        default:\n          throw new Error(`Unknown builtin variable ${ast.builtin}`);\n      }\n    }\n    let /** @type {?} */ currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(varName)) {\n        return currCtx.vars.get(varName);\n      }\n      currCtx = /** @type {?} */(( currCtx.parent));\n    }\n    throw new Error(`Not declared variable ${varName}`);\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWriteKeyExpr(expr: o.WriteKeyExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n    const /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n    const /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n    receiver[index] = value;\n    return value;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitWritePropExpr(expr: o.WritePropExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n    const /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n    receiver[expr.name] = value;\n    return value;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitInvokeMethodExpr(expr: o.InvokeMethodExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n    const /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n    let /** @type {?} */ result: any;\n    if (expr.builtin != null) {\n      switch (expr.builtin) {\n        case o.BuiltinMethod.ConcatArray:\n          result = receiver.concat(...args);\n          break;\n        case o.BuiltinMethod.SubscribeObservable:\n          result = receiver.subscribe({next: args[0]});\n          break;\n        case o.BuiltinMethod.Bind:\n          result = receiver.bind(...args);\n          break;\n        default:\n          throw new Error(`Unknown builtin method ${expr.builtin}`);\n      }\n    } else {\n      result = receiver[ /** @type {?} */((expr.name))].apply(receiver, args);\n    }\n    return result;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitInvokeFunctionExpr(stmt: o.InvokeFunctionExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n    const /** @type {?} */ fnExpr = stmt.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n      ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n      return null;\n    } else {\n      const /** @type {?} */ fn = stmt.fn.visitExpression(this, ctx);\n      return fn.apply(null, args);\n    }\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitReturnStmt(stmt: o.ReturnStatement, ctx: _ExecutionContext): any {\n    return new ReturnValue(stmt.value.visitExpression(this, ctx));\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: _ExecutionContext): any {\n    const /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n    ctx.vars.set(stmt.name, clazz);\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.exports.push(stmt.name);\n    }\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitExpressionStmt(stmt: o.ExpressionStatement, ctx: _ExecutionContext): any {\n    return stmt.expr.visitExpression(this, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitIfStmt(stmt: o.IfStmt, ctx: _ExecutionContext): any {\n    const /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n    if (condition) {\n      return this.visitAllStatements(stmt.trueCase, ctx);\n    } else if (stmt.falseCase != null) {\n      return this.visitAllStatements(stmt.falseCase, ctx);\n    }\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitTryCatchStmt(stmt: o.TryCatchStmt, ctx: _ExecutionContext): any {\n    try {\n      return this.visitAllStatements(stmt.bodyStmts, ctx);\n    } catch ( /** @type {?} */e) {\n      const /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n      childCtx.vars.set(CATCH_ERROR_VAR, e);\n      childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n      return this.visitAllStatements(stmt.catchStmts, childCtx);\n    }\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitThrowStmt(stmt: o.ThrowStmt, ctx: _ExecutionContext): any {\n    throw stmt.error.visitExpression(this, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?=} context\n * @return {?}\n */\nvisitCommentStmt(stmt: o.CommentStmt, context?: any): any { return null; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitInstantiateExpr(ast: o.InstantiateExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n    const /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n    return new clazz(...args);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralExpr(ast: o.LiteralExpr, ctx: _ExecutionContext): any { return ast.value; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: _ExecutionContext): any { return ast.value.runtime; }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitConditionalExpr(ast: o.ConditionalExpr, ctx: _ExecutionContext): any {\n    if (ast.condition.visitExpression(this, ctx)) {\n      return ast.trueCase.visitExpression(this, ctx);\n    } else if (ast.falseCase != null) {\n      return ast.falseCase.visitExpression(this, ctx);\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitNotExpr(ast: o.NotExpr, ctx: _ExecutionContext): any {\n    return !ast.condition.visitExpression(this, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitAssertNotNullExpr(ast: o.AssertNotNull, ctx: _ExecutionContext): any {\n    return ast.condition.visitExpression(this, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitCastExpr(ast: o.CastExpr, ctx: _ExecutionContext): any {\n    return ast.value.visitExpression(this, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitFunctionExpr(ast: o.FunctionExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ paramNames = ast.params.map((param) => param.name);\n    return _declareFn(paramNames, ast.statements, ctx, this);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: _ExecutionContext): any {\n    const /** @type {?} */ paramNames = stmt.params.map((param) => param.name);\n    ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      ctx.exports.push(stmt.name);\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ lhs = () => ast.lhs.visitExpression(this, ctx);\n    const /** @type {?} */ rhs = () => ast.rhs.visitExpression(this, ctx);\n\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        return lhs() == rhs();\n      case o.BinaryOperator.Identical:\n        return lhs() === rhs();\n      case o.BinaryOperator.NotEquals:\n        return lhs() != rhs();\n      case o.BinaryOperator.NotIdentical:\n        return lhs() !== rhs();\n      case o.BinaryOperator.And:\n        return lhs() && rhs();\n      case o.BinaryOperator.Or:\n        return lhs() || rhs();\n      case o.BinaryOperator.Plus:\n        return lhs() + rhs();\n      case o.BinaryOperator.Minus:\n        return lhs() - rhs();\n      case o.BinaryOperator.Divide:\n        return lhs() / rhs();\n      case o.BinaryOperator.Multiply:\n        return lhs() * rhs();\n      case o.BinaryOperator.Modulo:\n        return lhs() % rhs();\n      case o.BinaryOperator.Lower:\n        return lhs() < rhs();\n      case o.BinaryOperator.LowerEquals:\n        return lhs() <= rhs();\n      case o.BinaryOperator.Bigger:\n        return lhs() > rhs();\n      case o.BinaryOperator.BiggerEquals:\n        return lhs() >= rhs();\n      default:\n        throw new Error(`Unknown operator ${ast.operator}`);\n    }\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadPropExpr(ast: o.ReadPropExpr, ctx: _ExecutionContext): any {\n    let /** @type {?} */ result: any;\n    const /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n    result = receiver[ast.name];\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadKeyExpr(ast: o.ReadKeyExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n    const /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n    return receiver[prop];\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: _ExecutionContext): any {\n    return this.visitAllExpressions(ast.entries, ctx);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitLiteralMapExpr(ast: o.LiteralMapExpr, ctx: _ExecutionContext): any {\n    const /** @type {?} */ result: {[k: string]: any} = {};\n    ast.entries.forEach(entry => result[entry.key] = entry.value.visitExpression(this, ctx));\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitCommaExpr(ast: o.CommaExpr, context: any): any {\n    const /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n    return values[values.length - 1];\n  }\n/**\n * @param {?} expressions\n * @param {?} ctx\n * @return {?}\n */\nvisitAllExpressions(expressions: o.Expression[], ctx: _ExecutionContext): any {\n    return expressions.map((expr) => expr.visitExpression(this, ctx));\n  }\n/**\n * @param {?} statements\n * @param {?} ctx\n * @return {?}\n */\nvisitAllStatements(statements: o.Statement[], ctx: _ExecutionContext): ReturnValue|null {\n    for (let /** @type {?} */ i = 0; i < statements.length; i++) {\n      const /** @type {?} */ stmt = statements[i];\n      const /** @type {?} */ val = stmt.visitStatement(this, ctx);\n      if (val instanceof ReturnValue) {\n        return val;\n      }\n    }\n    return null;\n  }\n}\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(\n    varNames: string[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): Function {\n  return (...args: any[]) => _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n}\n\nconst /** @type {?} */ CATCH_ERROR_VAR = 'error';\nconst /** @type {?} */ CATCH_STACK_VAR = 'stack';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext} from './abstract_emitter';\nimport * as o from './output_ast';\n/**\n * @abstract\n */\nexport abstract class AbstractJsEmitterVisitor extends AbstractEmitterVisitor {\nconstructor() { super(false); }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    ctx.pushClass(stmt);\n    this._visitClassConstructor(stmt, ctx);\n\n    if (stmt.parent != null) {\n      ctx.print(stmt, `${stmt.name}.prototype = Object.create(`);\n      stmt.parent.visitExpression(this, ctx);\n      ctx.println(stmt, `.prototype);`);\n    }\n    stmt.getters.forEach((getter) => this._visitClassGetter(stmt, getter, ctx));\n    stmt.methods.forEach((method) => this._visitClassMethod(stmt, method, ctx));\n    ctx.popClass();\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassConstructor(stmt: o.ClassStmt, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `function ${stmt.name}(`);\n    if (stmt.constructorMethod != null) {\n      this._visitParams(stmt.constructorMethod.params, ctx);\n    }\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    if (stmt.constructorMethod != null) {\n      if (stmt.constructorMethod.body.length > 0) {\n        ctx.println(stmt, `var self = this;`);\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n      }\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n  }\n/**\n * @param {?} stmt\n * @param {?} getter\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassGetter(stmt: o.ClassStmt, getter: o.ClassGetter, ctx: EmitterVisitorContext) {\n    ctx.println(\n        stmt,\n        `Object.defineProperty(${stmt.name}.prototype, '${getter.name}', { get: function() {`);\n    ctx.incIndent();\n    if (getter.body.length > 0) {\n      ctx.println(stmt, `var self = this;`);\n      this.visitAllStatements(getter.body, ctx);\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `}});`);\n  }\n/**\n * @param {?} stmt\n * @param {?} method\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitClassMethod(stmt: o.ClassStmt, method: o.ClassMethod, ctx: EmitterVisitorContext) {\n    ctx.print(stmt, `${stmt.name}.prototype.${method.name} = function(`);\n    this._visitParams(method.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    if (method.body.length > 0) {\n      ctx.println(stmt, `var self = this;`);\n      this.visitAllStatements(method.body, ctx);\n    }\n    ctx.decIndent();\n    ctx.println(stmt, `};`);\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitReadVarExpr(ast: o.ReadVarExpr, ctx: EmitterVisitorContext): string|null {\n    if (ast.builtin === o.BuiltinVar.This) {\n      ctx.print(ast, 'self');\n    } else if (ast.builtin === o.BuiltinVar.Super) {\n      throw new Error(\n          `'super' needs to be handled at a parent ast node, not at the variable level!`);\n    } else {\n      super.visitReadVarExpr(ast, ctx);\n    }\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `var ${stmt.name} = `);\n    stmt.value.visitExpression(this, ctx);\n    ctx.println(stmt, `;`);\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitCastExpr(ast: o.CastExpr, ctx: EmitterVisitorContext): any {\n    ast.value.visitExpression(this, ctx);\n    return null;\n  }\n/**\n * @param {?} expr\n * @param {?} ctx\n * @return {?}\n */\nvisitInvokeFunctionExpr(expr: o.InvokeFunctionExpr, ctx: EmitterVisitorContext): string|null {\n    const /** @type {?} */ fnExpr = expr.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) { /** @type {?} */(( /** @type {?} */((\n      ctx.currentClass)).parent)).visitExpression(this, ctx);\n      ctx.print(expr, `.call(this`);\n      if (expr.args.length > 0) {\n        ctx.print(expr, `, `);\n        this.visitAllExpressions(expr.args, ctx, ',');\n      }\n      ctx.print(expr, `)`);\n    } else {\n      super.visitInvokeFunctionExpr(expr, ctx);\n    }\n    return null;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitFunctionExpr(ast: o.FunctionExpr, ctx: EmitterVisitorContext): any {\n    ctx.print(ast, `function(`);\n    this._visitParams(ast.params, ctx);\n    ctx.println(ast, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(ast.statements, ctx);\n    ctx.decIndent();\n    ctx.print(ast, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    ctx.print(stmt, `function ${stmt.name}(`);\n    this._visitParams(stmt.params, ctx);\n    ctx.println(stmt, `) {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.statements, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitTryCatchStmt(stmt: o.TryCatchStmt, ctx: EmitterVisitorContext): any {\n    ctx.println(stmt, `try {`);\n    ctx.incIndent();\n    this.visitAllStatements(stmt.bodyStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n    ctx.incIndent();\n    const /** @type {?} */ catchStmts =\n        [ /** @type {?} */((<o.Statement>CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n          o.StmtModifier.Final\n        ])))].concat(stmt.catchStmts);\n    this.visitAllStatements(catchStmts, ctx);\n    ctx.decIndent();\n    ctx.println(stmt, `}`);\n    return null;\n  }\n/**\n * @param {?} params\n * @param {?} ctx\n * @return {?}\n */\n\nprivate _visitParams(params: o.FnParam[], ctx: EmitterVisitorContext): void {\n    this.visitAllObjects(param => ctx.print(null, param.name), params, ctx, ',');\n  }\n/**\n * @param {?} method\n * @return {?}\n */\ngetBuiltinMethodName(method: o.BuiltinMethod): string {\n    let /** @type {?} */ name: string;\n    switch (method) {\n      case o.BuiltinMethod.ConcatArray:\n        name = 'concat';\n        break;\n      case o.BuiltinMethod.SubscribeObservable:\n        name = 'subscribe';\n        break;\n      case o.BuiltinMethod.Bind:\n        name = 'bind';\n        break;\n      default:\n        throw new Error(`Unknown builtin method: ${method}`);\n    }\n    return name;\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '@angular/core';\nimport {identifierName} from '../compile_metadata';\n\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport * as o from './output_ast';\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(\n    sourceUrl: string, ctx: EmitterVisitorContext, vars: {[key: string]: any}): any {\n  let /** @type {?} */ fnBody = `${ctx.toSource()}\\n//# sourceURL=${sourceUrl}`;\n  const /** @type {?} */ fnArgNames: string[] = [];\n  const /** @type {?} */ fnArgValues: any[] = [];\n  for (const /** @type {?} */ argName in vars) {\n    fnArgNames.push(argName);\n    fnArgValues.push(vars[argName]);\n  }\n  if (isDevMode()) {\n    // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n    // E.g. ```\n    // function anonymous(a,b,c\n    // /**/) { ... }```\n    // We don't want to hard code this fact, so we auto detect it via an empty function first.\n    const /** @type {?} */ emptyFn = new Function(...fnArgNames.concat('return null;')).toString();\n    const /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n    fnBody += `\\n${ctx.toSourceMapGenerator(sourceUrl, sourceUrl, headerLines).toJsComment()}`;\n  }\n  return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nexport function jitStatements(sourceUrl: string, statements: o.Statement[]): {[key: string]: any} {\n  const /** @type {?} */ converter = new JitEmitterVisitor();\n  const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n  converter.visitAllStatements(statements, ctx);\n  converter.createReturnStmt(ctx);\n  return evalExpression(sourceUrl, ctx, converter.getArgs());\n}\nexport class JitEmitterVisitor extends AbstractJsEmitterVisitor {\nprivate _evalArgNames: string[] = [];\nprivate _evalArgValues: any[] = [];\nprivate _evalExportedVars: string[] = [];\n/**\n * @param {?} ctx\n * @return {?}\n */\ncreateReturnStmt(ctx: EmitterVisitorContext) {\n    const /** @type {?} */ stmt = new o.ReturnStatement(new o.LiteralMapExpr(this._evalExportedVars.map(\n        resultVar => new o.LiteralMapEntry(resultVar, o.variable(resultVar), false))));\n    stmt.visitStatement(this, ctx);\n  }\n/**\n * @return {?}\n */\ngetArgs(): {[key: string]: any} {\n    const /** @type {?} */ result: {[key: string]: any} = {};\n    for (let /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n/**\n * @param {?} ast\n * @param {?} ctx\n * @return {?}\n */\nvisitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    const /** @type {?} */ value = ast.value.runtime;\n    let /** @type {?} */ id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      const /** @type {?} */ name = identifierName({reference: ast.value.runtime}) || 'val';\n      this._evalArgNames.push(`jit_${name}_${id}`);\n    }\n    ctx.print(ast, this._evalArgNames[id]);\n    return null;\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareVarStmt(stmt, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareFunctionStmt(stmt, ctx);\n  }\n/**\n * @param {?} stmt\n * @param {?} ctx\n * @return {?}\n */\nvisitDeclareClassStmt(stmt: o.ClassStmt, ctx: EmitterVisitorContext): any {\n    if (stmt.hasModifier(o.StmtModifier.Exported)) {\n      this._evalExportedVars.push(stmt.name);\n    }\n    return super.visitDeclareClassStmt(stmt, ctx);\n  }\n}\n\nfunction JitEmitterVisitor_tsickle_Closure_declarations() {\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgNames;\n/** @type {?} */\nJitEmitterVisitor.prototype._evalArgValues;\n/** @type {?} */\nJitEmitterVisitor.prototype._evalExportedVars;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactory, Inject, Injector, ModuleWithComponentFactories, NgModuleFactory, Type, ɵConsole as Console, ɵgetComponentViewDefinitionFactory as getComponentViewDefinitionFactory, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompileStylesheetMetadata, CompileTypeSummary, ProviderMeta, ProxyClass, createHostComponentMeta, identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {CompilerInjectable} from '../injectable';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport * as ir from '../output/output_ast';\nimport {interpretStatements} from '../output/output_interpreter';\nimport {jitStatements} from '../output/output_jit';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {SummaryResolver} from '../summary_resolver';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {OutputContext, SyncAsync} from '../util';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n * \n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class JitCompiler implements Compiler {\nprivate _compiledTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledHostTemplateCache = new Map<Type<any>, CompiledTemplate>();\nprivate _compiledDirectiveWrapperCache = new Map<Type<any>, Type<any>>();\nprivate _compiledNgModuleCache = new Map<Type<any>, NgModuleFactory<any>>();\nprivate _sharedStylesheetCount = 0;\n/**\n * @param {?} _injector\n * @param {?} _metadataResolver\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _ngModuleCompiler\n * @param {?} _summaryResolver\n * @param {?} _compilerConfig\n * @param {?} _console\n */\nconstructor(\nprivate _injector: Injector,\nprivate _metadataResolver: CompileMetadataResolver,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _ngModuleCompiler: NgModuleCompiler,\nprivate _summaryResolver: SummaryResolver<Type<any>>,\nprivate _compilerConfig: CompilerConfig,\nprivate _console: Console) {}\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    this._console.warn(\n        'Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n    const /** @type {?} */ template = this._compiledTemplateCache.get(component);\n    if (!template) {\n      throw new Error(`The component ${stringify(component)} is not yet compiled!`);\n    }\n    return /** @type {?} */(( template.compMeta.template)).ngContentSelectors;\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\ngetComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    const /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n    return /** @type {?} */(( <ComponentFactory<T>>summary.componentFactory));\n  }\n/**\n * @param {?} summaries\n * @return {?}\n */\nloadAotSummaries(summaries: () => any[]) {\n    this.clearCache();\n    flattenSummaries(summaries).forEach((summary) => {\n      this._summaryResolver.addSummary(\n          {symbol: summary.type.reference, metadata: null, type: summary});\n    });\n  }\n/**\n * @param {?} ref\n * @return {?}\n */\nhasAotSummary(ref: Type<any>) { return !!this._summaryResolver.resolveSummary(ref); }\n/**\n * @param {?} ids\n * @return {?}\n */\n\nprivate _filterJitIdentifiers(ids: CompileIdentifierMetadata[]): any[] {\n    return ids.map(mod => mod.reference).filter((ref) => !this.hasAotSummary(ref));\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\n\nprivate _compileModuleAndComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsync<NgModuleFactory<T>> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      this._compileComponents(moduleType, null);\n      return this._compileModule(moduleType);\n    });\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @param {?} isSync\n * @return {?}\n */\n\nprivate _compileModuleAndAllComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsync<ModuleWithComponentFactories<T>> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      const /** @type {?} */ componentFactories: ComponentFactory<any>[] = [];\n      this._compileComponents(moduleType, componentFactories);\n      return new ModuleWithComponentFactories(this._compileModule(moduleType), componentFactories);\n    });\n  }\n/**\n * @param {?} mainModule\n * @param {?} isSync\n * @return {?}\n */\n\nprivate _loadModules(mainModule: any, isSync: boolean): SyncAsync<any> {\n    const /** @type {?} */ loading: Promise<any>[] = [];\n    const /** @type {?} */ mainNgModule = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(mainModule)));\n    // Note: for runtime compilation, we want to transitively compile all modules,\n    // so we also need to load the declared directives / pipes for all nested modules.\n    this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach((nestedNgModule) => {\n      // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n      const /** @type {?} */ moduleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n      this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach((ref) => {\n        const /** @type {?} */ promise =\n            this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      this._filterJitIdentifiers(moduleMeta.declaredPipes)\n          .forEach((ref) => this._metadataResolver.getOrLoadPipeMetadata(ref));\n    });\n    return SyncAsync.all(loading);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\n\nprivate _compileModule<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    let /** @type {?} */ ngModuleFactory = /** @type {?} */(( this._compiledNgModuleCache.get(moduleType)));\n    if (!ngModuleFactory) {\n      const /** @type {?} */ moduleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(moduleType)));\n      // Always provide a bound Compiler\n      const /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(\n          Compiler, {useFactory: () => new ModuleBoundCompiler(this, moduleMeta.type.reference)}))];\n      const /** @type {?} */ outputCtx = createOutputContext();\n      const /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n      if (!this._compilerConfig.useJit) {\n        ngModuleFactory =\n            interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n      } else {\n        ngModuleFactory = jitStatements(\n            ngModuleJitUrl(moduleMeta), outputCtx.statements, )[compileResult.ngModuleFactoryVar];\n      }\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n/**\n * \\@internal\n * @param {?} mainModule\n * @param {?} allComponentFactories\n * @return {?}\n */\n_compileComponents(mainModule: Type<any>, allComponentFactories: ComponentFactory<any>[]|null) {\n    const /** @type {?} */ ngModule = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(mainModule)));\n    const /** @type {?} */ moduleByJitDirective = new Map<any, CompileNgModuleMetadata>();\n    const /** @type {?} */ templates = new Set<CompiledTemplate>();\n\n    const /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n    transJitModules.forEach((localMod) => {\n      const /** @type {?} */ localModuleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(localMod)));\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        moduleByJitDirective.set(dirRef, localModuleMeta);\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          if (allComponentFactories) {\n            const /** @type {?} */ template =\n                this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n            templates.add(template);\n            allComponentFactories.push( /** @type {?} */((<ComponentFactory<any>>dirMeta.componentFactory)));\n          }\n        }\n      });\n    });\n    transJitModules.forEach((localMod) => {\n      const /** @type {?} */ localModuleMeta = /** @type {?} */(( this._metadataResolver.getNgModuleMetadata(localMod)));\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            const /** @type {?} */ moduleMeta = /** @type {?} */(( moduleByJitDirective.get(entryComponentType.componentType)));\n            templates.add(\n                this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        if (!this.hasAotSummary(entryComponentType.componentType.reference)) {\n          const /** @type {?} */ moduleMeta = /** @type {?} */(( moduleByJitDirective.get(entryComponentType.componentType)));\n          templates.add(\n              this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n        }\n      });\n    });\n    templates.forEach((template) => this._compileTemplate(template));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    const /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n/**\n * @return {?}\n */\nclearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._compiledNgModuleCache.clear();\n  }\n/**\n * @param {?} compType\n * @param {?} ngModule\n * @return {?}\n */\n\nprivate _createCompiledHostTemplate(compType: Type<any>, ngModule: CompileNgModuleMetadata):\n      CompiledTemplate {\n    if (!ngModule) {\n      throw new Error(\n          `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n    let /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n\n      const /** @type {?} */ componentFactory = /** @type {?} */(( <ComponentFactory<any>>compMeta.componentFactory));\n      const /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n      const /** @type {?} */ hostMeta = createHostComponentMeta(\n          hostClass, compMeta, /** @type {?} */(( <any>getComponentViewDefinitionFactory(componentFactory))));\n      compiledTemplate =\n          new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @return {?}\n */\n\nprivate _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    let /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n/**\n * @param {?} template\n * @return {?}\n */\n\nprivate _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const /** @type {?} */ compMeta = template.compMeta;\n    const /** @type {?} */ externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const /** @type {?} */ outputContext = createOutputContext();\n    const /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */((\n    compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n      const /** @type {?} */ compiledStylesheet =\n          this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n      externalStylesheetsByModuleUrl.set( /** @type {?} */((stylesheetMeta.moduleUrl)), compiledStylesheet);\n    });\n    this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n    const /** @type {?} */ directives =\n        template.directives.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const {template: parsedTemplate, pipes: usedPipes} = this._templateParser.parse(\n        compMeta, /** @type {?} */(( /** @type {?} */(( compMeta.template)).template)), directives, pipes, template.ngModule.schemas,\n        templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */(( template.compMeta.template))));\n    const /** @type {?} */ compileResult = this._viewCompiler.compileComponent(\n        outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar),\n        usedPipes);\n    let /** @type {?} */ evalResult: any;\n    if (!this._compilerConfig.useJit) {\n      evalResult = interpretStatements(outputContext.statements);\n    } else {\n      evalResult = jitStatements(\n          templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n    }\n    const /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n    const /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n    template.compiled(viewClass, rendererType);\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\n\nprivate _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      const /** @type {?} */ nestedCompileResult = /** @type {?} */(( externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n      const /** @type {?} */ nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.setValue(nestedStylesArr);\n    });\n  }\n/**\n * @param {?} result\n * @param {?} externalStylesheetsByModuleUrl\n * @return {?}\n */\n\nprivate _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n    } else {\n      return jitStatements(\n          sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++),\n          result.outputCtx.statements)[result.stylesVar];\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Injector, },\n{type: CompileMetadataResolver, },\n{type: TemplateParser, },\n{type: StyleCompiler, },\n{type: ViewCompiler, },\n{type: NgModuleCompiler, },\n{type: SummaryResolver, },\n{type: CompilerConfig, },\n{type: Console, },\n];\n}\n\nfunction JitCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nJitCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJitCompiler.ctorParameters;\n/** @type {?} */\nJitCompiler.prototype._compiledTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledHostTemplateCache;\n/** @type {?} */\nJitCompiler.prototype._compiledDirectiveWrapperCache;\n/** @type {?} */\nJitCompiler.prototype._compiledNgModuleCache;\n/** @type {?} */\nJitCompiler.prototype._sharedStylesheetCount;\n/** @type {?} */\nJitCompiler.prototype._injector;\n/** @type {?} */\nJitCompiler.prototype._metadataResolver;\n/** @type {?} */\nJitCompiler.prototype._templateParser;\n/** @type {?} */\nJitCompiler.prototype._styleCompiler;\n/** @type {?} */\nJitCompiler.prototype._viewCompiler;\n/** @type {?} */\nJitCompiler.prototype._ngModuleCompiler;\n/** @type {?} */\nJitCompiler.prototype._summaryResolver;\n/** @type {?} */\nJitCompiler.prototype._compilerConfig;\n/** @type {?} */\nJitCompiler.prototype._console;\n}\n\nclass CompiledTemplate {\nprivate _viewClass: Function = /** @type {?} */(( null));\n  isCompiled = false;\n/**\n * @param {?} isHost\n * @param {?} compType\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} directives\n */\nconstructor(\npublic isHost: boolean,\npublic compType: CompileIdentifierMetadata,\npublic compMeta: CompileDirectiveMetadata,\npublic ngModule: CompileNgModuleMetadata,\npublic directives: CompileIdentifierMetadata[]) {}\n/**\n * @param {?} viewClass\n * @param {?} rendererType\n * @return {?}\n */\ncompiled(viewClass: Function, rendererType: any) {\n    this._viewClass = viewClass;\n    ( /** @type {?} */((<ProxyClass>this.compMeta.componentViewType))).setDelegate(viewClass);\n    for (let /** @type {?} */ prop in rendererType) {\n      ( /** @type {?} */((<any>this.compMeta.rendererType)))[prop] = rendererType[prop];\n    }\n    this.isCompiled = true;\n  }\n}\n\nfunction CompiledTemplate_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiledTemplate.prototype._viewClass;\n/** @type {?} */\nCompiledTemplate.prototype.isCompiled;\n/** @type {?} */\nCompiledTemplate.prototype.isHost;\n/** @type {?} */\nCompiledTemplate.prototype.compType;\n/** @type {?} */\nCompiledTemplate.prototype.compMeta;\n/** @type {?} */\nCompiledTemplate.prototype.ngModule;\n/** @type {?} */\nCompiledTemplate.prototype.directives;\n}\n\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nclass ModuleBoundCompiler implements Compiler {\n/**\n * @param {?} _delegate\n * @param {?} _ngModule\n */\nconstructor(private _delegate: JitCompiler,\nprivate _ngModule: Type<any>) {}\n/**\n * @return {?}\n */\nget _injector(): Injector { return this._delegate.injector; }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n  }\n/**\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n  }\n/**\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] {\n    return this._delegate.getNgContentSelectors(component);\n  }\n/**\n * Clears all caches\n * @return {?}\n */\nclearCache(): void { this._delegate.clearCache(); }\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\nfunction ModuleBoundCompiler_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleBoundCompiler.prototype._delegate;\n/** @type {?} */\nModuleBoundCompiler.prototype._ngModule;\n}\n\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn: () => any[], out: CompileTypeSummary[] = []): CompileTypeSummary[] {\n  fn().forEach((entry) => {\n    if (typeof entry === 'function') {\n      flattenSummaries(entry, out);\n    } else {\n      out.push(entry);\n    }\n  });\n  return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext(): OutputContext {\n  const /** @type {?} */ importExpr = (symbol: any) =>\n      ir.importExpr({name: identifierName(symbol), moduleName: null, runtime: symbol});\n  return {statements: [], genFilePath: '', importExpr};\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {ParseError} from '../parse_util';\n\nimport {extractMessages} from './extractor_merger';\nimport * as i18n from './i18n_ast';\nimport {PlaceholderMapper, Serializer} from './serializers/serializer';\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\nprivate _messages: i18n.Message[] = [];\n/**\n * @param {?} _htmlParser\n * @param {?} _implicitTags\n * @param {?} _implicitAttrs\n * @param {?=} _locale\n */\nconstructor(\nprivate _htmlParser: HtmlParser,\nprivate _implicitTags: string[],\nprivate _implicitAttrs: {[k: string]: string[]},\nprivate _locale: string|null = null) {}\n/**\n * @param {?} html\n * @param {?} url\n * @param {?} interpolationConfig\n * @return {?}\n */\nupdateFromTemplate(html: string, url: string, interpolationConfig: InterpolationConfig):\n      ParseError[] {\n    const /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n\n    if (htmlParserResult.errors.length) {\n      return htmlParserResult.errors;\n    }\n\n    const /** @type {?} */ i18nParserResult = extractMessages(\n        htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n\n    if (i18nParserResult.errors.length) {\n      return i18nParserResult.errors;\n    }\n\n    this._messages.push(...i18nParserResult.messages);\n    return [];\n  }\n/**\n * @return {?}\n */\ngetMessages(): i18n.Message[] { return this._messages; }\n/**\n * @param {?} serializer\n * @param {?=} filterSources\n * @return {?}\n */\nwrite(serializer: Serializer, filterSources?: (path: string) => string): string {\n    const /** @type {?} */ messages: {[id: string]: i18n.Message} = {};\n    const /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n\n    // Deduplicate messages based on their ID\n    this._messages.forEach(message => {\n      const /** @type {?} */ id = serializer.digest(message);\n      if (!messages.hasOwnProperty(id)) {\n        messages[id] = message;\n      } else {\n        messages[id].sources.push(...message.sources);\n      }\n    });\n\n    // Transform placeholder names using the serializer mapping\n    const /** @type {?} */ msgList = Object.keys(messages).map(id => {\n      const /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n      const /** @type {?} */ src = messages[id];\n      const /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n      let /** @type {?} */ transformedMessage = new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n      transformedMessage.sources = src.sources;\n      if (filterSources) {\n        transformedMessage.sources.forEach(\n            (source: i18n.MessageSpan) => source.filePath = filterSources(source.filePath));\n      }\n      return transformedMessage;\n    });\n\n    return serializer.write(msgList, this._locale);\n  }\n}\n\nfunction MessageBundle_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageBundle.prototype._messages;\n/** @type {?} */\nMessageBundle.prototype._htmlParser;\n/** @type {?} */\nMessageBundle.prototype._implicitTags;\n/** @type {?} */\nMessageBundle.prototype._implicitAttrs;\n/** @type {?} */\nMessageBundle.prototype._locale;\n}\n\nclass MapPlaceholderNames extends i18n.CloneVisitor {\n/**\n * @param {?} nodes\n * @param {?} mapper\n * @return {?}\n */\nconvert(nodes: i18n.Node[], mapper: PlaceholderMapper): i18n.Node[] {\n    return mapper ? nodes.map(n => n.visit(this, mapper)) : nodes;\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitTagPlaceholder(ph: i18n.TagPlaceholder, mapper: PlaceholderMapper): i18n.TagPlaceholder {\n    const /** @type {?} */ startName = /** @type {?} */(( mapper.toPublicName(ph.startName)));\n    const /** @type {?} */ closeName = ph.closeName ? /** @type {?} */(( mapper.toPublicName(ph.closeName))) : ph.closeName;\n    const /** @type {?} */ children = ph.children.map(n => n.visit(this, mapper));\n    return new i18n.TagPlaceholder(\n        ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitPlaceholder(ph: i18n.Placeholder, mapper: PlaceholderMapper): i18n.Placeholder {\n    return new i18n.Placeholder(ph.value, /** @type {?} */(( mapper.toPublicName(ph.name))), ph.sourceSpan);\n  }\n/**\n * @param {?} ph\n * @param {?} mapper\n * @return {?}\n */\nvisitIcuPlaceholder(ph: i18n.IcuPlaceholder, mapper: PlaceholderMapper): i18n.IcuPlaceholder {\n    return new i18n.IcuPlaceholder(ph.value, /** @type {?} */(( mapper.toPublicName(ph.name))), ph.sourceSpan);\n  }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Extract i18n messages from source code\n */\nimport {ViewEncapsulation, ɵConsole as Console} from '@angular/core';\n\nimport {analyzeAndValidateNgModules, extractProgramSymbols} from '../aot/compiler';\nimport {StaticReflector} from '../aot/static_reflector';\nimport {StaticSymbolCache} from '../aot/static_symbol';\nimport {StaticSymbolResolver, StaticSymbolResolverHost} from '../aot/static_symbol_resolver';\nimport {AotSummaryResolver, AotSummaryResolverHost} from '../aot/summary_resolver';\nimport {CompileDirectiveMetadata} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveResolver} from '../directive_resolver';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {NgModuleResolver} from '../ng_module_resolver';\nimport {ParseError} from '../parse_util';\nimport {PipeResolver} from '../pipe_resolver';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {createOfflineCompileUrlResolver} from '../url_resolver';\nimport {MessageBundle} from './message_bundle';\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\nexport function ExtractorHost() {}\n\n\nfunction ExtractorHost_tsickle_Closure_declarations() {\n/**\n * Loads a resource (e.g. html / css)\n * @type {?}\n */\nExtractorHost.prototype.loadResource;\n}\n\n\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n */\nexport interface ExtractorHost extends StaticSymbolResolverHost, AotSummaryResolverHost {\n  /**\n   * Loads a resource (e.g. html / css)\n   */\n  loadResource(path: string): Promise<string>|string;\n}\nexport class Extractor {\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} messageBundle\n * @param {?} metadataResolver\n */\nconstructor(\npublic host: ExtractorHost,\nprivate staticSymbolResolver: StaticSymbolResolver,\nprivate messageBundle: MessageBundle,\nprivate metadataResolver: CompileMetadataResolver) {}\n/**\n * @param {?} rootFiles\n * @return {?}\n */\nextract(rootFiles: string[]): Promise<MessageBundle> {\n    const /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n    const {files, ngModules} =\n        analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver);\n    return Promise\n        .all(ngModules.map(\n            ngModule => this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, false)))\n        .then(() => {\n          const /** @type {?} */ errors: ParseError[] = [];\n\n          files.forEach(file => {\n            const /** @type {?} */ compMetas: CompileDirectiveMetadata[] = [];\n            file.directives.forEach(directiveType => {\n              const /** @type {?} */ dirMeta = this.metadataResolver.getDirectiveMetadata(directiveType);\n              if (dirMeta && dirMeta.isComponent) {\n                compMetas.push(dirMeta);\n              }\n            });\n            compMetas.forEach(compMeta => {\n              const /** @type {?} */ html = /** @type {?} */(( /** @type {?} */(( compMeta.template)).template));\n              const /** @type {?} */ interpolationConfig =\n                  InterpolationConfig.fromArray( /** @type {?} */((compMeta.template)).interpolation);\n              errors.push(... /** @type {?} */((this.messageBundle.updateFromTemplate(\n                  html, file.srcUrl, interpolationConfig))));\n            });\n          });\n\n          if (errors.length) {\n            throw new Error(errors.map(e => e.toString()).join('\\n'));\n          }\n\n          return this.messageBundle;\n        });\n  }\n/**\n * @param {?} host\n * @param {?} locale\n * @return {?}\n */\nstatic create(host: ExtractorHost, locale: string|null):\n      {extractor: Extractor, staticReflector: StaticReflector} {\n    const /** @type {?} */ htmlParser = new HtmlParser();\n\n    const /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    const /** @type {?} */ symbolCache = new StaticSymbolCache();\n    const /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n    const /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n    const /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n\n    const /** @type {?} */ config =\n        new CompilerConfig({defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false});\n\n    const /** @type {?} */ normalizer = new DirectiveNormalizer(\n        {get: (url: string) => host.loadResource(url)}, urlResolver, htmlParser, config);\n    const /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    const /** @type {?} */ resolver = new CompileMetadataResolver(\n        config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector),\n        new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer,\n        new Console(), symbolCache, staticReflector);\n\n    // TODO(vicb): implicit tags & attributes\n    const /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n\n    const /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n    return {extractor, staticReflector};\n  }\n}\n\nfunction Extractor_tsickle_Closure_declarations() {\n/** @type {?} */\nExtractor.prototype.host;\n/** @type {?} */\nExtractor.prototype.staticSymbolResolver;\n/** @type {?} */\nExtractor.prototype.messageBundle;\n/** @type {?} */\nExtractor.prototype.metadataResolver;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {Extractor, ExtractorHost} from './extractor';\nexport {I18NHtmlParser} from './i18n_html_parser';\nexport {MessageBundle} from './message_bundle';\nexport {Serializer} from './serializers/serializer';\nexport {Xliff} from './serializers/xliff';\nexport {Xliff2} from './serializers/xliff2';\nexport {Xmb} from './serializers/xmb';\nexport {Xtb} from './serializers/xtb';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ɵReflectionCapabilities as ReflectionCapabilities, ɵstringify as stringify} from '@angular/core';\n\nimport {CompileReflector} from '../compile_reflector';\nimport * as o from '../output/output_ast';\nimport {getUrlScheme} from '../url_resolver';\nimport {MODULE_SUFFIX, ValueTransformer, noUndefined, syntaxError, visitValue} from '../util';\nexport class JitReflector implements CompileReflector {\nprivate reflectionCapabilities: ReflectionCapabilities;\nconstructor() { this.reflectionCapabilities = new ReflectionCapabilities(); }\n/**\n * @param {?} type\n * @param {?} cmpMetadata\n * @return {?}\n */\ncomponentModuleUrl(type: any, cmpMetadata: Component): string {\n    const /** @type {?} */ moduleId = cmpMetadata.moduleId;\n\n    if (typeof moduleId === 'string') {\n      const /** @type {?} */ scheme = getUrlScheme(moduleId);\n      return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n    } else if (moduleId !== null && moduleId !== void 0) {\n      throw syntaxError(\n          `moduleId should be a string in \"${stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n          `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n    }\n\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: /*Type*/ any): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: /*Type*/ any): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} ref\n * @return {?}\n */\nresolveExternalReference(ref: o.ExternalReference): any { return ref.runtime; }\n}\n\nfunction JitReflector_tsickle_Closure_declarations() {\n/** @type {?} */\nJitReflector.prototype.reflectionCapabilities;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {COMPILER_OPTIONS, Compiler, CompilerFactory, CompilerOptions, Inject, InjectionToken, Injector, MissingTranslationStrategy, Optional, PACKAGE_ROOT_URL, PlatformRef, StaticProvider, TRANSLATIONS, TRANSLATIONS_FORMAT, Type, ViewEncapsulation, createPlatformFactory, isDevMode, platformCore, ɵConsole as Console} from '@angular/core';\n\nimport {StaticSymbolCache} from '../aot/static_symbol';\nimport {CompileReflector} from '../compile_reflector';\nimport {CompilerConfig} from '../config';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveResolver} from '../directive_resolver';\nimport {Lexer} from '../expression_parser/lexer';\nimport {Parser} from '../expression_parser/parser';\nimport * as i18n from '../i18n/index';\nimport {CompilerInjectable} from '../injectable';\nimport {CompileMetadataResolver, ERROR_COLLECTOR_TOKEN} from '../metadata_resolver';\nimport {HtmlParser} from '../ml_parser/html_parser';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {NgModuleResolver} from '../ng_module_resolver';\nimport {PipeResolver} from '../pipe_resolver';\nimport {ResourceLoader} from '../resource_loader';\nimport {DomElementSchemaRegistry} from '../schema/dom_element_schema_registry';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {StyleCompiler} from '../style_compiler';\nimport {JitSummaryResolver, SummaryResolver} from '../summary_resolver';\nimport {TEMPLATE_TRANSFORMS, TemplateParser} from '../template_parser/template_parser';\nimport {DEFAULT_PACKAGE_URL_PROVIDER, UrlResolver} from '../url_resolver';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {JitCompiler} from './compiler';\nimport {JitReflector} from './jit_reflector';\n\nconst /** @type {?} */ _NO_RESOURCE_LOADER: ResourceLoader = {\n/**\n * @param {?} url\n * @return {?}\n */\nget(url: string): Promise<string>{\n      throw new Error(\n          `No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);}\n};\n\nconst /** @type {?} */ baseHtmlParser = new InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nexport const /** @type {?} */ COMPILER_PROVIDERS = /** @type {?} */(( <StaticProvider[]>[\n  {provide: CompileReflector, useValue: new JitReflector()},\n  {provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER},\n  {provide: JitSummaryResolver, deps: []},\n  {provide: SummaryResolver, useExisting: JitSummaryResolver},\n  {provide: Console, deps: []},\n  {provide: Lexer, deps: []},\n  {provide: Parser, deps: [Lexer]},\n  {\n    provide: baseHtmlParser,\n    useClass: HtmlParser,\n    deps: [],\n  },\n  {\n    provide: i18n.I18NHtmlParser,\n    useFactory: (parser: HtmlParser, translations: string | null, format: string,\n                 config: CompilerConfig, console: Console) => {\n      translations = translations || '';\n      const /** @type {?} */ missingTranslation =\n          translations ? /** @type {?} */(( config.missingTranslation)) : MissingTranslationStrategy.Ignore;\n      return new i18n.I18NHtmlParser(parser, translations, format, missingTranslation, console);\n    },\n    deps: [\n      baseHtmlParser,\n      [new Optional(), new Inject(TRANSLATIONS)],\n      [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n      [CompilerConfig],\n      [Console],\n    ]\n  },\n  {\n    provide: HtmlParser,\n    useExisting: i18n.I18NHtmlParser,\n  },\n  {\n    provide: TemplateParser, deps: [CompilerConfig, CompileReflector,\n    Parser, ElementSchemaRegistry,\n    i18n.I18NHtmlParser, Console, [Optional, TEMPLATE_TRANSFORMS]]\n  },\n  { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]},\n  { provide: CompileMetadataResolver, deps: [CompilerConfig, NgModuleResolver,\n                      DirectiveResolver, PipeResolver,\n                      SummaryResolver,\n                      ElementSchemaRegistry,\n                      DirectiveNormalizer, Console,\n                      [Optional, StaticSymbolCache],\n                      CompileReflector,\n                      [Optional, ERROR_COLLECTOR_TOKEN]]},\n  DEFAULT_PACKAGE_URL_PROVIDER,\n  { provide: StyleCompiler, deps: [UrlResolver]},\n  { provide: ViewCompiler, deps: [CompilerConfig, CompileReflector, ElementSchemaRegistry]},\n  { provide: NgModuleCompiler, deps: [CompileReflector] },\n  { provide: CompilerConfig, useValue: new CompilerConfig()},\n  { provide: JitCompiler, deps: [Injector, CompileMetadataResolver,\n                                TemplateParser, StyleCompiler,\n                                ViewCompiler, NgModuleCompiler,\n                                SummaryResolver,  CompilerConfig,\n                                Console]},\n  { provide: Compiler, useExisting: JitCompiler},\n  { provide: DomElementSchemaRegistry, deps: []},\n  { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n  { provide: UrlResolver, deps: [PACKAGE_ROOT_URL]},\n  { provide: DirectiveResolver, deps: [CompileReflector]},\n  { provide: PipeResolver, deps: [CompileReflector]},\n  { provide: NgModuleResolver, deps: [CompileReflector]},\n]));\nexport class JitCompilerFactory implements CompilerFactory {\nprivate _defaultOptions: CompilerOptions[];\n/**\n * @param {?} defaultOptions\n */\nconstructor( defaultOptions: CompilerOptions[]) {\n    const /** @type {?} */ compilerOptions: CompilerOptions = {\n      useDebug: isDevMode(),\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning,\n      enableLegacyTemplate: true,\n    };\n\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n/**\n * @param {?=} options\n * @return {?}\n */\ncreateCompiler(options: CompilerOptions[] = []): Compiler {\n    const /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n    const /** @type {?} */ injector = Injector.create([\n      COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            enableLegacyTemplate: opts.enableLegacyTemplate,\n          });\n        },\n        deps: []\n      }, /** @type {?} */((\n      opts.providers))\n    ]);\n    return injector.get(Compiler);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: CompilerInjectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [COMPILER_OPTIONS, ] }, ]},\n];\n}\n\nfunction JitCompilerFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nJitCompilerFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJitCompilerFactory.ctorParameters;\n/** @type {?} */\nJitCompilerFactory.prototype._defaultOptions;\n}\n\n/**\n * A platform that included corePlatform and the compiler.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n  {provide: COMPILER_OPTIONS, useValue: {}, multi: true},\n  {provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS]},\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr: CompilerOptions[]): CompilerOptions {\n  return {\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => /** @type {?} */(( options.providers)))),\n    missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n    enableLegacyTemplate: _lastDefined(optionsArr.map(options => options.enableLegacyTemplate)),\n  };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined<T>(args: T[]): T|undefined {\n  for (let /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts: any[][]): any[] {\n  const /** @type {?} */ result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\nexport {VERSION} from './version';\nexport {TemplateAst,TextAst,BoundTextAst,AttrAst,BoundElementPropertyAst,BoundEventAst,ReferenceAst,VariableAst,ElementAst,EmbeddedTemplateAst,BoundDirectivePropertyAst,DirectiveAst,ProviderAst,ProviderAstType,NgContentAst,PropertyBindingType,QueryMatch,TemplateAstVisitor,NullTemplateVisitor,RecursiveTemplateAstVisitor,templateVisitAll,TemplateAstPath} from './template_parser/template_ast';\nexport {TEMPLATE_TRANSFORMS} from './template_parser/template_parser';\nexport {CompilerConfig} from './config';\nexport {CompileAnimationEntryMetadata,CompileAnimationStateMetadata,CompileAnimationStateDeclarationMetadata,CompileAnimationStateTransitionMetadata,CompileAnimationMetadata,CompileAnimationKeyframesSequenceMetadata,CompileAnimationStyleMetadata,CompileAnimationAnimateMetadata,CompileAnimationWithStepsMetadata,CompileAnimationSequenceMetadata,CompileAnimationGroupMetadata,identifierName,identifierModuleUrl,viewClassName,rendererTypeName,hostViewClassName,componentFactoryName,ProxyClass,CompileIdentifierMetadata,CompileSummaryKind,CompileTypeSummary,CompileDiDependencyMetadata,CompileProviderMetadata,CompileFactoryMetadata,tokenName,tokenReference,CompileTokenMetadata,CompileTypeMetadata,CompileQueryMetadata,CompileStylesheetMetadata,CompileTemplateSummary,CompileTemplateMetadata,CompileEntryComponentMetadata,CompileDirectiveSummary,CompileDirectiveMetadata,createHostComponentMeta,CompilePipeSummary,CompilePipeMetadata,CompileNgModuleSummary,CompileNgModuleMetadata,TransitiveCompileNgModuleMetadata,ProviderMeta,flatten,sourceUrl,templateSourceUrl,sharedStylesheetJitUrl,ngModuleJitUrl,templateJitUrl} from './compile_metadata';\nexport {createAotCompiler} from './aot/compiler_factory';\nexport {AotCompiler,NgAnalyzedModules,NgAnalyzeModulesHost,analyzeNgModules,analyzeAndValidateNgModules,extractProgramSymbols} from './aot/compiler';\nexport {GeneratedFile,toTypeScript} from './aot/generated_file';\nexport {AotCompilerOptions} from './aot/compiler_options';\nexport {AotCompilerHost} from './aot/compiler_host';\nexport {StaticReflector} from './aot/static_reflector';\nexport {StaticSymbol,StaticSymbolCache} from './aot/static_symbol';\nexport {ResolvedStaticSymbol,StaticSymbolResolverHost,StaticSymbolResolver,unescapeIdentifier} from './aot/static_symbol_resolver';\nexport {AotSummaryResolverHost,AotSummaryResolver} from './aot/summary_resolver';\nexport {AstPath} from './ast_path';\nexport {Summary,SummaryResolver,JitSummaryResolver} from './summary_resolver';\nexport {JitCompiler} from './jit/compiler';\nexport {COMPILER_PROVIDERS,JitCompilerFactory,platformCoreDynamic} from './jit/compiler_factory';\nexport {JitReflector} from './jit/jit_reflector';\nexport {CompileReflector} from './compile_reflector';\nexport {createUrlResolverWithoutPackagePrefix,createOfflineCompileUrlResolver,DEFAULT_PACKAGE_URL_PROVIDER,UrlResolver,getUrlScheme} from './url_resolver';\nexport {ResourceLoader} from './resource_loader';\nexport {DirectiveResolver} from './directive_resolver';\nexport {PipeResolver} from './pipe_resolver';\nexport {NgModuleResolver} from './ng_module_resolver';\nexport {DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig} from './ml_parser/interpolation_config';\nexport {ElementSchemaRegistry} from './schema/element_schema_registry';\nexport {Extractor,ExtractorHost,I18NHtmlParser,MessageBundle,Serializer,Xliff,Xliff2,Xmb,Xtb} from './i18n/index';\nexport {PrenormalizedTemplateMetadata,DirectiveNormalizer} from './directive_normalizer';\nexport {ParserError,ParseSpan,AST,Quote,EmptyExpr,ImplicitReceiver,Chain,Conditional,PropertyRead,PropertyWrite,SafePropertyRead,KeyedRead,KeyedWrite,BindingPipe,LiteralPrimitive,LiteralArray,LiteralMapKey,LiteralMap,Interpolation,Binary,PrefixNot,NonNullAssert,MethodCall,SafeMethodCall,FunctionCall,ASTWithSource,TemplateBinding,AstVisitor,NullAstVisitor,RecursiveAstVisitor,AstTransformer,visitAstChildren} from './expression_parser/ast';\nexport {TokenType,Lexer,Token,EOF,isIdentifier,isQuote} from './expression_parser/lexer';\nexport {SplitInterpolation,TemplateBindingParseResult,Parser,_ParseAST} from './expression_parser/parser';\nexport {ErrorCollector,ERROR_COLLECTOR_TOKEN,CompileMetadataResolver} from './metadata_resolver';\nexport {Node,Text,Expansion,ExpansionCase,Attribute,Element,Comment,Visitor,visitAll,RecursiveVisitor,HtmlAstPath,findNode} from './ml_parser/ast';\nexport {ParseTreeResult,TreeError,HtmlParser} from './ml_parser/html_parser';\nexport {HtmlTagDefinition,getHtmlTagDefinition} from './ml_parser/html_tags';\nexport {} from './ml_parser/interpolation_config';\nexport {TagContentType,TagDefinition,splitNsName,isNgContainer,isNgContent,isNgTemplate,getNsPrefix,mergeNsAndName,NAMED_ENTITIES} from './ml_parser/tags';\nexport {NgModuleCompiler} from './ng_module_compiler';\nexport {AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinVar, CastExpr, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, ExpressionStatement, ExpressionVisitor, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, StatementVisitor, ThrowStmt, TryCatchStmt, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement} from './output/output_ast';\nexport {EmitterVisitorContext} from './output/abstract_emitter';\nexport {debugOutputAstAsTypeScript,TypeScriptEmitter} from './output/ts_emitter';\nexport {ParseLocation,ParseSourceFile,ParseSourceSpan,ParseErrorLevel,ParseError,typeSourceSpan} from './parse_util';\nexport {DomElementSchemaRegistry} from './schema/dom_element_schema_registry';\nexport {CssSelector,SelectorMatcher,SelectorListContext,SelectorContext} from './selector';\nexport {StylesCompileDependency,CompiledStylesheet,StyleCompiler} from './style_compiler';\nexport {TemplateParseError,TemplateParseResult,TemplateParser,splitClasses,createElementCssSelector,removeSummaryDuplicates} from './template_parser/template_parser';\nexport {ViewCompiler} from './view_compiler/view_compiler';\nexport {getParseErrors, isSyntaxError, syntaxError} from './util';\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport {VERSION,TEMPLATE_TRANSFORMS,CompilerConfig,JitCompiler,DirectiveResolver,PipeResolver,NgModuleResolver,DEFAULT_INTERPOLATION_CONFIG,InterpolationConfig,NgModuleCompiler,AssertNotNull,BinaryOperator,BinaryOperatorExpr,BuiltinMethod,BuiltinVar,CastExpr,ClassStmt,CommaExpr,CommentStmt,ConditionalExpr,DeclareFunctionStmt,DeclareVarStmt,ExpressionStatement,ExpressionVisitor,ExternalExpr,ExternalReference,FunctionExpr,IfStmt,InstantiateExpr,InvokeFunctionExpr,InvokeMethodExpr,LiteralArrayExpr,LiteralExpr,LiteralMapExpr,NotExpr,ReadKeyExpr,ReadPropExpr,ReadVarExpr,ReturnStatement,StatementVisitor,ThrowStmt,TryCatchStmt,WriteKeyExpr,WritePropExpr,WriteVarExpr,StmtModifier,Statement,EmitterVisitorContext,ViewCompiler,getParseErrors,isSyntaxError,syntaxError,TemplateAst,TextAst,BoundTextAst,AttrAst,BoundElementPropertyAst,BoundEventAst,ReferenceAst,VariableAst,ElementAst,EmbeddedTemplateAst,BoundDirectivePropertyAst,DirectiveAst,ProviderAst,ProviderAstType,NgContentAst,PropertyBindingType,QueryMatch,TemplateAstVisitor,NullTemplateVisitor,RecursiveTemplateAstVisitor,templateVisitAll,TemplateAstPath,CompileAnimationEntryMetadata,CompileAnimationStateMetadata,CompileAnimationStateDeclarationMetadata,CompileAnimationStateTransitionMetadata,CompileAnimationMetadata,CompileAnimationKeyframesSequenceMetadata,CompileAnimationStyleMetadata,CompileAnimationAnimateMetadata,CompileAnimationWithStepsMetadata,CompileAnimationSequenceMetadata,CompileAnimationGroupMetadata,identifierName,identifierModuleUrl,viewClassName,rendererTypeName,hostViewClassName,componentFactoryName,ProxyClass,CompileIdentifierMetadata,CompileSummaryKind,CompileTypeSummary,CompileDiDependencyMetadata,CompileProviderMetadata,CompileFactoryMetadata,tokenName,tokenReference,CompileTokenMetadata,CompileTypeMetadata,CompileQueryMetadata,CompileStylesheetMetadata,CompileTemplateSummary,CompileTemplateMetadata,CompileEntryComponentMetadata,CompileDirectiveSummary,CompileDirectiveMetadata,createHostComponentMeta,CompilePipeSummary,CompilePipeMetadata,CompileNgModuleSummary,CompileNgModuleMetadata,TransitiveCompileNgModuleMetadata,ProviderMeta,flatten,sourceUrl,templateSourceUrl,sharedStylesheetJitUrl,ngModuleJitUrl,templateJitUrl,createAotCompiler,AotCompiler,NgAnalyzedModules,NgAnalyzeModulesHost,analyzeNgModules,analyzeAndValidateNgModules,extractProgramSymbols,GeneratedFile,toTypeScript,AotCompilerOptions,AotCompilerHost,StaticReflector,StaticSymbol,StaticSymbolCache,ResolvedStaticSymbol,StaticSymbolResolverHost,StaticSymbolResolver,unescapeIdentifier,AotSummaryResolverHost,AotSummaryResolver,AstPath,Summary,SummaryResolver,JitSummaryResolver,COMPILER_PROVIDERS,JitCompilerFactory,platformCoreDynamic,JitReflector,CompileReflector,createUrlResolverWithoutPackagePrefix,createOfflineCompileUrlResolver,DEFAULT_PACKAGE_URL_PROVIDER,UrlResolver,getUrlScheme,ResourceLoader,ElementSchemaRegistry,Extractor,ExtractorHost,I18NHtmlParser,MessageBundle,Serializer,Xliff,Xliff2,Xmb,Xtb,PrenormalizedTemplateMetadata,DirectiveNormalizer,ParserError,ParseSpan,AST,Quote,EmptyExpr,ImplicitReceiver,Chain,Conditional,PropertyRead,PropertyWrite,SafePropertyRead,KeyedRead,KeyedWrite,BindingPipe,LiteralPrimitive,LiteralArray,LiteralMapKey,LiteralMap,Interpolation,Binary,PrefixNot,NonNullAssert,MethodCall,SafeMethodCall,FunctionCall,ASTWithSource,TemplateBinding,AstVisitor,NullAstVisitor,RecursiveAstVisitor,AstTransformer,visitAstChildren,TokenType,Lexer,Token,EOF,isIdentifier,isQuote,SplitInterpolation,TemplateBindingParseResult,Parser,_ParseAST,ErrorCollector,ERROR_COLLECTOR_TOKEN,CompileMetadataResolver,Node,Text,Expansion,ExpansionCase,Attribute,Element,Comment,Visitor,visitAll,RecursiveVisitor,HtmlAstPath,findNode,ParseTreeResult,TreeError,HtmlParser,HtmlTagDefinition,getHtmlTagDefinition,TagContentType,TagDefinition,splitNsName,isNgContainer,isNgContent,isNgTemplate,getNsPrefix,mergeNsAndName,NAMED_ENTITIES,debugOutputAstAsTypeScript,TypeScriptEmitter,ParseLocation,ParseSourceFile,ParseSourceSpan,ParseErrorLevel,ParseError,typeSourceSpan,DomElementSchemaRegistry,CssSelector,SelectorMatcher,SelectorListContext,SelectorContext,StylesCompileDependency,CompiledStylesheet,StyleCompiler,TemplateParseError,TemplateParseResult,TemplateParser,splitClasses,createElementCssSelector,removeSummaryDuplicates} from './src/compiler';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {VERSION,TEMPLATE_TRANSFORMS,CompilerConfig,JitCompiler,DirectiveResolver,PipeResolver,NgModuleResolver,DEFAULT_INTERPOLATION_CONFIG,InterpolationConfig,NgModuleCompiler,AssertNotNull,BinaryOperator,BinaryOperatorExpr,BuiltinMethod,BuiltinVar,CastExpr,ClassStmt,CommaExpr,CommentStmt,ConditionalExpr,DeclareFunctionStmt,DeclareVarStmt,ExpressionStatement,ExpressionVisitor,ExternalExpr,ExternalReference,FunctionExpr,IfStmt,InstantiateExpr,InvokeFunctionExpr,InvokeMethodExpr,LiteralArrayExpr,LiteralExpr,LiteralMapExpr,NotExpr,ReadKeyExpr,ReadPropExpr,ReadVarExpr,ReturnStatement,StatementVisitor,ThrowStmt,TryCatchStmt,WriteKeyExpr,WritePropExpr,WriteVarExpr,StmtModifier,Statement,EmitterVisitorContext,ViewCompiler,getParseErrors,isSyntaxError,syntaxError,TemplateAst,TextAst,BoundTextAst,AttrAst,BoundElementPropertyAst,BoundEventAst,ReferenceAst,VariableAst,ElementAst,EmbeddedTemplateAst,BoundDirectivePropertyAst,DirectiveAst,ProviderAst,ProviderAstType,NgContentAst,PropertyBindingType,QueryMatch,TemplateAstVisitor,NullTemplateVisitor,RecursiveTemplateAstVisitor,templateVisitAll,TemplateAstPath,CompileAnimationEntryMetadata,CompileAnimationStateMetadata,CompileAnimationStateDeclarationMetadata,CompileAnimationStateTransitionMetadata,CompileAnimationMetadata,CompileAnimationKeyframesSequenceMetadata,CompileAnimationStyleMetadata,CompileAnimationAnimateMetadata,CompileAnimationWithStepsMetadata,CompileAnimationSequenceMetadata,CompileAnimationGroupMetadata,identifierName,identifierModuleUrl,viewClassName,rendererTypeName,hostViewClassName,componentFactoryName,ProxyClass,CompileIdentifierMetadata,CompileSummaryKind,CompileTypeSummary,CompileDiDependencyMetadata,CompileProviderMetadata,CompileFactoryMetadata,tokenName,tokenReference,CompileTokenMetadata,CompileTypeMetadata,CompileQueryMetadata,CompileStylesheetMetadata,CompileTemplateSummary,CompileTemplateMetadata,CompileEntryComponentMetadata,CompileDirectiveSummary,CompileDirectiveMetadata,createHostComponentMeta,CompilePipeSummary,CompilePipeMetadata,CompileNgModuleSummary,CompileNgModuleMetadata,TransitiveCompileNgModuleMetadata,ProviderMeta,flatten,sourceUrl,templateSourceUrl,sharedStylesheetJitUrl,ngModuleJitUrl,templateJitUrl,createAotCompiler,AotCompiler,NgAnalyzedModules,NgAnalyzeModulesHost,analyzeNgModules,analyzeAndValidateNgModules,extractProgramSymbols,GeneratedFile,toTypeScript,AotCompilerOptions,AotCompilerHost,StaticReflector,StaticSymbol,StaticSymbolCache,ResolvedStaticSymbol,StaticSymbolResolverHost,StaticSymbolResolver,unescapeIdentifier,AotSummaryResolverHost,AotSummaryResolver,AstPath,Summary,SummaryResolver,JitSummaryResolver,COMPILER_PROVIDERS,JitCompilerFactory,platformCoreDynamic,JitReflector,CompileReflector,createUrlResolverWithoutPackagePrefix,createOfflineCompileUrlResolver,DEFAULT_PACKAGE_URL_PROVIDER,UrlResolver,getUrlScheme,ResourceLoader,ElementSchemaRegistry,Extractor,ExtractorHost,I18NHtmlParser,MessageBundle,Serializer,Xliff,Xliff2,Xmb,Xtb,PrenormalizedTemplateMetadata,DirectiveNormalizer,ParserError,ParseSpan,AST,Quote,EmptyExpr,ImplicitReceiver,Chain,Conditional,PropertyRead,PropertyWrite,SafePropertyRead,KeyedRead,KeyedWrite,BindingPipe,LiteralPrimitive,LiteralArray,LiteralMapKey,LiteralMap,Interpolation,Binary,PrefixNot,NonNullAssert,MethodCall,SafeMethodCall,FunctionCall,ASTWithSource,TemplateBinding,AstVisitor,NullAstVisitor,RecursiveAstVisitor,AstTransformer,visitAstChildren,TokenType,Lexer,Token,EOF,isIdentifier,isQuote,SplitInterpolation,TemplateBindingParseResult,Parser,_ParseAST,ErrorCollector,ERROR_COLLECTOR_TOKEN,CompileMetadataResolver,Node,Text,Expansion,ExpansionCase,Attribute,Element,Comment,Visitor,visitAll,RecursiveVisitor,HtmlAstPath,findNode,ParseTreeResult,TreeError,HtmlParser,HtmlTagDefinition,getHtmlTagDefinition,TagContentType,TagDefinition,splitNsName,isNgContainer,isNgContent,isNgTemplate,getNsPrefix,mergeNsAndName,NAMED_ENTITIES,debugOutputAstAsTypeScript,TypeScriptEmitter,ParseLocation,ParseSourceFile,ParseSourceSpan,ParseErrorLevel,ParseError,typeSourceSpan,DomElementSchemaRegistry,CssSelector,SelectorMatcher,SelectorListContext,SelectorContext,StylesCompileDependency,CompiledStylesheet,StyleCompiler,TemplateParseError,TemplateParseResult,TemplateParser,splitClasses,createElementCssSelector,removeSummaryDuplicates} from './public_api';\n\nexport {$BT as ɵq,$DQ as ɵo,$SQ as ɵp} from './src/chars';\nexport {CompilerInjectable as ɵn} from './src/injectable';\nexport {LifecycleHooks as ɵm} from './src/lifecycle_reflector';\nexport {Parser as ɵa} from './src/ml_parser/parser';\nexport {OutputEmitter as ɵk} from './src/output/abstract_emitter';\nexport {AbstractClassPart as ɵg,ClassField as ɵh,ClassGetter as ɵj,ClassMethod as ɵi,Expression as ɵd,FnParam as ɵe,LiteralMapEntry as ɵf,MapType as ɵc,Type as ɵb} from './src/output/output_ast';\nexport {OutputContext as ɵl} from './src/util';","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Metadata Schema\n\n// If you make a backwards incompatible change to the schema, increment the VERSION number.\n\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave VERSION the same. If possible, as many versions of the metadata that can represent the\n// semantics of the file in an array. For example, when generating a version 2 file, if version 1\n// can accurately represent the metadata, generate both version 1 and version 2 in an array.\n\nexport const VERSION = 3;\n\nexport type MetadataEntry = ClassMetadata | InterfaceMetadata | FunctionMetadata | MetadataValue;\n\nexport interface ModuleMetadata {\n  __symbolic: 'module';\n  version: number;\n  exports?: ModuleExportMetadata[];\n  importAs?: string;\n  metadata: {[name: string]: MetadataEntry};\n  origins?: {[name: string]: string};\n}\nexport function isModuleMetadata(value: any): value is ModuleMetadata {\n  return value && value.__symbolic === 'module';\n}\n\nexport interface ModuleExportMetadata {\n  export?: (string|{name: string, as: string})[];\n  from: string;\n}\n\nexport interface ClassMetadata {\n  __symbolic: 'class';\n  extends?: MetadataSymbolicExpression|MetadataError;\n  arity?: number;\n  decorators?: (MetadataSymbolicExpression|MetadataError)[];\n  members?: MetadataMap;\n  statics?: {[name: string]: MetadataValue | FunctionMetadata};\n}\nexport function isClassMetadata(value: any): value is ClassMetadata {\n  return value && value.__symbolic === 'class';\n}\n\nexport interface InterfaceMetadata { __symbolic: 'interface'; }\nexport function isInterfaceMetadata(value: any): value is InterfaceMetadata {\n  return value && value.__symbolic === 'interface';\n}\n\nexport interface MetadataMap { [name: string]: MemberMetadata[]; }\n\nexport interface MemberMetadata {\n  __symbolic: 'constructor'|'method'|'property';\n  decorators?: (MetadataSymbolicExpression|MetadataError)[];\n}\nexport function isMemberMetadata(value: any): value is MemberMetadata {\n  if (value) {\n    switch (value.__symbolic) {\n      case 'constructor':\n      case 'method':\n      case 'property':\n        return true;\n    }\n  }\n  return false;\n}\n\nexport interface MethodMetadata extends MemberMetadata {\n  __symbolic: 'constructor'|'method';\n  parameterDecorators?: ((MetadataSymbolicExpression | MetadataError)[]|undefined)[];\n}\nexport function isMethodMetadata(value: any): value is MethodMetadata {\n  return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\n\nexport interface ConstructorMetadata extends MethodMetadata {\n  __symbolic: 'constructor';\n  parameters?: (MetadataSymbolicExpression|MetadataError|null|undefined)[];\n}\nexport function isConstructorMetadata(value: any): value is ConstructorMetadata {\n  return value && value.__symbolic === 'constructor';\n}\n\nexport interface FunctionMetadata {\n  __symbolic: 'function';\n  parameters: string[];\n  defaults?: MetadataValue[];\n  value: MetadataValue;\n}\nexport function isFunctionMetadata(value: any): value is FunctionMetadata {\n  return value && value.__symbolic === 'function';\n}\n\nexport type MetadataValue = string | number | boolean | undefined | null | MetadataObject |\n    MetadataArray | MetadataSymbolicExpression | MetadataError;\n\nexport interface MetadataObject { [name: string]: MetadataValue; }\n\nexport interface MetadataArray { [name: number]: MetadataValue; }\n\nexport interface MetadataSymbolicExpression {\n  __symbolic: 'binary'|'call'|'index'|'new'|'pre'|'reference'|'select'|'spread'|'if';\n}\nexport function isMetadataSymbolicExpression(value: any): value is MetadataSymbolicExpression {\n  if (value) {\n    switch (value.__symbolic) {\n      case 'binary':\n      case 'call':\n      case 'index':\n      case 'new':\n      case 'pre':\n      case 'reference':\n      case 'select':\n      case 'spread':\n      case 'if':\n        return true;\n    }\n  }\n  return false;\n}\n\nexport interface MetadataSymbolicBinaryExpression extends MetadataSymbolicExpression {\n  __symbolic: 'binary';\n  operator: '&&'|'||'|'|'|'^'|'&'|'=='|'!='|'==='|'!=='|'<'|'>'|'<='|'>='|'instanceof'|'in'|'as'|\n      '<<'|'>>'|'>>>'|'+'|'-'|'*'|'/'|'%'|'**';\n  left: MetadataValue;\n  right: MetadataValue;\n}\nexport function isMetadataSymbolicBinaryExpression(value: any):\n    value is MetadataSymbolicBinaryExpression {\n  return value && value.__symbolic === 'binary';\n}\n\nexport interface MetadataSymbolicIndexExpression extends MetadataSymbolicExpression {\n  __symbolic: 'index';\n  expression: MetadataValue;\n  index: MetadataValue;\n}\nexport function isMetadataSymbolicIndexExpression(value: any):\n    value is MetadataSymbolicIndexExpression {\n  return value && value.__symbolic === 'index';\n}\n\nexport interface MetadataSymbolicCallExpression extends MetadataSymbolicExpression {\n  __symbolic: 'call'|'new';\n  expression: MetadataValue;\n  arguments?: MetadataValue[];\n}\nexport function isMetadataSymbolicCallExpression(value: any):\n    value is MetadataSymbolicCallExpression {\n  return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\n\nexport interface MetadataSymbolicPrefixExpression extends MetadataSymbolicExpression {\n  __symbolic: 'pre';\n  operator: '+'|'-'|'~'|'!';\n  operand: MetadataValue;\n}\nexport function isMetadataSymbolicPrefixExpression(value: any):\n    value is MetadataSymbolicPrefixExpression {\n  return value && value.__symbolic === 'pre';\n}\n\nexport interface MetadataSymbolicIfExpression extends MetadataSymbolicExpression {\n  __symbolic: 'if';\n  condition: MetadataValue;\n  thenExpression: MetadataValue;\n  elseExpression: MetadataValue;\n}\nexport function isMetadataSymbolicIfExpression(value: any): value is MetadataSymbolicIfExpression {\n  return value && value.__symbolic === 'if';\n}\n\nexport interface MetadataGlobalReferenceExpression extends MetadataSymbolicExpression {\n  __symbolic: 'reference';\n  name: string;\n  arguments?: MetadataValue[];\n}\nexport function isMetadataGlobalReferenceExpression(value: any):\n    value is MetadataGlobalReferenceExpression {\n  return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\n\nexport interface MetadataModuleReferenceExpression extends MetadataSymbolicExpression {\n  __symbolic: 'reference';\n  module: string;\n}\nexport function isMetadataModuleReferenceExpression(value: any):\n    value is MetadataModuleReferenceExpression {\n  return value && value.module && !value.name && !value.default &&\n      isMetadataSymbolicReferenceExpression(value);\n}\n\nexport interface MetadataImportedSymbolReferenceExpression extends MetadataSymbolicExpression {\n  __symbolic: 'reference';\n  module: string;\n  name: string;\n  arguments?: MetadataValue[];\n}\nexport function isMetadataImportedSymbolReferenceExpression(value: any):\n    value is MetadataImportedSymbolReferenceExpression {\n  return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\n\nexport interface MetadataImportedDefaultReferenceExpression extends MetadataSymbolicExpression {\n  __symbolic: 'reference';\n  module: string;\n  default:\n    boolean;\n    arguments?: MetadataValue[];\n}\nexport function isMetadataImportDefaultReference(value: any):\n    value is MetadataImportedDefaultReferenceExpression {\n  return value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\n\nexport type MetadataSymbolicReferenceExpression = MetadataGlobalReferenceExpression |\n    MetadataModuleReferenceExpression | MetadataImportedSymbolReferenceExpression |\n    MetadataImportedDefaultReferenceExpression;\nexport function isMetadataSymbolicReferenceExpression(value: any):\n    value is MetadataSymbolicReferenceExpression {\n  return value && value.__symbolic === 'reference';\n}\n\nexport interface MetadataSymbolicSelectExpression extends MetadataSymbolicExpression {\n  __symbolic: 'select';\n  expression: MetadataValue;\n  name: string;\n}\nexport function isMetadataSymbolicSelectExpression(value: any):\n    value is MetadataSymbolicSelectExpression {\n  return value && value.__symbolic === 'select';\n}\n\nexport interface MetadataSymbolicSpreadExpression extends MetadataSymbolicExpression {\n  __symbolic: 'spread';\n  expression: MetadataValue;\n}\nexport function isMetadataSymbolicSpreadExpression(value: any):\n    value is MetadataSymbolicSpreadExpression {\n  return value && value.__symbolic === 'spread';\n}\n\nexport interface MetadataError {\n  __symbolic: 'error';\n\n  /**\n   * This message should be short and relatively discriptive and should be fixed once it is created.\n   * If the reader doesn't recognize the message, it will display the message unmodified. If the\n   * reader recognizes the error message is it free to use substitute message the is more\n   * descriptive and/or localized.\n   */\n  message: string;\n\n  /**\n   * The line number of the error in the .ts file the metadata was created for.\n   */\n  line?: number;\n\n  /**\n   * The number of utf8 code-units from the beginning of the file of the error.\n   */\n  character?: number;\n\n  /**\n   * The module of the error (only used in bundled metadata)\n   */\n  module?: string;\n\n  /**\n   * Context information that can be used to generate a more descriptive error message. The content\n   * of the context is dependent on the error message.\n   */\n  context?: {[name: string]: string};\n}\nexport function isMetadataError(value: any): value is MetadataError {\n  return value && value.__symbolic === 'error';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {CollectorOptions} from './collector';\nimport {MetadataEntry, MetadataError, MetadataImportedSymbolReferenceExpression, MetadataSymbolicCallExpression, MetadataValue, isMetadataError, isMetadataGlobalReferenceExpression, isMetadataModuleReferenceExpression, isMetadataSymbolicReferenceExpression, isMetadataSymbolicSpreadExpression} from './schema';\nimport {Symbols} from './symbols';\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nconst spreadElementSyntaxKind: ts.SyntaxKind =\n    (ts.SyntaxKind as any).SpreadElement || (ts.SyntaxKind as any).SpreadElementExpression;\n\nfunction isMethodCallOf(callExpression: ts.CallExpression, memberName: string): boolean {\n  const expression = callExpression.expression;\n  if (expression.kind === ts.SyntaxKind.PropertyAccessExpression) {\n    const propertyAccessExpression = <ts.PropertyAccessExpression>expression;\n    const name = propertyAccessExpression.name;\n    if (name.kind == ts.SyntaxKind.Identifier) {\n      return name.text === memberName;\n    }\n  }\n  return false;\n}\n\nfunction isCallOf(callExpression: ts.CallExpression, ident: string): boolean {\n  const expression = callExpression.expression;\n  if (expression.kind === ts.SyntaxKind.Identifier) {\n    const identifier = <ts.Identifier>expression;\n    return identifier.text === ident;\n  }\n  return false;\n}\n\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node: ts.Node, cb: (node: ts.Node) => boolean) {\n  return !ts.forEachChild(node, node => !cb(node));\n}\n\nexport function isPrimitive(value: any): boolean {\n  return Object(value) !== value;\n}\n\nfunction isDefined(obj: any): boolean {\n  return obj !== undefined;\n}\n\n// import {propertyName as name} from 'place'\n// import {name} from 'place'\nexport interface ImportSpecifierMetadata {\n  name: string;\n  propertyName?: string;\n}\nexport interface ImportMetadata {\n  defaultName?: string;                      // import d from 'place'\n  namespace?: string;                        // import * as d from 'place'\n  namedImports?: ImportSpecifierMetadata[];  // import {a} from 'place'\n  from: string;                              // from 'place'\n}\n\n\nfunction getSourceFileOfNode(node: ts.Node | undefined): ts.SourceFile {\n  while (node && node.kind != ts.SyntaxKind.SourceFile) {\n    node = node.parent;\n  }\n  return <ts.SourceFile>node;\n}\n\n/* @internal */\nexport function errorSymbol(\n    message: string, node?: ts.Node, context?: {[name: string]: string},\n    sourceFile?: ts.SourceFile): MetadataError {\n  let result: MetadataError|undefined = undefined;\n  if (node) {\n    sourceFile = sourceFile || getSourceFileOfNode(node);\n    if (sourceFile) {\n      const {line, character} =\n          ts.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile));\n      result = {__symbolic: 'error', message, line, character};\n    }\n  }\n  if (!result) {\n    result = {__symbolic: 'error', message};\n  }\n  if (context) {\n    result.context = context;\n  }\n  return result;\n}\n\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nexport class Evaluator {\n  constructor(\n      private symbols: Symbols, private nodeMap: Map<MetadataEntry, ts.Node>,\n      private options: CollectorOptions = {},\n      private recordExport?: (name: string, value: MetadataValue) => void) {}\n\n  nameOf(node: ts.Node|undefined): string|MetadataError {\n    if (node && node.kind == ts.SyntaxKind.Identifier) {\n      return (<ts.Identifier>node).text;\n    }\n    const result = node && this.evaluateNode(node);\n    if (isMetadataError(result) || typeof result === 'string') {\n      return result;\n    } else {\n      return errorSymbol(\n          'Name expected', node, {received: (node && node.getText()) || '<missing>'});\n    }\n  }\n\n  /**\n   * Returns true if the expression represented by `node` can be folded into a literal expression.\n   *\n   * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n   * `\"Some value\"` `true` `false` are foldable.\n   *\n   * - An object literal is foldable if all the properties in the literal are foldable.\n   * - An array literal is foldable if all the elements are foldable.\n   * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n   * - A property access is foldable if the object is foldable.\n   * - A array index is foldable if index expression is foldable and the array is foldable.\n   * - Binary operator expressions are foldable if the left and right expressions are foldable and\n   *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n   * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n   *   table.\n   */\n  public isFoldable(node: ts.Node): boolean {\n    return this.isFoldableWorker(node, new Map<ts.Node, boolean>());\n  }\n\n  private isFoldableWorker(node: ts.Node|undefined, folding: Map<ts.Node, boolean>): boolean {\n    if (node) {\n      switch (node.kind) {\n        case ts.SyntaxKind.ObjectLiteralExpression:\n          return everyNodeChild(node, child => {\n            if (child.kind === ts.SyntaxKind.PropertyAssignment) {\n              const propertyAssignment = <ts.PropertyAssignment>child;\n              return this.isFoldableWorker(propertyAssignment.initializer, folding);\n            }\n            return false;\n          });\n        case ts.SyntaxKind.ArrayLiteralExpression:\n          return everyNodeChild(node, child => this.isFoldableWorker(child, folding));\n        case ts.SyntaxKind.CallExpression:\n          const callExpression = <ts.CallExpression>node;\n          // We can fold a <array>.concat(<v>).\n          if (isMethodCallOf(callExpression, 'concat') &&\n              arrayOrEmpty(callExpression.arguments).length === 1) {\n            const arrayNode = (<ts.PropertyAccessExpression>callExpression.expression).expression;\n            if (this.isFoldableWorker(arrayNode, folding) &&\n                this.isFoldableWorker(callExpression.arguments[0], folding)) {\n              // It needs to be an array.\n              const arrayValue = this.evaluateNode(arrayNode);\n              if (arrayValue && Array.isArray(arrayValue)) {\n                return true;\n              }\n            }\n          }\n\n          // We can fold a call to CONST_EXPR\n          if (isCallOf(callExpression, 'CONST_EXPR') &&\n              arrayOrEmpty(callExpression.arguments).length === 1)\n            return this.isFoldableWorker(callExpression.arguments[0], folding);\n          return false;\n        case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n        case ts.SyntaxKind.StringLiteral:\n        case ts.SyntaxKind.NumericLiteral:\n        case ts.SyntaxKind.NullKeyword:\n        case ts.SyntaxKind.TrueKeyword:\n        case ts.SyntaxKind.FalseKeyword:\n        case ts.SyntaxKind.TemplateHead:\n        case ts.SyntaxKind.TemplateMiddle:\n        case ts.SyntaxKind.TemplateTail:\n          return true;\n        case ts.SyntaxKind.ParenthesizedExpression:\n          const parenthesizedExpression = <ts.ParenthesizedExpression>node;\n          return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n        case ts.SyntaxKind.BinaryExpression:\n          const binaryExpression = <ts.BinaryExpression>node;\n          switch (binaryExpression.operatorToken.kind) {\n            case ts.SyntaxKind.PlusToken:\n            case ts.SyntaxKind.MinusToken:\n            case ts.SyntaxKind.AsteriskToken:\n            case ts.SyntaxKind.SlashToken:\n            case ts.SyntaxKind.PercentToken:\n            case ts.SyntaxKind.AmpersandAmpersandToken:\n            case ts.SyntaxKind.BarBarToken:\n              return this.isFoldableWorker(binaryExpression.left, folding) &&\n                  this.isFoldableWorker(binaryExpression.right, folding);\n            default:\n              return false;\n          }\n        case ts.SyntaxKind.PropertyAccessExpression:\n          const propertyAccessExpression = <ts.PropertyAccessExpression>node;\n          return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n        case ts.SyntaxKind.ElementAccessExpression:\n          const elementAccessExpression = <ts.ElementAccessExpression>node;\n          return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n              this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n        case ts.SyntaxKind.Identifier:\n          let identifier = <ts.Identifier>node;\n          let reference = this.symbols.resolve(identifier.text);\n          if (reference !== undefined && isPrimitive(reference)) {\n            return true;\n          }\n          break;\n        case ts.SyntaxKind.TemplateExpression:\n          const templateExpression = <ts.TemplateExpression>node;\n          return templateExpression.templateSpans.every(\n              span => this.isFoldableWorker(span.expression, folding));\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n   * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n   */\n  public evaluateNode(node: ts.Node, preferReference?: boolean): MetadataValue {\n    const t = this;\n    let error: MetadataError|undefined;\n\n    function recordEntry(entry: MetadataValue, node: ts.Node): MetadataValue {\n      if (t.options.substituteExpression) {\n        const newEntry = t.options.substituteExpression(entry, node);\n        if (t.recordExport && newEntry != entry && isMetadataGlobalReferenceExpression(newEntry)) {\n          t.recordExport(newEntry.name, entry);\n        }\n        entry = newEntry;\n      }\n      t.nodeMap.set(entry, node);\n      return entry;\n    }\n\n    function isFoldableError(value: any): value is MetadataError {\n      return !t.options.verboseInvalidExpression && isMetadataError(value);\n    }\n\n    const resolveName = (name: string, preferReference?: boolean): MetadataValue => {\n      const reference = this.symbols.resolve(name, preferReference);\n      if (reference === undefined) {\n        // Encode as a global reference. StaticReflector will check the reference.\n        return recordEntry({__symbolic: 'reference', name}, node);\n      }\n      return reference;\n    };\n\n    switch (node.kind) {\n      case ts.SyntaxKind.ObjectLiteralExpression:\n        let obj: {[name: string]: any} = {};\n        let quoted: string[] = [];\n        ts.forEachChild(node, child => {\n          switch (child.kind) {\n            case ts.SyntaxKind.ShorthandPropertyAssignment:\n            case ts.SyntaxKind.PropertyAssignment:\n              const assignment = <ts.PropertyAssignment|ts.ShorthandPropertyAssignment>child;\n              if (assignment.name.kind == ts.SyntaxKind.StringLiteral) {\n                const name = (assignment.name as ts.StringLiteral).text;\n                quoted.push(name);\n              }\n              const propertyName = this.nameOf(assignment.name);\n              if (isFoldableError(propertyName)) {\n                error = propertyName;\n                return true;\n              }\n              const propertyValue = isPropertyAssignment(assignment) ?\n                  this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                  resolveName(propertyName, /* preferReference */ true);\n              if (isFoldableError(propertyValue)) {\n                error = propertyValue;\n                return true;  // Stop the forEachChild.\n              } else {\n                obj[<string>propertyName] = propertyValue;\n              }\n          }\n        });\n        if (error) return error;\n        if (this.options.quotedNames && quoted.length) {\n          obj['$quoted$'] = quoted;\n        }\n        return recordEntry(obj, node);\n      case ts.SyntaxKind.ArrayLiteralExpression:\n        let arr: MetadataValue[] = [];\n        ts.forEachChild(node, child => {\n          const value = this.evaluateNode(child, /* preferReference */ true);\n\n          // Check for error\n          if (isFoldableError(value)) {\n            error = value;\n            return true;  // Stop the forEachChild.\n          }\n\n          // Handle spread expressions\n          if (isMetadataSymbolicSpreadExpression(value)) {\n            if (Array.isArray(value.expression)) {\n              for (const spreadValue of value.expression) {\n                arr.push(spreadValue);\n              }\n              return;\n            }\n          }\n\n          arr.push(value);\n        });\n        if (error) return error;\n        return recordEntry(arr, node);\n      case spreadElementSyntaxKind:\n        let spreadExpression = this.evaluateNode((node as any).expression);\n        return recordEntry({__symbolic: 'spread', expression: spreadExpression}, node);\n      case ts.SyntaxKind.CallExpression:\n        const callExpression = <ts.CallExpression>node;\n        if (isCallOf(callExpression, 'forwardRef') &&\n            arrayOrEmpty(callExpression.arguments).length === 1) {\n          const firstArgument = callExpression.arguments[0];\n          if (firstArgument.kind == ts.SyntaxKind.ArrowFunction) {\n            const arrowFunction = <ts.ArrowFunction>firstArgument;\n            return recordEntry(this.evaluateNode(arrowFunction.body), node);\n          }\n        }\n        const args = arrayOrEmpty(callExpression.arguments).map(arg => this.evaluateNode(arg));\n        if (!this.options.verboseInvalidExpression && args.some(isMetadataError)) {\n          return args.find(isMetadataError);\n        }\n        if (this.isFoldable(callExpression)) {\n          if (isMethodCallOf(callExpression, 'concat')) {\n            const arrayValue = <MetadataValue[]>this.evaluateNode(\n                (<ts.PropertyAccessExpression>callExpression.expression).expression);\n            if (isFoldableError(arrayValue)) return arrayValue;\n            return arrayValue.concat(args[0]);\n          }\n        }\n        // Always fold a CONST_EXPR even if the argument is not foldable.\n        if (isCallOf(callExpression, 'CONST_EXPR') &&\n            arrayOrEmpty(callExpression.arguments).length === 1) {\n          return recordEntry(args[0], node);\n        }\n        const expression = this.evaluateNode(callExpression.expression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        let result: MetadataSymbolicCallExpression = {__symbolic: 'call', expression: expression};\n        if (args && args.length) {\n          result.arguments = args;\n        }\n        return recordEntry(result, node);\n      case ts.SyntaxKind.NewExpression:\n        const newExpression = <ts.NewExpression>node;\n        const newArgs = arrayOrEmpty(newExpression.arguments).map(arg => this.evaluateNode(arg));\n        if (!this.options.verboseInvalidExpression && newArgs.some(isMetadataError)) {\n          return recordEntry(newArgs.find(isMetadataError), node);\n        }\n        const newTarget = this.evaluateNode(newExpression.expression);\n        if (isMetadataError(newTarget)) {\n          return recordEntry(newTarget, node);\n        }\n        const call: MetadataSymbolicCallExpression = {__symbolic: 'new', expression: newTarget};\n        if (newArgs.length) {\n          call.arguments = newArgs;\n        }\n        return recordEntry(call, node);\n      case ts.SyntaxKind.PropertyAccessExpression: {\n        const propertyAccessExpression = <ts.PropertyAccessExpression>node;\n        const expression = this.evaluateNode(propertyAccessExpression.expression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        const member = this.nameOf(propertyAccessExpression.name);\n        if (isFoldableError(member)) {\n          return recordEntry(member, node);\n        }\n        if (expression && this.isFoldable(propertyAccessExpression.expression))\n          return (<any>expression)[<string>member];\n        if (isMetadataModuleReferenceExpression(expression)) {\n          // A select into a module reference and be converted into a reference to the symbol\n          // in the module\n          return recordEntry(\n              {__symbolic: 'reference', module: expression.module, name: member}, node);\n        }\n        return recordEntry({__symbolic: 'select', expression, member}, node);\n      }\n      case ts.SyntaxKind.ElementAccessExpression: {\n        const elementAccessExpression = <ts.ElementAccessExpression>node;\n        const expression = this.evaluateNode(elementAccessExpression.expression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        if (!elementAccessExpression.argumentExpression) {\n          return recordEntry(errorSymbol('Expression form not supported', node), node);\n        }\n        const index = this.evaluateNode(elementAccessExpression.argumentExpression);\n        if (isFoldableError(expression)) {\n          return recordEntry(expression, node);\n        }\n        if (this.isFoldable(elementAccessExpression.expression) &&\n            this.isFoldable(elementAccessExpression.argumentExpression))\n          return (<any>expression)[<string|number>index];\n        return recordEntry({__symbolic: 'index', expression, index}, node);\n      }\n      case ts.SyntaxKind.Identifier:\n        const identifier = <ts.Identifier>node;\n        const name = identifier.text;\n        return resolveName(name, preferReference);\n      case ts.SyntaxKind.TypeReference:\n        const typeReferenceNode = <ts.TypeReferenceNode>node;\n        const typeNameNode = typeReferenceNode.typeName;\n        const getReference: (typeNameNode: ts.Identifier | ts.QualifiedName) => MetadataValue =\n            node => {\n              if (typeNameNode.kind === ts.SyntaxKind.QualifiedName) {\n                const qualifiedName = <ts.QualifiedName>node;\n                const left = this.evaluateNode(qualifiedName.left);\n                if (isMetadataModuleReferenceExpression(left)) {\n                  return recordEntry(\n                      <MetadataImportedSymbolReferenceExpression>{\n                        __symbolic: 'reference',\n                        module: left.module,\n                        name: qualifiedName.right.text\n                      },\n                      node);\n                }\n                // Record a type reference to a declared type as a select.\n                return {__symbolic: 'select', expression: left, member: qualifiedName.right.text};\n              } else {\n                const identifier = <ts.Identifier>typeNameNode;\n                const symbol = this.symbols.resolve(identifier.text);\n                if (isFoldableError(symbol) || isMetadataSymbolicReferenceExpression(symbol)) {\n                  return recordEntry(symbol, node);\n                }\n                return recordEntry(\n                    errorSymbol('Could not resolve type', node, {typeName: identifier.text}), node);\n              }\n            };\n        const typeReference = getReference(typeNameNode);\n        if (isFoldableError(typeReference)) {\n          return recordEntry(typeReference, node);\n        }\n        if (!isMetadataModuleReferenceExpression(typeReference) &&\n            typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n          const args = typeReferenceNode.typeArguments.map(element => this.evaluateNode(element));\n          // TODO: Remove typecast when upgraded to 2.0 as it will be corretly inferred.\n          // Some versions of 1.9 do not infer this correctly.\n          (<MetadataImportedSymbolReferenceExpression>typeReference).arguments = args;\n        }\n        return recordEntry(typeReference, node);\n      case ts.SyntaxKind.UnionType:\n        const unionType = <ts.UnionTypeNode>node;\n\n        // Remove null and undefined from the list of unions.\n        const references = unionType.types\n                               .filter(\n                                   n => n.kind != ts.SyntaxKind.NullKeyword &&\n                                       n.kind != ts.SyntaxKind.UndefinedKeyword)\n                               .map(n => this.evaluateNode(n));\n\n        // The remmaining reference must be the same. If two have type arguments consider them\n        // different even if the type arguments are the same.\n        let candidate: any = null;\n        for (let i = 0; i < references.length; i++) {\n          const reference = references[i];\n          if (isMetadataSymbolicReferenceExpression(reference)) {\n            if (candidate) {\n              if ((reference as any).name == candidate.name &&\n                  (reference as any).module == candidate.module && !(reference as any).arguments) {\n                candidate = reference;\n              }\n            } else {\n              candidate = reference;\n            }\n          } else {\n            return reference;\n          }\n        }\n        if (candidate) return candidate;\n        break;\n      case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n      case ts.SyntaxKind.StringLiteral:\n      case ts.SyntaxKind.TemplateHead:\n      case ts.SyntaxKind.TemplateTail:\n      case ts.SyntaxKind.TemplateMiddle:\n        return (<ts.LiteralLikeNode>node).text;\n      case ts.SyntaxKind.NumericLiteral:\n        return parseFloat((<ts.LiteralExpression>node).text);\n      case ts.SyntaxKind.AnyKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'any'}, node);\n      case ts.SyntaxKind.StringKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'string'}, node);\n      case ts.SyntaxKind.NumberKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'number'}, node);\n      case ts.SyntaxKind.BooleanKeyword:\n        return recordEntry({__symbolic: 'reference', name: 'boolean'}, node);\n      case ts.SyntaxKind.ArrayType:\n        const arrayTypeNode = <ts.ArrayTypeNode>node;\n        return recordEntry(\n            {\n              __symbolic: 'reference',\n              name: 'Array',\n              arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n            },\n            node);\n      case ts.SyntaxKind.NullKeyword:\n        return null;\n      case ts.SyntaxKind.TrueKeyword:\n        return true;\n      case ts.SyntaxKind.FalseKeyword:\n        return false;\n      case ts.SyntaxKind.ParenthesizedExpression:\n        const parenthesizedExpression = <ts.ParenthesizedExpression>node;\n        return this.evaluateNode(parenthesizedExpression.expression);\n      case ts.SyntaxKind.TypeAssertionExpression:\n        const typeAssertion = <ts.TypeAssertion>node;\n        return this.evaluateNode(typeAssertion.expression);\n      case ts.SyntaxKind.PrefixUnaryExpression:\n        const prefixUnaryExpression = <ts.PrefixUnaryExpression>node;\n        const operand = this.evaluateNode(prefixUnaryExpression.operand);\n        if (isDefined(operand) && isPrimitive(operand)) {\n          switch (prefixUnaryExpression.operator) {\n            case ts.SyntaxKind.PlusToken:\n              return +(operand as any);\n            case ts.SyntaxKind.MinusToken:\n              return -(operand as any);\n            case ts.SyntaxKind.TildeToken:\n              return ~(operand as any);\n            case ts.SyntaxKind.ExclamationToken:\n              return !operand;\n          }\n        }\n        let operatorText: string;\n        switch (prefixUnaryExpression.operator) {\n          case ts.SyntaxKind.PlusToken:\n            operatorText = '+';\n            break;\n          case ts.SyntaxKind.MinusToken:\n            operatorText = '-';\n            break;\n          case ts.SyntaxKind.TildeToken:\n            operatorText = '~';\n            break;\n          case ts.SyntaxKind.ExclamationToken:\n            operatorText = '!';\n            break;\n          default:\n            return undefined;\n        }\n        return recordEntry({__symbolic: 'pre', operator: operatorText, operand: operand}, node);\n      case ts.SyntaxKind.BinaryExpression:\n        const binaryExpression = <ts.BinaryExpression>node;\n        const left = this.evaluateNode(binaryExpression.left);\n        const right = this.evaluateNode(binaryExpression.right);\n        if (isDefined(left) && isDefined(right)) {\n          if (isPrimitive(left) && isPrimitive(right))\n            switch (binaryExpression.operatorToken.kind) {\n              case ts.SyntaxKind.BarBarToken:\n                return <any>left || <any>right;\n              case ts.SyntaxKind.AmpersandAmpersandToken:\n                return <any>left && <any>right;\n              case ts.SyntaxKind.AmpersandToken:\n                return <any>left & <any>right;\n              case ts.SyntaxKind.BarToken:\n                return <any>left | <any>right;\n              case ts.SyntaxKind.CaretToken:\n                return <any>left ^ <any>right;\n              case ts.SyntaxKind.EqualsEqualsToken:\n                return <any>left == <any>right;\n              case ts.SyntaxKind.ExclamationEqualsToken:\n                return <any>left != <any>right;\n              case ts.SyntaxKind.EqualsEqualsEqualsToken:\n                return <any>left === <any>right;\n              case ts.SyntaxKind.ExclamationEqualsEqualsToken:\n                return <any>left !== <any>right;\n              case ts.SyntaxKind.LessThanToken:\n                return <any>left < <any>right;\n              case ts.SyntaxKind.GreaterThanToken:\n                return <any>left > <any>right;\n              case ts.SyntaxKind.LessThanEqualsToken:\n                return <any>left <= <any>right;\n              case ts.SyntaxKind.GreaterThanEqualsToken:\n                return <any>left >= <any>right;\n              case ts.SyntaxKind.LessThanLessThanToken:\n                return (<any>left) << (<any>right);\n              case ts.SyntaxKind.GreaterThanGreaterThanToken:\n                return <any>left >> <any>right;\n              case ts.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                return <any>left >>> <any>right;\n              case ts.SyntaxKind.PlusToken:\n                return <any>left + <any>right;\n              case ts.SyntaxKind.MinusToken:\n                return <any>left - <any>right;\n              case ts.SyntaxKind.AsteriskToken:\n                return <any>left * <any>right;\n              case ts.SyntaxKind.SlashToken:\n                return <any>left / <any>right;\n              case ts.SyntaxKind.PercentToken:\n                return <any>left % <any>right;\n            }\n          return recordEntry(\n              {\n                __symbolic: 'binop',\n                operator: binaryExpression.operatorToken.getText(),\n                left: left,\n                right: right\n              },\n              node);\n        }\n        break;\n      case ts.SyntaxKind.ConditionalExpression:\n        const conditionalExpression = <ts.ConditionalExpression>node;\n        const condition = this.evaluateNode(conditionalExpression.condition);\n        const thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n        const elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n        if (isPrimitive(condition)) {\n          return condition ? thenExpression : elseExpression;\n        }\n        return recordEntry({__symbolic: 'if', condition, thenExpression, elseExpression}, node);\n      case ts.SyntaxKind.FunctionExpression:\n      case ts.SyntaxKind.ArrowFunction:\n        return recordEntry(errorSymbol('Function call not supported', node), node);\n      case ts.SyntaxKind.TaggedTemplateExpression:\n        return recordEntry(\n            errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n      case ts.SyntaxKind.TemplateExpression:\n        const templateExpression = <ts.TemplateExpression>node;\n        if (this.isFoldable(node)) {\n          return templateExpression.templateSpans.reduce(\n              (previous, current) => previous + <string>this.evaluateNode(current.expression) +\n                  <string>this.evaluateNode(current.literal),\n              this.evaluateNode(templateExpression.head));\n        } else {\n          return templateExpression.templateSpans.reduce((previous, current) => {\n            const expr = this.evaluateNode(current.expression);\n            const literal = this.evaluateNode(current.literal);\n            if (isFoldableError(expr)) return expr;\n            if (isFoldableError(literal)) return literal;\n            if (typeof previous === 'string' && typeof expr === 'string' &&\n                typeof literal === 'string') {\n              return previous + expr + literal;\n            }\n            let result = expr;\n            if (previous !== '') {\n              result = {__symbolic: 'binop', operator: '+', left: previous, right: expr};\n            }\n            if (literal != '') {\n              result = {__symbolic: 'binop', operator: '+', left: result, right: literal};\n            }\n            return result;\n          }, this.evaluateNode(templateExpression.head));\n        }\n      case ts.SyntaxKind.AsExpression:\n        const asExpression = <ts.AsExpression>node;\n        return this.evaluateNode(asExpression.expression);\n      case ts.SyntaxKind.ClassExpression:\n        return {__symbolic: 'class'};\n    }\n    return recordEntry(errorSymbol('Expression form not supported', node), node);\n  }\n}\n\nfunction isPropertyAssignment(node: ts.Node): node is ts.PropertyAssignment {\n  return node.kind == ts.SyntaxKind.PropertyAssignment;\n}\n\nconst empty = ts.createNodeArray<any>();\n\nfunction arrayOrEmpty<T extends ts.Node>(v: ts.NodeArray<T>| undefined): ts.NodeArray<T> {\n  return v || empty;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {MetadataSymbolicReferenceExpression, MetadataValue} from './schema';\n\nexport class Symbols {\n  private _symbols: Map<string, MetadataValue>;\n  private references = new Map<string, MetadataSymbolicReferenceExpression>();\n\n  constructor(private sourceFile: ts.SourceFile) {}\n\n  resolve(name: string, preferReference?: boolean): MetadataValue|undefined {\n    return (preferReference && this.references.get(name)) || this.symbols.get(name);\n  }\n\n  define(name: string, value: MetadataValue) { this.symbols.set(name, value); }\n  defineReference(name: string, value: MetadataSymbolicReferenceExpression) {\n    this.references.set(name, value);\n  }\n\n  has(name: string): boolean { return this.symbols.has(name); }\n\n  private get symbols(): Map<string, MetadataValue> {\n    let result = this._symbols;\n    if (!result) {\n      result = this._symbols = new Map<string, MetadataValue>();\n      populateBuiltins(result);\n      this.buildImports();\n    }\n    return result;\n  }\n\n  private buildImports(): void {\n    const symbols = this._symbols;\n    // Collect the imported symbols into this.symbols\n    const stripQuotes = (s: string) => s.replace(/^['\"]|['\"]$/g, '');\n    const visit = (node: ts.Node) => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ImportEqualsDeclaration:\n          const importEqualsDeclaration = <ts.ImportEqualsDeclaration>node;\n          if (importEqualsDeclaration.moduleReference.kind ===\n              ts.SyntaxKind.ExternalModuleReference) {\n            const externalReference =\n                <ts.ExternalModuleReference>importEqualsDeclaration.moduleReference;\n            if (externalReference.expression) {\n              // An `import <identifier> = require(<module-specifier>);\n              if (!externalReference.expression.parent) {\n                // The `parent` field of a node is set by the TypeScript binder (run as\n                // part of the type checker). Setting it here allows us to call `getText()`\n                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                // sets the parent.\n                externalReference.expression.parent = externalReference;\n                externalReference.parent = this.sourceFile as any;\n              }\n              const from = stripQuotes(externalReference.expression.getText());\n              symbols.set(\n                  importEqualsDeclaration.name.text, {__symbolic: 'reference', module: from});\n              break;\n            }\n          }\n          symbols.set(\n              importEqualsDeclaration.name.text,\n              {__symbolic: 'error', message: `Unsupported import syntax`});\n          break;\n        case ts.SyntaxKind.ImportDeclaration:\n          const importDecl = <ts.ImportDeclaration>node;\n          if (!importDecl.importClause) {\n            // An `import <module-specifier>` clause which does not bring symbols into scope.\n            break;\n          }\n          if (!importDecl.moduleSpecifier.parent) {\n            // See note above in the `ImportEqualDeclaration` case.\n            importDecl.moduleSpecifier.parent = importDecl;\n            importDecl.parent = this.sourceFile;\n          }\n          const from = stripQuotes(importDecl.moduleSpecifier.getText());\n          if (importDecl.importClause.name) {\n            // An `import <identifier> form <module-specifier>` clause. Record the defualt symbol.\n            symbols.set(\n                importDecl.importClause.name.text,\n                {__symbolic: 'reference', module: from, default: true});\n          }\n          const bindings = importDecl.importClause.namedBindings;\n          if (bindings) {\n            switch (bindings.kind) {\n              case ts.SyntaxKind.NamedImports:\n                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                for (const binding of (<ts.NamedImports>bindings).elements) {\n                  symbols.set(binding.name.text, {\n                    __symbolic: 'reference',\n                    module: from,\n                    name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                  });\n                }\n                break;\n              case ts.SyntaxKind.NamespaceImport:\n                // An `input * as <identifier> from <module-specifier>` clause.\n                symbols.set(\n                    (<ts.NamespaceImport>bindings).name.text,\n                    {__symbolic: 'reference', module: from});\n                break;\n            }\n          }\n          break;\n      }\n      ts.forEachChild(node, visit);\n    };\n    if (this.sourceFile) {\n      ts.forEachChild(this.sourceFile, visit);\n    }\n  }\n}\n\nfunction populateBuiltins(symbols: Map<string, MetadataValue>) {\n  // From lib.core.d.ts (all \"define const\")\n  ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n   'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n   'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n   'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n   'Float64Array']\n      .forEach(name => symbols.set(name, {__symbolic: 'reference', name}));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {Evaluator, errorSymbol} from './evaluator';\nimport {ClassMetadata, ConstructorMetadata, FunctionMetadata, InterfaceMetadata, MemberMetadata, MetadataEntry, MetadataError, MetadataMap, MetadataSymbolicBinaryExpression, MetadataSymbolicCallExpression, MetadataSymbolicExpression, MetadataSymbolicIfExpression, MetadataSymbolicIndexExpression, MetadataSymbolicPrefixExpression, MetadataSymbolicReferenceExpression, MetadataSymbolicSelectExpression, MetadataSymbolicSpreadExpression, MetadataValue, MethodMetadata, ModuleExportMetadata, ModuleMetadata, VERSION, isClassMetadata, isConstructorMetadata, isFunctionMetadata, isMetadataError, isMetadataGlobalReferenceExpression, isMetadataSymbolicExpression, isMetadataSymbolicReferenceExpression, isMetadataSymbolicSelectExpression, isMethodMetadata} from './schema';\nimport {Symbols} from './symbols';\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nconst isExport = (ts as any).ModifierFlags ?\n    ((node: ts.Node) =>\n         !!((ts as any).getCombinedModifierFlags(node) & (ts as any).ModifierFlags.Export)) :\n    ((node: ts.Node) => !!((node.flags & (ts as any).NodeFlags.Export)));\nconst isStatic = (ts as any).ModifierFlags ?\n    ((node: ts.Node) =>\n         !!((ts as any).getCombinedModifierFlags(node) & (ts as any).ModifierFlags.Static)) :\n    ((node: ts.Node) => !!((node.flags & (ts as any).NodeFlags.Static)));\n\n/**\n * A set of collector options to use when collecting metadata.\n */\nexport interface CollectorOptions {\n  /**\n   * Version of the metadata to collect.\n   */\n  version?: number;\n\n  /**\n   * Collect a hidden field \"$quoted$\" in objects literals that record when the key was quoted in\n   * the source.\n   */\n  quotedNames?: boolean;\n\n  /**\n   * Do not simplify invalid expressions.\n   */\n  verboseInvalidExpression?: boolean;\n\n  /**\n   * An expression substitution callback.\n   */\n  substituteExpression?: (value: MetadataValue, node: ts.Node) => MetadataValue;\n}\n\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nexport class MetadataCollector {\n  constructor(private options: CollectorOptions = {}) {}\n\n  /**\n   * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n   * the source file that is expected to correspond to a module.\n   */\n  public getMetadata(\n      sourceFile: ts.SourceFile, strict: boolean = false,\n      substituteExpression?: (value: MetadataValue, node: ts.Node) => MetadataValue): ModuleMetadata\n      |undefined {\n    const locals = new Symbols(sourceFile);\n    const nodeMap =\n        new Map<MetadataValue|ClassMetadata|InterfaceMetadata|FunctionMetadata, ts.Node>();\n    const composedSubstituter = substituteExpression && this.options.substituteExpression ?\n        (value: MetadataValue, node: ts.Node) =>\n            this.options.substituteExpression !(substituteExpression(value, node), node) :\n        substituteExpression;\n    const evaluatorOptions = substituteExpression ?\n        {...this.options, substituteExpression: composedSubstituter} :\n        this.options;\n    let metadata: {[name: string]: MetadataValue | ClassMetadata | FunctionMetadata}|undefined;\n    const evaluator = new Evaluator(locals, nodeMap, evaluatorOptions, (name, value) => {\n      if (!metadata) metadata = {};\n      metadata[name] = value;\n    });\n    let exports: ModuleExportMetadata[]|undefined = undefined;\n\n    function objFromDecorator(decoratorNode: ts.Decorator): MetadataSymbolicExpression {\n      return <MetadataSymbolicExpression>evaluator.evaluateNode(decoratorNode.expression);\n    }\n\n    function recordEntry<T extends MetadataEntry>(entry: T, node: ts.Node): T {\n      nodeMap.set(entry, node);\n      return entry;\n    }\n\n    function errorSym(\n        message: string, node?: ts.Node, context?: {[name: string]: string}): MetadataError {\n      return errorSymbol(message, node, context, sourceFile);\n    }\n\n    function maybeGetSimpleFunction(\n        functionDeclaration: ts.FunctionDeclaration |\n        ts.MethodDeclaration): {func: FunctionMetadata, name: string}|undefined {\n      if (functionDeclaration.name && functionDeclaration.name.kind == ts.SyntaxKind.Identifier) {\n        const nameNode = <ts.Identifier>functionDeclaration.name;\n        const functionName = nameNode.text;\n        const functionBody = functionDeclaration.body;\n        if (functionBody && functionBody.statements.length == 1) {\n          const statement = functionBody.statements[0];\n          if (statement.kind === ts.SyntaxKind.ReturnStatement) {\n            const returnStatement = <ts.ReturnStatement>statement;\n            if (returnStatement.expression) {\n              const func: FunctionMetadata = {\n                __symbolic: 'function',\n                parameters: namesOf(functionDeclaration.parameters),\n                value: evaluator.evaluateNode(returnStatement.expression)\n              };\n              if (functionDeclaration.parameters.some(p => p.initializer != null)) {\n                func.defaults = functionDeclaration.parameters.map(\n                    p => p.initializer && evaluator.evaluateNode(p.initializer));\n              }\n              return recordEntry({func, name: functionName}, functionDeclaration);\n            }\n          }\n        }\n      }\n    }\n\n    function classMetadataOf(classDeclaration: ts.ClassDeclaration): ClassMetadata {\n      const result: ClassMetadata = {__symbolic: 'class'};\n\n      function getDecorators(decorators: ts.Decorator[] | undefined): MetadataSymbolicExpression[]|\n          undefined {\n        if (decorators && decorators.length)\n          return decorators.map(decorator => objFromDecorator(decorator));\n        return undefined;\n      }\n\n      function referenceFrom(node: ts.Node): MetadataSymbolicReferenceExpression|MetadataError|\n          MetadataSymbolicSelectExpression {\n        const result = evaluator.evaluateNode(node);\n        if (isMetadataError(result) || isMetadataSymbolicReferenceExpression(result) ||\n            isMetadataSymbolicSelectExpression(result)) {\n          return result;\n        } else {\n          return errorSym('Symbol reference expected', node);\n        }\n      }\n\n      // Add class parents\n      if (classDeclaration.heritageClauses) {\n        classDeclaration.heritageClauses.forEach((hc) => {\n          if (hc.token === ts.SyntaxKind.ExtendsKeyword && hc.types) {\n            hc.types.forEach(type => result.extends = referenceFrom(type.expression));\n          }\n        });\n      }\n\n      // Add arity if the type is generic\n      const typeParameters = classDeclaration.typeParameters;\n      if (typeParameters && typeParameters.length) {\n        result.arity = typeParameters.length;\n      }\n\n      // Add class decorators\n      if (classDeclaration.decorators) {\n        result.decorators = getDecorators(classDeclaration.decorators);\n      }\n\n      // member decorators\n      let members: MetadataMap|null = null;\n      function recordMember(name: string, metadata: MemberMetadata) {\n        if (!members) members = {};\n        const data = members.hasOwnProperty(name) ? members[name] : [];\n        data.push(metadata);\n        members[name] = data;\n      }\n\n      // static member\n      let statics: {[name: string]: MetadataValue | FunctionMetadata}|null = null;\n      function recordStaticMember(name: string, value: MetadataValue | FunctionMetadata) {\n        if (!statics) statics = {};\n        statics[name] = value;\n      }\n\n      for (const member of classDeclaration.members) {\n        let isConstructor = false;\n        switch (member.kind) {\n          case ts.SyntaxKind.Constructor:\n          case ts.SyntaxKind.MethodDeclaration:\n            isConstructor = member.kind === ts.SyntaxKind.Constructor;\n            const method = <ts.MethodDeclaration|ts.ConstructorDeclaration>member;\n            if (isStatic(method)) {\n              const maybeFunc = maybeGetSimpleFunction(<ts.MethodDeclaration>method);\n              if (maybeFunc) {\n                recordStaticMember(maybeFunc.name, maybeFunc.func);\n              }\n              continue;\n            }\n            const methodDecorators = getDecorators(method.decorators);\n            const parameters = method.parameters;\n            const parameterDecoratorData:\n                ((MetadataSymbolicExpression | MetadataError)[] | undefined)[] = [];\n            const parametersData:\n                (MetadataSymbolicReferenceExpression | MetadataError |\n                 MetadataSymbolicSelectExpression | null)[] = [];\n            let hasDecoratorData: boolean = false;\n            let hasParameterData: boolean = false;\n            for (const parameter of parameters) {\n              const parameterData = getDecorators(parameter.decorators);\n              parameterDecoratorData.push(parameterData);\n              hasDecoratorData = hasDecoratorData || !!parameterData;\n              if (isConstructor) {\n                if (parameter.type) {\n                  parametersData.push(referenceFrom(parameter.type));\n                } else {\n                  parametersData.push(null);\n                }\n                hasParameterData = true;\n              }\n            }\n            const data: MethodMetadata = {__symbolic: isConstructor ? 'constructor' : 'method'};\n            const name = isConstructor ? '__ctor__' : evaluator.nameOf(member.name);\n            if (methodDecorators) {\n              data.decorators = methodDecorators;\n            }\n            if (hasDecoratorData) {\n              data.parameterDecorators = parameterDecoratorData;\n            }\n            if (hasParameterData) {\n              (<ConstructorMetadata>data).parameters = parametersData;\n            }\n            if (!isMetadataError(name)) {\n              recordMember(name, data);\n            }\n            break;\n          case ts.SyntaxKind.PropertyDeclaration:\n          case ts.SyntaxKind.GetAccessor:\n          case ts.SyntaxKind.SetAccessor:\n            const property = <ts.PropertyDeclaration>member;\n            if (isStatic(property)) {\n              const name = evaluator.nameOf(property.name);\n              if (!isMetadataError(name)) {\n                if (property.initializer) {\n                  const value = evaluator.evaluateNode(property.initializer);\n                  recordStaticMember(name, value);\n                } else {\n                  recordStaticMember(name, errorSym('Variable not initialized', property.name));\n                }\n              }\n            }\n            const propertyDecorators = getDecorators(property.decorators);\n            if (propertyDecorators) {\n              const name = evaluator.nameOf(property.name);\n              if (!isMetadataError(name)) {\n                recordMember(name, {__symbolic: 'property', decorators: propertyDecorators});\n              }\n            }\n            break;\n        }\n      }\n      if (members) {\n        result.members = members;\n      }\n      if (statics) {\n        result.statics = statics;\n      }\n\n      return recordEntry(result, classDeclaration);\n    }\n\n    // Collect all exported symbols from an exports clause.\n    const exportMap = new Map<string, string>();\n    ts.forEachChild(sourceFile, node => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ExportDeclaration:\n          const exportDeclaration = <ts.ExportDeclaration>node;\n          const {moduleSpecifier, exportClause} = exportDeclaration;\n\n          if (!moduleSpecifier) {\n            // If there is a module specifier there is also an exportClause\n            exportClause !.elements.forEach(spec => {\n              const exportedAs = spec.name.text;\n              const name = (spec.propertyName || spec.name).text;\n              exportMap.set(name, exportedAs);\n            });\n          }\n      }\n    });\n\n    const isExportedIdentifier = (identifier?: ts.Identifier) =>\n        identifier && exportMap.has(identifier.text);\n    const isExported =\n        (node: ts.FunctionDeclaration | ts.ClassDeclaration | ts.InterfaceDeclaration |\n         ts.EnumDeclaration) => isExport(node) || isExportedIdentifier(node.name);\n    const exportedIdentifierName = (identifier?: ts.Identifier) =>\n        identifier && (exportMap.get(identifier.text) || identifier.text);\n    const exportedName =\n        (node: ts.FunctionDeclaration | ts.ClassDeclaration | ts.InterfaceDeclaration |\n         ts.EnumDeclaration) => exportedIdentifierName(node.name);\n\n\n    // Predeclare classes and functions\n    ts.forEachChild(sourceFile, node => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ClassDeclaration:\n          const classDeclaration = <ts.ClassDeclaration>node;\n          if (classDeclaration.name) {\n            const className = classDeclaration.name.text;\n            if (isExported(classDeclaration)) {\n              locals.define(\n                  className, {__symbolic: 'reference', name: exportedName(classDeclaration)});\n            } else {\n              locals.define(\n                  className, errorSym('Reference to non-exported class', node, {className}));\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.InterfaceDeclaration:\n          const interfaceDeclaration = <ts.InterfaceDeclaration>node;\n          if (interfaceDeclaration.name) {\n            const interfaceName = interfaceDeclaration.name.text;\n            // All references to interfaces should be converted to references to `any`.\n            locals.define(interfaceName, {__symbolic: 'reference', name: 'any'});\n          }\n          break;\n\n        case ts.SyntaxKind.FunctionDeclaration:\n          const functionDeclaration = <ts.FunctionDeclaration>node;\n          if (!isExported(functionDeclaration)) {\n            // Report references to this function as an error.\n            const nameNode = functionDeclaration.name;\n            if (nameNode && nameNode.text) {\n              locals.define(\n                  nameNode.text,\n                  errorSym(\n                      'Reference to a non-exported function', nameNode, {name: nameNode.text}));\n            }\n          }\n          break;\n      }\n    });\n\n    ts.forEachChild(sourceFile, node => {\n      switch (node.kind) {\n        case ts.SyntaxKind.ExportDeclaration:\n          // Record export declarations\n          const exportDeclaration = <ts.ExportDeclaration>node;\n          const {moduleSpecifier, exportClause} = exportDeclaration;\n\n          if (!moduleSpecifier) {\n            // no module specifier -> export {propName as name};\n            if (exportClause) {\n              exportClause.elements.forEach(spec => {\n                const name = spec.name.text;\n                // If the symbol was not already exported, export a reference since it is a\n                // reference to an import\n                if (!metadata || !metadata[name]) {\n                  const propNode = spec.propertyName || spec.name;\n                  const value: MetadataValue = evaluator.evaluateNode(propNode);\n                  if (!metadata) metadata = {};\n                  metadata[name] = recordEntry(value, node);\n                }\n              });\n            }\n          }\n\n          if (moduleSpecifier && moduleSpecifier.kind == ts.SyntaxKind.StringLiteral) {\n            // Ignore exports that don't have string literals as exports.\n            // This is allowed by the syntax but will be flagged as an error by the type checker.\n            const from = (<ts.StringLiteral>moduleSpecifier).text;\n            const moduleExport: ModuleExportMetadata = {from};\n            if (exportClause) {\n              moduleExport.export = exportClause.elements.map(\n                  spec => spec.propertyName ? {name: spec.propertyName.text, as: spec.name.text} :\n                                              spec.name.text);\n            }\n            if (!exports) exports = [];\n            exports.push(moduleExport);\n          }\n          break;\n        case ts.SyntaxKind.ClassDeclaration:\n          const classDeclaration = <ts.ClassDeclaration>node;\n          if (classDeclaration.name) {\n            if (isExported(classDeclaration)) {\n              const name = exportedName(classDeclaration);\n              if (name) {\n                if (!metadata) metadata = {};\n                metadata[name] = classMetadataOf(classDeclaration);\n              }\n            }\n          }\n          // Otherwise don't record metadata for the class.\n          break;\n\n        case ts.SyntaxKind.InterfaceDeclaration:\n          const interfaceDeclaration = <ts.InterfaceDeclaration>node;\n          if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n            const name = exportedName(interfaceDeclaration);\n            if (name) {\n              if (!metadata) metadata = {};\n              metadata[name] = {__symbolic: 'interface'};\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.FunctionDeclaration:\n          // Record functions that return a single value. Record the parameter\n          // names substitution will be performed by the StaticReflector.\n          const functionDeclaration = <ts.FunctionDeclaration>node;\n          if (isExported(functionDeclaration) && functionDeclaration.name) {\n            const name = exportedName(functionDeclaration);\n            const maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n            if (name) {\n              if (!metadata) metadata = {};\n              metadata[name] =\n                  maybeFunc ? recordEntry(maybeFunc.func, node) : {__symbolic: 'function'};\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.EnumDeclaration:\n          const enumDeclaration = <ts.EnumDeclaration>node;\n          if (isExported(enumDeclaration)) {\n            const enumValueHolder: {[name: string]: MetadataValue} = {};\n            const enumName = exportedName(enumDeclaration);\n            let nextDefaultValue: MetadataValue = 0;\n            let writtenMembers = 0;\n            for (const member of enumDeclaration.members) {\n              let enumValue: MetadataValue;\n              if (!member.initializer) {\n                enumValue = nextDefaultValue;\n              } else {\n                enumValue = evaluator.evaluateNode(member.initializer);\n              }\n              let name: string|undefined = undefined;\n              if (member.name.kind == ts.SyntaxKind.Identifier) {\n                const identifier = <ts.Identifier>member.name;\n                name = identifier.text;\n                enumValueHolder[name] = enumValue;\n                writtenMembers++;\n              }\n              if (typeof enumValue === 'number') {\n                nextDefaultValue = enumValue + 1;\n              } else if (name) {\n                nextDefaultValue = {\n                  __symbolic: 'binary',\n                  operator: '+',\n                  left: {\n                    __symbolic: 'select',\n                    expression: recordEntry({__symbolic: 'reference', name: enumName}, node), name\n                  }\n                };\n              } else {\n                nextDefaultValue =\n                    recordEntry(errorSym('Unsuppported enum member name', member.name), node);\n              }\n            }\n            if (writtenMembers) {\n              if (enumName) {\n                if (!metadata) metadata = {};\n                metadata[enumName] = recordEntry(enumValueHolder, node);\n              }\n            }\n          }\n          break;\n\n        case ts.SyntaxKind.VariableStatement:\n          const variableStatement = <ts.VariableStatement>node;\n          for (const variableDeclaration of variableStatement.declarationList.declarations) {\n            if (variableDeclaration.name.kind == ts.SyntaxKind.Identifier) {\n              const nameNode = <ts.Identifier>variableDeclaration.name;\n              let varValue: MetadataValue;\n              if (variableDeclaration.initializer) {\n                varValue = evaluator.evaluateNode(variableDeclaration.initializer);\n              } else {\n                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n              }\n              let exported = false;\n              if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                  isExportedIdentifier(nameNode)) {\n                const name = exportedIdentifierName(nameNode);\n                if (name) {\n                  if (!metadata) metadata = {};\n                  metadata[name] = recordEntry(varValue, node);\n                }\n                exported = true;\n              }\n              if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                  typeof varValue == 'boolean') {\n                locals.define(nameNode.text, varValue);\n                if (exported) {\n                  locals.defineReference(\n                      nameNode.text, {__symbolic: 'reference', name: nameNode.text});\n                }\n              } else if (!exported) {\n                if (varValue && !isMetadataError(varValue)) {\n                  locals.define(nameNode.text, recordEntry(varValue, node));\n                } else {\n                  locals.define(\n                      nameNode.text,\n                      recordEntry(\n                          errorSym('Reference to a local symbol', nameNode, {name: nameNode.text}),\n                          node));\n                }\n              }\n            } else {\n              // Destructuring (or binding) declarations are not supported,\n              // var {<identifier>[, <identifier>]+} = <expression>;\n              //   or\n              // var [<identifier>[, <identifier}+] = <expression>;\n              // are not supported.\n              const report: (nameNode: ts.Node) => void = (nameNode: ts.Node) => {\n                switch (nameNode.kind) {\n                  case ts.SyntaxKind.Identifier:\n                    const name = <ts.Identifier>nameNode;\n                    const varValue = errorSym('Destructuring not supported', name);\n                    locals.define(name.text, varValue);\n                    if (isExport(node)) {\n                      if (!metadata) metadata = {};\n                      metadata[name.text] = varValue;\n                    }\n                    break;\n                  case ts.SyntaxKind.BindingElement:\n                    const bindingElement = <ts.BindingElement>nameNode;\n                    report(bindingElement.name);\n                    break;\n                  case ts.SyntaxKind.ObjectBindingPattern:\n                  case ts.SyntaxKind.ArrayBindingPattern:\n                    const bindings = <ts.BindingPattern>nameNode;\n                    (bindings as any).elements.forEach(report);\n                    break;\n                }\n              };\n              report(variableDeclaration.name);\n            }\n          }\n          break;\n      }\n    });\n\n    if (metadata || exports) {\n      if (!metadata)\n        metadata = {};\n      else if (strict) {\n        validateMetadata(sourceFile, nodeMap, metadata);\n      }\n      const result: ModuleMetadata = {\n        __symbolic: 'module',\n        version: this.options.version || VERSION, metadata\n      };\n      if (exports) result.exports = exports;\n      return result;\n    }\n  }\n}\n\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(\n    sourceFile: ts.SourceFile, nodeMap: Map<MetadataEntry, ts.Node>,\n    metadata: {[name: string]: MetadataEntry}) {\n  let locals: Set<string> = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n\n  function validateExpression(\n      expression: MetadataValue | MetadataSymbolicExpression | MetadataError) {\n    if (!expression) {\n      return;\n    } else if (Array.isArray(expression)) {\n      expression.forEach(validateExpression);\n    } else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n      Object.getOwnPropertyNames(expression).forEach(v => validateExpression((<any>expression)[v]));\n    } else if (isMetadataError(expression)) {\n      reportError(expression);\n    } else if (isMetadataGlobalReferenceExpression(expression)) {\n      if (!locals.has(expression.name)) {\n        const reference = <MetadataValue>metadata[expression.name];\n        if (reference) {\n          validateExpression(reference);\n        }\n      }\n    } else if (isFunctionMetadata(expression)) {\n      validateFunction(<any>expression);\n    } else if (isMetadataSymbolicExpression(expression)) {\n      switch (expression.__symbolic) {\n        case 'binary':\n          const binaryExpression = <MetadataSymbolicBinaryExpression>expression;\n          validateExpression(binaryExpression.left);\n          validateExpression(binaryExpression.right);\n          break;\n        case 'call':\n        case 'new':\n          const callExpression = <MetadataSymbolicCallExpression>expression;\n          validateExpression(callExpression.expression);\n          if (callExpression.arguments) callExpression.arguments.forEach(validateExpression);\n          break;\n        case 'index':\n          const indexExpression = <MetadataSymbolicIndexExpression>expression;\n          validateExpression(indexExpression.expression);\n          validateExpression(indexExpression.index);\n          break;\n        case 'pre':\n          const prefixExpression = <MetadataSymbolicPrefixExpression>expression;\n          validateExpression(prefixExpression.operand);\n          break;\n        case 'select':\n          const selectExpression = <MetadataSymbolicSelectExpression>expression;\n          validateExpression(selectExpression.expression);\n          break;\n        case 'spread':\n          const spreadExpression = <MetadataSymbolicSpreadExpression>expression;\n          validateExpression(spreadExpression.expression);\n          break;\n        case 'if':\n          const ifExpression = <MetadataSymbolicIfExpression>expression;\n          validateExpression(ifExpression.condition);\n          validateExpression(ifExpression.elseExpression);\n          validateExpression(ifExpression.thenExpression);\n          break;\n      }\n    }\n  }\n\n  function validateMember(classData: ClassMetadata, member: MemberMetadata) {\n    if (member.decorators) {\n      member.decorators.forEach(validateExpression);\n    }\n    if (isMethodMetadata(member) && member.parameterDecorators) {\n      member.parameterDecorators.forEach(validateExpression);\n    }\n    // Only validate parameters of classes for which we know that are used with our DI\n    if (classData.decorators && isConstructorMetadata(member) && member.parameters) {\n      member.parameters.forEach(validateExpression);\n    }\n  }\n\n  function validateClass(classData: ClassMetadata) {\n    if (classData.decorators) {\n      classData.decorators.forEach(validateExpression);\n    }\n    if (classData.members) {\n      Object.getOwnPropertyNames(classData.members)\n          .forEach(name => classData.members ![name].forEach((m) => validateMember(classData, m)));\n    }\n    if (classData.statics) {\n      Object.getOwnPropertyNames(classData.statics).forEach(name => {\n        const staticMember = classData.statics ![name];\n        if (isFunctionMetadata(staticMember)) {\n          validateExpression(staticMember.value);\n        } else {\n          validateExpression(staticMember);\n        }\n      });\n    }\n  }\n\n  function validateFunction(functionDeclaration: FunctionMetadata) {\n    if (functionDeclaration.value) {\n      const oldLocals = locals;\n      if (functionDeclaration.parameters) {\n        locals = new Set(oldLocals.values());\n        if (functionDeclaration.parameters)\n          functionDeclaration.parameters.forEach(n => locals.add(n));\n      }\n      validateExpression(functionDeclaration.value);\n      locals = oldLocals;\n    }\n  }\n\n  function shouldReportNode(node: ts.Node | undefined) {\n    if (node) {\n      const nodeStart = node.getStart();\n      return !(\n          node.pos != nodeStart &&\n          sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n    }\n    return true;\n  }\n\n  function reportError(error: MetadataError) {\n    const node = nodeMap.get(error);\n    if (shouldReportNode(node)) {\n      const lineInfo = error.line != undefined ?\n          error.character != undefined ? `:${error.line + 1}:${error.character + 1}` :\n                                         `:${error.line + 1}` :\n          '';\n      throw new Error(\n          `${sourceFile.fileName}${lineInfo}: Metadata collected contains an error that will be reported at runtime: ${expandedMessage(error)}.\\n  ${JSON.stringify(error)}`);\n    }\n  }\n\n  Object.getOwnPropertyNames(metadata).forEach(name => {\n    const entry = metadata[name];\n    try {\n      if (isClassMetadata(entry)) {\n        validateClass(entry);\n      }\n    } catch (e) {\n      const node = nodeMap.get(entry);\n      if (shouldReportNode(node)) {\n        if (node) {\n          const {line, character} = sourceFile.getLineAndCharacterOfPosition(node.getStart());\n          throw new Error(\n              `${sourceFile.fileName}:${line + 1}:${character + 1}: Error encountered in metadata generated for exported symbol '${name}': \\n ${e.message}`);\n        }\n        throw new Error(\n            `Error encountered in metadata generated for exported symbol ${name}: \\n ${e.message}`);\n      }\n    }\n  });\n}\n\n// Collect parameter names from a function.\nfunction namesOf(parameters: ts.NodeArray<ts.ParameterDeclaration>): string[] {\n  const result: string[] = [];\n\n  function addNamesOf(name: ts.Identifier | ts.BindingPattern) {\n    if (name.kind == ts.SyntaxKind.Identifier) {\n      const identifier = <ts.Identifier>name;\n      result.push(identifier.text);\n    } else {\n      const bindingPattern = <ts.BindingPattern>name;\n      for (const element of bindingPattern.elements) {\n        const name = (element as any).name;\n        if (name) {\n          addNamesOf(name);\n        }\n      }\n    }\n  }\n\n  for (const parameter of parameters) {\n    addNamesOf(parameter.name);\n  }\n\n  return result;\n}\n\nfunction expandedMessage(error: any): string {\n  switch (error.message) {\n    case 'Reference to non-exported class':\n      if (error.context && error.context.className) {\n        return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n      }\n      break;\n    case 'Variable not initialized':\n      return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n    case 'Destructuring not supported':\n      return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n    case 'Could not resolve type':\n      if (error.context && error.context.typeName) {\n        return `Could not resolve type ${error.context.typeName}`;\n      }\n      break;\n    case 'Function call not supported':\n      let prefix =\n          error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n      return prefix +\n          'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n    case 'Reference to a local symbol':\n      if (error.context && error.context.name) {\n        return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n      }\n  }\n  return error.message;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AotCompilerHost, StaticSymbol} from '@angular/compiler';\nimport {AngularCompilerOptions, CollectorOptions, MetadataCollector, ModuleMetadata} from '@angular/tsc-wrapped';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nconst EXT = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst DTS = /\\.d\\.ts$/;\nconst NODE_MODULES = '/node_modules/';\nconst IS_GENERATED = /\\.(ngfactory|ngstyle|ngsummary)$/;\nconst GENERATED_FILES = /\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nconst GENERATED_OR_DTS_FILES = /\\.d\\.ts$|\\.ngfactory\\.ts$|\\.ngstyle\\.ts$|\\.ngsummary\\.ts$/;\nconst SHALLOW_IMPORT = /^((\\w|-)+|(@(\\w|-)+(\\/(\\w|-)+)+))$/;\n\nexport interface CompilerHostContext extends ts.ModuleResolutionHost {\n  readResource?(fileName: string): Promise<string>|string;\n  assumeFileExists(fileName: string): void;\n}\n\nexport interface MetadataProvider { getMetadata(source: ts.SourceFile): ModuleMetadata|undefined; }\n\nexport class CompilerHost implements AotCompilerHost {\n  private isGenDirChildOfRootDir: boolean;\n  protected basePath: string;\n  private genDir: string;\n  private resolverCache = new Map<string, ModuleMetadata[]>();\n  private flatModuleIndexCache = new Map<string, boolean>();\n  private flatModuleIndexNames = new Set<string>();\n  private flatModuleIndexRedirectNames = new Set<string>();\n  private moduleFileNames = new Map<string, string|null>();\n  protected resolveModuleNameHost: CompilerHostContext;\n\n  constructor(\n      protected program: ts.Program, protected options: AngularCompilerOptions,\n      protected context: CompilerHostContext, collectorOptions?: CollectorOptions,\n      protected metadataProvider: MetadataProvider = new MetadataCollector()) {\n    // normalize the path so that it never ends with '/'.\n    this.basePath = path.normalize(path.join(this.options.basePath !, '.')).replace(/\\\\/g, '/');\n    this.genDir = path.normalize(path.join(this.options.genDir !, '.')).replace(/\\\\/g, '/');\n\n    const genPath: string = path.relative(this.basePath, this.genDir);\n    this.isGenDirChildOfRootDir = genPath === '' || !genPath.startsWith('..');\n    this.resolveModuleNameHost = Object.create(this.context);\n\n    // When calling ts.resolveModuleName,\n    // additional allow checks for .d.ts files to be done based on\n    // checks for .ngsummary.json files,\n    // so that our codegen depends on fewer inputs and requires to be called\n    // less often.\n    // This is needed as we use ts.resolveModuleName in reflector_host\n    // and it should be able to resolve summary file names.\n    this.resolveModuleNameHost.fileExists = (fileName: string): boolean => {\n      if (this.context.fileExists(fileName)) {\n        return true;\n      }\n      if (DTS.test(fileName)) {\n        const base = fileName.substring(0, fileName.length - 5);\n        return this.context.fileExists(base + '.ngsummary.json');\n      }\n      return false;\n    };\n  }\n\n  // We use absolute paths on disk as canonical.\n  getCanonicalFileName(fileName: string): string { return fileName; }\n\n  moduleNameToFileName(m: string, containingFile: string): string|null {\n    const key = m + ':' + (containingFile || '');\n    let result: string|null = this.moduleFileNames.get(key) || null;\n    if (!result) {\n      if (!containingFile || !containingFile.length) {\n        if (m.indexOf('.') === 0) {\n          throw new Error('Resolution of relative paths requires a containing file.');\n        }\n        // Any containing file gives the same result for absolute imports\n        containingFile = this.getCanonicalFileName(path.join(this.basePath, 'index.ts'));\n      }\n      m = m.replace(EXT, '');\n      const resolved =\n          ts.resolveModuleName(\n                m, containingFile.replace(/\\\\/g, '/'), this.options, this.resolveModuleNameHost)\n              .resolvedModule;\n      result = resolved ? this.getCanonicalFileName(resolved.resolvedFileName) : null;\n      this.moduleFileNames.set(key, result);\n    }\n    return result;\n  };\n\n  /**\n   * We want a moduleId that will appear in import statements in the generated code.\n   * These need to be in a form that system.js can load, so absolute file paths don't work.\n   *\n   * The `containingFile` is always in the `genDir`, where as the `importedFile` can be in\n   * `genDir`, `node_module` or `basePath`.  The `importedFile` is either a generated file or\n   * existing file.\n   *\n   *               | genDir   | node_module |  rootDir\n   * --------------+----------+-------------+----------\n   * generated     | relative |   relative  |   n/a\n   * existing file |   n/a    |   absolute  |  relative(*)\n   *\n   * NOTE: (*) the relative path is computed depending on `isGenDirChildOfRootDir`.\n   */\n  fileNameToModuleName(importedFile: string, containingFile: string): string {\n    // If a file does not yet exist (because we compile it later), we still need to\n    // assume it exists it so that the `resolve` method works!\n    if (importedFile !== containingFile && !this.context.fileExists(importedFile)) {\n      this.context.assumeFileExists(importedFile);\n    }\n\n    containingFile = this.rewriteGenDirPath(containingFile);\n    const containingDir = path.dirname(containingFile);\n    // drop extension\n    importedFile = importedFile.replace(EXT, '');\n\n    const nodeModulesIndex = importedFile.indexOf(NODE_MODULES);\n    const importModule = nodeModulesIndex === -1 ?\n        null :\n        importedFile.substring(nodeModulesIndex + NODE_MODULES.length);\n    const isGeneratedFile = IS_GENERATED.test(importedFile);\n\n    if (isGeneratedFile) {\n      // rewrite to genDir path\n      if (importModule) {\n        // it is generated, therefore we do a relative path to the factory\n        return this.dotRelative(containingDir, this.genDir + NODE_MODULES + importModule);\n      } else {\n        // assume that import is also in `genDir`\n        importedFile = this.rewriteGenDirPath(importedFile);\n        return this.dotRelative(containingDir, importedFile);\n      }\n    } else {\n      // user code import\n      if (importModule) {\n        return importModule;\n      } else {\n        if (!this.isGenDirChildOfRootDir) {\n          // assume that they are on top of each other.\n          importedFile = importedFile.replace(this.basePath, this.genDir);\n        }\n        if (SHALLOW_IMPORT.test(importedFile)) {\n          return importedFile;\n        }\n        return this.dotRelative(containingDir, importedFile);\n      }\n    }\n  }\n\n  private dotRelative(from: string, to: string): string {\n    const rPath: string = path.relative(from, to).replace(/\\\\/g, '/');\n    return rPath.startsWith('.') ? rPath : './' + rPath;\n  }\n\n  /**\n   * Moves the path into `genDir` folder while preserving the `node_modules` directory.\n   */\n  private rewriteGenDirPath(filepath: string) {\n    const nodeModulesIndex = filepath.indexOf(NODE_MODULES);\n    if (nodeModulesIndex !== -1) {\n      // If we are in node_modulse, transplant them into `genDir`.\n      return path.join(this.genDir, filepath.substring(nodeModulesIndex));\n    } else {\n      // pretend that containing file is on top of the `genDir` to normalize the paths.\n      // we apply the `genDir` => `rootDir` delta through `rootDirPrefix` later.\n      return filepath.replace(this.basePath, this.genDir);\n    }\n  }\n\n  protected getSourceFile(filePath: string): ts.SourceFile {\n    const sf = this.program.getSourceFile(filePath);\n    if (!sf) {\n      if (this.context.fileExists(filePath)) {\n        const sourceText = this.context.readFile(filePath);\n        return ts.createSourceFile(filePath, sourceText, ts.ScriptTarget.Latest, true);\n      }\n      throw new Error(`Source file ${filePath} not present in program.`);\n    }\n    return sf;\n  }\n\n  getMetadataFor(filePath: string): ModuleMetadata[]|undefined {\n    if (!this.context.fileExists(filePath)) {\n      // If the file doesn't exists then we cannot return metadata for the file.\n      // This will occur if the user referenced a declared module for which no file\n      // exists for the module (i.e. jQuery or angularjs).\n      return;\n    }\n\n    if (DTS.test(filePath)) {\n      const metadataPath = filePath.replace(DTS, '.metadata.json');\n      if (this.context.fileExists(metadataPath)) {\n        return this.readMetadata(metadataPath, filePath);\n      } else {\n        // If there is a .d.ts file but no metadata file we need to produce a\n        // v3 metadata from the .d.ts file as v3 includes the exports we need\n        // to resolve symbols.\n        return [this.upgradeVersion1Metadata(\n            {'__symbolic': 'module', 'version': 1, 'metadata': {}}, filePath)];\n      }\n    }\n\n    const sf = this.getSourceFile(filePath);\n    const metadata = this.metadataProvider.getMetadata(sf);\n    return metadata ? [metadata] : [];\n  }\n\n  readMetadata(filePath: string, dtsFilePath: string): ModuleMetadata[] {\n    let metadatas = this.resolverCache.get(filePath);\n    if (metadatas) {\n      return metadatas;\n    }\n    try {\n      const metadataOrMetadatas = JSON.parse(this.context.readFile(filePath));\n      const metadatas: ModuleMetadata[] = metadataOrMetadatas ?\n          (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n          [];\n      const v1Metadata = metadatas.find(m => m.version === 1);\n      let v3Metadata = metadatas.find(m => m.version === 3);\n      if (!v3Metadata && v1Metadata) {\n        metadatas.push(this.upgradeVersion1Metadata(v1Metadata, dtsFilePath));\n      }\n      this.resolverCache.set(filePath, metadatas);\n      return metadatas;\n    } catch (e) {\n      console.error(`Failed to read JSON file ${filePath}`);\n      throw e;\n    }\n  }\n\n  private upgradeVersion1Metadata(v1Metadata: ModuleMetadata, dtsFilePath: string): ModuleMetadata {\n    // patch up v1 to v3 by merging the metadata with metadata collected from the d.ts file\n    // as the only difference between the versions is whether all exports are contained in\n    // the metadata and the `extends` clause.\n    let v3Metadata: ModuleMetadata = {'__symbolic': 'module', 'version': 3, 'metadata': {}};\n    if (v1Metadata.exports) {\n      v3Metadata.exports = v1Metadata.exports;\n    }\n    for (let prop in v1Metadata.metadata) {\n      v3Metadata.metadata[prop] = v1Metadata.metadata[prop];\n    }\n\n    const exports = this.metadataProvider.getMetadata(this.getSourceFile(dtsFilePath));\n    if (exports) {\n      for (let prop in exports.metadata) {\n        if (!v3Metadata.metadata[prop]) {\n          v3Metadata.metadata[prop] = exports.metadata[prop];\n        }\n      }\n      if (exports.exports) {\n        v3Metadata.exports = exports.exports;\n      }\n    }\n    return v3Metadata;\n  }\n\n  loadResource(filePath: string): Promise<string>|string {\n    if (this.context.readResource) return this.context.readResource(filePath);\n    return this.context.readFile(filePath);\n  }\n\n  loadSummary(filePath: string): string|null {\n    if (this.context.fileExists(filePath)) {\n      return this.context.readFile(filePath);\n    }\n    return null;\n  }\n\n  getOutputFileName(sourceFilePath: string): string {\n    return sourceFilePath.replace(EXT, '') + '.d.ts';\n  }\n\n  isSourceFile(filePath: string): boolean {\n    const excludeRegex =\n        this.options.generateCodeForLibraries === false ? GENERATED_OR_DTS_FILES : GENERATED_FILES;\n    if (excludeRegex.test(filePath)) {\n      return false;\n    }\n    if (DTS.test(filePath)) {\n      // Check for a bundle index.\n      if (this.hasBundleIndex(filePath)) {\n        const normalFilePath = path.normalize(filePath);\n        return this.flatModuleIndexNames.has(normalFilePath) ||\n            this.flatModuleIndexRedirectNames.has(normalFilePath);\n      }\n    }\n    return true;\n  }\n\n  calculateEmitPath(filePath: string): string {\n    // Write codegen in a directory structure matching the sources.\n    let root = this.options.basePath !;\n    for (const eachRootDir of this.options.rootDirs || []) {\n      if (this.options.trace) {\n        console.error(`Check if ${filePath} is under rootDirs element ${eachRootDir}`);\n      }\n      if (path.relative(eachRootDir, filePath).indexOf('.') !== 0) {\n        root = eachRootDir;\n      }\n    }\n\n    // transplant the codegen path to be inside the `genDir`\n    let relativePath: string = path.relative(root, filePath);\n    while (relativePath.startsWith('..' + path.sep)) {\n      // Strip out any `..` path such as: `../node_modules/@foo` as we want to put everything\n      // into `genDir`.\n      relativePath = relativePath.substr(3);\n    }\n\n    return path.join(this.options.genDir !, relativePath);\n  }\n\n  private hasBundleIndex(filePath: string): boolean {\n    const checkBundleIndex = (directory: string): boolean => {\n      let result = this.flatModuleIndexCache.get(directory);\n      if (result == null) {\n        if (path.basename(directory) == 'node_module') {\n          // Don't look outside the node_modules this package is installed in.\n          result = false;\n        } else {\n          // A bundle index exists if the typings .d.ts file has a metadata.json that has an\n          // importAs.\n          try {\n            const packageFile = path.join(directory, 'package.json');\n            if (this.context.fileExists(packageFile)) {\n              // Once we see a package.json file, assume false until it we find the bundle index.\n              result = false;\n              const packageContent: any = JSON.parse(this.context.readFile(packageFile));\n              if (packageContent.typings) {\n                const typings = path.normalize(path.join(directory, packageContent.typings));\n                if (DTS.test(typings)) {\n                  const metadataFile = typings.replace(DTS, '.metadata.json');\n                  if (this.context.fileExists(metadataFile)) {\n                    const metadata = JSON.parse(this.context.readFile(metadataFile));\n                    if (metadata.flatModuleIndexRedirect) {\n                      this.flatModuleIndexRedirectNames.add(typings);\n                      // Note: don't set result = true,\n                      // as this would mark this folder\n                      // as having a bundleIndex too early without\n                      // filling the bundleIndexNames.\n                    } else if (metadata.importAs) {\n                      this.flatModuleIndexNames.add(typings);\n                      result = true;\n                    }\n                  }\n                }\n              }\n            } else {\n              const parent = path.dirname(directory);\n              if (parent != directory) {\n                // Try the parent directory.\n                result = checkBundleIndex(parent);\n              } else {\n                result = false;\n              }\n            }\n          } catch (e) {\n            // If we encounter any errors assume we this isn't a bundle index.\n            result = false;\n          }\n        }\n        this.flatModuleIndexCache.set(directory, result);\n      }\n      return result;\n    };\n\n    return checkBundleIndex(path.dirname(filePath));\n  }\n}\n\nexport class CompilerHostContextAdapter {\n  protected assumedExists: {[fileName: string]: boolean} = {};\n\n  assumeFileExists(fileName: string): void { this.assumedExists[fileName] = true; }\n}\n\nexport class ModuleResolutionHostAdapter extends CompilerHostContextAdapter implements\n    CompilerHostContext {\n  public directoryExists: ((directoryName: string) => boolean)|undefined;\n\n  constructor(private host: ts.ModuleResolutionHost) {\n    super();\n    if (host.directoryExists) {\n      this.directoryExists = (directoryName: string) => host.directoryExists !(directoryName);\n    }\n  }\n\n  fileExists(fileName: string): boolean {\n    return this.assumedExists[fileName] || this.host.fileExists(fileName);\n  }\n\n  readFile(fileName: string): string { return this.host.readFile(fileName); }\n\n  readResource(s: string) {\n    if (!this.host.fileExists(s)) {\n      // TODO: We should really have a test for error cases like this!\n      throw new Error(`Compilation failed. Resource file not found: ${s}`);\n    }\n    return Promise.resolve(this.host.readFile(s));\n  }\n}\n\nexport class NodeCompilerHostContext extends CompilerHostContextAdapter implements\n    CompilerHostContext {\n  fileExists(fileName: string): boolean {\n    return this.assumedExists[fileName] || fs.existsSync(fileName);\n  }\n\n  directoryExists(directoryName: string): boolean {\n    try {\n      return fs.statSync(directoryName).isDirectory();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  readFile(fileName: string): string { return fs.readFileSync(fileName, 'utf8'); }\n\n  readResource(s: string) {\n    if (!this.fileExists(s)) {\n      // TODO: We should really have a test for error cases like this!\n      throw new Error(`Compilation failed. Resource file not found: ${s}`);\n    }\n    return Promise.resolve(this.readFile(s));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '@angular/compiler';\nimport {AngularCompilerOptions, ModuleMetadata} from '@angular/tsc-wrapped';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {CompilerHost, CompilerHostContext} from './compiler_host';\n\nconst EXT = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst DTS = /\\.d\\.ts$/;\n\n/**\n * This version of the AotCompilerHost expects that the program will be compiled\n * and executed with a \"path mapped\" directory structure, where generated files\n * are in a parallel tree with the sources, and imported using a `./` relative\n * import. This requires using TS `rootDirs` option and also teaching the module\n * loader what to do.\n */\nexport class PathMappedCompilerHost extends CompilerHost {\n  constructor(program: ts.Program, options: AngularCompilerOptions, context: CompilerHostContext) {\n    super(program, options, context);\n  }\n\n  getCanonicalFileName(fileName: string): string {\n    if (!fileName) return fileName;\n    // NB: the rootDirs should have been sorted longest-first\n    for (const dir of this.options.rootDirs || []) {\n      if (fileName.indexOf(dir) === 0) {\n        fileName = fileName.substring(dir.length);\n      }\n    }\n    return fileName;\n  }\n\n  moduleNameToFileName(m: string, containingFile: string): string|null {\n    if (!containingFile || !containingFile.length) {\n      if (m.indexOf('.') === 0) {\n        throw new Error('Resolution of relative paths requires a containing file.');\n      }\n      // Any containing file gives the same result for absolute imports\n      containingFile = this.getCanonicalFileName(path.join(this.basePath, 'index.ts'));\n    }\n    for (const root of this.options.rootDirs || ['']) {\n      const rootedContainingFile = path.join(root, containingFile);\n      const resolved =\n          ts.resolveModuleName(m, rootedContainingFile, this.options, this.context).resolvedModule;\n      if (resolved) {\n        if (this.options.traceResolution) {\n          console.error('resolve', m, containingFile, '=>', resolved.resolvedFileName);\n        }\n        return this.getCanonicalFileName(resolved.resolvedFileName);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * We want a moduleId that will appear in import statements in the generated code.\n   * These need to be in a form that system.js can load, so absolute file paths don't work.\n   * Relativize the paths by checking candidate prefixes of the absolute path, to see if\n   * they are resolvable by the moduleResolution strategy from the CompilerHost.\n   */\n  fileNameToModuleName(importedFile: string, containingFile: string): string {\n    if (this.options.traceResolution) {\n      console.error(\n          'getImportPath from containingFile', containingFile, 'to importedFile', importedFile);\n    }\n\n    // If a file does not yet exist (because we compile it later), we still need to\n    // assume it exists so that the `resolve` method works!\n    if (!this.context.fileExists(importedFile)) {\n      if (this.options.rootDirs && this.options.rootDirs.length > 0) {\n        this.context.assumeFileExists(path.join(this.options.rootDirs[0], importedFile));\n      } else {\n        this.context.assumeFileExists(importedFile);\n      }\n    }\n\n    const resolvable = (candidate: string) => {\n      const resolved = this.moduleNameToFileName(candidate, importedFile);\n      return resolved && resolved.replace(EXT, '') === importedFile.replace(EXT, '');\n    };\n\n    const importModuleName = importedFile.replace(EXT, '');\n    const parts = importModuleName.split(path.sep).filter(p => !!p);\n    let foundRelativeImport: string = undefined !;\n    for (let index = parts.length - 1; index >= 0; index--) {\n      let candidate = parts.slice(index, parts.length).join(path.sep);\n      if (resolvable(candidate)) {\n        return candidate;\n      }\n      candidate = '.' + path.sep + candidate;\n      if (resolvable(candidate)) {\n        foundRelativeImport = candidate;\n      }\n    }\n\n    if (foundRelativeImport) return foundRelativeImport;\n\n    // Try a relative import\n    const candidate = path.relative(path.dirname(containingFile), importModuleName);\n    if (resolvable(candidate)) {\n      return candidate;\n    }\n\n    throw new Error(\n        `Unable to find any resolvable import for ${importedFile} relative to ${containingFile}`);\n  }\n\n  getMetadataFor(filePath: string): ModuleMetadata[] {\n    for (const root of this.options.rootDirs || []) {\n      const rootedPath = path.join(root, filePath);\n      if (!this.context.fileExists(rootedPath)) {\n        // If the file doesn't exists then we cannot return metadata for the file.\n        // This will occur if the user refernced a declared module for which no file\n        // exists for the module (i.e. jQuery or angularjs).\n        continue;\n      }\n      if (DTS.test(rootedPath)) {\n        const metadataPath = rootedPath.replace(DTS, '.metadata.json');\n        if (this.context.fileExists(metadataPath)) {\n          return this.readMetadata(metadataPath, rootedPath);\n        }\n      } else {\n        const sf = this.getSourceFile(rootedPath);\n        sf.fileName = sf.fileName;\n        const metadata = this.metadataProvider.getMetadata(sf);\n        return metadata ? [metadata] : [];\n      }\n    }\n    return null !;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Transform template html and css into executable code.\n * Intended to be used in a build step.\n */\nimport * as compiler from '@angular/compiler';\nimport {MissingTranslationStrategy} from '@angular/core';\nimport {AngularCompilerOptions, NgcCliOptions} from '@angular/tsc-wrapped';\nimport {readFileSync} from 'fs';\nimport * as ts from 'typescript';\n\nimport {CompilerHost, CompilerHostContext, ModuleResolutionHostAdapter} from './compiler_host';\nimport {PathMappedCompilerHost} from './path_mapped_compiler_host';\n\nconst GENERATED_META_FILES = /\\.json$/;\n\nconst PREAMBLE = `/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n`;\n\nexport class CodeGenerator {\n  constructor(\n      private options: AngularCompilerOptions, private program: ts.Program,\n      public host: ts.CompilerHost, private compiler: compiler.AotCompiler,\n      private ngCompilerHost: CompilerHost) {}\n\n  codegen(): Promise<string[]> {\n    return this.compiler\n        .analyzeModulesAsync(this.program.getSourceFiles().map(\n            sf => this.ngCompilerHost.getCanonicalFileName(sf.fileName)))\n        .then(analyzedModules => this.emit(analyzedModules));\n  }\n\n  codegenSync(): string[] {\n    const analyzed = this.compiler.analyzeModulesSync(this.program.getSourceFiles().map(\n        sf => this.ngCompilerHost.getCanonicalFileName(sf.fileName)));\n    return this.emit(analyzed);\n  }\n\n  private emit(analyzedModules: compiler.NgAnalyzedModules) {\n    const generatedModules = this.compiler.emitAllImpls(analyzedModules);\n    return generatedModules.map(generatedModule => {\n      const sourceFile = this.program.getSourceFile(generatedModule.srcFileUrl);\n      const emitPath = this.ngCompilerHost.calculateEmitPath(generatedModule.genFileUrl);\n      const source = generatedModule.source || compiler.toTypeScript(generatedModule, PREAMBLE);\n      this.host.writeFile(emitPath, source, false, () => {}, [sourceFile]);\n      return emitPath;\n    });\n  }\n\n  static create(\n      options: AngularCompilerOptions, cliOptions: NgcCliOptions, program: ts.Program,\n      tsCompilerHost: ts.CompilerHost, compilerHostContext?: CompilerHostContext,\n      ngCompilerHost?: CompilerHost): CodeGenerator {\n    if (!ngCompilerHost) {\n      const usePathMapping = !!options.rootDirs && options.rootDirs.length > 0;\n      const context = compilerHostContext || new ModuleResolutionHostAdapter(tsCompilerHost);\n      ngCompilerHost = usePathMapping ? new PathMappedCompilerHost(program, options, context) :\n                                        new CompilerHost(program, options, context);\n    }\n    let transContent: string = '';\n    if (cliOptions.i18nFile) {\n      if (!cliOptions.locale) {\n        throw new Error(\n            `The translation file (${cliOptions.i18nFile}) locale must be provided. Use the --locale option.`);\n      }\n      transContent = readFileSync(cliOptions.i18nFile, 'utf8');\n    }\n    let missingTranslation = MissingTranslationStrategy.Warning;\n    if (cliOptions.missingTranslation) {\n      switch (cliOptions.missingTranslation) {\n        case 'error':\n          missingTranslation = MissingTranslationStrategy.Error;\n          break;\n        case 'warning':\n          missingTranslation = MissingTranslationStrategy.Warning;\n          break;\n        case 'ignore':\n          missingTranslation = MissingTranslationStrategy.Ignore;\n          break;\n        default:\n          throw new Error(\n              `Unknown option for missingTranslation (${cliOptions.missingTranslation}). Use either error, warning or ignore.`);\n      }\n    }\n    if (!transContent) {\n      missingTranslation = MissingTranslationStrategy.Ignore;\n    }\n    const {compiler: aotCompiler} = compiler.createAotCompiler(ngCompilerHost, {\n      translations: transContent,\n      i18nFormat: cliOptions.i18nFormat || undefined,\n      locale: cliOptions.locale || undefined, missingTranslation,\n      enableLegacyTemplate: options.enableLegacyTemplate !== false,\n      enableSummariesForJit: options.enableSummariesForJit !== false,\n    });\n    return new CodeGenerator(options, program, tsCompilerHost, aotCompiler, ngCompilerHost);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Extract i18n messages from source code\n */\n// Must be imported first, because Angular decorators throw on load.\nimport 'reflect-metadata';\n\nimport * as compiler from '@angular/compiler';\nimport * as tsc from '@angular/tsc-wrapped';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {CompilerHost, CompilerHostContext, ModuleResolutionHostAdapter} from './compiler_host';\nimport {PathMappedCompilerHost} from './path_mapped_compiler_host';\n\nexport class Extractor {\n  constructor(\n      private options: tsc.AngularCompilerOptions, private ngExtractor: compiler.Extractor,\n      public host: ts.CompilerHost, private ngCompilerHost: CompilerHost,\n      private program: ts.Program) {}\n\n  extract(formatName: string, outFile: string|null): Promise<string[]> {\n    // Checks the format and returns the extension\n    const ext = this.getExtension(formatName);\n\n    const promiseBundle = this.extractBundle();\n\n    return promiseBundle.then(bundle => {\n      const content = this.serialize(bundle, formatName);\n      const dstFile = outFile || `messages.${ext}`;\n      const dstPath = path.join(this.options.genDir !, dstFile);\n      this.host.writeFile(dstPath, content, false);\n      return [dstPath];\n    });\n  }\n\n  extractBundle(): Promise<compiler.MessageBundle> {\n    const files = this.program.getSourceFiles().map(\n        sf => this.ngCompilerHost.getCanonicalFileName(sf.fileName));\n\n    return this.ngExtractor.extract(files);\n  }\n\n  serialize(bundle: compiler.MessageBundle, formatName: string): string {\n    const format = formatName.toLowerCase();\n    let serializer: compiler.Serializer;\n\n    switch (format) {\n      case 'xmb':\n        serializer = new compiler.Xmb();\n        break;\n      case 'xliff2':\n      case 'xlf2':\n        serializer = new compiler.Xliff2();\n        break;\n      case 'xlf':\n      case 'xliff':\n      default:\n        serializer = new compiler.Xliff();\n    }\n    return bundle.write(\n        serializer, (sourcePath: string) => this.options.basePath ?\n            path.relative(this.options.basePath, sourcePath) :\n            sourcePath);\n  }\n\n  getExtension(formatName: string): string {\n    const format = (formatName || 'xlf').toLowerCase();\n\n    switch (format) {\n      case 'xmb':\n        return 'xmb';\n      case 'xlf':\n      case 'xlif':\n      case 'xliff':\n      case 'xlf2':\n      case 'xliff2':\n        return 'xlf';\n    }\n\n    throw new Error(`Unsupported format \"${formatName}\"`);\n  }\n\n  static create(\n      options: tsc.AngularCompilerOptions, program: ts.Program, tsCompilerHost: ts.CompilerHost,\n      locale?: string|null, compilerHostContext?: CompilerHostContext,\n      ngCompilerHost?: CompilerHost): Extractor {\n    if (!ngCompilerHost) {\n      const usePathMapping = !!options.rootDirs && options.rootDirs.length > 0;\n      const context = compilerHostContext || new ModuleResolutionHostAdapter(tsCompilerHost);\n      ngCompilerHost = usePathMapping ? new PathMappedCompilerHost(program, options, context) :\n                                        new CompilerHost(program, options, context);\n    }\n\n    const {extractor: ngExtractor} = compiler.Extractor.create(ngCompilerHost, locale || null);\n\n    return new Extractor(options, ngExtractor, tsCompilerHost, ngCompilerHost, program);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const VERSION = new Version('5.0.0-beta.3-14502f5b34');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {StaticSymbol} from '@angular/compiler';\n\n/**\n * The range of a span of text in a source file.\n *\n * @experimental\n */\nexport interface Span {\n  /**\n   * The first code-point of the span as an offset relative to the beginning of the source assuming\n   * a UTF-16 encoding.\n   */\n  start: number;\n\n  /**\n   * The first code-point after the span as an offset relative to the beginning of the source\n   * assuming a UTF-16 encoding.\n   */\n  end: number;\n}\n\n/**\n * A file and span.\n */\nexport interface Location {\n  fileName: string;\n  span: Span;\n}\n\n/**\n * A defnition location(s).\n */\nexport type Definition = Location[] | undefined;\n\n/**\n * A symbol describing a language element that can be referenced by expressions\n * in an Angular template.\n *\n * @experimental\n */\nexport interface Symbol {\n  /**\n   * The name of the symbol as it would be referenced in an Angular expression.\n   */\n  readonly name: string;\n\n  /**\n   * The kind of completion this symbol should generate if included.\n   */\n  readonly kind: string;\n\n  /**\n   * The language of the source that defines the symbol. (e.g. typescript for TypeScript,\n   * ng-template for an Angular template, etc.)\n   */\n  readonly language: string;\n\n  /**\n   * A symbol representing type of the symbol.\n   */\n  readonly type: Symbol|undefined;\n\n  /**\n   * A symbol for the container of this symbol. For example, if this is a method, the container\n   * is the class or interface of the method. If no container is appropriate, undefined is\n   * returned.\n   */\n  readonly container: Symbol|undefined;\n\n  /**\n   * The symbol is public in the container.\n   */\n  readonly public: boolean;\n\n  /**\n   * `true` if the symbol can be the target of a call.\n   */\n  readonly callable: boolean;\n\n  /**\n   * The location of the definition of the symbol\n   */\n  readonly definition: Definition|undefined;\n\n  /**\n   * `true` if the symbol is a type that is nullable (can be null or undefined).\n   */\n  readonly nullable: boolean;\n\n  /**\n   * A table of the members of the symbol; that is, the members that can appear\n   * after a `.` in an Angular expression.\n   */\n  members(): SymbolTable;\n\n  /**\n   * The list of overloaded signatures that can be used if the symbol is the\n   * target of a call.\n   */\n  signatures(): Signature[];\n\n  /**\n   * Return which signature of returned by `signatures()` would be used selected\n   * given the `types` supplied. If no signature would match, this method should\n   * return `undefined`.\n   */\n  selectSignature(types: Symbol[]): Signature|undefined;\n\n  /**\n   * Return the type of the expression if this symbol is indexed by `argument`.\n   * If the symbol cannot be indexed, this method should return `undefined`.\n   */\n  indexed(argument: Symbol): Symbol|undefined;\n}\n\n/**\n * A table of `Symbol`s accessible by name.\n *\n * @experimental\n */\nexport interface SymbolTable {\n  /**\n   * The number of symbols in the table.\n   */\n  readonly size: number;\n\n  /**\n   * Get the symbol corresponding to `key` or `undefined` if there is no symbol in the\n   * table by the name `key`.\n   */\n  get(key: string): Symbol|undefined;\n\n  /**\n   * Returns `true` if the table contains a `Symbol` with the name `key`.\n   */\n  has(key: string): boolean;\n\n  /**\n   * Returns all the `Symbol`s in the table. The order should be, but is not required to be,\n   * in declaration order.\n   */\n  values(): Symbol[];\n}\n\n/**\n * A description of a function or method signature.\n *\n * @experimental\n */\nexport interface Signature {\n  /**\n   * The arguments of the signture. The order of `argumetnts.symbols()` must be in the order\n   * of argument declaration.\n   */\n  readonly arguments: SymbolTable;\n\n  /**\n   * The symbol of the signature result type.\n   */\n  readonly result: Symbol;\n}\n\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nexport enum BuiltinType {\n  /**\n   * The type is a type that can hold any other type.\n   */\n  Any,\n\n  /**\n   * The type of a string literal.\n   */\n  String,\n\n  /**\n   * The type of a numeric literal.\n   */\n  Number,\n\n  /**\n   * The type of the `true` and `false` literals.\n   */\n  Boolean,\n\n  /**\n   * The type of the `undefined` literal.\n   */\n  Undefined,\n\n  /**\n   * the type of the `null` literal.\n   */\n  Null,\n\n  /**\n   * the type is an unbound type parameter.\n   */\n  Unbound,\n\n  /**\n   * Not a built-in type.\n   */\n  Other\n}\n\n/**\n * The kinds of defintion.\n *\n * @experimental\n */\nexport type DeclarationKind = 'attribute' | 'html attribute' | 'component' | 'element' | 'entity' |\n    'key' | 'method' | 'pipe' | 'property' | 'type' | 'reference' | 'variable';\n\n/**\n * Describes a symbol to type binding used to build a symbol table.\n *\n * @experimental\n */\nexport interface SymbolDeclaration {\n  /**\n   * The name of the symbol in table.\n   */\n  readonly name: string;\n\n  /**\n   * The kind of symbol to declare.\n   */\n  readonly kind: DeclarationKind;\n\n  /**\n   * Type of the symbol. The type symbol should refer to a symbol for a type.\n   */\n  readonly type: Symbol;\n\n  /**\n   * The definion of the symbol if one exists.\n   */\n  readonly definition?: Definition;\n}\n\n/**\n * Information about the pipes that are available for use in a template.\n *\n * @experimental\n */\nexport interface PipeInfo {\n  /**\n   * The name of the pipe.\n   */\n  name: string;\n\n  /**\n   * The static symbol for the pipe's constructor.\n   */\n  symbol: StaticSymbol;\n}\n\n/**\n * A sequence of pipe information.\n *\n * @experimental\n */\nexport type Pipes = PipeInfo[] | undefined;\n\n/**\n * Describes the language context in which an Angular expression is evaluated.\n *\n * @experimental\n */\nexport interface SymbolQuery {\n  /**\n   * Return the built-in type this symbol represents or Other if it is not a built-in type.\n   */\n  getTypeKind(symbol: Symbol): BuiltinType;\n\n  /**\n   * Return a symbol representing the given built-in type.\n   */\n  getBuiltinType(kind: BuiltinType): Symbol;\n\n  /**\n   * Return the symbol for a type that represents the union of all the types given. Any value\n   * of one of the types given should be assignable to the returned type. If no one type can\n   * be constructed then this should be the Any type.\n   */\n  getTypeUnion(...types: Symbol[]): Symbol;\n\n  /**\n   * Return a symbol for an array type that has the `type` as its element type.\n   */\n  getArrayType(type: Symbol): Symbol;\n\n  /**\n   * Return element type symbol for an array type if the `type` is an array type. Otherwise return\n   * undefined.\n   */\n  getElementType(type: Symbol): Symbol|undefined;\n\n  /**\n   * Return a type that is the non-nullable version of the given type. If `type` is already\n   * non-nullable, return `type`.\n   */\n  getNonNullableType(type: Symbol): Symbol;\n\n  /**\n   * Return a symbol table for the pipes that are in scope.\n   */\n  getPipes(): SymbolTable;\n\n  /**\n   * Return the type symbol for the given static symbol.\n   */\n  getTypeSymbol(type: StaticSymbol): Symbol|undefined;\n\n  /**\n   * Return the members that are in the context of a type's template reference.\n   */\n  getTemplateContext(type: StaticSymbol): SymbolTable|undefined;\n\n  /**\n   * Produce a symbol table with the given symbols. Used to produce a symbol table\n   * for use with mergeSymbolTables().\n   */\n  createSymbolTable(symbols: SymbolDeclaration[]): SymbolTable;\n\n  /**\n   * Produce a merged symbol table. If the symbol tables contain duplicate entries\n   * the entries of the latter symbol tables will obscure the entries in the prior\n   * symbol tables.\n   *\n   * The symbol tables passed to this routine MUST be produces by the same instance\n   * of SymbolQuery that is being called.\n   */\n  mergeSymbolTable(symbolTables: SymbolTable[]): SymbolTable;\n\n  /**\n   * Return the span of the narrowest non-token node at the given location.\n   */\n  getSpanAt(line: number, column: number): Span|undefined;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, AstVisitor, Binary, BindingPipe, Chain, Conditional, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralPrimitive, MethodCall, NonNullAssert, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, visitAstChildren} from '@angular/compiler';\n\nimport {BuiltinType, Signature, Span, Symbol, SymbolQuery, SymbolTable} from './symbols';\n\nexport interface ExpressionDiagnosticsContext { event?: boolean; }\n\nexport enum DiagnosticKind {\n  Error,\n  Warning,\n}\n\nexport class TypeDiagnostic {\n  constructor(public kind: DiagnosticKind, public message: string, public ast: AST) {}\n}\n\n// AstType calculatetype of the ast given AST element.\nexport class AstType implements AstVisitor {\n  public diagnostics: TypeDiagnostic[];\n\n  constructor(\n      private scope: SymbolTable, private query: SymbolQuery,\n      private context: ExpressionDiagnosticsContext) {}\n\n  getType(ast: AST): Symbol { return ast.visit(this); }\n\n  getDiagnostics(ast: AST): TypeDiagnostic[] {\n    this.diagnostics = [];\n    const type: Symbol = ast.visit(this);\n    if (this.context.event && type.callable) {\n      this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n    }\n    return this.diagnostics;\n  }\n\n  visitBinary(ast: Binary): Symbol {\n    // Treat undefined and null as other.\n    function normalize(kind: BuiltinType, other: BuiltinType): BuiltinType {\n      switch (kind) {\n        case BuiltinType.Undefined:\n        case BuiltinType.Null:\n          return normalize(other, BuiltinType.Other);\n      }\n      return kind;\n    }\n\n    const getType = (ast: AST, operation: string): Symbol => {\n      const type = this.getType(ast);\n      if (type.nullable) {\n        switch (operation) {\n          case '&&':\n          case '||':\n          case '==':\n          case '!=':\n          case '===':\n          case '!==':\n            // Nullable allowed.\n            break;\n          default:\n            this.reportError(`The expression might be null`, ast);\n            break;\n        }\n        return this.query.getNonNullableType(type);\n      }\n      return type;\n    };\n\n    const leftType = getType(ast.left, ast.operation);\n    const rightType = getType(ast.right, ast.operation);\n    const leftRawKind = this.query.getTypeKind(leftType);\n    const rightRawKind = this.query.getTypeKind(rightType);\n    const leftKind = normalize(leftRawKind, rightRawKind);\n    const rightKind = normalize(rightRawKind, leftRawKind);\n\n    // The following swtich implements operator typing similar to the\n    // type production tables in the TypeScript specification.\n    // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n    const operKind = leftKind << 8 | rightKind;\n    switch (ast.operation) {\n      case '*':\n      case '/':\n      case '%':\n      case '-':\n      case '<<':\n      case '>>':\n      case '>>>':\n      case '&':\n      case '^':\n      case '|':\n        switch (operKind) {\n          case BuiltinType.Any << 8 | BuiltinType.Any:\n          case BuiltinType.Number << 8 | BuiltinType.Any:\n          case BuiltinType.Any << 8 | BuiltinType.Number:\n          case BuiltinType.Number << 8 | BuiltinType.Number:\n            return this.query.getBuiltinType(BuiltinType.Number);\n          default:\n            let errorAst = ast.left;\n            switch (leftKind) {\n              case BuiltinType.Any:\n              case BuiltinType.Number:\n                errorAst = ast.right;\n                break;\n            }\n            return this.reportError('Expected a numeric type', errorAst);\n        }\n      case '+':\n        switch (operKind) {\n          case BuiltinType.Any << 8 | BuiltinType.Any:\n          case BuiltinType.Any << 8 | BuiltinType.Boolean:\n          case BuiltinType.Any << 8 | BuiltinType.Number:\n          case BuiltinType.Any << 8 | BuiltinType.Other:\n          case BuiltinType.Boolean << 8 | BuiltinType.Any:\n          case BuiltinType.Number << 8 | BuiltinType.Any:\n          case BuiltinType.Other << 8 | BuiltinType.Any:\n            return this.anyType;\n          case BuiltinType.Any << 8 | BuiltinType.String:\n          case BuiltinType.Boolean << 8 | BuiltinType.String:\n          case BuiltinType.Number << 8 | BuiltinType.String:\n          case BuiltinType.String << 8 | BuiltinType.Any:\n          case BuiltinType.String << 8 | BuiltinType.Boolean:\n          case BuiltinType.String << 8 | BuiltinType.Number:\n          case BuiltinType.String << 8 | BuiltinType.String:\n          case BuiltinType.String << 8 | BuiltinType.Other:\n          case BuiltinType.Other << 8 | BuiltinType.String:\n            return this.query.getBuiltinType(BuiltinType.String);\n          case BuiltinType.Number << 8 | BuiltinType.Number:\n            return this.query.getBuiltinType(BuiltinType.Number);\n          case BuiltinType.Boolean << 8 | BuiltinType.Number:\n          case BuiltinType.Other << 8 | BuiltinType.Number:\n            return this.reportError('Expected a number type', ast.left);\n          case BuiltinType.Number << 8 | BuiltinType.Boolean:\n          case BuiltinType.Number << 8 | BuiltinType.Other:\n            return this.reportError('Expected a number type', ast.right);\n          default:\n            return this.reportError('Expected operands to be a string or number type', ast);\n        }\n      case '>':\n      case '<':\n      case '<=':\n      case '>=':\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n        switch (operKind) {\n          case BuiltinType.Any << 8 | BuiltinType.Any:\n          case BuiltinType.Any << 8 | BuiltinType.Boolean:\n          case BuiltinType.Any << 8 | BuiltinType.Number:\n          case BuiltinType.Any << 8 | BuiltinType.String:\n          case BuiltinType.Any << 8 | BuiltinType.Other:\n          case BuiltinType.Boolean << 8 | BuiltinType.Any:\n          case BuiltinType.Boolean << 8 | BuiltinType.Boolean:\n          case BuiltinType.Number << 8 | BuiltinType.Any:\n          case BuiltinType.Number << 8 | BuiltinType.Number:\n          case BuiltinType.String << 8 | BuiltinType.Any:\n          case BuiltinType.String << 8 | BuiltinType.String:\n          case BuiltinType.Other << 8 | BuiltinType.Any:\n          case BuiltinType.Other << 8 | BuiltinType.Other:\n            return this.query.getBuiltinType(BuiltinType.Boolean);\n          default:\n            return this.reportError('Expected the operants to be of similar type or any', ast);\n        }\n      case '&&':\n        return rightType;\n      case '||':\n        return this.query.getTypeUnion(leftType, rightType);\n    }\n\n    return this.reportError(`Unrecognized operator ${ast.operation}`, ast);\n  }\n\n  visitChain(ast: Chain) {\n    if (this.diagnostics) {\n      // If we are producing diagnostics, visit the children\n      visitAstChildren(ast, this);\n    }\n    // The type of a chain is always undefined.\n    return this.query.getBuiltinType(BuiltinType.Undefined);\n  }\n\n  visitConditional(ast: Conditional) {\n    // The type of a conditional is the union of the true and false conditions.\n    if (this.diagnostics) {\n      visitAstChildren(ast, this);\n    }\n    return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n  }\n\n  visitFunctionCall(ast: FunctionCall) {\n    // The type of a function call is the return type of the selected signature.\n    // The signature is selected based on the types of the arguments. Angular doesn't\n    // support contextual typing of arguments so this is simpler than TypeScript's\n    // version.\n    const args = ast.args.map(arg => this.getType(arg));\n    const target = this.getType(ast.target !);\n    if (!target || !target.callable) return this.reportError('Call target is not callable', ast);\n    const signature = target.selectSignature(args);\n    if (signature) return signature.result;\n    // TODO: Consider a better error message here.\n    return this.reportError('Unable no compatible signature found for call', ast);\n  }\n\n  visitImplicitReceiver(ast: ImplicitReceiver): Symbol {\n    const _this = this;\n    // Return a pseudo-symbol for the implicit receiver.\n    // The members of the implicit receiver are what is defined by the\n    // scope passed into this class.\n    return {\n      name: '$implict',\n      kind: 'component',\n      language: 'ng-template',\n      type: undefined,\n      container: undefined,\n      callable: false,\n      nullable: false,\n      public: true,\n      definition: undefined,\n      members(): SymbolTable{return _this.scope;},\n      signatures(): Signature[]{return [];},\n      selectSignature(types): Signature | undefined{return undefined;},\n      indexed(argument): Symbol | undefined{return undefined;}\n    };\n  }\n\n  visitInterpolation(ast: Interpolation): Symbol {\n    // If we are producing diagnostics, visit the children.\n    if (this.diagnostics) {\n      visitAstChildren(ast, this);\n    }\n    return this.undefinedType;\n  }\n\n  visitKeyedRead(ast: KeyedRead): Symbol {\n    const targetType = this.getType(ast.obj);\n    const keyType = this.getType(ast.key);\n    const result = targetType.indexed(keyType);\n    return result || this.anyType;\n  }\n\n  visitKeyedWrite(ast: KeyedWrite): Symbol {\n    // The write of a type is the type of the value being written.\n    return this.getType(ast.value);\n  }\n\n  visitLiteralArray(ast: LiteralArray): Symbol {\n    // A type literal is an array type of the union of the elements\n    return this.query.getArrayType(\n        this.query.getTypeUnion(...ast.expressions.map(element => this.getType(element))));\n  }\n\n  visitLiteralMap(ast: LiteralMap): Symbol {\n    // If we are producing diagnostics, visit the children\n    if (this.diagnostics) {\n      visitAstChildren(ast, this);\n    }\n    // TODO: Return a composite type.\n    return this.anyType;\n  }\n\n  visitLiteralPrimitive(ast: LiteralPrimitive) {\n    // The type of a literal primitive depends on the value of the literal.\n    switch (ast.value) {\n      case true:\n      case false:\n        return this.query.getBuiltinType(BuiltinType.Boolean);\n      case null:\n        return this.query.getBuiltinType(BuiltinType.Null);\n      case undefined:\n        return this.query.getBuiltinType(BuiltinType.Undefined);\n      default:\n        switch (typeof ast.value) {\n          case 'string':\n            return this.query.getBuiltinType(BuiltinType.String);\n          case 'number':\n            return this.query.getBuiltinType(BuiltinType.Number);\n          default:\n            return this.reportError('Unrecognized primitive', ast);\n        }\n    }\n  }\n\n  visitMethodCall(ast: MethodCall) {\n    return this.resolveMethodCall(this.getType(ast.receiver), ast);\n  }\n\n  visitPipe(ast: BindingPipe) {\n    // The type of a pipe node is the return type of the pipe's transform method. The table returned\n    // by getPipes() is expected to contain symbols with the corresponding transform method type.\n    const pipe = this.query.getPipes().get(ast.name);\n    if (!pipe) return this.reportError(`No pipe by the name ${ast.name} found`, ast);\n    const expType = this.getType(ast.exp);\n    const signature =\n        pipe.selectSignature([expType].concat(ast.args.map(arg => this.getType(arg))));\n    if (!signature) return this.reportError('Unable to resolve signature for pipe invocation', ast);\n    return signature.result;\n  }\n\n  visitPrefixNot(ast: PrefixNot) {\n    // The type of a prefix ! is always boolean.\n    return this.query.getBuiltinType(BuiltinType.Boolean);\n  }\n\n  visitNonNullAssert(ast: NonNullAssert) {\n    const expressionType = this.getType(ast.expression);\n    return this.query.getNonNullableType(expressionType);\n  }\n\n  visitPropertyRead(ast: PropertyRead) {\n    return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n  }\n\n  visitPropertyWrite(ast: PropertyWrite) {\n    // The type of a write is the type of the value being written.\n    return this.getType(ast.value);\n  }\n\n  visitQuote(ast: Quote) {\n    // The type of a quoted expression is any.\n    return this.query.getBuiltinType(BuiltinType.Any);\n  }\n\n  visitSafeMethodCall(ast: SafeMethodCall) {\n    return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n  }\n\n  visitSafePropertyRead(ast: SafePropertyRead) {\n    return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n  }\n\n  private _anyType: Symbol;\n  private get anyType(): Symbol {\n    let result = this._anyType;\n    if (!result) {\n      result = this._anyType = this.query.getBuiltinType(BuiltinType.Any);\n    }\n    return result;\n  }\n\n  private _undefinedType: Symbol;\n  private get undefinedType(): Symbol {\n    let result = this._undefinedType;\n    if (!result) {\n      result = this._undefinedType = this.query.getBuiltinType(BuiltinType.Undefined);\n    }\n    return result;\n  }\n\n  private resolveMethodCall(receiverType: Symbol, ast: SafeMethodCall|MethodCall) {\n    if (this.isAny(receiverType)) {\n      return this.anyType;\n    }\n\n    // The type of a method is the selected methods result type.\n    const method = receiverType.members().get(ast.name);\n    if (!method) return this.reportError(`Unknown method '${ast.name}'`, ast);\n    if (!method.type) return this.reportError(`Could not find a type for '${ast.name}'`, ast);\n    if (!method.type.callable) return this.reportError(`Member '${ast.name}' is not callable`, ast);\n    const signature = method.type.selectSignature(ast.args.map(arg => this.getType(arg)));\n    if (!signature)\n      return this.reportError(`Unable to resolve signature for call of method ${ast.name}`, ast);\n    return signature.result;\n  }\n\n  private resolvePropertyRead(receiverType: Symbol, ast: SafePropertyRead|PropertyRead) {\n    if (this.isAny(receiverType)) {\n      return this.anyType;\n    }\n\n    // The type of a property read is the seelcted member's type.\n    const member = receiverType.members().get(ast.name);\n    if (!member) {\n      let receiverInfo = receiverType.name;\n      if (receiverInfo == '$implict') {\n        receiverInfo =\n            'The component declaration, template variable declarations, and element references do';\n      } else if (receiverType.nullable) {\n        return this.reportError(`The expression might be null`, ast.receiver);\n      } else {\n        receiverInfo = `'${receiverInfo}' does`;\n      }\n      return this.reportError(\n          `Identifier '${ast.name}' is not defined. ${receiverInfo} not contain such a member`,\n          ast);\n    }\n    if (!member.public) {\n      let receiverInfo = receiverType.name;\n      if (receiverInfo == '$implict') {\n        receiverInfo = 'the component';\n      } else {\n        receiverInfo = `'${receiverInfo}'`;\n      }\n      this.reportWarning(\n          `Identifier '${ast.name}' refers to a private member of ${receiverInfo}`, ast);\n    }\n    return member.type;\n  }\n\n  private reportError(message: string, ast: AST): Symbol {\n    if (this.diagnostics) {\n      this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n    }\n    return this.anyType;\n  }\n\n  private reportWarning(message: string, ast: AST): Symbol {\n    if (this.diagnostics) {\n      this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n    }\n    return this.anyType;\n  }\n\n  private isAny(symbol: Symbol): boolean {\n    return !symbol || this.query.getTypeKind(symbol) == BuiltinType.Any ||\n        (!!symbol.type && this.isAny(symbol.type));\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, AstPath, Attribute, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, CompileDirectiveSummary, CompileTypeMetadata, DirectiveAst, ElementAst, EmbeddedTemplateAst, Node, ParseSourceSpan, RecursiveTemplateAstVisitor, ReferenceAst, TemplateAst, TemplateAstPath, VariableAst, findNode, identifierName, templateVisitAll, tokenReference} from '@angular/compiler';\n\nimport {AstType, DiagnosticKind, ExpressionDiagnosticsContext, TypeDiagnostic} from './expression_type';\nimport {BuiltinType, Definition, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable} from './symbols';\n\nexport interface DiagnosticTemplateInfo {\n  fileName?: string;\n  offset: number;\n  query: SymbolQuery;\n  members: SymbolTable;\n  htmlAst: Node[];\n  templateAst: TemplateAst[];\n}\n\nexport interface ExpressionDiagnostic {\n  message: string;\n  span: Span;\n  kind: DiagnosticKind;\n}\n\nexport function getTemplateExpressionDiagnostics(info: DiagnosticTemplateInfo):\n    ExpressionDiagnostic[] {\n  const visitor = new ExpressionDiagnosticsVisitor(\n      info, (path: TemplateAstPath, includeEvent: boolean) =>\n                getExpressionScope(info, path, includeEvent));\n  templateVisitAll(visitor, info.templateAst);\n  return visitor.diagnostics;\n}\n\nexport function getExpressionDiagnostics(\n    scope: SymbolTable, ast: AST, query: SymbolQuery,\n    context: ExpressionDiagnosticsContext = {}): TypeDiagnostic[] {\n  const analyzer = new AstType(scope, query, context);\n  analyzer.getDiagnostics(ast);\n  return analyzer.diagnostics;\n}\n\nfunction getReferences(info: DiagnosticTemplateInfo): SymbolDeclaration[] {\n  const result: SymbolDeclaration[] = [];\n\n  function processReferences(references: ReferenceAst[]) {\n    for (const reference of references) {\n      let type: Symbol|undefined = undefined;\n      if (reference.value) {\n        type = info.query.getTypeSymbol(tokenReference(reference.value));\n      }\n      result.push({\n        name: reference.name,\n        kind: 'reference',\n        type: type || info.query.getBuiltinType(BuiltinType.Any),\n        get definition() { return getDefinitionOf(info, reference); }\n      });\n    }\n  }\n\n  const visitor = new class extends RecursiveTemplateAstVisitor {\n    visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n      super.visitEmbeddedTemplate(ast, context);\n      processReferences(ast.references);\n    }\n    visitElement(ast: ElementAst, context: any): any {\n      super.visitElement(ast, context);\n      processReferences(ast.references);\n    }\n  };\n\n  templateVisitAll(visitor, info.templateAst);\n\n  return result;\n}\n\nfunction getDefinitionOf(info: DiagnosticTemplateInfo, ast: TemplateAst): Definition|undefined {\n  if (info.fileName) {\n    const templateOffset = info.offset;\n    return [{\n      fileName: info.fileName,\n      span: {\n        start: ast.sourceSpan.start.offset + templateOffset,\n        end: ast.sourceSpan.end.offset + templateOffset\n      }\n    }];\n  }\n}\n\nfunction getVarDeclarations(\n    info: DiagnosticTemplateInfo, path: TemplateAstPath): SymbolDeclaration[] {\n  const result: SymbolDeclaration[] = [];\n\n  let current = path.tail;\n  while (current) {\n    if (current instanceof EmbeddedTemplateAst) {\n      for (const variable of current.variables) {\n        const name = variable.name;\n\n        // Find the first directive with a context.\n        const context =\n            current.directives.map(d => info.query.getTemplateContext(d.directive.type.reference))\n                .find(c => !!c);\n\n        // Determine the type of the context field referenced by variable.value.\n        let type: Symbol|undefined = undefined;\n        if (context) {\n          const value = context.get(variable.value);\n          if (value) {\n            type = value.type !;\n            let kind = info.query.getTypeKind(type);\n            if (kind === BuiltinType.Any || kind == BuiltinType.Unbound) {\n              // The any type is not very useful here. For special cases, such as ngFor, we can do\n              // better.\n              type = refinedVariableType(type, info, current);\n            }\n          }\n        }\n        if (!type) {\n          type = info.query.getBuiltinType(BuiltinType.Any);\n        }\n        result.push({\n          name,\n          kind: 'variable', type, get definition() { return getDefinitionOf(info, variable); }\n        });\n      }\n    }\n    current = path.parentOf(current);\n  }\n\n  return result;\n}\n\nfunction refinedVariableType(\n    type: Symbol, info: DiagnosticTemplateInfo, templateElement: EmbeddedTemplateAst): Symbol {\n  // Special case the ngFor directive\n  const ngForDirective = templateElement.directives.find(d => {\n    const name = identifierName(d.directive.type);\n    return name == 'NgFor' || name == 'NgForOf';\n  });\n  if (ngForDirective) {\n    const ngForOfBinding = ngForDirective.inputs.find(i => i.directiveName == 'ngForOf');\n    if (ngForOfBinding) {\n      const bindingType = new AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n      if (bindingType) {\n        const result = info.query.getElementType(bindingType);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n\n  // We can't do better, return any\n  return info.query.getBuiltinType(BuiltinType.Any);\n}\n\nfunction getEventDeclaration(info: DiagnosticTemplateInfo, includeEvent?: boolean) {\n  let result: SymbolDeclaration[] = [];\n  if (includeEvent) {\n    // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n    // of the event.\n    result = [{name: '$event', kind: 'variable', type: info.query.getBuiltinType(BuiltinType.Any)}];\n  }\n  return result;\n}\n\nexport function getExpressionScope(\n    info: DiagnosticTemplateInfo, path: TemplateAstPath, includeEvent: boolean): SymbolTable {\n  let result = info.members;\n  const references = getReferences(info);\n  const variables = getVarDeclarations(info, path);\n  const events = getEventDeclaration(info, includeEvent);\n  if (references.length || variables.length || events.length) {\n    const referenceTable = info.query.createSymbolTable(references);\n    const variableTable = info.query.createSymbolTable(variables);\n    const eventsTable = info.query.createSymbolTable(events);\n    result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n  }\n  return result;\n}\n\nclass ExpressionDiagnosticsVisitor extends RecursiveTemplateAstVisitor {\n  private path: TemplateAstPath;\n  private directiveSummary: CompileDirectiveSummary;\n\n  diagnostics: ExpressionDiagnostic[] = [];\n\n  constructor(\n      private info: DiagnosticTemplateInfo,\n      private getExpressionScope: (path: TemplateAstPath, includeEvent: boolean) => SymbolTable) {\n    super();\n    this.path = new AstPath<TemplateAst>([]);\n  }\n\n  visitDirective(ast: DirectiveAst, context: any): any {\n    // Override the default child visitor to ignore the host properties of a directive.\n    if (ast.inputs && ast.inputs.length) {\n      templateVisitAll(this, ast.inputs, context);\n    }\n  }\n\n  visitBoundText(ast: BoundTextAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n    this.pop();\n  }\n\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n    this.pop();\n  }\n\n  visitElementProperty(ast: BoundElementPropertyAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n    this.pop();\n  }\n\n  visitEvent(ast: BoundEventAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n    this.pop();\n  }\n\n  visitVariable(ast: VariableAst): void {\n    const directive = this.directiveSummary;\n    if (directive && ast.value) {\n      const context = this.info.query.getTemplateContext(directive.type.reference) !;\n      if (context && !context.has(ast.value)) {\n        if (ast.value === '$implicit') {\n          this.reportError(\n              'The template context does not have an implicit value', spanOf(ast.sourceSpan));\n        } else {\n          this.reportError(\n              `The template context does not defined a member called '${ast.value}'`,\n              spanOf(ast.sourceSpan));\n        }\n      }\n    }\n  }\n\n  visitElement(ast: ElementAst, context: any): void {\n    this.push(ast);\n    super.visitElement(ast, context);\n    this.pop();\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    const previousDirectiveSummary = this.directiveSummary;\n\n    this.push(ast);\n\n    // Find directive that refernces this template\n    this.directiveSummary =\n        ast.directives.map(d => d.directive).find(d => hasTemplateReference(d.type)) !;\n\n    // Process children\n    super.visitEmbeddedTemplate(ast, context);\n\n    this.pop();\n\n    this.directiveSummary = previousDirectiveSummary;\n  }\n\n  private attributeValueLocation(ast: TemplateAst) {\n    const path = findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n    const last = path.tail;\n    if (last instanceof Attribute && last.valueSpan) {\n      // Add 1 for the quote.\n      return last.valueSpan.start.offset + 1;\n    }\n    return ast.sourceSpan.start.offset;\n  }\n\n  private diagnoseExpression(ast: AST, offset: number, includeEvent: boolean) {\n    const scope = this.getExpressionScope(this.path, includeEvent);\n    this.diagnostics.push(...getExpressionDiagnostics(scope, ast, this.info.query, {\n                            event: includeEvent\n                          }).map(d => ({\n                                   span: offsetSpan(d.ast.span, offset + this.info.offset),\n                                   kind: d.kind,\n                                   message: d.message\n                                 })));\n  }\n\n  private push(ast: TemplateAst) { this.path.push(ast); }\n\n  private pop() { this.path.pop(); }\n\n  private reportError(message: string, span: Span|undefined) {\n    if (span) {\n      this.diagnostics.push(\n          {span: offsetSpan(span, this.info.offset), kind: DiagnosticKind.Error, message});\n    }\n  }\n\n  private reportWarning(message: string, span: Span) {\n    this.diagnostics.push(\n        {span: offsetSpan(span, this.info.offset), kind: DiagnosticKind.Warning, message});\n  }\n}\n\nfunction hasTemplateReference(type: CompileTypeMetadata): boolean {\n  if (type.diDeps) {\n    for (let diDep of type.diDeps) {\n      if (diDep.token && diDep.token.identifier &&\n          identifierName(diDep.token !.identifier !) == 'TemplateRef')\n        return true;\n    }\n  }\n  return false;\n}\n\nfunction offsetSpan(span: Span, amount: number): Span {\n  return {start: span.start + amount, end: span.end + amount};\n}\n\nfunction spanOf(sourceSpan: ParseSourceSpan): Span {\n  return {start: sourceSpan.start.offset, end: sourceSpan.end.offset};\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AotSummaryResolver, CompileMetadataResolver, CompilePipeSummary, CompilerConfig, DEFAULT_INTERPOLATION_CONFIG, DirectiveNormalizer, DirectiveResolver, DomElementSchemaRegistry, HtmlParser, InterpolationConfig, NgAnalyzedModules, NgModuleResolver, ParseTreeResult, PipeResolver, ResourceLoader, StaticReflector, StaticSymbol, StaticSymbolCache, StaticSymbolResolver, SummaryResolver, analyzeNgModules, createOfflineCompileUrlResolver, extractProgramSymbols} from '@angular/compiler';\nimport {ViewEncapsulation, ɵConsole as Console} from '@angular/core';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {BuiltinType, DeclarationKind, Definition, PipeInfo, Pipes, Signature, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable} from './symbols';\n\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nconst isPrivate = (ts as any).ModifierFlags ?\n    ((node: ts.Node) =>\n         !!((ts as any).getCombinedModifierFlags(node) & (ts as any).ModifierFlags.Private)) :\n    ((node: ts.Node) => !!(node.flags & (ts as any).NodeFlags.Private));\n\nconst isReferenceType = (ts as any).ObjectFlags ?\n    ((type: ts.Type) =>\n         !!(type.flags & (ts as any).TypeFlags.Object &&\n            (type as any).objectFlags & (ts as any).ObjectFlags.Reference)) :\n    ((type: ts.Type) => !!(type.flags & (ts as any).TypeFlags.Reference));\n\ninterface TypeContext {\n  node: ts.Node;\n  program: ts.Program;\n  checker: ts.TypeChecker;\n}\n\nexport function getSymbolQuery(\n    program: ts.Program, checker: ts.TypeChecker, source: ts.SourceFile,\n    fetchPipes: () => SymbolTable): SymbolQuery {\n  return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\n\nexport function getClassMembers(\n    program: ts.Program, checker: ts.TypeChecker, staticSymbol: StaticSymbol): SymbolTable|\n    undefined {\n  const declaration = getClassFromStaticSymbol(program, staticSymbol);\n  if (declaration) {\n    const type = checker.getTypeAtLocation(declaration);\n    const node = program.getSourceFile(staticSymbol.filePath);\n    return new TypeWrapper(type, {node, program, checker}).members();\n  }\n}\n\nexport function getClassMembersFromDeclaration(\n    program: ts.Program, checker: ts.TypeChecker, source: ts.SourceFile,\n    declaration: ts.ClassDeclaration) {\n  const type = checker.getTypeAtLocation(declaration);\n  return new TypeWrapper(type, {node: source, program, checker}).members();\n}\n\nexport function getClassFromStaticSymbol(\n    program: ts.Program, type: StaticSymbol): ts.ClassDeclaration|undefined {\n  const source = program.getSourceFile(type.filePath);\n  if (source) {\n    return ts.forEachChild(source, child => {\n      if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n        const classDeclaration = child as ts.ClassDeclaration;\n        if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n          return classDeclaration;\n        }\n      }\n    }) as(ts.ClassDeclaration | undefined);\n  }\n\n  return undefined;\n}\n\nexport function getPipesTable(\n    source: ts.SourceFile, program: ts.Program, checker: ts.TypeChecker,\n    pipes: CompilePipeSummary[]): SymbolTable {\n  return new PipesTable(pipes, {program, checker, node: source});\n}\n\nclass TypeScriptSymbolQuery implements SymbolQuery {\n  private typeCache = new Map<BuiltinType, Symbol>();\n  private pipesCache: SymbolTable;\n\n  constructor(\n      private program: ts.Program, private checker: ts.TypeChecker, private source: ts.SourceFile,\n      private fetchPipes: () => SymbolTable) {}\n\n  getTypeKind(symbol: Symbol): BuiltinType { return typeKindOf(this.getTsTypeOf(symbol)); }\n\n  getBuiltinType(kind: BuiltinType): Symbol {\n    let result = this.typeCache.get(kind);\n    if (!result) {\n      const type = getBuiltinTypeFromTs(\n          kind, {checker: this.checker, node: this.source, program: this.program});\n      result =\n          new TypeWrapper(type, {program: this.program, checker: this.checker, node: this.source});\n      this.typeCache.set(kind, result);\n    }\n    return result;\n  }\n\n  getTypeUnion(...types: Symbol[]): Symbol {\n    // No API exists so return any if the types are not all the same type.\n    let result: Symbol|undefined = undefined;\n    if (types.length) {\n      result = types[0];\n      for (let i = 1; i < types.length; i++) {\n        if (types[i] != result) {\n          result = undefined;\n          break;\n        }\n      }\n    }\n    return result || this.getBuiltinType(BuiltinType.Any);\n  }\n\n  getArrayType(type: Symbol): Symbol { return this.getBuiltinType(BuiltinType.Any); }\n\n  getElementType(type: Symbol): Symbol|undefined {\n    if (type instanceof TypeWrapper) {\n      const elementType = getTypeParameterOf(type.tsType, 'Array');\n      if (elementType) {\n        return new TypeWrapper(elementType, type.context);\n      }\n    }\n  }\n\n  getNonNullableType(symbol: Symbol): Symbol {\n    if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n      const tsType = symbol.tsType;\n      const nonNullableType = this.checker.getNonNullableType(tsType);\n      if (nonNullableType != tsType) {\n        return new TypeWrapper(nonNullableType, symbol.context);\n      } else if (nonNullableType == tsType) {\n        return symbol;\n      }\n    }\n    return this.getBuiltinType(BuiltinType.Any);\n  }\n\n  getPipes(): SymbolTable {\n    let result = this.pipesCache;\n    if (!result) {\n      result = this.pipesCache = this.fetchPipes();\n    }\n    return result;\n  }\n\n  getTemplateContext(type: StaticSymbol): SymbolTable|undefined {\n    const context: TypeContext = {node: this.source, program: this.program, checker: this.checker};\n    const typeSymbol = findClassSymbolInContext(type, context);\n    if (typeSymbol) {\n      const contextType = this.getTemplateRefContextType(typeSymbol);\n      if (contextType) return new SymbolWrapper(contextType, context).members();\n    }\n  }\n\n  getTypeSymbol(type: StaticSymbol): Symbol|undefined {\n    const context: TypeContext = {node: this.source, program: this.program, checker: this.checker};\n    const typeSymbol = findClassSymbolInContext(type, context);\n    return typeSymbol && new SymbolWrapper(typeSymbol, context);\n  }\n\n  createSymbolTable(symbols: SymbolDeclaration[]): SymbolTable {\n    const result = new MapSymbolTable();\n    result.addAll(symbols.map(s => new DeclaredSymbol(s)));\n    return result;\n  }\n\n  mergeSymbolTable(symbolTables: SymbolTable[]): SymbolTable {\n    const result = new MapSymbolTable();\n    for (const symbolTable of symbolTables) {\n      result.addAll(symbolTable.values());\n    }\n    return result;\n  }\n\n  getSpanAt(line: number, column: number): Span|undefined {\n    return spanAt(this.source, line, column);\n  }\n\n  private getTemplateRefContextType(typeSymbol: ts.Symbol): ts.Symbol|undefined {\n    const type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n    const constructor = type.symbol && type.symbol.members &&\n        getFromSymbolTable(type.symbol.members !, '__constructor');\n\n    if (constructor) {\n      const constructorDeclaration = constructor.declarations ![0] as ts.ConstructorTypeNode;\n      for (const parameter of constructorDeclaration.parameters) {\n        const type = this.checker.getTypeAtLocation(parameter.type !);\n        if (type.symbol !.name == 'TemplateRef' && isReferenceType(type)) {\n          const typeReference = type as ts.TypeReference;\n          if (typeReference.typeArguments.length === 1) {\n            return typeReference.typeArguments[0].symbol;\n          }\n        }\n      }\n    }\n  }\n\n  private getTsTypeOf(symbol: Symbol): ts.Type|undefined {\n    const type = this.getTypeWrapper(symbol);\n    return type && type.tsType;\n  }\n\n  private getTypeWrapper(symbol: Symbol): TypeWrapper|undefined {\n    let type: TypeWrapper|undefined = undefined;\n    if (symbol instanceof TypeWrapper) {\n      type = symbol;\n    } else if (symbol.type instanceof TypeWrapper) {\n      type = symbol.type;\n    }\n    return type;\n  }\n}\n\nfunction typeCallable(type: ts.Type): boolean {\n  const signatures = type.getCallSignatures();\n  return signatures && signatures.length != 0;\n}\n\nfunction signaturesOf(type: ts.Type, context: TypeContext): Signature[] {\n  return type.getCallSignatures().map(s => new SignatureWrapper(s, context));\n}\n\nfunction selectSignature(type: ts.Type, context: TypeContext, types: Symbol[]): Signature|\n    undefined {\n  // TODO: Do a better job of selecting the right signature.\n  const signatures = type.getCallSignatures();\n  return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\n\nclass TypeWrapper implements Symbol {\n  constructor(public tsType: ts.Type, public context: TypeContext) {\n    if (!tsType) {\n      throw Error('Internal: null type');\n    }\n  }\n\n  get name(): string {\n    const symbol = this.tsType.symbol;\n    return (symbol && symbol.name) || '<anonymous>';\n  }\n\n  get kind(): DeclarationKind { return 'type'; }\n\n  get language(): string { return 'typescript'; }\n\n  get type(): Symbol|undefined { return undefined; }\n\n  get container(): Symbol|undefined { return undefined; }\n\n  get public(): boolean { return true; }\n\n  get callable(): boolean { return typeCallable(this.tsType); }\n\n  get nullable(): boolean {\n    return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n  }\n\n  get definition(): Definition { return definitionFromTsSymbol(this.tsType.getSymbol()); }\n\n  members(): SymbolTable {\n    return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n  }\n\n  signatures(): Signature[] { return signaturesOf(this.tsType, this.context); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    return selectSignature(this.tsType, this.context, types);\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n}\n\nclass SymbolWrapper implements Symbol {\n  private symbol: ts.Symbol;\n  private _tsType: ts.Type;\n  private _members: SymbolTable;\n\n  constructor(symbol: ts.Symbol, private context: TypeContext) {\n    this.symbol = symbol && context && (symbol.flags & ts.SymbolFlags.Alias) ?\n        context.checker.getAliasedSymbol(symbol) :\n        symbol;\n  }\n\n  get name(): string { return this.symbol.name; }\n\n  get kind(): DeclarationKind { return this.callable ? 'method' : 'property'; }\n\n  get language(): string { return 'typescript'; }\n\n  get type(): Symbol|undefined { return new TypeWrapper(this.tsType, this.context); }\n\n  get container(): Symbol|undefined { return getContainerOf(this.symbol, this.context); }\n\n  get public(): boolean {\n    // Symbols that are not explicitly made private are public.\n    return !isSymbolPrivate(this.symbol);\n  }\n\n  get callable(): boolean { return typeCallable(this.tsType); }\n\n  get nullable(): boolean { return false; }\n\n  get definition(): Definition { return definitionFromTsSymbol(this.symbol); }\n\n  members(): SymbolTable {\n    if (!this._members) {\n      if ((this.symbol.flags & (ts.SymbolFlags.Class | ts.SymbolFlags.Interface)) != 0) {\n        const declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n        const typeWrapper = new TypeWrapper(declaredType, this.context);\n        this._members = typeWrapper.members();\n      } else {\n        this._members = new SymbolTableWrapper(this.symbol.members !, this.context);\n      }\n    }\n    return this._members;\n  }\n\n  signatures(): Signature[] { return signaturesOf(this.tsType, this.context); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    return selectSignature(this.tsType, this.context, types);\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n\n  private get tsType(): ts.Type {\n    let type = this._tsType;\n    if (!type) {\n      type = this._tsType =\n          this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n    }\n    return type;\n  }\n}\n\nclass DeclaredSymbol implements Symbol {\n  constructor(private declaration: SymbolDeclaration) {}\n\n  get name() { return this.declaration.name; }\n\n  get kind() { return this.declaration.kind; }\n\n  get language(): string { return 'ng-template'; }\n\n  get container(): Symbol|undefined { return undefined; }\n\n  get type() { return this.declaration.type; }\n\n  get callable(): boolean { return this.declaration.type.callable; }\n\n  get nullable(): boolean { return false; }\n\n  get public(): boolean { return true; }\n\n  get definition(): Definition { return this.declaration.definition; }\n\n  members(): SymbolTable { return this.declaration.type.members(); }\n\n  signatures(): Signature[] { return this.declaration.type.signatures(); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    return this.declaration.type.selectSignature(types);\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n}\n\nclass SignatureWrapper implements Signature {\n  constructor(private signature: ts.Signature, private context: TypeContext) {}\n\n  get arguments(): SymbolTable {\n    return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n  }\n\n  get result(): Symbol { return new TypeWrapper(this.signature.getReturnType(), this.context); }\n}\n\nclass SignatureResultOverride implements Signature {\n  constructor(private signature: Signature, private resultType: Symbol) {}\n\n  get arguments(): SymbolTable { return this.signature.arguments; }\n\n  get result(): Symbol { return this.resultType; }\n}\n\nconst toSymbolTable: (symbols: ts.Symbol[]) => ts.SymbolTable = isTypescriptVersion('2.2') ?\n    (symbols => {\n      const result = new Map<string, ts.Symbol>();\n      for (const symbol of symbols) {\n        result.set(symbol.name, symbol);\n      }\n      return <ts.SymbolTable>(result as any);\n    }) :\n    (symbols => {\n      const result = <any>{};\n      for (const symbol of symbols) {\n        result[symbol.name] = symbol;\n      }\n      return result as ts.SymbolTable;\n    });\n\nfunction toSymbols(symbolTable: ts.SymbolTable | undefined): ts.Symbol[] {\n  if (!symbolTable) return [];\n\n  const table = symbolTable as any;\n\n  if (typeof table.values === 'function') {\n    return Array.from(table.values()) as ts.Symbol[];\n  }\n\n  const result: ts.Symbol[] = [];\n\n  const own = typeof table.hasOwnProperty === 'function' ?\n      (name: string) => table.hasOwnProperty(name) :\n      (name: string) => !!table[name];\n\n  for (const name in table) {\n    if (own(name)) {\n      result.push(table[name]);\n    }\n  }\n  return result;\n}\n\nclass SymbolTableWrapper implements SymbolTable {\n  private symbols: ts.Symbol[];\n  private symbolTable: ts.SymbolTable;\n\n  constructor(symbols: ts.SymbolTable|ts.Symbol[]|undefined, private context: TypeContext) {\n    symbols = symbols || [];\n\n    if (Array.isArray(symbols)) {\n      this.symbols = symbols;\n      this.symbolTable = toSymbolTable(symbols);\n    } else {\n      this.symbols = toSymbols(symbols);\n      this.symbolTable = symbols;\n    }\n  }\n\n  get size(): number { return this.symbols.length; }\n\n  get(key: string): Symbol|undefined {\n    const symbol = getFromSymbolTable(this.symbolTable, key);\n    return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n  }\n\n  has(key: string): boolean {\n    const table: any = this.symbolTable;\n    return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n  }\n\n  values(): Symbol[] { return this.symbols.map(s => new SymbolWrapper(s, this.context)); }\n}\n\nclass MapSymbolTable implements SymbolTable {\n  private map = new Map<string, Symbol>();\n  private _values: Symbol[] = [];\n\n  get size(): number { return this.map.size; }\n\n  get(key: string): Symbol|undefined { return this.map.get(key); }\n\n  add(symbol: Symbol) {\n    if (this.map.has(symbol.name)) {\n      const previous = this.map.get(symbol.name) !;\n      this._values[this._values.indexOf(previous)] = symbol;\n    }\n    this.map.set(symbol.name, symbol);\n    this._values.push(symbol);\n  }\n\n  addAll(symbols: Symbol[]) {\n    for (const symbol of symbols) {\n      this.add(symbol);\n    }\n  }\n\n  has(key: string): boolean { return this.map.has(key); }\n\n  values(): Symbol[] {\n    // Switch to this.map.values once iterables are supported by the target language.\n    return this._values;\n  }\n}\n\nclass PipesTable implements SymbolTable {\n  constructor(private pipes: CompilePipeSummary[], private context: TypeContext) {}\n\n  get size() { return this.pipes.length; }\n\n  get(key: string): Symbol|undefined {\n    const pipe = this.pipes.find(pipe => pipe.name == key);\n    if (pipe) {\n      return new PipeSymbol(pipe, this.context);\n    }\n  }\n\n  has(key: string): boolean { return this.pipes.find(pipe => pipe.name == key) != null; }\n\n  values(): Symbol[] { return this.pipes.map(pipe => new PipeSymbol(pipe, this.context)); }\n}\n\nclass PipeSymbol implements Symbol {\n  private _tsType: ts.Type;\n\n  constructor(private pipe: CompilePipeSummary, private context: TypeContext) {}\n\n  get name(): string { return this.pipe.name; }\n\n  get kind(): DeclarationKind { return 'pipe'; }\n\n  get language(): string { return 'typescript'; }\n\n  get type(): Symbol|undefined { return new TypeWrapper(this.tsType, this.context); }\n\n  get container(): Symbol|undefined { return undefined; }\n\n  get callable(): boolean { return true; }\n\n  get nullable(): boolean { return false; }\n\n  get public(): boolean { return true; }\n\n  get definition(): Definition { return definitionFromTsSymbol(this.tsType.getSymbol()); }\n\n  members(): SymbolTable { return EmptyTable.instance; }\n\n  signatures(): Signature[] { return signaturesOf(this.tsType, this.context); }\n\n  selectSignature(types: Symbol[]): Signature|undefined {\n    let signature = selectSignature(this.tsType, this.context, types) !;\n    if (types.length == 1) {\n      const parameterType = types[0];\n      if (parameterType instanceof TypeWrapper) {\n        let resultType: ts.Type|undefined = undefined;\n        switch (this.name) {\n          case 'async':\n            switch (parameterType.name) {\n              case 'Observable':\n              case 'Promise':\n              case 'EventEmitter':\n                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                break;\n              default:\n                resultType = getBuiltinTypeFromTs(BuiltinType.Any, this.context);\n                break;\n            }\n            break;\n          case 'slice':\n            resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n            break;\n        }\n        if (resultType) {\n          signature = new SignatureResultOverride(\n              signature, new TypeWrapper(resultType, parameterType.context));\n        }\n      }\n    }\n    return signature;\n  }\n\n  indexed(argument: Symbol): Symbol|undefined { return undefined; }\n\n  private get tsType(): ts.Type {\n    let type = this._tsType;\n    if (!type) {\n      const classSymbol = this.findClassSymbol(this.pipe.type.reference);\n      if (classSymbol) {\n        type = this._tsType = this.findTransformMethodType(classSymbol) !;\n      }\n      if (!type) {\n        type = this._tsType = getBuiltinTypeFromTs(BuiltinType.Any, this.context);\n      }\n    }\n    return type;\n  }\n\n  private findClassSymbol(type: StaticSymbol): ts.Symbol|undefined {\n    return findClassSymbolInContext(type, this.context);\n  }\n\n  private findTransformMethodType(classSymbol: ts.Symbol): ts.Type|undefined {\n    const classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n    if (classType) {\n      const transform = classType.getProperty('transform');\n      if (transform) {\n        return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n      }\n    }\n  }\n}\n\nfunction findClassSymbolInContext(type: StaticSymbol, context: TypeContext): ts.Symbol|undefined {\n  const sourceFile = context.program.getSourceFile(type.filePath);\n  if (sourceFile) {\n    const moduleSymbol = (sourceFile as any).module || (sourceFile as any).symbol;\n    const exports = context.checker.getExportsOfModule(moduleSymbol);\n    return (exports || []).find(symbol => symbol.name == type.name);\n  }\n}\n\nclass EmptyTable implements SymbolTable {\n  get size(): number { return 0; }\n  get(key: string): Symbol|undefined { return undefined; }\n  has(key: string): boolean { return false; }\n  values(): Symbol[] { return []; }\n  static instance = new EmptyTable();\n}\n\nfunction findTsConfig(fileName: string): string|undefined {\n  let dir = path.dirname(fileName);\n  while (fs.existsSync(dir)) {\n    const candidate = path.join(dir, 'tsconfig.json');\n    if (fs.existsSync(candidate)) return candidate;\n    const parentDir = path.dirname(dir);\n    if (parentDir === dir) break;\n    dir = parentDir;\n  }\n}\n\nfunction isBindingPattern(node: ts.Node): node is ts.BindingPattern {\n  return !!node && (node.kind === ts.SyntaxKind.ArrayBindingPattern ||\n                    node.kind === ts.SyntaxKind.ObjectBindingPattern);\n}\n\nfunction walkUpBindingElementsAndPatterns(node: ts.Node): ts.Node {\n  while (node && (node.kind === ts.SyntaxKind.BindingElement || isBindingPattern(node))) {\n    node = node.parent !;\n  }\n\n  return node;\n}\n\nfunction getCombinedNodeFlags(node: ts.Node): ts.NodeFlags {\n  node = walkUpBindingElementsAndPatterns(node);\n\n  let flags = node.flags;\n  if (node.kind === ts.SyntaxKind.VariableDeclaration) {\n    node = node.parent !;\n  }\n\n  if (node && node.kind === ts.SyntaxKind.VariableDeclarationList) {\n    flags |= node.flags;\n    node = node.parent !;\n  }\n\n  if (node && node.kind === ts.SyntaxKind.VariableStatement) {\n    flags |= node.flags;\n  }\n\n  return flags;\n}\n\nfunction isSymbolPrivate(s: ts.Symbol): boolean {\n  return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\n\nfunction getBuiltinTypeFromTs(kind: BuiltinType, context: TypeContext): ts.Type {\n  let type: ts.Type;\n  const checker = context.checker;\n  const node = context.node;\n  switch (kind) {\n    case BuiltinType.Any:\n      type = checker.getTypeAtLocation(setParents(\n          <ts.Node><any>{\n            kind: ts.SyntaxKind.AsExpression,\n            expression: <ts.Node>{kind: ts.SyntaxKind.TrueKeyword},\n            type: <ts.Node>{kind: ts.SyntaxKind.AnyKeyword}\n          },\n          node));\n      break;\n    case BuiltinType.Boolean:\n      type =\n          checker.getTypeAtLocation(setParents(<ts.Node>{kind: ts.SyntaxKind.TrueKeyword}, node));\n      break;\n    case BuiltinType.Null:\n      type =\n          checker.getTypeAtLocation(setParents(<ts.Node>{kind: ts.SyntaxKind.NullKeyword}, node));\n      break;\n    case BuiltinType.Number:\n      const numeric = <ts.Node>{kind: ts.SyntaxKind.NumericLiteral};\n      setParents(<any>{kind: ts.SyntaxKind.ExpressionStatement, expression: numeric}, node);\n      type = checker.getTypeAtLocation(numeric);\n      break;\n    case BuiltinType.String:\n      type = checker.getTypeAtLocation(\n          setParents(<ts.Node>{kind: ts.SyntaxKind.NoSubstitutionTemplateLiteral}, node));\n      break;\n    case BuiltinType.Undefined:\n      type = checker.getTypeAtLocation(setParents(\n          <ts.Node><any>{\n            kind: ts.SyntaxKind.VoidExpression,\n            expression: <ts.Node>{kind: ts.SyntaxKind.NumericLiteral}\n          },\n          node));\n      break;\n    default:\n      throw new Error(`Internal error, unhandled literal kind ${kind}:${BuiltinType[kind]}`);\n  }\n  return type;\n}\n\nfunction setParents<T extends ts.Node>(node: T, parent: ts.Node): T {\n  node.parent = parent;\n  ts.forEachChild(node, child => setParents(child, node));\n  return node;\n}\n\nfunction spanOf(node: ts.Node): Span {\n  return {start: node.getStart(), end: node.getEnd()};\n}\n\nfunction shrink(span: Span, offset?: number) {\n  if (offset == null) offset = 1;\n  return {start: span.start + offset, end: span.end - offset};\n}\n\nfunction spanAt(sourceFile: ts.SourceFile, line: number, column: number): Span|undefined {\n  if (line != null && column != null) {\n    const position = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n    const findChild = function findChild(node: ts.Node): ts.Node | undefined {\n      if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position && node.end > position) {\n        const betterNode = ts.forEachChild(node, findChild);\n        return betterNode || node;\n      }\n    };\n\n    const node = ts.forEachChild(sourceFile, findChild);\n    if (node) {\n      return {start: node.getStart(), end: node.getEnd()};\n    }\n  }\n}\n\nfunction definitionFromTsSymbol(symbol: ts.Symbol): Definition {\n  const declarations = symbol.declarations;\n  if (declarations) {\n    return declarations.map(declaration => {\n      const sourceFile = declaration.getSourceFile();\n      return {\n        fileName: sourceFile.fileName,\n        span: {start: declaration.getStart(), end: declaration.getEnd()}\n      };\n    });\n  }\n}\n\nfunction parentDeclarationOf(node: ts.Node): ts.Node|undefined {\n  while (node) {\n    switch (node.kind) {\n      case ts.SyntaxKind.ClassDeclaration:\n      case ts.SyntaxKind.InterfaceDeclaration:\n        return node;\n      case ts.SyntaxKind.SourceFile:\n        return undefined;\n    }\n    node = node.parent !;\n  }\n}\n\nfunction getContainerOf(symbol: ts.Symbol, context: TypeContext): Symbol|undefined {\n  if (symbol.getFlags() & ts.SymbolFlags.ClassMember && symbol.declarations) {\n    for (const declaration of symbol.declarations) {\n      const parent = parentDeclarationOf(declaration);\n      if (parent) {\n        const type = context.checker.getTypeAtLocation(parent);\n        if (type) {\n          return new TypeWrapper(type, context);\n        }\n      }\n    }\n  }\n}\n\nfunction getTypeParameterOf(type: ts.Type, name: string): ts.Type|undefined {\n  if (type && type.symbol && type.symbol.name == name) {\n    const typeArguments: ts.Type[] = (type as any).typeArguments;\n    if (typeArguments && typeArguments.length <= 1) {\n      return typeArguments[0];\n    }\n  }\n}\n\nfunction typeKindOf(type: ts.Type | undefined): BuiltinType {\n  if (type) {\n    if (type.flags & ts.TypeFlags.Any) {\n      return BuiltinType.Any;\n    } else if (\n        type.flags & (ts.TypeFlags.String | ts.TypeFlags.StringLike | ts.TypeFlags.StringLiteral)) {\n      return BuiltinType.String;\n    } else if (type.flags & (ts.TypeFlags.Number | ts.TypeFlags.NumberLike)) {\n      return BuiltinType.Number;\n    } else if (type.flags & (ts.TypeFlags.Undefined)) {\n      return BuiltinType.Undefined;\n    } else if (type.flags & (ts.TypeFlags.Null)) {\n      return BuiltinType.Null;\n    } else if (type.flags & ts.TypeFlags.Union) {\n      // If all the constituent types of a union are the same kind, it is also that kind.\n      let candidate: BuiltinType|null = null;\n      const unionType = type as ts.UnionType;\n      if (unionType.types.length > 0) {\n        candidate = typeKindOf(unionType.types[0]);\n        for (const subType of unionType.types) {\n          if (candidate != typeKindOf(subType)) {\n            return BuiltinType.Other;\n          }\n        }\n      }\n      if (candidate != null) {\n        return candidate;\n      }\n    } else if (type.flags & ts.TypeFlags.TypeParameter) {\n      return BuiltinType.Unbound;\n    }\n  }\n  return BuiltinType.Other;\n}\n\n\n\nfunction getFromSymbolTable(symbolTable: ts.SymbolTable, key: string): ts.Symbol|undefined {\n  const table = symbolTable as any;\n  let symbol: ts.Symbol|undefined;\n\n  if (typeof table.get === 'function') {\n    // TS 2.2 uses a Map\n    symbol = table.get(key);\n  } else {\n    // TS pre-2.2 uses an object\n    symbol = table[key];\n  }\n\n  return symbol;\n}\n\nfunction toNumbers(value: string | undefined): number[] {\n  return value ? value.split('.').map(v => +v) : [];\n}\n\nfunction compareNumbers(a: number[], b: number[]): -1|0|1 {\n  for (let i = 0; i < a.length && i < b.length; i++) {\n    if (a[i] > b[i]) return 1;\n    if (a[i] < b[i]) return -1;\n  }\n  return 0;\n}\n\nfunction isTypescriptVersion(low: string, high?: string): boolean {\n  const tsNumbers = toNumbers(ts.version);\n\n  return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n      compareNumbers(toNumbers(high), tsNumbers) >= 0;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseSourceSpan} from '@angular/compiler';\nimport * as ts from 'typescript';\n\nexport enum DiagnosticCategory {\n  Warning = 0,\n  Error = 1,\n  Message = 2,\n}\n\nexport interface Diagnostic {\n  message: string;\n  span?: ParseSourceSpan;\n  category: DiagnosticCategory;\n}\n\nexport interface CompilerOptions extends ts.CompilerOptions {\n  // Absolute path to a directory where generated file structure is written.\n  // If unspecified, generated files will be written alongside sources.\n  // @deprecated - no effect\n  genDir?: string;\n\n  // Path to the directory containing the tsconfig.json file.\n  basePath?: string;\n\n  // Don't produce .metadata.json files (they don't work for bundled emit with --out)\n  skipMetadataEmit?: boolean;\n\n  // Produce an error if the metadata written for a class would produce an error if used.\n  strictMetadataEmit?: boolean;\n\n  // Don't produce .ngfactory.ts or .ngstyle.ts files\n  skipTemplateCodegen?: boolean;\n\n  // Whether to generate a flat module index of the given name and the corresponding\n  // flat module metadata. This option is intended to be used when creating flat\n  // modules similar to how `@angular/core` and `@angular/common` are packaged.\n  // When this option is used the `package.json` for the library should refered to the\n  // generated flat module index instead of the library index file. When using this\n  // option only one .metadata.json file is produced that contains all the metadata\n  // necessary for symbols exported from the library index.\n  // In the generated .ngfactory.ts files flat module index is used to import symbols\n  // includes both the public API from the library index as well as shrowded internal\n  // symbols.\n  // By default the .ts file supplied in the `files` files field is assumed to be\n  // library index. If more than one is specified, uses `libraryIndex` to select the\n  // file to use. If more than on .ts file is supplied and no `libraryIndex` is supplied\n  // an error is produced.\n  // A flat module index .d.ts and .js will be created with the given `flatModuleOutFile`\n  // name in the same location as the library index .d.ts file is emitted.\n  // For example, if a library uses `public_api.ts` file as the library index of the\n  // module the `tsconfig.json` `files` field would be `[\"public_api.ts\"]`. The\n  // `flatModuleOutFile` options could then be set to, for example `\"index.js\"`, which\n  // produces `index.d.ts` and  `index.metadata.json` files. The library's\n  // `package.json`'s `module` field would be `\"index.js\"` and the `typings` field would\n  // be `\"index.d.ts\"`.\n  flatModuleOutFile?: string;\n\n  // Preferred module id to use for importing flat module. References generated by `ngc`\n  // will use this module name when importing symbols from the flat module. This is only\n  // meaningful when `flatModuleOutFile` is also supplied. It is otherwise ignored.\n  flatModuleId?: string;\n\n  // Whether to generate code for library code.\n  // If true, produce .ngfactory.ts and .ngstyle.ts files for .d.ts inputs.\n  // Default is true.\n  generateCodeForLibraries?: boolean;\n\n  // Insert JSDoc type annotations needed by Closure Compiler\n  annotateForClosureCompiler?: boolean;\n\n  // Modify how angular annotations are emitted to improve tree-shaking.\n  // Default is static fields.\n  // decorators: Leave the Decorators in-place. This makes compilation faster.\n  //             TypeScript will emit calls to the __decorate helper.\n  //             `--emitDecoratorMetadata` can be used for runtime reflection.\n  //             However, the resulting code will not properly tree-shake.\n  // static fields: Replace decorators with a static field in the class.\n  //                Allows advanced tree-shakers like Closure Compiler to remove\n  //                unused classes.\n  annotationsAs?: 'decorators'|'static fields';\n\n  // Print extra information while running the compiler\n  trace?: boolean;\n\n  // Whether to enable support for <template> and the template attribute (true by default)\n  enableLegacyTemplate?: boolean;\n\n  // Whether to enable lowering expressions lambdas and expressions in a reference value\n  // position.\n  disableExpressionLowering?: boolean;\n\n  // The list of expected files, when provided:\n  // - extra files are filtered out,\n  // - missing files are created empty.\n  expectedOut?: string[];\n\n  // Locale of the application\n  i18nOutLocale?: string;\n  // Export format (xlf, xlf2 or xmb)\n  i18nOutFormat?: string;\n  // Path to the extracted message file\n  i18nOutFile?: string;\n\n  // Import format if different from `i18nFormat`\n  i18nInFormat?: string;\n  // Locale of the imported translations\n  i18nInLocale?: string;\n  // Path to the translation file\n  i18nInFile?: string;\n  // How to handle missing messages\n  i18nInMissingTranslations?: 'error'|'warning'|'ignore';\n}\n\nexport interface ModuleFilenameResolver {\n  /**\n   * Converts a module name that is used in an `import` to a file path.\n   * I.e. `path/to/containingFile.ts` containing `import {...} from 'module-name'`.\n   */\n  moduleNameToFileName(moduleName: string, containingFile?: string): string|null;\n\n  /**\n   * Converts a file path to a module name that can be used as an `import.\n   * I.e. `path/to/importedFile.ts` should be imported by `path/to/containingFile.ts`.\n   *\n   * See ImportResolver.\n   */\n  fileNameToModuleName(importedFilePath: string, containingFilePath: string): string|null;\n\n  getNgCanonicalFileName(fileName: string): string;\n\n  assumeFileExists(fileName: string): void;\n}\n\nexport interface CompilerHost extends ts.CompilerHost, ModuleFilenameResolver {\n  /**\n   * Load a referenced resource either statically or asynchronously. If the host returns a\n   * `Promise<string>` it is assumed the user of the corresponding `Program` will call\n   * `loadNgStructureAsync()`. Returing  `Promise<string>` outside `loadNgStructureAsync()` will\n   * cause a diagnostics diagnostic error or an exception to be thrown.\n   *\n   * If `loadResource()` is not provided, `readFile()` will be called to load the resource.\n   */\n  readResource?(fileName: string): Promise<string>|string;\n}\n\nexport enum EmitFlags {\n  DTS = 1 << 0,\n  JS = 1 << 1,\n  Metadata = 1 << 2,\n  I18nBundle = 1 << 3,\n  Summary = 1 << 4,\n\n  Default = DTS | JS,\n  All = DTS | JS | Metadata | I18nBundle | Summary\n}\n\n// TODO(chuckj): Support CustomTransformers once we require TypeScript 2.3+\n// export interface CustomTransformers {\n//   beforeTs?: ts.TransformerFactory<ts.SourceFile>[];\n//   afterTs?: ts.TransformerFactory<ts.SourceFile>[];\n// }\n\nexport interface EmitResult extends ts.EmitResult {\n  modulesManifest: {modules: string[]; fileNames: string[];};\n  externs: {[fileName: string]: string;};\n}\n\nexport interface Program {\n  /**\n   * Retrieve the TypeScript program used to produce semantic diagnostics and emit the sources.\n   *\n   * Angular structural information is required to produce the program.\n   */\n  getTsProgram(): ts.Program;\n\n  /**\n   * Retrieve options diagnostics for the TypeScript options used to create the program. This is\n   * faster than calling `getTsProgram().getOptionsDiagnostics()` since it does not need to\n   * collect Angular structural information to produce the errors.\n   */\n  getTsOptionDiagnostics(cancellationToken?: ts.CancellationToken): ts.Diagnostic[];\n\n  /**\n   * Retrieve options diagnostics for the Angular options used to create the program.\n   */\n  getNgOptionDiagnostics(cancellationToken?: ts.CancellationToken): Diagnostic[];\n\n  /**\n   * Retrieve the syntax diagnostics from TypeScript. This is faster than calling\n   * `getTsProgram().getSyntacticDiagnostics()` since it does not need to collect Angular structural\n   * information to produce the errors.\n   */\n  getTsSyntacticDiagnostics(sourceFile?: ts.SourceFile, cancellationToken?: ts.CancellationToken):\n      ts.Diagnostic[];\n\n  /**\n   * Retrieve the diagnostics for the structure of an Angular application is correctly formed.\n   * This includes validating Angular annotations and the syntax of referenced and imbedded HTML\n   * and CSS.\n   *\n   * Note it is important to displaying TypeScript semantic diagnostics along with Angular\n   * structural diagnostics as an error in the program strucutre might cause errors detected in\n   * semantic analysis and a semantic error might cause errors in specifying the program structure.\n   *\n   * Angular structural information is required to produce these diagnostics.\n   */\n  getNgStructuralDiagnostics(cancellationToken?: ts.CancellationToken): Diagnostic[];\n\n  /**\n   * Retrieve the semantic diagnostics from TypeScript. This is equivilent to calling\n   * `getTsProgram().getSemanticDiagnostics()` directly and is included for completeness.\n   */\n  getTsSemanticDiagnostics(sourceFile?: ts.SourceFile, cancellationToken?: ts.CancellationToken):\n      ts.Diagnostic[];\n\n  /**\n   * Retrieve the Angular semantic diagnostics.\n   *\n   * Angular structural information is required to produce these diagnostics.\n   */\n  getNgSemanticDiagnostics(fileName?: string, cancellationToken?: ts.CancellationToken):\n      Diagnostic[];\n\n  /**\n   * Load Angular structural information asynchronously. If this method is not called then the\n   * Angular structural information, including referenced HTML and CSS files, are loaded\n   * synchronously. If the supplied Angular compiler host returns a promise from `loadResource()`\n   * will produce a diagnostic error message or, `getTsProgram()` or `emit` to throw.\n   */\n  loadNgStructureAsync(): Promise<void>;\n\n  /**\n   * Retrieve the lazy route references in the program.\n   *\n   * Angular structural information is required to produce these routes.\n   */\n  getLazyRoutes(cancellationToken?: ts.CancellationToken): {[route: string]: string};\n\n  /**\n   * Emit the files requested by emitFlags implied by the program.\n   *\n   * Angular structural information is required to emit files.\n   */\n  emit({// transformers,\n        emitFlags, cancellationToken}: {\n    emitFlags: EmitFlags,\n    // transformers?: CustomTransformers, // See TODO above\n    cancellationToken?: ts.CancellationToken,\n  }): EmitResult;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {CompilerOptions, ModuleFilenameResolver} from './api';\n\nconst EXT = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst DTS = /\\.d\\.ts$/;\nconst NODE_MODULES = '/node_modules/';\nconst IS_GENERATED = /\\.(ngfactory|ngstyle|ngsummary)$/;\nconst SHALLOW_IMPORT = /^((\\w|-)+|(@(\\w|-)+(\\/(\\w|-)+)+))$/;\n\nexport function createModuleFilenameResolver(\n    tsHost: ts.ModuleResolutionHost, options: CompilerOptions): ModuleFilenameResolver {\n  const host = createModuleFilenameResolverHost(tsHost);\n\n  return options.rootDirs && options.rootDirs.length > 0 ?\n      new MultipleRootDirModuleFilenameResolver(host, options) :\n      new SingleRootDirModuleFilenameResolver(host, options);\n}\n\nclass SingleRootDirModuleFilenameResolver implements ModuleFilenameResolver {\n  private isGenDirChildOfRootDir: boolean;\n  private basePath: string;\n  private genDir: string;\n  private moduleFileNames = new Map<string, string|null>();\n\n  constructor(private host: ModuleFilenameResolutionHost, private options: CompilerOptions) {\n    // normalize the path so that it never ends with '/'.\n    this.basePath = path.normalize(path.join(options.basePath !, '.')).replace(/\\\\/g, '/');\n    this.genDir = path.normalize(path.join(options.genDir !, '.')).replace(/\\\\/g, '/');\n\n    const genPath: string = path.relative(this.basePath, this.genDir);\n    this.isGenDirChildOfRootDir = genPath === '' || !genPath.startsWith('..');\n  }\n\n  moduleNameToFileName(m: string, containingFile: string): string|null {\n    const key = m + ':' + (containingFile || '');\n    let result: string|null = this.moduleFileNames.get(key) || null;\n    if (!result) {\n      if (!containingFile) {\n        if (m.indexOf('.') === 0) {\n          throw new Error('Resolution of relative paths requires a containing file.');\n        }\n        // Any containing file gives the same result for absolute imports\n        containingFile = this.getNgCanonicalFileName(path.join(this.basePath, 'index.ts'));\n      }\n      m = m.replace(EXT, '');\n      const resolved =\n          ts.resolveModuleName(m, containingFile.replace(/\\\\/g, '/'), this.options, this.host)\n              .resolvedModule;\n      result = resolved ? this.getNgCanonicalFileName(resolved.resolvedFileName) : null;\n      this.moduleFileNames.set(key, result);\n    }\n    return result;\n  }\n\n  /**\n   * We want a moduleId that will appear in import statements in the generated code.\n   * These need to be in a form that system.js can load, so absolute file paths don't work.\n   *\n   * The `containingFile` is always in the `genDir`, where as the `importedFile` can be in\n   * `genDir`, `node_module` or `basePath`.  The `importedFile` is either a generated file or\n   * existing file.\n   *\n   *               | genDir   | node_module |  rootDir\n   * --------------+----------+-------------+----------\n   * generated     | relative |   relative  |   n/a\n   * existing file |   n/a    |   absolute  |  relative(*)\n   *\n   * NOTE: (*) the relative path is computed depending on `isGenDirChildOfRootDir`.\n   */\n  fileNameToModuleName(importedFile: string, containingFile: string): string {\n    // If a file does not yet exist (because we compile it later), we still need to\n    // assume it exists it so that the `resolve` method works!\n    if (!this.host.fileExists(importedFile)) {\n      this.host.assumeFileExists(importedFile);\n    }\n\n    containingFile = this.rewriteGenDirPath(containingFile);\n    const containingDir = path.dirname(containingFile);\n    // drop extension\n    importedFile = importedFile.replace(EXT, '');\n\n    const nodeModulesIndex = importedFile.indexOf(NODE_MODULES);\n    const importModule = nodeModulesIndex === -1 ?\n        null :\n        importedFile.substring(nodeModulesIndex + NODE_MODULES.length);\n    const isGeneratedFile = IS_GENERATED.test(importedFile);\n\n    if (isGeneratedFile) {\n      // rewrite to genDir path\n      if (importModule) {\n        // it is generated, therefore we do a relative path to the factory\n        return this.dotRelative(containingDir, this.genDir + NODE_MODULES + importModule);\n      } else {\n        // assume that import is also in `genDir`\n        importedFile = this.rewriteGenDirPath(importedFile);\n        return this.dotRelative(containingDir, importedFile);\n      }\n    } else {\n      // user code import\n      if (importModule) {\n        return importModule;\n      } else {\n        if (!this.isGenDirChildOfRootDir) {\n          // assume that they are on top of each other.\n          importedFile = importedFile.replace(this.basePath, this.genDir);\n        }\n        if (SHALLOW_IMPORT.test(importedFile)) {\n          return importedFile;\n        }\n        return this.dotRelative(containingDir, importedFile);\n      }\n    }\n  }\n\n  // We use absolute paths on disk as canonical.\n  getNgCanonicalFileName(fileName: string): string { return fileName; }\n\n  assumeFileExists(fileName: string) { this.host.assumeFileExists(fileName); }\n\n  private dotRelative(from: string, to: string): string {\n    const rPath: string = path.relative(from, to).replace(/\\\\/g, '/');\n    return rPath.startsWith('.') ? rPath : './' + rPath;\n  }\n\n  /**\n   * Moves the path into `genDir` folder while preserving the `node_modules` directory.\n   */\n  private rewriteGenDirPath(filepath: string) {\n    const nodeModulesIndex = filepath.indexOf(NODE_MODULES);\n    if (nodeModulesIndex !== -1) {\n      // If we are in node_module, transplant them into `genDir`.\n      return path.join(this.genDir, filepath.substring(nodeModulesIndex));\n    } else {\n      // pretend that containing file is on top of the `genDir` to normalize the paths.\n      // we apply the `genDir` => `rootDir` delta through `rootDirPrefix` later.\n      return filepath.replace(this.basePath, this.genDir);\n    }\n  }\n}\n\n/**\n * This version of the AotCompilerHost expects that the program will be compiled\n * and executed with a \"path mapped\" directory structure, where generated files\n * are in a parallel tree with the sources, and imported using a `./` relative\n * import. This requires using TS `rootDirs` option and also teaching the module\n * loader what to do.\n */\nclass MultipleRootDirModuleFilenameResolver implements ModuleFilenameResolver {\n  private basePath: string;\n\n  constructor(private host: ModuleFilenameResolutionHost, private options: CompilerOptions) {\n    // normalize the path so that it never ends with '/'.\n    this.basePath = path.normalize(path.join(options.basePath !, '.')).replace(/\\\\/g, '/');\n  }\n\n  getNgCanonicalFileName(fileName: string): string {\n    if (!fileName) return fileName;\n    // NB: the rootDirs should have been sorted longest-first\n    for (const dir of this.options.rootDirs || []) {\n      if (fileName.indexOf(dir) === 0) {\n        fileName = fileName.substring(dir.length);\n      }\n    }\n    return fileName;\n  }\n\n  assumeFileExists(fileName: string) { this.host.assumeFileExists(fileName); }\n\n  moduleNameToFileName(m: string, containingFile: string): string|null {\n    if (!containingFile) {\n      if (m.indexOf('.') === 0) {\n        throw new Error('Resolution of relative paths requires a containing file.');\n      }\n      // Any containing file gives the same result for absolute imports\n      containingFile = this.getNgCanonicalFileName(path.join(this.basePath, 'index.ts'));\n    }\n    for (const root of this.options.rootDirs || ['']) {\n      const rootedContainingFile = path.join(root, containingFile);\n      const resolved =\n          ts.resolveModuleName(m, rootedContainingFile, this.options, this.host).resolvedModule;\n      if (resolved) {\n        if (this.options.traceResolution) {\n          console.error('resolve', m, containingFile, '=>', resolved.resolvedFileName);\n        }\n        return this.getNgCanonicalFileName(resolved.resolvedFileName);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * We want a moduleId that will appear in import statements in the generated code.\n   * These need to be in a form that system.js can load, so absolute file paths don't work.\n   * Relativize the paths by checking candidate prefixes of the absolute path, to see if\n   * they are resolvable by the moduleResolution strategy from the CompilerHost.\n   */\n  fileNameToModuleName(importedFile: string, containingFile: string): string {\n    if (this.options.traceResolution) {\n      console.error(\n          'getImportPath from containingFile', containingFile, 'to importedFile', importedFile);\n    }\n\n    // If a file does not yet exist (because we compile it later), we still need to\n    // assume it exists so that the `resolve` method works!\n    if (!this.host.fileExists(importedFile)) {\n      if (this.options.rootDirs && this.options.rootDirs.length > 0) {\n        this.host.assumeFileExists(path.join(this.options.rootDirs[0], importedFile));\n      } else {\n        this.host.assumeFileExists(importedFile);\n      }\n    }\n\n    const resolvable = (candidate: string) => {\n      const resolved = this.moduleNameToFileName(candidate, importedFile);\n      return resolved && resolved.replace(EXT, '') === importedFile.replace(EXT, '');\n    };\n\n    const importModuleName = importedFile.replace(EXT, '');\n    const parts = importModuleName.split(path.sep).filter(p => !!p);\n    let foundRelativeImport: string|undefined;\n\n    for (let index = parts.length - 1; index >= 0; index--) {\n      let candidate = parts.slice(index, parts.length).join(path.sep);\n      if (resolvable(candidate)) {\n        return candidate;\n      }\n      candidate = '.' + path.sep + candidate;\n      if (resolvable(candidate)) {\n        foundRelativeImport = candidate;\n      }\n    }\n\n    if (foundRelativeImport) return foundRelativeImport;\n\n    // Try a relative import\n    const candidate = path.relative(path.dirname(containingFile), importModuleName);\n    if (resolvable(candidate)) {\n      return candidate;\n    }\n\n    throw new Error(\n        `Unable to find any resolvable import for ${importedFile} relative to ${containingFile}`);\n  }\n}\n\ninterface ModuleFilenameResolutionHost extends ts.ModuleResolutionHost {\n  assumeFileExists(fileName: string): void;\n}\n\nfunction createModuleFilenameResolverHost(host: ts.ModuleResolutionHost):\n    ModuleFilenameResolutionHost {\n  const assumedExists = new Set<string>();\n  const resolveModuleNameHost = Object.create(host);\n  // When calling ts.resolveModuleName, additional allow checks for .d.ts files to be done based on\n  // checks for .ngsummary.json files, so that our codegen depends on fewer inputs and requires\n  // to be called less often.\n  // This is needed as we use ts.resolveModuleName in reflector_host and it should be able to\n  // resolve summary file names.\n  resolveModuleNameHost.fileExists = (fileName: string): boolean => {\n    if (assumedExists.has(fileName)) {\n      return true;\n    }\n\n    if (host.fileExists(fileName)) {\n      return true;\n    }\n\n    if (DTS.test(fileName)) {\n      const base = fileName.substring(0, fileName.length - 5);\n      return host.fileExists(base + '.ngsummary.json');\n    }\n\n    return false;\n  };\n\n  resolveModuleNameHost.assumeFileExists = (fileName: string) => assumedExists.add(fileName);\n  // Make sure we do not `host.realpath()` from TS as we do not want to resolve symlinks.\n  // https://github.com/Microsoft/TypeScript/issues/9552\n  resolveModuleNameHost.realpath = (fileName: string) => fileName;\n\n  return resolveModuleNameHost;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AotCompiler, AotCompilerHost, AotCompilerOptions, EmitterVisitorContext, GeneratedFile, NgAnalyzedModules, ParseSourceSpan, Statement, StaticReflector, TypeScriptEmitter, createAotCompiler} from '@angular/compiler';\nimport * as ts from 'typescript';\n\nimport {Diagnostic, DiagnosticCategory} from '../transformers/api';\n\ninterface FactoryInfo {\n  source: ts.SourceFile;\n  context: EmitterVisitorContext;\n}\n\ntype FactoryInfoMap = Map<string, FactoryInfo>;\n\nconst stubCancellationToken: ts.CancellationToken = {\n  isCancellationRequested(): boolean{return false;},\n  throwIfCancellationRequested(): void{}\n};\n\nexport class TypeChecker {\n  private _aotCompiler: AotCompiler|undefined;\n  private _reflector: StaticReflector|undefined;\n  private _factories: Map<string, FactoryInfo>|undefined;\n  private _factoryNames: string[]|undefined;\n  private _diagnosticProgram: ts.Program|undefined;\n  private _diagnosticsByFile: Map<string, Diagnostic[]>|undefined;\n  private _currentCancellationToken: ts.CancellationToken = stubCancellationToken;\n  private _partial: boolean = false;\n\n  constructor(\n      private program: ts.Program, private tsOptions: ts.CompilerOptions,\n      private compilerHost: ts.CompilerHost, private aotCompilerHost: AotCompilerHost,\n      private aotOptions: AotCompilerOptions, private _analyzedModules?: NgAnalyzedModules,\n      private _generatedFiles?: GeneratedFile[]) {}\n\n  getDiagnostics(fileName?: string, cancellationToken?: ts.CancellationToken): Diagnostic[] {\n    this._currentCancellationToken = cancellationToken || stubCancellationToken;\n    try {\n      return fileName ?\n          this.diagnosticsByFileName.get(fileName) || [] :\n          ([] as Diagnostic[]).concat(...Array.from(this.diagnosticsByFileName.values()));\n    } finally {\n      this._currentCancellationToken = stubCancellationToken;\n    }\n  }\n\n  get partialResults(): boolean { return this._partial; }\n\n  private get analyzedModules(): NgAnalyzedModules {\n    return this._analyzedModules || (this._analyzedModules = this.aotCompiler.analyzeModulesSync(\n                                         this.program.getSourceFiles().map(sf => sf.fileName)));\n  }\n\n  private get diagnosticsByFileName(): Map<string, Diagnostic[]> {\n    return this._diagnosticsByFile || this.createDiagnosticsByFile();\n  }\n\n  private get diagnosticProgram(): ts.Program {\n    return this._diagnosticProgram || this.createDiagnosticProgram();\n  }\n\n  private get generatedFiles(): GeneratedFile[] {\n    let result = this._generatedFiles;\n    if (!result) {\n      this._generatedFiles = result = this.aotCompiler.emitAllImpls(this.analyzedModules);\n    }\n    return result;\n  }\n\n  private get aotCompiler(): AotCompiler {\n    return this._aotCompiler || this.createCompilerAndReflector();\n  }\n\n  private get reflector(): StaticReflector {\n    let result = this._reflector;\n    if (!result) {\n      this.createCompilerAndReflector();\n      result = this._reflector !;\n    }\n    return result;\n  }\n\n  private get factories(): Map<string, FactoryInfo> {\n    return this._factories || this.createFactories();\n  }\n\n  private get factoryNames(): string[] {\n    return this._factoryNames || (this.createFactories() && this._factoryNames !);\n  }\n\n  private createCompilerAndReflector() {\n    const {compiler, reflector} = createAotCompiler(this.aotCompilerHost, this.aotOptions);\n    this._reflector = reflector;\n    return this._aotCompiler = compiler;\n  }\n\n  private createDiagnosticProgram() {\n    // Create a program that is all the files from the original program plus the factories.\n    const existingFiles = this.program.getSourceFiles().map(source => source.fileName);\n    const host = new TypeCheckingHost(this.compilerHost, this.program, this.factories);\n    return this._diagnosticProgram =\n               ts.createProgram([...existingFiles, ...this.factoryNames], this.tsOptions, host);\n  }\n\n  private createFactories() {\n    // Create all the factory files with enough information to map the diagnostics reported for the\n    // created file back to the original source.\n    const emitter = new TypeScriptEmitter();\n    const factorySources =\n        this.generatedFiles.filter(file => file.stmts != null && file.stmts.length)\n            .map<[string, FactoryInfo]>(\n                file => [file.genFileUrl, createFactoryInfo(emitter, file)]);\n    this._factories = new Map(factorySources);\n    this._factoryNames = Array.from(this._factories.keys());\n    return this._factories;\n  }\n\n  private createDiagnosticsByFile() {\n    // Collect all the diagnostics binned by original source file name.\n    const result = new Map<string, Diagnostic[]>();\n    const diagnosticsFor = (fileName: string) => {\n      let r = result.get(fileName);\n      if (!r) {\n        r = [];\n        result.set(fileName, r);\n      }\n      return r;\n    };\n    const program = this.diagnosticProgram;\n    for (const factoryName of this.factoryNames) {\n      if (this._currentCancellationToken.isCancellationRequested()) return result;\n      const sourceFile = program.getSourceFile(factoryName);\n      for (const diagnostic of this.diagnosticProgram.getSemanticDiagnostics(sourceFile)) {\n        const span = this.sourceSpanOf(diagnostic.file, diagnostic.start, diagnostic.length);\n        if (span) {\n          const fileName = span.start.file.url;\n          const diagnosticsList = diagnosticsFor(fileName);\n          diagnosticsList.push({\n            message: diagnosticMessageToString(diagnostic.messageText),\n            category: diagnosticCategoryConverter(diagnostic.category), span\n          });\n        }\n      }\n    }\n    return result;\n  }\n\n  private sourceSpanOf(source: ts.SourceFile, start: number, length: number): ParseSourceSpan|null {\n    // Find the corresponding TypeScript node\n    const info = this.factories.get(source.fileName);\n    if (info) {\n      const {line, character} = ts.getLineAndCharacterOfPosition(source, start);\n      return info.context.spanOf(line, character);\n    }\n    return null;\n  }\n}\n\nfunction diagnosticMessageToString(message: ts.DiagnosticMessageChain | string): string {\n  return ts.flattenDiagnosticMessageText(message, '\\n');\n}\n\nfunction diagnosticCategoryConverter(kind: ts.DiagnosticCategory) {\n  // The diagnostics kind matches ts.DiagnosticCategory. Review this code if this changes.\n  return kind as any as DiagnosticCategory;\n}\n\nfunction createFactoryInfo(emitter: TypeScriptEmitter, file: GeneratedFile): FactoryInfo {\n  const {sourceText, context} =\n      emitter.emitStatementsAndContext(file.srcFileUrl, file.genFileUrl, file.stmts !);\n  const source = ts.createSourceFile(\n      file.genFileUrl, sourceText, ts.ScriptTarget.Latest, /* setParentNodes */ true);\n  return {source, context};\n}\n\nclass TypeCheckingHost implements ts.CompilerHost {\n  constructor(\n      private host: ts.CompilerHost, private originalProgram: ts.Program,\n      private factories: Map<string, FactoryInfo>) {}\n\n  getSourceFile(\n      fileName: string, languageVersion: ts.ScriptTarget,\n      onError?: ((message: string) => void)): ts.SourceFile {\n    const originalSource = this.originalProgram.getSourceFile(fileName);\n    if (originalSource) {\n      return originalSource;\n    }\n    const factoryInfo = this.factories.get(fileName);\n    if (factoryInfo) {\n      return factoryInfo.source;\n    }\n    return this.host.getSourceFile(fileName, languageVersion, onError);\n  }\n\n  getDefaultLibFileName(options: ts.CompilerOptions): string {\n    return this.host.getDefaultLibFileName(options);\n  }\n\n  writeFile: ts.WriteFileCallback =\n      () => { throw new Error('Unexpected write in diagnostic program'); };\n\n  getCurrentDirectory(): string { return this.host.getCurrentDirectory(); }\n\n  getDirectories(path: string): string[] { return this.host.getDirectories(path); }\n\n  getCanonicalFileName(fileName: string): string {\n    return this.host.getCanonicalFileName(fileName);\n  }\n\n  useCaseSensitiveFileNames(): boolean { return this.host.useCaseSensitiveFileNames(); }\n\n  getNewLine(): string { return this.host.getNewLine(); }\n\n  fileExists(fileName: string): boolean {\n    return this.factories.has(fileName) || this.host.fileExists(fileName);\n  }\n\n  readFile(fileName: string): string {\n    const factoryInfo = this.factories.get(fileName);\n    return (factoryInfo && factoryInfo.source.text) || this.host.readFile(fileName);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CollectorOptions, MetadataCollector, MetadataValue, ModuleMetadata} from '@angular/tsc-wrapped';\nimport * as ts from 'typescript';\n\nexport interface LoweringRequest {\n  kind: ts.SyntaxKind;\n  location: number;\n  end: number;\n  name: string;\n}\n\nexport type RequestLocationMap = Map<number, LoweringRequest>;\n\ninterface Declaration {\n  name: string;\n  node: ts.Node;\n}\n\ninterface DeclarationInsert {\n  declarations: Declaration[];\n  priorTo: ts.Node;\n}\n\nfunction toMap<T, K>(items: T[], select: (item: T) => K): Map<K, T> {\n  return new Map(items.map<[K, T]>(i => [select(i), i]));\n}\n\n// We will never lower expressions in a nested lexical scope so avoid entering them.\n// This also avoids a bug in TypeScript 2.3 where the lexical scopes get out of sync\n// when using visitEachChild.\nfunction isLexicalScope(node: ts.Node): boolean {\n  switch (node.kind) {\n    case ts.SyntaxKind.ArrowFunction:\n    case ts.SyntaxKind.FunctionExpression:\n    case ts.SyntaxKind.FunctionDeclaration:\n    case ts.SyntaxKind.ClassExpression:\n    case ts.SyntaxKind.ClassDeclaration:\n    case ts.SyntaxKind.FunctionType:\n    case ts.SyntaxKind.TypeLiteral:\n    case ts.SyntaxKind.ArrayType:\n      return true;\n  }\n  return false;\n}\n\nfunction transformSourceFile(\n    sourceFile: ts.SourceFile, requests: RequestLocationMap,\n    context: ts.TransformationContext): ts.SourceFile {\n  const inserts: DeclarationInsert[] = [];\n\n  // Calculate the range of interesting locations. The transform will only visit nodes in this\n  // range to improve the performance on large files.\n  const locations = Array.from(requests.keys());\n  const min = Math.min(...locations);\n  const max = Math.max(...locations);\n\n  // Visit nodes matching the request and synthetic nodes added by tsickle\n  function shouldVisit(pos: number, end: number): boolean {\n    return (pos <= max && end >= min) || pos == -1;\n  }\n\n  function visitSourceFile(sourceFile: ts.SourceFile): ts.SourceFile {\n    function topLevelStatement(node: ts.Node): ts.Node {\n      const declarations: Declaration[] = [];\n\n      function visitNode(node: ts.Node): ts.Node {\n        // Get the original node before tsickle\n        const {pos, end, kind} = ts.getOriginalNode(node);\n        const nodeRequest = requests.get(pos);\n        if (nodeRequest && nodeRequest.kind == kind && nodeRequest.end == end) {\n          // This node is requested to be rewritten as a reference to the exported name.\n          // Record that the node needs to be moved to an exported variable with the given name\n          const name = nodeRequest.name;\n          declarations.push({name, node});\n          return ts.createIdentifier(name);\n        }\n        let result = node;\n\n        if (shouldVisit(pos, end) && !isLexicalScope(node)) {\n          result = ts.visitEachChild(node, visitNode, context);\n        }\n        return result;\n      }\n\n      // Get the original node before tsickle\n      const {pos, end} = ts.getOriginalNode(node);\n      const result = shouldVisit(pos, end) ? ts.visitEachChild(node, visitNode, context) : node;\n\n      if (declarations.length) {\n        inserts.push({priorTo: result, declarations});\n      }\n      return result;\n    }\n\n    const traversedSource = ts.visitEachChild(sourceFile, topLevelStatement, context);\n\n    if (inserts.length) {\n      // Insert the declarations before the rewritten statement that references them.\n      const insertMap = toMap(inserts, i => i.priorTo);\n      const newStatements: ts.Statement[] = [...traversedSource.statements];\n      for (let i = newStatements.length; i >= 0; i--) {\n        const statement = newStatements[i];\n        const insert = insertMap.get(statement);\n        if (insert) {\n          const declarations = insert.declarations.map(\n              i => ts.createVariableDeclaration(\n                  i.name, /* type */ undefined, i.node as ts.Expression));\n          const statement = ts.createVariableStatement(\n              /* modifiers */ undefined,\n              ts.createVariableDeclarationList(declarations, ts.NodeFlags.Const));\n          newStatements.splice(i, 0, statement);\n        }\n      }\n\n      // Insert an exports clause to export the declarations\n      newStatements.push(ts.createExportDeclaration(\n          /* decorators */ undefined,\n          /* modifiers */ undefined,\n          ts.createNamedExports(\n              inserts\n                  .reduce(\n                      (accumulator, insert) => [...accumulator, ...insert.declarations],\n                      [] as Declaration[])\n                  .map(\n                      declaration => ts.createExportSpecifier(\n                          /* propertyName */ undefined, declaration.name)))));\n      return ts.updateSourceFileNode(traversedSource, newStatements);\n    }\n    return traversedSource;\n  }\n\n  return visitSourceFile(sourceFile);\n}\n\nexport function getExpressionLoweringTransformFactory(requestsMap: RequestsMap):\n    (context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile {\n  // Return the factory\n  return (context: ts.TransformationContext) => (sourceFile: ts.SourceFile): ts.SourceFile => {\n    const requests = requestsMap.getRequests(sourceFile);\n    if (requests && requests.size) {\n      return transformSourceFile(sourceFile, requests, context);\n    }\n    return sourceFile;\n  };\n}\n\nexport interface RequestsMap { getRequests(sourceFile: ts.SourceFile): RequestLocationMap; }\n\ninterface MetadataAndLoweringRequests {\n  metadata: ModuleMetadata|undefined;\n  requests: RequestLocationMap;\n}\n\nfunction shouldLower(node: ts.Node | undefined): boolean {\n  if (node) {\n    switch (node.kind) {\n      case ts.SyntaxKind.SourceFile:\n      case ts.SyntaxKind.Decorator:\n        // Lower expressions that are local to the module scope or\n        // in a decorator.\n        return true;\n      case ts.SyntaxKind.ClassDeclaration:\n      case ts.SyntaxKind.InterfaceDeclaration:\n      case ts.SyntaxKind.EnumDeclaration:\n      case ts.SyntaxKind.FunctionDeclaration:\n        // Don't lower expressions in a declaration.\n        return false;\n      case ts.SyntaxKind.VariableDeclaration:\n        // Avoid lowering expressions already in an exported variable declaration\n        return (ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) == 0;\n    }\n    return shouldLower(node.parent);\n  }\n  return true;\n}\n\nexport class LowerMetadataCache implements RequestsMap {\n  private collector: MetadataCollector;\n  private metadataCache = new Map<string, MetadataAndLoweringRequests>();\n\n  constructor(options: CollectorOptions, private strict?: boolean) {\n    this.collector = new MetadataCollector(options);\n  }\n\n  getMetadata(sourceFile: ts.SourceFile): ModuleMetadata|undefined {\n    return this.ensureMetadataAndRequests(sourceFile).metadata;\n  }\n\n  getRequests(sourceFile: ts.SourceFile): RequestLocationMap {\n    return this.ensureMetadataAndRequests(sourceFile).requests;\n  }\n\n  private ensureMetadataAndRequests(sourceFile: ts.SourceFile): MetadataAndLoweringRequests {\n    let result = this.metadataCache.get(sourceFile.fileName);\n    if (!result) {\n      result = this.getMetadataAndRequests(sourceFile);\n      this.metadataCache.set(sourceFile.fileName, result);\n    }\n    return result;\n  }\n\n  private getMetadataAndRequests(sourceFile: ts.SourceFile): MetadataAndLoweringRequests {\n    let identNumber = 0;\n    const freshIdent = () => '\\u0275' + identNumber++;\n    const requests = new Map<number, LoweringRequest>();\n    const replaceNode = (node: ts.Node) => {\n      const name = freshIdent();\n      requests.set(node.pos, {name, kind: node.kind, location: node.pos, end: node.end});\n      return {__symbolic: 'reference', name};\n    };\n\n    const substituteExpression = (value: MetadataValue, node: ts.Node): MetadataValue => {\n      if ((node.kind === ts.SyntaxKind.ArrowFunction ||\n           node.kind === ts.SyntaxKind.FunctionExpression) &&\n          shouldLower(node)) {\n        return replaceNode(node);\n      }\n      return value;\n    };\n\n    const metadata = this.collector.getMetadata(sourceFile, this.strict, substituteExpression);\n\n    return {metadata, requests};\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinVar, CastExpr, ClassStmt, CommaExpr, CommentStmt, CompileIdentifierMetadata, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, ExpressionStatement, ExpressionVisitor, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, NotExpr, ParseSourceSpan, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, Statement, StatementVisitor, StaticSymbol, StmtModifier, ThrowStmt, TryCatchStmt, WriteKeyExpr, WritePropExpr, WriteVarExpr} from '@angular/compiler';\nimport * as ts from 'typescript';\n\nexport interface Node { sourceSpan: ParseSourceSpan|null; }\n\nconst METHOD_THIS_NAME = 'this';\nconst CATCH_ERROR_NAME = 'error';\nconst CATCH_STACK_NAME = 'stack';\n\nexport class TypeScriptNodeEmitter {\n  updateSourceFile(sourceFile: ts.SourceFile, stmts: Statement[], preamble?: string):\n      [ts.SourceFile, Map<ts.Node, Node>] {\n    const converter = new _NodeEmitterVisitor();\n    // [].concat flattens the result so that each `visit...` method can also return an array of\n    // stmts.\n    const statements: any[] = [].concat(\n        ...stmts.map(stmt => stmt.visitStatement(converter, null)).filter(stmt => stmt != null));\n    const newSourceFile = ts.updateSourceFileNode(\n        sourceFile, [...converter.getReexports(), ...converter.getImports(), ...statements]);\n    if (preamble) {\n      if (preamble.startsWith('/*') && preamble.endsWith('*/')) {\n        preamble = preamble.substr(2, preamble.length - 4);\n      }\n      if (!statements.length) {\n        statements.push(ts.createEmptyStatement());\n      }\n      statements[0] = ts.setSyntheticLeadingComments(\n          statements[0],\n          [{kind: ts.SyntaxKind.MultiLineCommentTrivia, text: preamble, pos: -1, end: -1}]);\n    }\n    return [newSourceFile, converter.getNodeMap()];\n  }\n}\n\n// A recorded node is a subtype of the node that is marked as being recoreded. This is used\n// to ensure that NodeEmitterVisitor.record has been called on all nodes returned by the\n// NodeEmitterVisitor\ntype RecordedNode<T extends ts.Node = ts.Node> = (T & { __recorded: any; }) | null;\n\nfunction createLiteral(value: any) {\n  if (value === null) {\n    return ts.createNull();\n  } else if (value === undefined) {\n    return ts.createIdentifier('undefined');\n  } else {\n    return ts.createLiteral(value);\n  }\n}\n\n/**\n * Visits an output ast and produces the corresponding TypeScript synthetic nodes.\n */\nclass _NodeEmitterVisitor implements StatementVisitor, ExpressionVisitor {\n  private _nodeMap = new Map<ts.Node, Node>();\n  private _importsWithPrefixes = new Map<string, string>();\n  private _reexports = new Map<string, {name: string, as: string}[]>();\n\n  getReexports(): ts.Statement[] {\n    return Array.from(this._reexports.entries())\n        .map(\n            ([exportedFilePath, reexports]) => ts.createExportDeclaration(\n                /* decorators */ undefined,\n                /* modifiers */ undefined, ts.createNamedExports(reexports.map(\n                                               ({name, as}) => ts.createExportSpecifier(name, as))),\n                /* moduleSpecifier */ createLiteral(exportedFilePath)));\n  }\n\n  getImports(): ts.Statement[] {\n    return Array.from(this._importsWithPrefixes.entries())\n        .map(\n            ([namespace, prefix]) => ts.createImportDeclaration(\n                /* decorators */ undefined,\n                /* modifiers */ undefined,\n                /* importClause */ ts.createImportClause(\n                    /* name */<ts.Identifier>(undefined as any),\n                    ts.createNamespaceImport(ts.createIdentifier(prefix))),\n                /* moduleSpecifier */ createLiteral(namespace)));\n  }\n\n  getNodeMap() { return this._nodeMap; }\n\n  private record<T extends ts.Node>(ngNode: Node, tsNode: T|null): RecordedNode<T> {\n    if (tsNode && !this._nodeMap.has(tsNode)) {\n      this._nodeMap.set(tsNode, ngNode);\n      ts.forEachChild(tsNode, child => this.record(ngNode, tsNode));\n    }\n    return tsNode as RecordedNode<T>;\n  }\n\n  private getModifiers(stmt: Statement) {\n    let modifiers: ts.Modifier[] = [];\n    if (stmt.hasModifier(StmtModifier.Exported)) {\n      modifiers.push(ts.createToken(ts.SyntaxKind.ExportKeyword));\n    }\n    return modifiers;\n  }\n\n  // StatementVisitor\n  visitDeclareVarStmt(stmt: DeclareVarStmt) {\n    if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n        !stmt.type) {\n      // check for a reexport\n      const {name, moduleName} = stmt.value.value;\n      if (moduleName) {\n        let reexports = this._reexports.get(moduleName);\n        if (!reexports) {\n          reexports = [];\n          this._reexports.set(moduleName, reexports);\n        }\n        reexports.push({name: name !, as: stmt.name});\n        return null;\n      }\n    }\n\n    const varDeclList = ts.createVariableDeclarationList([ts.createVariableDeclaration(\n        ts.createIdentifier(stmt.name),\n        /* type */ undefined,\n        (stmt.value && stmt.value.visitExpression(this, null)) || undefined)]);\n\n    if (stmt.hasModifier(StmtModifier.Exported)) {\n      // Note: We need to add an explicit variable and export declaration so that\n      // the variable can be referred in the same file as well.\n      const tsVarStmt =\n          this.record(stmt, ts.createVariableStatement(/* modifiers */[], varDeclList));\n      const exportStmt = this.record(\n          stmt, ts.createExportDeclaration(\n                    /*decorators*/ undefined, /*modifiers*/ undefined,\n                    ts.createNamedExports([ts.createExportSpecifier(stmt.name, stmt.name)])));\n      return [tsVarStmt, exportStmt];\n    }\n    return this.record(stmt, ts.createVariableStatement(this.getModifiers(stmt), varDeclList));\n  }\n\n  visitDeclareFunctionStmt(stmt: DeclareFunctionStmt, context: any) {\n    return this.record(\n        stmt, ts.createFunctionDeclaration(\n                  /* decorators */ undefined, this.getModifiers(stmt),\n                  /* asteriskToken */ undefined, stmt.name, /* typeParameters */ undefined,\n                  stmt.params.map(\n                      p => ts.createParameter(\n                          /* decorators */ undefined, /* modifiers */ undefined,\n                          /* dotDotDotToken */ undefined, p.name)),\n                  /* type */ undefined, this._visitStatements(stmt.statements)));\n  }\n\n  visitExpressionStmt(stmt: ExpressionStatement) {\n    return this.record(stmt, ts.createStatement(stmt.expr.visitExpression(this, null)));\n  }\n\n  visitReturnStmt(stmt: ReturnStatement) {\n    return this.record(\n        stmt, ts.createReturn(stmt.value ? stmt.value.visitExpression(this, null) : undefined));\n  }\n\n  visitDeclareClassStmt(stmt: ClassStmt) {\n    const modifiers = this.getModifiers(stmt);\n    const fields = stmt.fields.map(\n        field => ts.createProperty(\n            /* decorators */ undefined, /* modifiers */ undefined, field.name,\n            /* questionToken */ undefined,\n            /* type */ undefined, ts.createNull()));\n    const getters = stmt.getters.map(\n        getter => ts.createGetAccessor(\n            /* decorators */ undefined, /* modifiers */ undefined, getter.name, /* parameters */[],\n            /* type */ undefined, this._visitStatements(getter.body)));\n\n    const constructor =\n        (stmt.constructorMethod && [ts.createConstructor(\n                                       /* decorators */ undefined,\n                                       /* modifiers */ undefined,\n                                       /* parameters */ stmt.constructorMethod.params.map(\n                                           p => ts.createParameter(\n                                               /* decorators */ undefined,\n                                               /* modifiers */ undefined,\n                                               /* dotDotDotToken */ undefined, p.name)),\n                                       this._visitStatements(stmt.constructorMethod.body))]) ||\n        [];\n\n    // TODO {chuckj}: Determine what should be done for a method with a null name.\n    const methods = stmt.methods.filter(method => method.name)\n                        .map(\n                            method => ts.createMethodDeclaration(\n                                /* decorators */ undefined, /* modifiers */ undefined,\n                                /* astriskToken */ undefined, method.name !/* guarded by filter */,\n                                /* questionToken */ undefined, /* typeParameters */ undefined,\n                                method.params.map(\n                                    p => ts.createParameter(\n                                        /* decorators */ undefined, /* modifiers */ undefined,\n                                        /* dotDotDotToken */ undefined, p.name)),\n                                /* type */ undefined, this._visitStatements(method.body)));\n    return this.record(\n        stmt, ts.createClassDeclaration(\n                  /* decorators */ undefined, modifiers, stmt.name, /* typeParameters*/ undefined,\n                  stmt.parent && [ts.createHeritageClause(\n                                     ts.SyntaxKind.ExtendsKeyword,\n                                     [stmt.parent.visitExpression(this, null)])] ||\n                      [],\n                  [...fields, ...getters, ...constructor, ...methods]));\n  }\n\n  visitIfStmt(stmt: IfStmt) {\n    return this.record(\n        stmt,\n        ts.createIf(\n            stmt.condition.visitExpression(this, null), this._visitStatements(stmt.trueCase),\n            stmt.falseCase && stmt.falseCase.length && this._visitStatements(stmt.falseCase) ||\n                undefined));\n  }\n\n  visitTryCatchStmt(stmt: TryCatchStmt): RecordedNode<ts.TryStatement> {\n    return this.record(\n        stmt, ts.createTry(\n                  this._visitStatements(stmt.bodyStmts),\n                  ts.createCatchClause(\n                      CATCH_ERROR_NAME, this._visitStatementsPrefix(\n                                            [ts.createVariableStatement(\n                                                /* modifiers */ undefined,\n                                                [ts.createVariableDeclaration(\n                                                    CATCH_STACK_NAME, /* type */ undefined,\n                                                    ts.createPropertyAccess(\n                                                        ts.createIdentifier(CATCH_ERROR_NAME),\n                                                        ts.createIdentifier(CATCH_STACK_NAME)))])],\n                                            stmt.catchStmts)),\n                  /* finallyBlock */ undefined));\n  }\n\n  visitThrowStmt(stmt: ThrowStmt) {\n    return this.record(stmt, ts.createThrow(stmt.error.visitExpression(this, null)));\n  }\n\n  visitCommentStmt(stmt: CommentStmt) { return null; }\n\n  // ExpressionVisitor\n  visitReadVarExpr(expr: ReadVarExpr) {\n    switch (expr.builtin) {\n      case BuiltinVar.This:\n        return this.record(expr, ts.createIdentifier(METHOD_THIS_NAME));\n      case BuiltinVar.CatchError:\n        return this.record(expr, ts.createIdentifier(CATCH_ERROR_NAME));\n      case BuiltinVar.CatchStack:\n        return this.record(expr, ts.createIdentifier(CATCH_STACK_NAME));\n      case BuiltinVar.Super:\n        return this.record(expr, ts.createSuper());\n    }\n    if (expr.name) {\n      return this.record(expr, ts.createIdentifier(expr.name));\n    }\n    throw Error(`Unexpected ReadVarExpr form`);\n  }\n\n  visitWriteVarExpr(expr: WriteVarExpr): RecordedNode<ts.BinaryExpression> {\n    return this.record(\n        expr, ts.createAssignment(\n                  ts.createIdentifier(expr.name), expr.value.visitExpression(this, null)));\n  }\n\n  visitWriteKeyExpr(expr: WriteKeyExpr): RecordedNode<ts.BinaryExpression> {\n    return this.record(\n        expr,\n        ts.createAssignment(\n            ts.createElementAccess(\n                expr.receiver.visitExpression(this, null), expr.index.visitExpression(this, null)),\n            expr.value.visitExpression(this, null)));\n  }\n\n  visitWritePropExpr(expr: WritePropExpr): RecordedNode<ts.BinaryExpression> {\n    return this.record(\n        expr, ts.createAssignment(\n                  ts.createPropertyAccess(expr.receiver.visitExpression(this, null), expr.name),\n                  expr.value.visitExpression(this, null)));\n  }\n\n  visitInvokeMethodExpr(expr: InvokeMethodExpr): RecordedNode<ts.CallExpression> {\n    const methodName = getMethodName(expr);\n    return this.record(\n        expr,\n        ts.createCall(\n            ts.createPropertyAccess(expr.receiver.visitExpression(this, null), methodName),\n            /* typeArguments */ undefined, expr.args.map(arg => arg.visitExpression(this, null))));\n  }\n\n  visitInvokeFunctionExpr(expr: InvokeFunctionExpr): RecordedNode<ts.CallExpression> {\n    return this.record(\n        expr, ts.createCall(\n                  expr.fn.visitExpression(this, null), /* typeArguments */ undefined,\n                  expr.args.map(arg => arg.visitExpression(this, null))));\n  }\n\n  visitInstantiateExpr(expr: InstantiateExpr): RecordedNode<ts.NewExpression> {\n    return this.record(\n        expr, ts.createNew(\n                  expr.classExpr.visitExpression(this, null), /* typeArguments */ undefined,\n                  expr.args.map(arg => arg.visitExpression(this, null))));\n  }\n\n  visitLiteralExpr(expr: LiteralExpr) { return this.record(expr, createLiteral(expr.value)); }\n\n  visitExternalExpr(expr: ExternalExpr) {\n    return this.record(expr, this._visitIdentifier(expr.value));\n  }\n\n  visitConditionalExpr(expr: ConditionalExpr): RecordedNode<ts.ConditionalExpression> {\n    // TODO {chuckj}: Review use of ! on flaseCase. Should it be non-nullable?\n    return this.record(\n        expr,\n        ts.createConditional(\n            expr.condition.visitExpression(this, null), expr.trueCase.visitExpression(this, null),\n            expr.falseCase !.visitExpression(this, null)));\n    ;\n  }\n\n  visitNotExpr(expr: NotExpr): RecordedNode<ts.PrefixUnaryExpression> {\n    return this.record(\n        expr, ts.createPrefix(\n                  ts.SyntaxKind.ExclamationToken, expr.condition.visitExpression(this, null)));\n  }\n\n  visitAssertNotNullExpr(expr: AssertNotNull): RecordedNode<ts.Expression> {\n    return expr.condition.visitExpression(this, null);\n  }\n\n  visitCastExpr(expr: CastExpr): RecordedNode<ts.Expression> {\n    return expr.value.visitExpression(this, null);\n  }\n\n  visitFunctionExpr(expr: FunctionExpr) {\n    return this.record(\n        expr, ts.createFunctionExpression(\n                  /* modifiers */ undefined, /* astriskToken */ undefined, /* name */ undefined,\n                  /* typeParameters */ undefined,\n                  expr.params.map(\n                      p => ts.createParameter(\n                          /* decorators */ undefined, /* modifiers */ undefined,\n                          /* dotDotDotToken */ undefined, p.name)),\n                  /* type */ undefined, this._visitStatements(expr.statements)));\n  }\n\n  visitBinaryOperatorExpr(expr: BinaryOperatorExpr): RecordedNode<ts.BinaryExpression> {\n    let binaryOperator: ts.BinaryOperator;\n    switch (expr.operator) {\n      case BinaryOperator.And:\n        binaryOperator = ts.SyntaxKind.AmpersandAmpersandToken;\n        break;\n      case BinaryOperator.Bigger:\n        binaryOperator = ts.SyntaxKind.GreaterThanToken;\n        break;\n      case BinaryOperator.BiggerEquals:\n        binaryOperator = ts.SyntaxKind.GreaterThanEqualsToken;\n        break;\n      case BinaryOperator.Divide:\n        binaryOperator = ts.SyntaxKind.SlashToken;\n        break;\n      case BinaryOperator.Equals:\n        binaryOperator = ts.SyntaxKind.EqualsEqualsToken;\n        break;\n      case BinaryOperator.Identical:\n        binaryOperator = ts.SyntaxKind.EqualsEqualsEqualsToken;\n        break;\n      case BinaryOperator.Lower:\n        binaryOperator = ts.SyntaxKind.LessThanToken;\n        break;\n      case BinaryOperator.LowerEquals:\n        binaryOperator = ts.SyntaxKind.LessThanEqualsToken;\n        break;\n      case BinaryOperator.Minus:\n        binaryOperator = ts.SyntaxKind.MinusToken;\n        break;\n      case BinaryOperator.Modulo:\n        binaryOperator = ts.SyntaxKind.PercentToken;\n        break;\n      case BinaryOperator.Multiply:\n        binaryOperator = ts.SyntaxKind.AsteriskToken;\n        break;\n      case BinaryOperator.NotEquals:\n        binaryOperator = ts.SyntaxKind.ExclamationEqualsToken;\n        break;\n      case BinaryOperator.NotIdentical:\n        binaryOperator = ts.SyntaxKind.ExclamationEqualsEqualsToken;\n        break;\n      case BinaryOperator.Or:\n        binaryOperator = ts.SyntaxKind.BarBarToken;\n        break;\n      case BinaryOperator.Plus:\n        binaryOperator = ts.SyntaxKind.PlusToken;\n        break;\n      default:\n        throw new Error(`Unknown operator: ${expr.operator}`);\n    }\n    return this.record(\n        expr, ts.createBinary(\n                  expr.lhs.visitExpression(this, null), binaryOperator,\n                  expr.rhs.visitExpression(this, null)));\n  }\n\n  visitReadPropExpr(expr: ReadPropExpr): RecordedNode<ts.PropertyAccessExpression> {\n    return this.record(\n        expr, ts.createPropertyAccess(expr.receiver.visitExpression(this, null), expr.name));\n  }\n\n  visitReadKeyExpr(expr: ReadKeyExpr): RecordedNode<ts.ElementAccessExpression> {\n    return this.record(\n        expr,\n        ts.createElementAccess(\n            expr.receiver.visitExpression(this, null), expr.index.visitExpression(this, null)));\n  }\n\n  visitLiteralArrayExpr(expr: LiteralArrayExpr): RecordedNode<ts.ArrayLiteralExpression> {\n    return this.record(\n        expr, ts.createArrayLiteral(expr.entries.map(entry => entry.visitExpression(this, null))));\n  }\n\n  visitLiteralMapExpr(expr: LiteralMapExpr): RecordedNode<ts.ObjectLiteralExpression> {\n    return this.record(\n        expr, ts.createObjectLiteral(expr.entries.map(\n                  entry => ts.createPropertyAssignment(\n                      entry.quoted ? ts.createLiteral(entry.key) : entry.key,\n                      entry.value.visitExpression(this, null)))));\n  }\n\n  visitCommaExpr(expr: CommaExpr): RecordedNode<ts.Expression> {\n    return this.record(\n        expr, expr.parts.map(e => e.visitExpression(this, null))\n                  .reduce<ts.Expression|null>(\n                      (left, right) =>\n                          left ? ts.createBinary(left, ts.SyntaxKind.CommaToken, right) : right,\n                      null));\n  }\n\n  private _visitStatements(statements: Statement[]): ts.Block {\n    return this._visitStatementsPrefix([], statements);\n  }\n\n  private _visitStatementsPrefix(prefix: ts.Statement[], statements: Statement[]) {\n    return ts.createBlock([\n      ...prefix, ...statements.map(stmt => stmt.visitStatement(this, null)).filter(f => f != null)\n    ]);\n  }\n\n  private _visitIdentifier(value: ExternalReference): ts.Expression {\n    const {name, moduleName} = value;\n    let prefixIdent: ts.Identifier|null = null;\n    if (moduleName) {\n      let prefix = this._importsWithPrefixes.get(moduleName);\n      if (prefix == null) {\n        prefix = `i${this._importsWithPrefixes.size}`;\n        this._importsWithPrefixes.set(moduleName, prefix);\n      }\n      prefixIdent = ts.createIdentifier(prefix);\n    }\n    // name can only be null during JIT which never executes this code.\n    let result: ts.Expression =\n        prefixIdent ? ts.createPropertyAccess(prefixIdent, name !) : ts.createIdentifier(name !);\n    return result;\n  }\n}\n\n\nfunction getMethodName(methodRef: {name: string | null; builtin: BuiltinMethod | null}): string {\n  if (methodRef.name) {\n    return methodRef.name;\n  } else {\n    switch (methodRef.builtin) {\n      case BuiltinMethod.Bind:\n        return 'bind';\n      case BuiltinMethod.ConcatArray:\n        return 'concat';\n      case BuiltinMethod.SubscribeObservable:\n        return 'subscribe';\n    }\n  }\n  throw new Error('Unexpected method reference form');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GeneratedFile} from '@angular/compiler';\nimport * as ts from 'typescript';\n\nimport {TypeScriptNodeEmitter} from './node_emitter';\n\nexport function getAngularEmitterTransformFactory(generatedFiles: GeneratedFile[]): () =>\n    (sourceFile: ts.SourceFile) => ts.SourceFile {\n  return function() {\n    const map = new Map(generatedFiles.filter(g => g.stmts && g.stmts.length)\n                            .map<[string, GeneratedFile]>(g => [g.genFileUrl, g]));\n    const emitter = new TypeScriptNodeEmitter();\n    return function(sourceFile: ts.SourceFile): ts.SourceFile {\n      const g = map.get(sourceFile.fileName);\n      if (g && g.stmts) {\n        const [newSourceFile] = emitter.updateSourceFile(sourceFile, g.stmts);\n        return newSourceFile;\n      }\n      return sourceFile;\n    };\n  };\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AotCompiler, AotCompilerOptions, GeneratedFile, NgAnalyzedModules, createAotCompiler, getParseErrors, isSyntaxError, toTypeScript} from '@angular/compiler';\nimport {MissingTranslationStrategy} from '@angular/core';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as tsickle from 'tsickle';\nimport * as ts from 'typescript';\n\nimport {CompilerHost as AotCompilerHost} from '../compiler_host';\nimport {TypeChecker} from '../diagnostics/check_types';\n\nimport {CompilerHost, CompilerOptions, Diagnostic, DiagnosticCategory, EmitFlags, EmitResult, Program} from './api';\nimport {LowerMetadataCache, getExpressionLoweringTransformFactory} from './lower_expressions';\nimport {getAngularEmitterTransformFactory} from './node_emitter_transform';\n\nconst GENERATED_FILES = /\\.ngfactory\\.js$|\\.ngstyle\\.js$|\\.ngsummary\\.js$/;\n\nconst SUMMARY_JSON_FILES = /\\.ngsummary.json$/;\n\nconst emptyModules: NgAnalyzedModules = {\n  ngModules: [],\n  ngModuleByPipeOrDirective: new Map(),\n  files: []\n};\n\nclass AngularCompilerProgram implements Program {\n  // Initialized in the constructor\n  private oldTsProgram: ts.Program|undefined;\n  private tsProgram: ts.Program;\n  private aotCompilerHost: AotCompilerHost;\n  private compiler: AotCompiler;\n  private srcNames: string[];\n  private metadataCache: LowerMetadataCache;\n  // Lazily initialized fields\n  private _analyzedModules: NgAnalyzedModules|undefined;\n  private _structuralDiagnostics: Diagnostic[] = [];\n  private _stubs: GeneratedFile[]|undefined;\n  private _stubFiles: string[]|undefined;\n  private _programWithStubsHost: ts.CompilerHost|undefined;\n  private _programWithStubs: ts.Program|undefined;\n  private _generatedFiles: GeneratedFile[]|undefined;\n  private _generatedFileDiagnostics: Diagnostic[]|undefined;\n  private _typeChecker: TypeChecker|undefined;\n  private _semanticDiagnostics: Diagnostic[]|undefined;\n\n  constructor(\n      private rootNames: string[], private options: CompilerOptions, private host: CompilerHost,\n      private oldProgram?: Program) {\n    this.oldTsProgram = oldProgram ? oldProgram.getTsProgram() : undefined;\n    this.tsProgram = ts.createProgram(rootNames, options, host, this.oldTsProgram);\n    this.srcNames =\n        this.tsProgram.getSourceFiles()\n            .map(sf => sf.fileName)\n            .filter(f => !f.match(/\\.ngfactory\\.[\\w.]+$|\\.ngstyle\\.[\\w.]+$|\\.ngsummary\\.[\\w.]+$/));\n    this.metadataCache = new LowerMetadataCache({quotedNames: true}, !!options.strictMetadataEmit);\n    this.aotCompilerHost = new AotCompilerHost(\n        this.tsProgram, options, host, /* collectorOptions */ undefined, this.metadataCache);\n    if (host.readResource) {\n      this.aotCompilerHost.loadResource = host.readResource.bind(host);\n    }\n\n    const aotOptions = getAotCompilerOptions(options);\n    this.compiler = createAotCompiler(this.aotCompilerHost, aotOptions).compiler;\n  }\n\n  // Program implementation\n  getTsProgram(): ts.Program { return this.programWithStubs; }\n\n  getTsOptionDiagnostics(cancellationToken?: ts.CancellationToken) {\n    return this.tsProgram.getOptionsDiagnostics(cancellationToken);\n  }\n\n  getNgOptionDiagnostics(cancellationToken?: ts.CancellationToken): Diagnostic[] {\n    return getNgOptionDiagnostics(this.options);\n  }\n\n  getTsSyntacticDiagnostics(sourceFile?: ts.SourceFile, cancellationToken?: ts.CancellationToken):\n      ts.Diagnostic[] {\n    return this.tsProgram.getSyntacticDiagnostics(sourceFile, cancellationToken);\n  }\n\n  getNgStructuralDiagnostics(cancellationToken?: ts.CancellationToken): Diagnostic[] {\n    return this.structuralDiagnostics;\n  }\n\n  getTsSemanticDiagnostics(sourceFile?: ts.SourceFile, cancellationToken?: ts.CancellationToken):\n      ts.Diagnostic[] {\n    return this.programWithStubs.getSemanticDiagnostics(sourceFile, cancellationToken);\n  }\n\n  getNgSemanticDiagnostics(fileName?: string, cancellationToken?: ts.CancellationToken):\n      Diagnostic[] {\n    const compilerDiagnostics = this.generatedFileDiagnostics;\n\n    // If we have diagnostics during the parser phase the type check phase is not meaningful so skip\n    // it.\n    if (compilerDiagnostics && compilerDiagnostics.length) return compilerDiagnostics;\n\n    return this.typeChecker.getDiagnostics(fileName, cancellationToken);\n  }\n\n  loadNgStructureAsync(): Promise<void> {\n    return this.compiler.analyzeModulesAsync(this.rootNames)\n        .catch(this.catchAnalysisError.bind(this))\n        .then(analyzedModules => {\n          if (this._analyzedModules) {\n            throw new Error('Angular structure loaded both synchronously and asynchronsly');\n          }\n          this._analyzedModules = analyzedModules;\n        });\n  }\n\n  getLazyRoutes(cancellationToken?: ts.CancellationToken): {[route: string]: string} { return {}; }\n\n  emit({emitFlags = EmitFlags.Default, cancellationToken}:\n           {emitFlags?: EmitFlags, cancellationToken?: ts.CancellationToken}): EmitResult {\n    const emitMap = new Map<string, string>();\n\n    const tsickleCompilerHostOptions: tsickle.TransformerOptions = {\n      googmodule: false,\n      untyped: true,\n      convertIndexImportShorthand: true,\n      transformDecorators: this.options.annotationsAs !== 'decorators',\n      transformTypesToClosure: this.options.annotateForClosureCompiler,\n    };\n\n    const tsickleHost: tsickle.TransformerHost = {\n      shouldSkipTsickleProcessing: (fileName) => /\\.d\\.ts$/.test(fileName),\n      pathToModuleName: (context, importPath) => '',\n      shouldIgnoreWarningsForPath: (filePath) => false,\n      fileNameToModuleId: (fileName) => fileName,\n    };\n\n    const expectedOut = this.options.expectedOut ?\n        this.options.expectedOut.map(f => path.resolve(process.cwd(), f)) :\n        undefined;\n\n    const result = tsickle.emitWithTsickle(\n        this.programWithStubs, tsickleHost, tsickleCompilerHostOptions, this.host, this.options,\n        /* targetSourceFile */ undefined,\n        createWriteFileCallback(emitFlags, this.host, this.metadataCache, emitMap, expectedOut),\n        cancellationToken, (emitFlags & (EmitFlags.DTS | EmitFlags.JS)) == EmitFlags.DTS,\n        this.calculateTransforms());\n\n    this.generatedFiles.forEach(file => {\n      // In order not to replicate the TS calculation of the out folder for files\n      // derive the out location for .json files from the out location of the .ts files\n      if (file.source && file.source.length && SUMMARY_JSON_FILES.test(file.genFileUrl)) {\n        // If we have emitted the ngsummary.ts file, ensure the ngsummary.json file is emitted to\n        // the same location.\n\n        const emittedFile = emitMap.get(file.srcFileUrl);\n\n        if (emittedFile) {\n          const fileName = path.join(path.dirname(emittedFile), path.basename(file.genFileUrl));\n          this.host.writeFile(fileName, file.source, false, error => {});\n        }\n      }\n    });\n\n    // Ensure that expected output files exist.\n    for (const out of expectedOut || []) {\n      fs.appendFileSync(out, '', 'utf8');\n    }\n\n    return result;\n  }\n\n  // Private members\n  private get analyzedModules(): NgAnalyzedModules {\n    return this._analyzedModules || (this._analyzedModules = this.analyzeModules());\n  }\n\n  private get structuralDiagnostics(): Diagnostic[] {\n    return this.analyzedModules && this._structuralDiagnostics;\n  }\n\n  private get stubs(): GeneratedFile[] {\n    return this._stubs || (this._stubs = this.generateStubs());\n  }\n\n  private get stubFiles(): string[] {\n    return this._stubFiles ||\n        (this._stubFiles = this.stubs.reduce((files: string[], generatedFile) => {\n             if (generatedFile.source || (generatedFile.stmts && generatedFile.stmts.length)) {\n               return [...files, generatedFile.genFileUrl];\n             }\n             return files;\n           }, []));\n  }\n\n  private get programWithStubsHost(): ts.CompilerHost {\n    return this._programWithStubsHost || (this._programWithStubsHost = createProgramWithStubsHost(\n                                              this.stubs, this.tsProgram, this.host));\n  }\n\n  private get programWithStubs(): ts.Program {\n    return this._programWithStubs || (this._programWithStubs = this.createProgramWithStubs());\n  }\n\n  private get generatedFiles(): GeneratedFile[] {\n    return this._generatedFiles || (this._generatedFiles = this.generateFiles());\n  }\n\n  private get typeChecker(): TypeChecker {\n    return (this._typeChecker && !this._typeChecker.partialResults) ?\n        this._typeChecker :\n        (this._typeChecker = this.createTypeChecker());\n  }\n\n  private get generatedFileDiagnostics(): Diagnostic[]|undefined {\n    return this.generatedFiles && this._generatedFileDiagnostics !;\n  }\n\n  private calculateTransforms(): tsickle.EmitTransformers {\n    const beforeTs: ts.TransformerFactory<ts.SourceFile>[] = [];\n    if (!this.options.disableExpressionLowering) {\n      beforeTs.push(getExpressionLoweringTransformFactory(this.metadataCache));\n    }\n    if (!this.options.skipTemplateCodegen) {\n      beforeTs.push(getAngularEmitterTransformFactory(this.generatedFiles));\n    }\n    return {beforeTs};\n  }\n\n  private catchAnalysisError(e: any): NgAnalyzedModules {\n    if (isSyntaxError(e)) {\n      const parserErrors = getParseErrors(e);\n      if (parserErrors && parserErrors.length) {\n        this._structuralDiagnostics =\n            parserErrors.map<Diagnostic>(e => ({\n                                           message: e.contextualMessage(),\n                                           category: DiagnosticCategory.Error,\n                                           span: e.span\n                                         }));\n      } else {\n        this._structuralDiagnostics = [{message: e.message, category: DiagnosticCategory.Error}];\n      }\n      this._analyzedModules = emptyModules;\n      return emptyModules;\n    }\n    throw e;\n  }\n\n  private analyzeModules() {\n    try {\n      return this.compiler.analyzeModulesSync(this.srcNames);\n    } catch (e) {\n      return this.catchAnalysisError(e);\n    }\n  }\n\n  private generateStubs() {\n    return this.options.skipTemplateCodegen ? [] :\n                                              this.options.generateCodeForLibraries === false ?\n                                              this.compiler.emitPartialStubs(this.analyzedModules) :\n                                              this.compiler.emitAllStubs(this.analyzedModules);\n  }\n\n  private generateFiles() {\n    try {\n      // Always generate the files if requested to ensure we capture any diagnostic errors but only\n      // keep the results if we are not skipping template code generation.\n      const result = this.compiler.emitAllImpls(this.analyzedModules);\n      return this.options.skipTemplateCodegen ? [] : result;\n    } catch (e) {\n      if (isSyntaxError(e)) {\n        this._generatedFileDiagnostics = [{message: e.message, category: DiagnosticCategory.Error}];\n        return [];\n      }\n      throw e;\n    }\n  }\n\n  private createTypeChecker(): TypeChecker {\n    return new TypeChecker(\n        this.tsProgram, this.options, this.host, this.aotCompilerHost, this.options,\n        this.analyzedModules, this.generatedFiles);\n  }\n\n  private createProgramWithStubs(): ts.Program {\n    // If we are skipping code generation just use the original program.\n    // Otherwise, create a new program that includes the stub files.\n    return this.options.skipTemplateCodegen ?\n        this.tsProgram :\n        ts.createProgram(\n            [...this.rootNames, ...this.stubFiles], this.options, this.programWithStubsHost);\n  }\n}\n\nexport function createProgram(\n    {rootNames, options, host, oldProgram}:\n        {rootNames: string[], options: CompilerOptions, host: CompilerHost, oldProgram?: Program}):\n    Program {\n  return new AngularCompilerProgram(rootNames, options, host, oldProgram);\n}\n\n// Compute the AotCompiler options\nfunction getAotCompilerOptions(options: CompilerOptions): AotCompilerOptions {\n  let missingTranslation = MissingTranslationStrategy.Warning;\n\n  switch (options.i18nInMissingTranslations) {\n    case 'ignore':\n      missingTranslation = MissingTranslationStrategy.Ignore;\n      break;\n    case 'error':\n      missingTranslation = MissingTranslationStrategy.Error;\n      break;\n  }\n\n  let translations: string = '';\n\n  if (options.i18nInFile) {\n    if (!options.locale) {\n      throw new Error(`The translation file (${options.i18nInFile}) locale must be provided.`);\n    }\n    translations = fs.readFileSync(options.i18nInFile, 'utf8');\n  } else {\n    // No translations are provided, ignore any errors\n    // We still go through i18n to remove i18n attributes\n    missingTranslation = MissingTranslationStrategy.Ignore;\n  }\n\n  return {\n    locale: options.i18nInLocale,\n    i18nFormat: options.i18nInFormat || options.i18nOutFormat, translations, missingTranslation,\n    enableLegacyTemplate: options.enableLegacyTemplate,\n    enableSummariesForJit: true,\n  };\n}\n\nfunction writeMetadata(\n    emitFilePath: string, sourceFile: ts.SourceFile, metadataCache: LowerMetadataCache) {\n  if (/\\.js$/.test(emitFilePath)) {\n    const path = emitFilePath.replace(/\\.js$/, '.metadata.json');\n\n    // Beginning with 2.1, TypeScript transforms the source tree before emitting it.\n    // We need the original, unmodified, tree which might be several levels back\n    // depending on the number of transforms performed. All SourceFile's prior to 2.1\n    // will appear to be the original source since they didn't include an original field.\n    let collectableFile = sourceFile;\n    while ((collectableFile as any).original) {\n      collectableFile = (collectableFile as any).original;\n    }\n\n    const metadata = metadataCache.getMetadata(collectableFile);\n    if (metadata) {\n      const metadataText = JSON.stringify([metadata]);\n      fs.writeFileSync(path, metadataText, {encoding: 'utf-8'});\n    }\n  }\n}\n\nfunction createWriteFileCallback(\n    emitFlags: EmitFlags, host: ts.CompilerHost, metadataCache: LowerMetadataCache,\n    emitMap: Map<string, string>, expectedOut?: string[]) {\n  return (fileName: string, data: string, writeByteOrderMark: boolean,\n          onError?: (message: string) => void, sourceFiles?: ts.SourceFile[]) => {\n\n    let srcFile: ts.SourceFile|undefined;\n\n    if (sourceFiles && sourceFiles.length == 1) {\n      srcFile = sourceFiles[0];\n      emitMap.set(srcFile.fileName, fileName);\n    }\n\n    const absFile = path.resolve(process.cwd(), fileName);\n    const generatedFile = GENERATED_FILES.test(fileName);\n\n    // Don't emit unexpected files nor empty generated files\n    if ((!expectedOut || expectedOut.indexOf(absFile) > -1) && (!generatedFile || data)) {\n      host.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n\n      if (srcFile && !generatedFile && (emitFlags & EmitFlags.Metadata) != 0) {\n        writeMetadata(fileName, srcFile, metadataCache);\n      }\n    }\n  };\n}\n\nfunction getNgOptionDiagnostics(options: CompilerOptions): Diagnostic[] {\n  if (options.annotationsAs) {\n    switch (options.annotationsAs) {\n      case 'decorators':\n      case 'static fields':\n        break;\n      default:\n        return [{\n          message:\n              'Angular compiler options \"annotationsAs\" only supports \"static fields\" and \"decorators\"',\n          category: DiagnosticCategory.Error\n        }];\n    }\n  }\n  return [];\n}\n\nfunction createProgramWithStubsHost(\n    generatedFiles: GeneratedFile[], originalProgram: ts.Program,\n    originalHost: ts.CompilerHost): ts.CompilerHost {\n  interface FileData {\n    g: GeneratedFile;\n    s?: ts.SourceFile;\n  }\n  return new class implements ts.CompilerHost {\n    private generatedFiles: Map<string, FileData>;\n    writeFile: ts.WriteFileCallback;\n    getCancellationToken: () => ts.CancellationToken;\n    getDefaultLibLocation: () => string;\n    trace: (s: string) => void;\n    getDirectories: (path: string) => string[];\n    directoryExists: (directoryName: string) => boolean;\n    constructor() {\n      this.generatedFiles =\n          new Map(generatedFiles.filter(g => g.source || (g.stmts && g.stmts.length))\n                      .map<[string, FileData]>(g => [g.genFileUrl, {g}]));\n      this.writeFile = originalHost.writeFile;\n      if (originalHost.getDirectories) {\n        this.getDirectories = path => originalHost.getDirectories !(path);\n      }\n      if (originalHost.directoryExists) {\n        this.directoryExists = directoryName => originalHost.directoryExists !(directoryName);\n      }\n      if (originalHost.getCancellationToken) {\n        this.getCancellationToken = () => originalHost.getCancellationToken !();\n      }\n      if (originalHost.getDefaultLibLocation) {\n        this.getDefaultLibLocation = () => originalHost.getDefaultLibLocation !();\n      }\n      if (originalHost.trace) {\n        this.trace = s => originalHost.trace !(s);\n      }\n    }\n    getSourceFile(\n        fileName: string, languageVersion: ts.ScriptTarget,\n        onError?: ((message: string) => void)|undefined): ts.SourceFile {\n      const data = this.generatedFiles.get(fileName);\n      if (data) {\n        return data.s || (data.s = ts.createSourceFile(\n                              fileName, data.g.source || toTypeScript(data.g), languageVersion));\n      }\n      return originalProgram.getSourceFile(fileName) ||\n          originalHost.getSourceFile(fileName, languageVersion, onError);\n    }\n    readFile(fileName: string): string {\n      const data = this.generatedFiles.get(fileName);\n      if (data) {\n        return data.g.source || toTypeScript(data.g);\n      }\n      return originalHost.readFile(fileName);\n    }\n    getDefaultLibFileName = (options: ts.CompilerOptions) =>\n        originalHost.getDefaultLibFileName(options);\n    getCurrentDirectory = () => originalHost.getCurrentDirectory();\n    getCanonicalFileName = (fileName: string) => originalHost.getCanonicalFileName(fileName);\n    useCaseSensitiveFileNames = () => originalHost.useCaseSensitiveFileNames();\n    getNewLine = () => originalHost.getNewLine();\n    realPath = (p: string) => p;\n    fileExists = (fileName: string) =>\n        this.generatedFiles.has(fileName) || originalHost.fileExists(fileName);\n  };\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {CompilerHost, CompilerOptions, Program} from './api';\nimport {createModuleFilenameResolver} from './module_filename_resolver';\nexport {createProgram} from './program';\nexport {createModuleFilenameResolver};\n\nexport function createHost({tsHost, options}: {tsHost: ts.CompilerHost, options: CompilerOptions}):\n    CompilerHost {\n  const resolver = createModuleFilenameResolver(tsHost, options);\n\n  const host = Object.create(tsHost);\n\n  host.moduleNameToFileName = resolver.moduleNameToFileName.bind(resolver);\n  host.fileNameToModuleName = resolver.fileNameToModuleName.bind(resolver);\n  host.getNgCanonicalFileName = resolver.getNgCanonicalFileName.bind(resolver);\n  host.assumeFileExists = resolver.assumeFileExists.bind(resolver);\n\n  // Make sure we do not `host.realpath()` from TS as we do not want to resolve symlinks.\n  // https://github.com/Microsoft/TypeScript/issues/9552\n  host.realpath = (fileName: string) => fileName;\n\n  return host;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isSyntaxError, syntaxError} from '@angular/compiler';\nimport {createBundleIndexHost} from '@angular/tsc-wrapped';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport * as api from './transformers/api';\nimport * as ng from './transformers/entry_points';\n\nconst TS_EXT = /\\.ts$/;\n\nexport type Diagnostics = ts.Diagnostic[] | api.Diagnostic[];\n\nfunction isTsDiagnostics(diagnostics: any): diagnostics is ts.Diagnostic[] {\n  return diagnostics && diagnostics[0] && (diagnostics[0].file || diagnostics[0].messageText);\n}\n\nfunction formatDiagnostics(cwd: string, diags: Diagnostics): string {\n  if (diags && diags.length) {\n    if (isTsDiagnostics(diags)) {\n      return ts.formatDiagnostics(diags, {\n        getCurrentDirectory: () => cwd,\n        getCanonicalFileName: fileName => fileName,\n        getNewLine: () => ts.sys.newLine\n      });\n    } else {\n      return diags\n          .map(d => {\n            let res = api.DiagnosticCategory[d.category];\n            if (d.span) {\n              res +=\n                  ` at ${d.span.start.file.url}(${d.span.start.line + 1},${d.span.start.col + 1})`;\n            }\n            if (d.span && d.span.details) {\n              res += `: ${d.span.details}, ${d.message}\\n`;\n            } else {\n              res += `: ${d.message}\\n`;\n            }\n            return res;\n          })\n          .join();\n    }\n  } else\n    return '';\n}\n\n/**\n * Throw a syntax error exception with a message formatted for output\n * if the args parameter contains diagnostics errors.\n *\n * @param cwd   The directory to report error as relative to.\n * @param args  A list of potentially empty diagnostic errors.\n */\nexport function throwOnDiagnostics(cwd: string, ...args: Diagnostics[]) {\n  if (args.some(diags => !!(diags && diags[0]))) {\n    throw syntaxError(args.map(diags => {\n                            if (diags && diags[0]) {\n                              return formatDiagnostics(cwd, diags);\n                            }\n                          })\n                          .filter(message => !!message)\n                          .join(''));\n  }\n}\n\nexport function readConfiguration(\n    project: string, basePath: string,\n    checkFunc: (cwd: string, ...args: any[]) => void = throwOnDiagnostics,\n    existingOptions?: ts.CompilerOptions) {\n  // Allow a directory containing tsconfig.json as the project value\n  // Note, TS@next returns an empty array, while earlier versions throw\n  const projectFile =\n      fs.lstatSync(project).isDirectory() ? path.join(project, 'tsconfig.json') : project;\n  let {config, error} = ts.readConfigFile(projectFile, ts.sys.readFile);\n\n  if (error) checkFunc(basePath, [error]);\n  const parseConfigHost = {\n    useCaseSensitiveFileNames: true,\n    fileExists: fs.existsSync,\n    readDirectory: ts.sys.readDirectory,\n    readFile: ts.sys.readFile\n  };\n  const parsed = ts.parseJsonConfigFileContent(config, parseConfigHost, basePath, existingOptions);\n\n  checkFunc(basePath, parsed.errors);\n\n  // Default codegen goes to the current directory\n  // Parsed options are already converted to absolute paths\n  const ngOptions = config.angularCompilerOptions || {};\n  // Ignore the genDir option\n  ngOptions.genDir = basePath;\n\n  return {parsed, ngOptions};\n}\n\n/**\n * Returns an object with two properties:\n * - `errorCode` is 0 when the compilation was successful,\n * - `result` is an `EmitResult` when the errorCode is 0, `undefined` otherwise.\n */\nexport function performCompilation(\n    basePath: string, files: string[], options: ts.CompilerOptions, ngOptions: api.CompilerOptions,\n    consoleError: (s: string) => void = console.error,\n    checkFunc: (cwd: string, ...args: any[]) => void = throwOnDiagnostics,\n    tsCompilerHost?: ts.CompilerHost): {errorCode: number, result?: api.EmitResult} {\n  const [major, minor] = ts.version.split('.');\n\n  if (+major < 2 || (+major === 2 && +minor < 3)) {\n    throw new Error('Must use TypeScript > 2.3 to have transformer support');\n  }\n\n  try {\n    ngOptions.basePath = basePath;\n    ngOptions.genDir = basePath;\n\n    let host = tsCompilerHost || ts.createCompilerHost(options, true);\n    host.realpath = p => p;\n\n    const rootFileNames = files.map(f => path.normalize(f));\n\n    const addGeneratedFileName = (fileName: string) => {\n      if (fileName.startsWith(basePath) && TS_EXT.exec(fileName)) {\n        rootFileNames.push(fileName);\n      }\n    };\n\n    if (ngOptions.flatModuleOutFile && !ngOptions.skipMetadataEmit) {\n      const {host: bundleHost, indexName, errors} =\n          createBundleIndexHost(ngOptions, rootFileNames, host);\n      if (errors) checkFunc(basePath, errors);\n      if (indexName) addGeneratedFileName(indexName);\n      host = bundleHost;\n    }\n\n    const ngHostOptions = {...options, ...ngOptions};\n    const ngHost = ng.createHost({tsHost: host, options: ngHostOptions});\n\n    const ngProgram =\n        ng.createProgram({rootNames: rootFileNames, host: ngHost, options: ngHostOptions});\n\n    // Check parameter diagnostics\n    checkFunc(basePath, ngProgram.getTsOptionDiagnostics(), ngProgram.getNgOptionDiagnostics());\n\n    // Check syntactic diagnostics\n    checkFunc(basePath, ngProgram.getTsSyntacticDiagnostics());\n\n    // Check TypeScript semantic and Angular structure diagnostics\n    checkFunc(\n        basePath, ngProgram.getTsSemanticDiagnostics(), ngProgram.getNgStructuralDiagnostics());\n\n    // Check Angular semantic diagnostics\n    checkFunc(basePath, ngProgram.getNgSemanticDiagnostics());\n\n    const result = ngProgram.emit({\n      emitFlags: api.EmitFlags.Default |\n          ((ngOptions.skipMetadataEmit || ngOptions.flatModuleOutFile) ? 0 : api.EmitFlags.Metadata)\n    });\n\n    checkFunc(basePath, result.diagnostics);\n\n    return {errorCode: 0, result};\n  } catch (e) {\n    if (isSyntaxError(e)) {\n      consoleError(e.message);\n      return {errorCode: 1};\n    }\n\n    throw e;\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This is a private API for the ngtools toolkit.\n *\n * This API should be stable for NG 2. It can be removed in NG 4..., but should be replaced by\n * something else.\n */\nimport {AotCompilerHost, StaticReflector, StaticSymbol} from '@angular/compiler';\nimport {NgModule} from '@angular/core';\n\n// We cannot depend directly to @angular/router.\ntype Route = any;\nconst ROUTER_MODULE_PATH = '@angular/router';\nconst ROUTER_ROUTES_SYMBOL_NAME = 'ROUTES';\n\n\n// LazyRoute information between the extractors.\nexport interface LazyRoute {\n  routeDef: RouteDef;\n  absoluteFilePath: string;\n}\nexport type LazyRouteMap = {\n  [route: string]: LazyRoute\n};\n\n// A route definition. Normally the short form 'path/to/module#ModuleClassName' is used by\n// the user, and this is a helper class to extract information from it.\nexport class RouteDef {\n  private constructor(public readonly path: string, public readonly className: string|null = null) {\n  }\n\n  toString() {\n    return (this.className === null || this.className == 'default') ?\n        this.path :\n        `${this.path}#${this.className}`;\n  }\n\n  static fromString(entry: string): RouteDef {\n    const split = entry.split('#');\n    return new RouteDef(split[0], split[1] || null);\n  }\n}\n\n\nexport function listLazyRoutesOfModule(\n    entryModule: string, host: AotCompilerHost, reflector: StaticReflector): LazyRouteMap {\n  const entryRouteDef = RouteDef.fromString(entryModule);\n  const containingFile = _resolveModule(entryRouteDef.path, entryRouteDef.path, host);\n  const modulePath = `./${containingFile.replace(/^(.*)\\//, '')}`;\n  const className = entryRouteDef.className !;\n\n  // List loadChildren of this single module.\n  const appStaticSymbol = reflector.findDeclaration(modulePath, className, containingFile);\n  const ROUTES = reflector.findDeclaration(ROUTER_MODULE_PATH, ROUTER_ROUTES_SYMBOL_NAME);\n  const lazyRoutes: LazyRoute[] =\n      _extractLazyRoutesFromStaticModule(appStaticSymbol, reflector, host, ROUTES);\n\n  const allLazyRoutes = lazyRoutes.reduce(\n      function includeLazyRouteAndSubRoutes(allRoutes: LazyRouteMap, lazyRoute: LazyRoute):\n          LazyRouteMap {\n            const route: string = lazyRoute.routeDef.toString();\n            _assertRoute(allRoutes, lazyRoute);\n            allRoutes[route] = lazyRoute;\n\n            // StaticReflector does not support discovering annotations like `NgModule` on default\n            // exports\n            // Which means: if a default export NgModule was lazy-loaded, we can discover it, but,\n            //  we cannot parse its routes to see if they have loadChildren or not.\n            if (!lazyRoute.routeDef.className) {\n              return allRoutes;\n            }\n\n            const lazyModuleSymbol = reflector.findDeclaration(\n                lazyRoute.absoluteFilePath, lazyRoute.routeDef.className || 'default');\n\n            const subRoutes =\n                _extractLazyRoutesFromStaticModule(lazyModuleSymbol, reflector, host, ROUTES);\n\n            return subRoutes.reduce(includeLazyRouteAndSubRoutes, allRoutes);\n          },\n      {});\n\n  return allLazyRoutes;\n}\n\n\n/**\n * Try to resolve a module, and returns its absolute path.\n * @private\n */\nfunction _resolveModule(modulePath: string, containingFile: string, host: AotCompilerHost) {\n  const result = host.moduleNameToFileName(modulePath, containingFile);\n  if (!result) {\n    throw new Error(`Could not resolve \"${modulePath}\" from \"${containingFile}\".`);\n  }\n  return result;\n}\n\n\n/**\n * Throw an exception if a route is in a route map, but does not point to the same module.\n */\nfunction _assertRoute(map: LazyRouteMap, route: LazyRoute) {\n  const r = route.routeDef.toString();\n  if (map[r] && map[r].absoluteFilePath != route.absoluteFilePath) {\n    throw new Error(\n        `Duplicated path in loadChildren detected: \"${r}\" is used in 2 loadChildren, ` +\n        `but they point to different modules \"(${map[r].absoluteFilePath} and ` +\n        `\"${route.absoluteFilePath}\"). Webpack cannot distinguish on context and would fail to ` +\n        'load the proper one.');\n  }\n}\n\nexport function flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n\n/**\n * Extract all the LazyRoutes from a module. This extracts all `loadChildren` keys from this\n * module and all statically referred modules.\n * @private\n */\nfunction _extractLazyRoutesFromStaticModule(\n    staticSymbol: StaticSymbol, reflector: StaticReflector, host: AotCompilerHost,\n    ROUTES: StaticSymbol): LazyRoute[] {\n  const moduleMetadata = _getNgModuleMetadata(staticSymbol, reflector);\n  const imports = flatten(moduleMetadata.imports || []);\n  const allRoutes: any = imports.filter(i => 'providers' in i).reduce((mem: Route[], m: any) => {\n    return mem.concat(_collectRoutes(m.providers || [], reflector, ROUTES));\n  }, _collectRoutes(moduleMetadata.providers || [], reflector, ROUTES));\n\n  const lazyRoutes: LazyRoute[] =\n      _collectLoadChildren(allRoutes).reduce((acc: LazyRoute[], route: string) => {\n        const routeDef = RouteDef.fromString(route);\n        const absoluteFilePath = _resolveModule(routeDef.path, staticSymbol.filePath, host);\n        acc.push({routeDef, absoluteFilePath});\n        return acc;\n      }, []);\n\n  const importedSymbols =\n      (imports as any[])\n          .filter(i => i instanceof StaticSymbol || i.ngModule instanceof StaticSymbol)\n          .map(i => {\n            if (i instanceof StaticSymbol) return i;\n            return i.ngModule;\n          }) as StaticSymbol[];\n\n  return importedSymbols\n      .reduce(\n          (acc: LazyRoute[], i: StaticSymbol) => {\n            return acc.concat(_extractLazyRoutesFromStaticModule(i, reflector, host, ROUTES));\n          },\n          [])\n      .concat(lazyRoutes);\n}\n\n\n/**\n * Get the NgModule Metadata of a symbol.\n */\nfunction _getNgModuleMetadata(staticSymbol: StaticSymbol, reflector: StaticReflector): NgModule {\n  const ngModules = reflector.annotations(staticSymbol).filter((s: any) => s instanceof NgModule);\n  if (ngModules.length === 0) {\n    throw new Error(`${staticSymbol.name} is not an NgModule`);\n  }\n  return ngModules[0];\n}\n\n\n/**\n * Return the routes from the provider list.\n * @private\n */\nfunction _collectRoutes(\n    providers: any[], reflector: StaticReflector, ROUTES: StaticSymbol): Route[] {\n  return providers.reduce((routeList: Route[], p: any) => {\n    if (p.provide === ROUTES) {\n      return routeList.concat(p.useValue);\n    } else if (Array.isArray(p)) {\n      return routeList.concat(_collectRoutes(p, reflector, ROUTES));\n    } else {\n      return routeList;\n    }\n  }, []);\n}\n\n\n/**\n * Return the loadChildren values of a list of Route.\n */\nfunction _collectLoadChildren(routes: Route[]): string[] {\n  return routes.reduce((m, r) => {\n    if (r.loadChildren && typeof r.loadChildren === 'string') {\n      return m.concat(r.loadChildren);\n    } else if (Array.isArray(r)) {\n      return m.concat(_collectLoadChildren(r));\n    } else if (r.children) {\n      return m.concat(_collectLoadChildren(r.children));\n    } else {\n      return m;\n    }\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This is a private API for the ngtools toolkit.\n *\n * This API should be stable for NG 2. It can be removed in NG 4..., but should be replaced by\n * something else.\n */\n\nimport {AotCompilerHost, AotSummaryResolver, StaticReflector, StaticSymbolCache, StaticSymbolResolver} from '@angular/compiler';\nimport {AngularCompilerOptions, NgcCliOptions} from '@angular/tsc-wrapped';\nimport * as ts from 'typescript';\n\nimport {CodeGenerator} from './codegen';\nimport {CompilerHost, CompilerHostContext, ModuleResolutionHostAdapter} from './compiler_host';\nimport {Extractor} from './extractor';\nimport {listLazyRoutesOfModule} from './ngtools_impl';\nimport {PathMappedCompilerHost} from './path_mapped_compiler_host';\n\nexport interface NgTools_InternalApi_NG2_CodeGen_Options {\n  basePath: string;\n  compilerOptions: ts.CompilerOptions;\n  program: ts.Program;\n  host: ts.CompilerHost;\n\n  angularCompilerOptions: AngularCompilerOptions;\n\n  // i18n options.\n  i18nFormat?: string;\n  i18nFile?: string;\n  locale?: string;\n  missingTranslation?: string;\n\n  readResource: (fileName: string) => Promise<string>;\n\n  // Every new property under this line should be optional.\n}\n\nexport interface NgTools_InternalApi_NG2_ListLazyRoutes_Options {\n  program: ts.Program;\n  host: ts.CompilerHost;\n  angularCompilerOptions: AngularCompilerOptions;\n  entryModule: string;\n\n  // Every new property under this line should be optional.\n}\n\nexport interface NgTools_InternalApi_NG_2_LazyRouteMap { [route: string]: string; }\n\nexport interface NgTools_InternalApi_NG2_ExtractI18n_Options {\n  basePath: string;\n  compilerOptions: ts.CompilerOptions;\n  program: ts.Program;\n  host: ts.CompilerHost;\n  angularCompilerOptions: AngularCompilerOptions;\n  i18nFormat?: string;\n  readResource: (fileName: string) => Promise<string>;\n  // Every new property under this line should be optional.\n  locale?: string;\n  outFile?: string;\n}\n\n/**\n * A ModuleResolutionHostAdapter that overrides the readResource() method with the one\n * passed in the interface.\n */\nclass CustomLoaderModuleResolutionHostAdapter extends ModuleResolutionHostAdapter {\n  constructor(\n      private _readResource: (path: string) => Promise<string>, host: ts.ModuleResolutionHost) {\n    super(host);\n  }\n\n  readResource(path: string) { return this._readResource(path); }\n}\n\n/**\n * @internal\n */\nexport class NgTools_InternalApi_NG_2 {\n  /**\n   * @internal\n   */\n  static codeGen(options: NgTools_InternalApi_NG2_CodeGen_Options): Promise<any> {\n    const hostContext: CompilerHostContext =\n        new CustomLoaderModuleResolutionHostAdapter(options.readResource, options.host);\n\n    const cliOptions: NgcCliOptions = {\n      i18nFormat: options.i18nFormat !,\n      i18nFile: options.i18nFile !,\n      locale: options.locale !,\n      missingTranslation: options.missingTranslation !,\n      basePath: options.basePath\n    };\n    const ngOptions = options.angularCompilerOptions;\n    if (ngOptions.enableSummariesForJit === undefined) {\n      // default to false\n      ngOptions.enableSummariesForJit = false;\n    }\n\n    // Create the Code Generator.\n    const codeGenerator =\n        CodeGenerator.create(ngOptions, cliOptions, options.program, options.host, hostContext);\n\n    return codeGenerator.codegen();\n  }\n\n  /**\n   * @internal\n   */\n  static listLazyRoutes(options: NgTools_InternalApi_NG2_ListLazyRoutes_Options):\n      NgTools_InternalApi_NG_2_LazyRouteMap {\n    const angularCompilerOptions = options.angularCompilerOptions;\n    const program = options.program;\n\n    const moduleResolutionHost = new ModuleResolutionHostAdapter(options.host);\n    const usePathMapping =\n        !!angularCompilerOptions.rootDirs && angularCompilerOptions.rootDirs.length > 0;\n    const ngCompilerHost: AotCompilerHost = usePathMapping ?\n        new PathMappedCompilerHost(program, angularCompilerOptions, moduleResolutionHost) :\n        new CompilerHost(program, angularCompilerOptions, moduleResolutionHost);\n\n    const symbolCache = new StaticSymbolCache();\n    const summaryResolver = new AotSummaryResolver(ngCompilerHost, symbolCache);\n    const symbolResolver = new StaticSymbolResolver(ngCompilerHost, symbolCache, summaryResolver);\n    const staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    const routeMap = listLazyRoutesOfModule(options.entryModule, ngCompilerHost, staticReflector);\n\n    return Object.keys(routeMap).reduce(\n        (acc: NgTools_InternalApi_NG_2_LazyRouteMap, route: string) => {\n          acc[route] = routeMap[route].absoluteFilePath;\n          return acc;\n        },\n        {});\n  }\n\n  /**\n   * @internal\n   */\n  static extractI18n(options: NgTools_InternalApi_NG2_ExtractI18n_Options): Promise<any> {\n    const hostContext: CompilerHostContext =\n        new CustomLoaderModuleResolutionHostAdapter(options.readResource, options.host);\n\n    // Create the i18n extractor.\n    const locale = options.locale || null;\n    const extractor = Extractor.create(\n        options.angularCompilerOptions, options.program, options.host, locale, hostContext);\n\n    return extractor.extract(options.i18nFormat !, options.outFile || null);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport {AotCompilerHost, AotCompilerHost as StaticReflectorHost, StaticReflector, StaticSymbol} from '@angular/compiler';\nexport {CodeGenerator} from './src/codegen';\nexport {CompilerHost, CompilerHostContext, ModuleResolutionHostAdapter, NodeCompilerHostContext} from './src/compiler_host';\nexport {Extractor} from './src/extractor';\nexport * from '@angular/tsc-wrapped';\nexport {VERSION} from './src/version';\n\nexport {DiagnosticTemplateInfo, getTemplateExpressionDiagnostics, getExpressionScope} from './src/diagnostics/expression_diagnostics';\nexport {AstType, ExpressionDiagnosticsContext} from './src/diagnostics/expression_type';\nexport {getClassMembersFromDeclaration, getPipesTable, getSymbolQuery} from './src/diagnostics/typescript_symbols';\nexport {BuiltinType, DeclarationKind, Definition, PipeInfo, Pipes, Signature, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable} from './src/diagnostics/symbols';\n\nexport * from './src/transformers/api';\nexport * from './src/transformers/entry_points';\n\nexport {performCompilation} from './src/perform-compile';\n\n// TODO(hansl): moving to Angular 4 need to update this API.\nexport {NgTools_InternalApi_NG_2 as __NGTOOLS_PRIVATE_API_2} from './src/ngtools_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileMetadataResolver, CompilePipeSummary, NgAnalyzedModules, StaticSymbol} from '@angular/compiler';\nimport {BuiltinType, DeclarationKind, Definition, PipeInfo, Pipes, Signature, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable} from '@angular/compiler-cli';\n\nexport {\n  BuiltinType,\n  DeclarationKind,\n  Definition,\n  PipeInfo,\n  Pipes,\n  Signature,\n  Span,\n  Symbol,\n  SymbolDeclaration,\n  SymbolQuery,\n  SymbolTable\n};\n\n/**\n * The information `LanguageService` needs from the `LanguageServiceHost` to describe the content of\n * a template and the language context the template is in.\n *\n * A host interface; see `LanguageSeriviceHost`.\n *\n * @experimental\n */\nexport interface TemplateSource {\n  /**\n   * The source of the template.\n   */\n  readonly source: string;\n\n  /**\n   * The version of the source. As files are modified the version should change. That is, if the\n   * `LanguageService` requesting template infomration for a source file and that file has changed\n   * since the last time the host was asked for the file then this version string should be\n   * different. No assumptions are made about the format of this string.\n   *\n   * The version can change more often than the source but should not change less often.\n   */\n  readonly version: string;\n\n  /**\n   * The span of the template within the source file.\n   */\n  readonly span: Span;\n\n  /**\n   * A static symbol for the template's component.\n   */\n  readonly type: StaticSymbol;\n\n  /**\n   * The `SymbolTable` for the members of the component.\n   */\n  readonly members: SymbolTable;\n\n  /**\n   * A `SymbolQuery` for the context of the template.\n   */\n  readonly query: SymbolQuery;\n}\n\n/**\n * A sequence of template sources.\n *\n * A host type; see `LanguageSeriviceHost`.\n *\n * @experimental\n */\nexport type TemplateSources = TemplateSource[] | undefined;\n\n\n/**\n * Error information found getting declaration information\n *\n * A host type; see `LanagueServiceHost`.\n *\n * @experimental\n */\nexport interface DeclarationError {\n  /**\n   * The span of the error in the declaration's module.\n   */\n  readonly span: Span;\n\n  /**\n   * The message to display describing the error.\n   */\n  readonly message: string;\n}\n\n/**\n * Information about the component declarations.\n *\n * A file might contain a declaration without a template because the file contains only\n * templateUrl references. However, the compoennt declaration might contain errors that\n * need to be reported such as the template string is missing or the component is not\n * declared in a module. These error should be reported on the declaration, not the\n * template.\n *\n * A host type; see `LanguageSeriviceHost`.\n *\n * @experimental\n */\nexport interface Declaration {\n  /**\n   * The static symbol of the compponent being declared.\n   */\n  readonly type: StaticSymbol;\n\n  /**\n   * The span of the declaration annotation reference (e.g. the 'Component' or 'Directive'\n   * reference).\n   */\n  readonly declarationSpan: Span;\n\n  /**\n   * Reference to the compiler directive metadata for the declaration.\n   */\n  readonly metadata?: CompileDirectiveMetadata;\n\n  /**\n   * Error reported trying to get the metadata.\n   */\n  readonly errors: DeclarationError[];\n}\n\n/**\n * A sequence of declarations.\n *\n * A host type; see `LanguageSeriviceHost`.\n *\n * @experimental\n */\nexport type Declarations = Declaration[];\n\n/**\n * The host for a `LanguageService`. This provides all the `LanguageService` requires to respond\n * to\n * the `LanguageService` requests.\n *\n * This interface describes the requirements of the `LanguageService` on its host.\n *\n * The host interface is host language agnostic.\n *\n * Adding optional member to this interface or any interface that is described as a\n * `LanguageServiceHost` interface is not considered a breaking change as defined by SemVer.\n * Removing a method or changing a member from required to optional will also not be considered a\n * breaking change.\n *\n * If a member is deprecated it will be changed to optional in a minor release before it is\n * removed in a major release.\n *\n * Adding a required member or changing a method's parameters, is considered a breaking change and\n * will only be done when breaking changes are allowed. When possible, a new optional member will\n * be added and the old member will be deprecated. The new member will then be made required in\n * and the old member will be removed only when breaking chnages are allowed.\n *\n * While an interface is marked as experimental breaking-changes will be allowed between minor\n * releases. After an interface is marked as stable breaking-changes will only be allowed between\n * major releases. No breaking changes are allowed between patch releases.\n *\n * @experimental\n */\nexport interface LanguageServiceHost {\n  /**\n   * The resolver to use to find compiler metadata.\n   */\n  readonly resolver: CompileMetadataResolver;\n\n  /**\n   * Returns the template information for templates in `fileName` at the given location. If\n   * `fileName` refers to a template file then the `position` should be ignored. If the `position`\n   * is not in a template literal string then this method should return `undefined`.\n   */\n  getTemplateAt(fileName: string, position: number): TemplateSource|undefined;\n\n  /**\n   * Return the template source information for all templates in `fileName` or for `fileName` if\n   * it\n   * is a template file.\n   */\n  getTemplates(fileName: string): TemplateSources;\n\n  /**\n   * Returns the Angular declarations in the given file.\n   */\n  getDeclarations(fileName: string): Declarations;\n\n  /**\n   * Return a summary of all Angular modules in the project.\n   */\n  getAnalyzedModules(): NgAnalyzedModules;\n\n  /**\n   * Return a list all the template files referenced by the project.\n   */\n  getTemplateReferences(): string[];\n}\n\n/**\n * An item of the completion result to be displayed by an editor.\n *\n * A `LanguageService` interface.\n *\n * @experimental\n */\nexport interface Completion {\n  /**\n   * The kind of comletion.\n   */\n  kind: DeclarationKind;\n\n  /**\n   * The name of the completion to be displayed\n   */\n  name: string;\n\n  /**\n   * The key to use to sort the completions for display.\n   */\n  sort: string;\n}\n\n/**\n * A sequence of completions.\n *\n * @experimental\n */\nexport type Completions = Completion[] | undefined;\n\n/**\n * A file and span.\n */\nexport interface Location {\n  fileName: string;\n  span: Span;\n}\n\n/**\n * The kind of diagnostic message.\n *\n * @experimental\n */\nexport enum DiagnosticKind {\n  Error,\n  Warning,\n}\n\n/**\n * An template diagnostic message to display.\n *\n * @experimental\n */\nexport interface Diagnostic {\n  /**\n   * The kind of diagnostic message\n   */\n  kind: DiagnosticKind;\n\n  /**\n   * The source span that should be highlighted.\n   */\n  span: Span;\n\n  /**\n   * The text of the diagnostic message to display.\n   */\n  message: string;\n}\n\n/**\n * A sequence of diagnostic message.\n *\n * @experimental\n */\nexport type Diagnostics = Diagnostic[];\n\n/**\n * A section of hover text. If the text is code then langauge should be provided.\n * Otherwise the text is assumed to be Markdown text that will be sanitized.\n */\nexport interface HoverTextSection {\n  /**\n   * Source code or markdown text describing the symbol a the hover location.\n   */\n  readonly text: string;\n\n  /**\n   * The langauge of the source if `text` is a souce code fragment.\n   */\n  readonly language?: string;\n}\n\n/**\n * Hover infomration for a symbol at the hover location.\n */\nexport interface Hover {\n  /**\n   * The hover text to display for the symbol at the hover location. If the text includes\n   * source code, the section will specify which langauge it should be interpreted as.\n   */\n  readonly text: HoverTextSection[];\n\n  /**\n   * The span of source the hover covers.\n   */\n  readonly span: Span;\n}\n\n/**\n * An instance of an Angular language service created by `createLanguageService()`.\n *\n * The language service returns information about Angular templates that are included in a project\n * as defined by the `LanguageServiceHost`.\n *\n * When a method expects a `fileName` this file can either be source file in the project that\n * contains a template in a string literal or a template file referenced by the project returned\n * by `getTemplateReference()`. All other files will cause the method to return `undefined`.\n *\n * If a method takes a `position`, it is the offset of the UTF-16 code-point relative to the\n * beginning of the file reference by `fileName`.\n *\n * This interface and all interfaces and types marked as `LanguageService` types, describe  a\n * particlar implementation of the Angular language service and is not intented to be\n * implemented. Adding members to the interface will not be considered a breaking change as\n * defined by SemVer.\n *\n * Removing a member or making a member optional, changing a method parameters, or changing a\n * member's type will all be considered a breaking change.\n *\n * While an interface is marked as experimental breaking-changes will be allowed between minor\n * releases. After an interface is marked as stable breaking-changes will only be allowed between\n * major releases. No breaking changes are allowed between patch releases.\n *\n * @experimental\n */\nexport interface LanguageService {\n  /**\n   * Returns a list of all the external templates referenced by the project.\n   */\n  getTemplateReferences(): string[]|undefined;\n\n  /**\n   * Returns a list of all error for all templates in the given file.\n   */\n  getDiagnostics(fileName: string): Diagnostics|undefined;\n\n  /**\n   * Return the completions at the given position.\n   */\n  getCompletionsAt(fileName: string, position: number): Completions|undefined;\n\n  /**\n   * Return the definition location for the symbol at position.\n   */\n  getDefinitionAt(fileName: string, position: number): Definition|undefined;\n\n  /**\n   * Return the hover information for the symbol at position.\n   */\n  getHoverAt(fileName: string, position: number): Hover|undefined;\n\n  /**\n   * Return the pipes that are available at the given position.\n   */\n  getPipesAt(fileName: string, position: number): CompilePipeSummary[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AstPath, CompileDirectiveSummary, CompileTypeMetadata, CssSelector, DirectiveAst, ElementAst, EmbeddedTemplateAst, HtmlAstPath, Node as HtmlNode, ParseSourceSpan, RecursiveTemplateAstVisitor, RecursiveVisitor, TemplateAst, TemplateAstPath, identifierName, templateVisitAll, visitAll} from '@angular/compiler';\nimport {DiagnosticTemplateInfo} from '@angular/compiler-cli';\nimport * as ts from 'typescript';\n\nimport {SelectorInfo, TemplateInfo} from './common';\nimport {Span} from './types';\n\nexport interface SpanHolder {\n  sourceSpan: ParseSourceSpan;\n  endSourceSpan?: ParseSourceSpan|null;\n  children?: SpanHolder[];\n}\n\nexport function isParseSourceSpan(value: any): value is ParseSourceSpan {\n  return value && !!value.start;\n}\n\nexport function spanOf(span: SpanHolder): Span;\nexport function spanOf(span: ParseSourceSpan): Span;\nexport function spanOf(span: SpanHolder | ParseSourceSpan | undefined): Span|undefined;\nexport function spanOf(span?: SpanHolder | ParseSourceSpan): Span|undefined {\n  if (!span) return undefined;\n  if (isParseSourceSpan(span)) {\n    return {start: span.start.offset, end: span.end.offset};\n  } else {\n    if (span.endSourceSpan) {\n      return {start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset};\n    } else if (span.children && span.children.length) {\n      return {\n        start: span.sourceSpan.start.offset,\n        end: spanOf(span.children[span.children.length - 1]) !.end\n      };\n    }\n    return {start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset};\n  }\n}\n\nexport function inSpan(position: number, span?: Span, exclusive?: boolean): boolean {\n  return span != null && (exclusive ? position >= span.start && position < span.end :\n                                      position >= span.start && position <= span.end);\n}\n\nexport function offsetSpan(span: Span, amount: number): Span {\n  return {start: span.start + amount, end: span.end + amount};\n}\n\nexport function isNarrower(spanA: Span, spanB: Span): boolean {\n  return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\n\nexport function hasTemplateReference(type: CompileTypeMetadata): boolean {\n  if (type.diDeps) {\n    for (let diDep of type.diDeps) {\n      if (diDep.token && diDep.token.identifier &&\n          identifierName(diDep.token !.identifier !) == 'TemplateRef')\n        return true;\n    }\n  }\n  return false;\n}\n\nexport function getSelectors(info: TemplateInfo): SelectorInfo {\n  const map = new Map<CssSelector, CompileDirectiveSummary>();\n  const selectors: CssSelector[] = flatten(info.directives.map(directive => {\n    const selectors: CssSelector[] = CssSelector.parse(directive.selector !);\n    selectors.forEach(selector => map.set(selector, directive));\n    return selectors;\n  }));\n  return {selectors, map};\n}\n\nexport function flatten<T>(a: T[][]) {\n  return (<T[]>[]).concat(...a);\n}\n\nexport function removeSuffix(value: string, suffix: string) {\n  if (value.endsWith(suffix)) return value.substring(0, value.length - suffix.length);\n  return value;\n}\n\nexport function uniqueByName < T extends {\n  name: string;\n}\n> (elements: T[] | undefined): T[]|undefined {\n  if (elements) {\n    const result: T[] = [];\n    const set = new Set<string>();\n    for (const element of elements) {\n      if (!set.has(element.name)) {\n        set.add(element.name);\n        result.push(element);\n      }\n    }\n    return result;\n  }\n}\n\nexport function isTypescriptVersion(low: string, high?: string) {\n  const version = ts.version;\n\n  if (version.substring(0, low.length) < low) return false;\n\n  if (high && (version.substring(0, high.length) > high)) return false;\n\n  return true;\n}\n\nexport function diagnosticInfoFromTemplateInfo(info: TemplateInfo): DiagnosticTemplateInfo {\n  return {\n    fileName: info.fileName,\n    offset: info.template.span.start,\n    query: info.template.query,\n    members: info.template.members,\n    htmlAst: info.htmlAst,\n    templateAst: info.templateAst\n  };\n}\n\nexport function findTemplateAstAt(\n    ast: TemplateAst[], position: number, allowWidening: boolean = false): TemplateAstPath {\n  const path: TemplateAst[] = [];\n  const visitor = new class extends RecursiveTemplateAstVisitor {\n    visit(ast: TemplateAst, context: any): any {\n      let span = spanOf(ast);\n      if (inSpan(position, span)) {\n        const len = path.length;\n        if (!len || allowWidening || isNarrower(span, spanOf(path[len - 1]))) {\n          path.push(ast);\n        }\n      } else {\n        // Returning a value here will result in the children being skipped.\n        return true;\n      }\n    }\n\n    visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n      return this.visitChildren(context, visit => {\n        // Ignore reference, variable and providers\n        visit(ast.attrs);\n        visit(ast.directives);\n        visit(ast.children);\n      });\n    }\n\n    visitElement(ast: ElementAst, context: any): any {\n      return this.visitChildren(context, visit => {\n        // Ingnore providers\n        visit(ast.attrs);\n        visit(ast.inputs);\n        visit(ast.outputs);\n        visit(ast.references);\n        visit(ast.directives);\n        visit(ast.children);\n      });\n    }\n\n    visitDirective(ast: DirectiveAst, context: any): any {\n      // Ignore the host properties of a directive\n      const result = this.visitChildren(context, visit => { visit(ast.inputs); });\n      // We never care about the diretive itself, just its inputs.\n      if (path[path.length - 1] == ast) {\n        path.pop();\n      }\n      return result;\n    }\n  };\n\n  templateVisitAll(visitor, ast);\n\n  return new AstPath<TemplateAst>(path, position);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, ASTWithSource, AstPath as AstPathBase, NullAstVisitor, visitAstChildren} from '@angular/compiler';\nimport {AstType} from '@angular/compiler-cli';\n\nimport {BuiltinType, Span, Symbol, SymbolQuery, SymbolTable} from './types';\nimport {inSpan} from './utils';\n\ntype AstPath = AstPathBase<AST>;\n\nfunction findAstAt(ast: AST, position: number, excludeEmpty: boolean = false): AstPath {\n  const path: AST[] = [];\n  const visitor = new class extends NullAstVisitor {\n    visit(ast: AST) {\n      if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n        path.push(ast);\n        visitAstChildren(ast, this);\n      }\n    }\n  };\n\n  // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n  // the visit() method above would never see it.\n  if (ast instanceof ASTWithSource) {\n    ast = ast.ast;\n  }\n\n  visitor.visit(ast);\n\n  return new AstPathBase<AST>(path, position);\n}\n\nexport function getExpressionCompletions(\n    scope: SymbolTable, ast: AST, position: number, query: SymbolQuery): Symbol[]|undefined {\n  const path = findAstAt(ast, position);\n  if (path.empty) return undefined;\n  const tail = path.tail !;\n  let result: SymbolTable|undefined = scope;\n\n  function getType(ast: AST): Symbol { return new AstType(scope, query, {}).getType(ast); }\n\n  // If the completion request is in a not in a pipe or property access then the global scope\n  // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n  // beginning of an expression.\n  tail.visit({\n    visitBinary(ast) {},\n    visitChain(ast) {},\n    visitConditional(ast) {},\n    visitFunctionCall(ast) {},\n    visitImplicitReceiver(ast) {},\n    visitInterpolation(ast) { result = undefined; },\n    visitKeyedRead(ast) {},\n    visitKeyedWrite(ast) {},\n    visitLiteralArray(ast) {},\n    visitLiteralMap(ast) {},\n    visitLiteralPrimitive(ast) {},\n    visitMethodCall(ast) {},\n    visitPipe(ast) {\n      if (position >= ast.exp.span.end &&\n          (!ast.args || !ast.args.length || position < (<AST>ast.args[0]).span.start)) {\n        // We are in a position a pipe name is expected.\n        result = query.getPipes();\n      }\n    },\n    visitPrefixNot(ast) {},\n    visitNonNullAssert(ast) {},\n    visitPropertyRead(ast) {\n      const receiverType = getType(ast.receiver);\n      result = receiverType ? receiverType.members() : scope;\n    },\n    visitPropertyWrite(ast) {\n      const receiverType = getType(ast.receiver);\n      result = receiverType ? receiverType.members() : scope;\n    },\n    visitQuote(ast) {\n      // For a quote, return the members of any (if there are any).\n      result = query.getBuiltinType(BuiltinType.Any).members();\n    },\n    visitSafeMethodCall(ast) {\n      const receiverType = getType(ast.receiver);\n      result = receiverType ? receiverType.members() : scope;\n    },\n    visitSafePropertyRead(ast) {\n      const receiverType = getType(ast.receiver);\n      result = receiverType ? receiverType.members() : scope;\n    },\n  });\n\n  return result && result.values();\n}\n\nexport function getExpressionSymbol(\n    scope: SymbolTable, ast: AST, position: number,\n    query: SymbolQuery): {symbol: Symbol, span: Span}|undefined {\n  const path = findAstAt(ast, position, /* excludeEmpty */ true);\n  if (path.empty) return undefined;\n  const tail = path.tail !;\n\n  function getType(ast: AST): Symbol { return new AstType(scope, query, {}).getType(ast); }\n\n  let symbol: Symbol|undefined = undefined;\n  let span: Span|undefined = undefined;\n\n  // If the completion request is in a not in a pipe or property access then the global scope\n  // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n  // beginning of an expression.\n  tail.visit({\n    visitBinary(ast) {},\n    visitChain(ast) {},\n    visitConditional(ast) {},\n    visitFunctionCall(ast) {},\n    visitImplicitReceiver(ast) {},\n    visitInterpolation(ast) {},\n    visitKeyedRead(ast) {},\n    visitKeyedWrite(ast) {},\n    visitLiteralArray(ast) {},\n    visitLiteralMap(ast) {},\n    visitLiteralPrimitive(ast) {},\n    visitMethodCall(ast) {\n      const receiverType = getType(ast.receiver);\n      symbol = receiverType && receiverType.members().get(ast.name);\n      span = ast.span;\n    },\n    visitPipe(ast) {\n      if (position >= ast.exp.span.end &&\n          (!ast.args || !ast.args.length || position < (<AST>ast.args[0]).span.start)) {\n        // We are in a position a pipe name is expected.\n        const pipes = query.getPipes();\n        if (pipes) {\n          symbol = pipes.get(ast.name);\n          span = ast.span;\n        }\n      }\n    },\n    visitPrefixNot(ast) {},\n    visitNonNullAssert(ast) {},\n    visitPropertyRead(ast) {\n      const receiverType = getType(ast.receiver);\n      symbol = receiverType && receiverType.members().get(ast.name);\n      span = ast.span;\n    },\n    visitPropertyWrite(ast) {\n      const receiverType = getType(ast.receiver);\n      symbol = receiverType && receiverType.members().get(ast.name);\n      span = ast.span;\n    },\n    visitQuote(ast) {},\n    visitSafeMethodCall(ast) {\n      const receiverType = getType(ast.receiver);\n      symbol = receiverType && receiverType.members().get(ast.name);\n      span = ast.span;\n    },\n    visitSafePropertyRead(ast) {\n      const receiverType = getType(ast.receiver);\n      symbol = receiverType && receiverType.members().get(ast.name);\n      span = ast.span;\n    },\n  });\n\n  if (symbol && span) {\n    return {symbol, span};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Information about the HTML DOM elements\n\n// This section defines the HTML elements and attribute surface of HTML 4\n// which is derived from https://www.w3.org/TR/html4/strict.dtd\ntype attrType = string | string[];\ntype hash<T> = {\n  [name: string]: T\n};\n\nconst values: attrType[] = [\n  'ID',\n  'CDATA',\n  'NAME',\n  ['ltr', 'rtl'],\n  ['rect', 'circle', 'poly', 'default'],\n  'NUMBER',\n  ['nohref'],\n  ['ismap'],\n  ['declare'],\n  ['DATA', 'REF', 'OBJECT'],\n  ['GET', 'POST'],\n  'IDREF',\n  ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n  ['checked'],\n  ['disabled'],\n  ['readonly'],\n  ['multiple'],\n  ['selected'],\n  ['button', 'submit', 'reset'],\n  ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n  ['none', 'groups', 'rows', 'cols', 'all'],\n  ['left', 'center', 'right', 'justify', 'char'],\n  ['top', 'middle', 'bottom', 'baseline'],\n  'IDREFS',\n  ['row', 'col', 'rowgroup', 'colgroup'],\n  ['defer']\n];\n\nconst groups: hash<number>[] = [\n  {id: 0},\n  {\n    onclick: 1,\n    ondblclick: 1,\n    onmousedown: 1,\n    onmouseup: 1,\n    onmouseover: 1,\n    onmousemove: 1,\n    onmouseout: 1,\n    onkeypress: 1,\n    onkeydown: 1,\n    onkeyup: 1\n  },\n  {lang: 2, dir: 3},\n  {onload: 1, onunload: 1},\n  {name: 1},\n  {href: 1},\n  {type: 1},\n  {alt: 1},\n  {tabindex: 5},\n  {media: 1},\n  {nohref: 6},\n  {usemap: 1},\n  {src: 1},\n  {onfocus: 1, onblur: 1},\n  {charset: 1},\n  {declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1},\n  {title: 1},\n  {value: 1},\n  {cite: 1},\n  {datetime: 1},\n  {accept: 1},\n  {shape: 4, coords: 1},\n  { for: 11\n  },\n  {action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1},\n  {valuetype: 9},\n  {longdesc: 1},\n  {width: 1},\n  {disabled: 14},\n  {readonly: 15, onselect: 1},\n  {accesskey: 1},\n  {size: 5, multiple: 16},\n  {onchange: 1},\n  {label: 1},\n  {selected: 17},\n  {type: 12, checked: 13, size: 1, maxlength: 5},\n  {rows: 5, cols: 5},\n  {type: 18},\n  {height: 1},\n  {summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1},\n  {align: 21, char: 1, charoff: 1, valign: 22},\n  {span: 5},\n  {abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5},\n  {profile: 1},\n  {'http-equiv': 2, name: 2, content: 1, scheme: 1},\n  {class: 1, style: 1},\n  {hreflang: 2, rel: 1, rev: 1},\n  {ismap: 7},\n  { defer: 25, event: 1, for : 1 }\n];\n\nconst elements: {[name: string]: number[]} = {\n  TT: [0, 1, 2, 16, 44],\n  I: [0, 1, 2, 16, 44],\n  B: [0, 1, 2, 16, 44],\n  BIG: [0, 1, 2, 16, 44],\n  SMALL: [0, 1, 2, 16, 44],\n  EM: [0, 1, 2, 16, 44],\n  STRONG: [0, 1, 2, 16, 44],\n  DFN: [0, 1, 2, 16, 44],\n  CODE: [0, 1, 2, 16, 44],\n  SAMP: [0, 1, 2, 16, 44],\n  KBD: [0, 1, 2, 16, 44],\n  VAR: [0, 1, 2, 16, 44],\n  CITE: [0, 1, 2, 16, 44],\n  ABBR: [0, 1, 2, 16, 44],\n  ACRONYM: [0, 1, 2, 16, 44],\n  SUB: [0, 1, 2, 16, 44],\n  SUP: [0, 1, 2, 16, 44],\n  SPAN: [0, 1, 2, 16, 44],\n  BDO: [0, 2, 16, 44],\n  BR: [0, 16, 44],\n  BODY: [0, 1, 2, 3, 16, 44],\n  ADDRESS: [0, 1, 2, 16, 44],\n  DIV: [0, 1, 2, 16, 44],\n  A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n  MAP: [0, 1, 2, 4, 16, 44],\n  AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n  LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n  IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n  OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n  PARAM: [0, 4, 6, 17, 24],\n  HR: [0, 1, 2, 16, 44],\n  P: [0, 1, 2, 16, 44],\n  H1: [0, 1, 2, 16, 44],\n  H2: [0, 1, 2, 16, 44],\n  H3: [0, 1, 2, 16, 44],\n  H4: [0, 1, 2, 16, 44],\n  H5: [0, 1, 2, 16, 44],\n  H6: [0, 1, 2, 16, 44],\n  PRE: [0, 1, 2, 16, 44],\n  Q: [0, 1, 2, 16, 18, 44],\n  BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n  INS: [0, 1, 2, 16, 18, 19, 44],\n  DEL: [0, 1, 2, 16, 18, 19, 44],\n  DL: [0, 1, 2, 16, 44],\n  DT: [0, 1, 2, 16, 44],\n  DD: [0, 1, 2, 16, 44],\n  OL: [0, 1, 2, 16, 44],\n  UL: [0, 1, 2, 16, 44],\n  LI: [0, 1, 2, 16, 44],\n  FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n  LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n  INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n  SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n  OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n  OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n  TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n  FIELDSET: [0, 1, 2, 16, 44],\n  LEGEND: [0, 1, 2, 16, 29, 44],\n  BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n  TABLE: [0, 1, 2, 16, 26, 38, 44],\n  CAPTION: [0, 1, 2, 16, 44],\n  COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n  COL: [0, 1, 2, 16, 26, 39, 40, 44],\n  THEAD: [0, 1, 2, 16, 39, 44],\n  TBODY: [0, 1, 2, 16, 39, 44],\n  TFOOT: [0, 1, 2, 16, 39, 44],\n  TR: [0, 1, 2, 16, 39, 44],\n  TH: [0, 1, 2, 16, 39, 41, 44],\n  TD: [0, 1, 2, 16, 39, 41, 44],\n  HEAD: [2, 42],\n  TITLE: [2],\n  BASE: [5],\n  META: [2, 43],\n  STYLE: [2, 6, 9, 16],\n  SCRIPT: [6, 12, 14, 47],\n  NOSCRIPT: [0, 1, 2, 16, 44],\n  HTML: [2]\n};\n\nconst defaultAttributes = [0, 1, 2, 4];\n\nexport function elementNames(): string[] {\n  return Object.keys(elements).sort().map(v => v.toLowerCase());\n}\n\nfunction compose(indexes: number[] | undefined): hash<attrType> {\n  const result: hash<attrType> = {};\n  if (indexes) {\n    for (let index of indexes) {\n      const group = groups[index];\n      for (let name in group)\n        if (group.hasOwnProperty(name)) result[name] = values[group[name]];\n    }\n  }\n  return result;\n}\n\nexport function attributeNames(element: string): string[] {\n  return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\n\nexport function attributeType(element: string, attribute: string): string|string[]|undefined {\n  return compose(elements[element.toUpperCase()] || defaultAttributes)[attribute.toLowerCase()];\n}\n\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nconst SCHEMA: string[] = [\n  '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n      /* added manually to avoid breaking changes */\n      ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n  '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n  'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n  'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n  ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n  ':svg:graphics^:svg:|',\n  ':svg:animation^:svg:|*begin,*end,*repeat',\n  ':svg:geometry^:svg:|',\n  ':svg:componentTransferFunction^:svg:|',\n  ':svg:gradient^:svg:|',\n  ':svg:textContent^:svg:graphics|',\n  ':svg:textPositioning^:svg:textContent|',\n  'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n  'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n  'audio^media|',\n  'br^[HTMLElement]|clear',\n  'base^[HTMLElement]|href,target',\n  'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n  'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n  'canvas^[HTMLElement]|#height,#width',\n  'content^[HTMLElement]|select',\n  'dl^[HTMLElement]|!compact',\n  'datalist^[HTMLElement]|',\n  'details^[HTMLElement]|!open',\n  'dialog^[HTMLElement]|!open,returnValue',\n  'dir^[HTMLElement]|!compact',\n  'div^[HTMLElement]|align',\n  'embed^[HTMLElement]|align,height,name,src,type,width',\n  'fieldset^[HTMLElement]|!disabled,name',\n  'font^[HTMLElement]|color,face,size',\n  'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n  'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n  'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n  'hr^[HTMLElement]|align,color,!noShade,size,width',\n  'head^[HTMLElement]|',\n  'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n  'html^[HTMLElement]|version',\n  'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n  'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n  'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n  'li^[HTMLElement]|type,#value',\n  'label^[HTMLElement]|htmlFor',\n  'legend^[HTMLElement]|align',\n  'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n  'map^[HTMLElement]|name',\n  'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n  'menu^[HTMLElement]|!compact',\n  'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n  'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n  'ins,del^[HTMLElement]|cite,dateTime',\n  'ol^[HTMLElement]|!compact,!reversed,#start,type',\n  'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n  'optgroup^[HTMLElement]|!disabled,label',\n  'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n  'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n  'p^[HTMLElement]|align',\n  'param^[HTMLElement]|name,type,value,valueType',\n  'picture^[HTMLElement]|',\n  'pre^[HTMLElement]|#width',\n  'progress^[HTMLElement]|#max,#value',\n  'q,blockquote,cite^[HTMLElement]|',\n  'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n  'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n  'shadow^[HTMLElement]|',\n  'slot^[HTMLElement]|name',\n  'source^[HTMLElement]|media,sizes,src,srcset,type',\n  'span^[HTMLElement]|',\n  'style^[HTMLElement]|!disabled,media,type',\n  'caption^[HTMLElement]|align',\n  'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n  'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n  'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n  'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n  'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n  'template^[HTMLElement]|',\n  'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n  'title^[HTMLElement]|text',\n  'track^[HTMLElement]|!default,kind,label,src,srclang',\n  'ul^[HTMLElement]|!compact,type',\n  'unknown^[HTMLElement]|',\n  'video^media|#height,poster,#width',\n  ':svg:a^:svg:graphics|',\n  ':svg:animate^:svg:animation|',\n  ':svg:animateMotion^:svg:animation|',\n  ':svg:animateTransform^:svg:animation|',\n  ':svg:circle^:svg:geometry|',\n  ':svg:clipPath^:svg:graphics|',\n  ':svg:defs^:svg:graphics|',\n  ':svg:desc^:svg:|',\n  ':svg:discard^:svg:|',\n  ':svg:ellipse^:svg:geometry|',\n  ':svg:feBlend^:svg:|',\n  ':svg:feColorMatrix^:svg:|',\n  ':svg:feComponentTransfer^:svg:|',\n  ':svg:feComposite^:svg:|',\n  ':svg:feConvolveMatrix^:svg:|',\n  ':svg:feDiffuseLighting^:svg:|',\n  ':svg:feDisplacementMap^:svg:|',\n  ':svg:feDistantLight^:svg:|',\n  ':svg:feDropShadow^:svg:|',\n  ':svg:feFlood^:svg:|',\n  ':svg:feFuncA^:svg:componentTransferFunction|',\n  ':svg:feFuncB^:svg:componentTransferFunction|',\n  ':svg:feFuncG^:svg:componentTransferFunction|',\n  ':svg:feFuncR^:svg:componentTransferFunction|',\n  ':svg:feGaussianBlur^:svg:|',\n  ':svg:feImage^:svg:|',\n  ':svg:feMerge^:svg:|',\n  ':svg:feMergeNode^:svg:|',\n  ':svg:feMorphology^:svg:|',\n  ':svg:feOffset^:svg:|',\n  ':svg:fePointLight^:svg:|',\n  ':svg:feSpecularLighting^:svg:|',\n  ':svg:feSpotLight^:svg:|',\n  ':svg:feTile^:svg:|',\n  ':svg:feTurbulence^:svg:|',\n  ':svg:filter^:svg:|',\n  ':svg:foreignObject^:svg:graphics|',\n  ':svg:g^:svg:graphics|',\n  ':svg:image^:svg:graphics|',\n  ':svg:line^:svg:geometry|',\n  ':svg:linearGradient^:svg:gradient|',\n  ':svg:mpath^:svg:|',\n  ':svg:marker^:svg:|',\n  ':svg:mask^:svg:|',\n  ':svg:metadata^:svg:|',\n  ':svg:path^:svg:geometry|',\n  ':svg:pattern^:svg:|',\n  ':svg:polygon^:svg:geometry|',\n  ':svg:polyline^:svg:geometry|',\n  ':svg:radialGradient^:svg:gradient|',\n  ':svg:rect^:svg:geometry|',\n  ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n  ':svg:script^:svg:|type',\n  ':svg:set^:svg:animation|',\n  ':svg:stop^:svg:|',\n  ':svg:style^:svg:|!disabled,media,title,type',\n  ':svg:switch^:svg:graphics|',\n  ':svg:symbol^:svg:|',\n  ':svg:tspan^:svg:textPositioning|',\n  ':svg:text^:svg:textPositioning|',\n  ':svg:textPath^:svg:textContent|',\n  ':svg:title^:svg:|',\n  ':svg:use^:svg:graphics|',\n  ':svg:view^:svg:|#zoomAndPan',\n  'data^[HTMLElement]|value',\n  'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n  'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n  'summary^[HTMLElement]|',\n  'time^[HTMLElement]|dateTime',\n  ':svg:cursor^:svg:|',\n];\n\nconst attrToPropMap: {[name: string]: string} = <any>{\n  'class': 'className',\n  'formaction': 'formAction',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex'\n};\n\nconst EVENT = 'event';\nconst BOOLEAN = 'boolean';\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst OBJECT = 'object';\n\nexport class SchemaInformation {\n  schema = <{[element: string]: {[property: string]: string}}>{};\n\n  constructor() {\n    SCHEMA.forEach(encodedType => {\n      const parts = encodedType.split('|');\n      const properties = parts[1].split(',');\n      const typeParts = (parts[0] + '^').split('^');\n      const typeName = typeParts[0];\n      const type = <{[property: string]: string}>{};\n      typeName.split(',').forEach(tag => this.schema[tag.toLowerCase()] = type);\n      const superName = typeParts[1];\n      const superType = superName && this.schema[superName.toLowerCase()];\n      if (superType) {\n        for (const key in superType) {\n          type[key] = superType[key];\n        }\n      }\n      properties.forEach((property: string) => {\n        if (property == '') {\n        } else if (property.startsWith('*')) {\n          type[property.substring(1)] = EVENT;\n        } else if (property.startsWith('!')) {\n          type[property.substring(1)] = BOOLEAN;\n        } else if (property.startsWith('#')) {\n          type[property.substring(1)] = NUMBER;\n        } else if (property.startsWith('%')) {\n          type[property.substring(1)] = OBJECT;\n        } else {\n          type[property] = STRING;\n        }\n      });\n    });\n  }\n\n  allKnownElements(): string[] { return Object.keys(this.schema); }\n\n  eventsOf(elementName: string): string[] {\n    const elementType = this.schema[elementName.toLowerCase()] || {};\n    return Object.keys(elementType).filter(property => elementType[property] === EVENT);\n  }\n\n  propertiesOf(elementName: string): string[] {\n    const elementType = this.schema[elementName.toLowerCase()] || {};\n    return Object.keys(elementType).filter(property => elementType[property] !== EVENT);\n  }\n\n  typeOf(elementName: string, property: string): string {\n    return (this.schema[elementName.toLowerCase()] || {})[property];\n  }\n\n  private static _instance: SchemaInformation;\n\n  static get instance(): SchemaInformation {\n    let result = SchemaInformation._instance;\n    if (!result) {\n      result = SchemaInformation._instance = new SchemaInformation();\n    }\n    return result;\n  }\n}\n\nexport function eventNames(elementName: string): string[] {\n  return SchemaInformation.instance.eventsOf(elementName);\n}\n\nexport function propertyNames(elementName: string): string[] {\n  return SchemaInformation.instance.propertiesOf(elementName);\n}\n\nexport function propertyType(elementName: string, propertyName: string): string {\n  return SchemaInformation.instance.typeOf(elementName, propertyName);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, AstPath, AttrAst, Attribute, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, CssSelector, DirectiveAst, Element, ElementAst, EmbeddedTemplateAst, ImplicitReceiver, NAMED_ENTITIES, NgContentAst, Node as HtmlAst, NullTemplateVisitor, ParseSpan, PropertyRead, ReferenceAst, SelectorMatcher, TagContentType, TemplateAst, TemplateAstVisitor, Text, TextAst, VariableAst, findNode, getHtmlTagDefinition, splitNsName, templateVisitAll} from '@angular/compiler';\nimport {DiagnosticTemplateInfo, getExpressionScope} from '@angular/compiler-cli';\n\nimport {AstResult, AttrInfo, SelectorInfo, TemplateInfo} from './common';\nimport {getExpressionCompletions} from './expressions';\nimport {attributeNames, elementNames, eventNames, propertyNames} from './html_info';\nimport {BuiltinType, Completion, Completions, Span, Symbol, SymbolDeclaration, SymbolTable, TemplateSource} from './types';\nimport {diagnosticInfoFromTemplateInfo, findTemplateAstAt, flatten, getSelectors, hasTemplateReference, inSpan, removeSuffix, spanOf, uniqueByName} from './utils';\n\nconst TEMPLATE_ATTR_PREFIX = '*';\n\nconst hiddenHtmlElements = {\n  html: true,\n  script: true,\n  noscript: true,\n  base: true,\n  body: true,\n  title: true,\n  head: true,\n  link: true,\n};\n\nexport function getTemplateCompletions(templateInfo: TemplateInfo): Completions|undefined {\n  let result: Completions|undefined = undefined;\n  let {htmlAst, templateAst, template} = templateInfo;\n  // The templateNode starts at the delimiter character so we add 1 to skip it.\n  if (templateInfo.position != null) {\n    let templatePosition = templateInfo.position - template.span.start;\n    let path = findNode(htmlAst, templatePosition);\n    let mostSpecific = path.tail;\n    if (path.empty || !mostSpecific) {\n      result = elementCompletions(templateInfo, path);\n    } else {\n      let astPosition = templatePosition - mostSpecific.sourceSpan.start.offset;\n      mostSpecific.visit(\n          {\n            visitElement(ast) {\n              let startTagSpan = spanOf(ast.sourceSpan);\n              let tagLen = ast.name.length;\n              if (templatePosition <=\n                  startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                // If we are in the tag then return the element completions.\n                result = elementCompletions(templateInfo, path);\n              } else if (templatePosition < startTagSpan.end) {\n                // We are in the attribute section of the element (but not in an attribute).\n                // Return the attribute completions.\n                result = attributeCompletions(templateInfo, path);\n              }\n            },\n            visitAttribute(ast) {\n              if (!ast.valueSpan || !inSpan(templatePosition, spanOf(ast.valueSpan))) {\n                // We are in the name of an attribute. Show attribute completions.\n                result = attributeCompletions(templateInfo, path);\n              } else if (ast.valueSpan && inSpan(templatePosition, spanOf(ast.valueSpan))) {\n                result = attributeValueCompletions(templateInfo, templatePosition, ast);\n              }\n            },\n            visitText(ast) {\n              // Check if we are in a entity.\n              result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition);\n              if (result) return result;\n              result = interpolationCompletions(templateInfo, templatePosition);\n              if (result) return result;\n              let element = path.first(Element);\n              if (element) {\n                let definition = getHtmlTagDefinition(element.name);\n                if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                  result = voidElementAttributeCompletions(templateInfo, path);\n                  if (!result) {\n                    // If the element can hold content Show element completions.\n                    result = elementCompletions(templateInfo, path);\n                  }\n                }\n              } else {\n                // If no element container, implies parsable data so show elements.\n                result = voidElementAttributeCompletions(templateInfo, path);\n                if (!result) {\n                  result = elementCompletions(templateInfo, path);\n                }\n              }\n            },\n            visitComment(ast) {},\n            visitExpansion(ast) {},\n            visitExpansionCase(ast) {}\n          },\n          null);\n    }\n  }\n  return result;\n}\n\nfunction attributeCompletions(info: TemplateInfo, path: AstPath<HtmlAst>): Completions|undefined {\n  let item = path.tail instanceof Element ? path.tail : path.parentOf(path.tail);\n  if (item instanceof Element) {\n    return attributeCompletionsForElement(info, item.name, item);\n  }\n  return undefined;\n}\n\nfunction attributeCompletionsForElement(\n    info: TemplateInfo, elementName: string, element?: Element): Completions {\n  const attributes = getAttributeInfosForElement(info, elementName, element);\n\n  // Map all the attributes to a completion\n  return attributes.map<Completion>(attr => ({\n                                      kind: attr.fromHtml ? 'html attribute' : 'attribute',\n                                      name: nameOfAttr(attr),\n                                      sort: attr.name\n                                    }));\n}\n\nfunction getAttributeInfosForElement(\n    info: TemplateInfo, elementName: string, element?: Element): AttrInfo[] {\n  let attributes: AttrInfo[] = [];\n\n  // Add html attributes\n  let htmlAttributes = attributeNames(elementName) || [];\n  if (htmlAttributes) {\n    attributes.push(...htmlAttributes.map<AttrInfo>(name => ({name, fromHtml: true})));\n  }\n\n  // Add html properties\n  let htmlProperties = propertyNames(elementName);\n  if (htmlProperties) {\n    attributes.push(...htmlProperties.map<AttrInfo>(name => ({name, input: true})));\n  }\n\n  // Add html events\n  let htmlEvents = eventNames(elementName);\n  if (htmlEvents) {\n    attributes.push(...htmlEvents.map<AttrInfo>(name => ({name, output: true})));\n  }\n\n  let {selectors, map: selectorMap} = getSelectors(info);\n  if (selectors && selectors.length) {\n    // All the attributes that are selectable should be shown.\n    const applicableSelectors =\n        selectors.filter(selector => !selector.element || selector.element == elementName);\n    const selectorAndAttributeNames =\n        applicableSelectors.map(selector => ({selector, attrs: selector.attrs.filter(a => !!a)}));\n    let attrs = flatten(selectorAndAttributeNames.map<AttrInfo[]>(selectorAndAttr => {\n      const directive = selectorMap.get(selectorAndAttr.selector) !;\n      const result = selectorAndAttr.attrs.map<AttrInfo>(\n          name => ({name, input: name in directive.inputs, output: name in directive.outputs}));\n      return result;\n    }));\n\n    // Add template attribute if a directive contains a template reference\n    selectorAndAttributeNames.forEach(selectorAndAttr => {\n      const selector = selectorAndAttr.selector;\n      const directive = selectorMap.get(selector);\n      if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n          selector.attrs[0]) {\n        attrs.push({name: selector.attrs[0], template: true});\n      }\n    });\n\n    // All input and output properties of the matching directives should be added.\n    let elementSelector = element ?\n        createElementCssSelector(element) :\n        createElementCssSelector(new Element(elementName, [], [], null !, null, null));\n\n    let matcher = new SelectorMatcher();\n    matcher.addSelectables(selectors);\n    matcher.match(elementSelector, selector => {\n      let directive = selectorMap.get(selector);\n      if (directive) {\n        attrs.push(...Object.keys(directive.inputs).map(name => ({name, input: true})));\n        attrs.push(...Object.keys(directive.outputs).map(name => ({name, output: true})));\n      }\n    });\n\n    // If a name shows up twice, fold it into a single value.\n    attrs = foldAttrs(attrs);\n\n    // Now expand them back out to ensure that input/output shows up as well as input and\n    // output.\n    attributes.push(...flatten(attrs.map(expandedAttr)));\n  }\n  return attributes;\n}\n\nfunction attributeValueCompletions(\n    info: TemplateInfo, position: number, attr: Attribute): Completions|undefined {\n  const path = findTemplateAstAt(info.templateAst, position);\n  const mostSpecific = path.tail;\n  const dinfo = diagnosticInfoFromTemplateInfo(info);\n  if (mostSpecific) {\n    const visitor =\n        new ExpressionVisitor(info, position, attr, () => getExpressionScope(dinfo, path, false));\n    mostSpecific.visit(visitor, null);\n    if (!visitor.result || !visitor.result.length) {\n      // Try allwoing widening the path\n      const widerPath = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n      if (widerPath.tail) {\n        const widerVisitor = new ExpressionVisitor(\n            info, position, attr, () => getExpressionScope(dinfo, widerPath, false));\n        widerPath.tail.visit(widerVisitor, null);\n        return widerVisitor.result;\n      }\n    }\n    return visitor.result;\n  }\n}\n\nfunction elementCompletions(info: TemplateInfo, path: AstPath<HtmlAst>): Completions|undefined {\n  let htmlNames = elementNames().filter(name => !(name in hiddenHtmlElements));\n\n  // Collect the elements referenced by the selectors\n  let directiveElements = getSelectors(info)\n                              .selectors.map(selector => selector.element)\n                              .filter(name => !!name) as string[];\n\n  let components =\n      directiveElements.map<Completion>(name => ({kind: 'component', name, sort: name}));\n  let htmlElements = htmlNames.map<Completion>(name => ({kind: 'element', name: name, sort: name}));\n\n  // Return components and html elements\n  return uniqueByName(htmlElements.concat(components));\n}\n\nfunction entityCompletions(value: string, position: number): Completions|undefined {\n  // Look for entity completions\n  const re = /&[A-Za-z]*;?(?!\\d)/g;\n  let found: RegExpExecArray|null;\n  let result: Completions|undefined = undefined;\n  while (found = re.exec(value)) {\n    let len = found[0].length;\n    if (position >= found.index && position < (found.index + len)) {\n      result = Object.keys(NAMED_ENTITIES)\n                   .map<Completion>(name => ({kind: 'entity', name: `&${name};`, sort: name}));\n      break;\n    }\n  }\n  return result;\n}\n\nfunction interpolationCompletions(info: TemplateInfo, position: number): Completions|undefined {\n  // Look for an interpolation in at the position.\n  const templatePath = findTemplateAstAt(info.templateAst, position);\n  const mostSpecific = templatePath.tail;\n  if (mostSpecific) {\n    let visitor = new ExpressionVisitor(\n        info, position, undefined,\n        () => getExpressionScope(diagnosticInfoFromTemplateInfo(info), templatePath, false));\n    mostSpecific.visit(visitor, null);\n    return uniqueByName(visitor.result);\n  }\n}\n\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info: TemplateInfo, path: AstPath<HtmlAst>): Completions|\n    undefined {\n  let tail = path.tail;\n  if (tail instanceof Text) {\n    let match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n    // The position must be after the match, otherwise we are still in a place where elements\n    // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n    if (match &&\n        path.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n      return attributeCompletionsForElement(info, match[3]);\n    }\n  }\n}\n\nclass ExpressionVisitor extends NullTemplateVisitor {\n  private getExpressionScope: () => SymbolTable;\n  result: Completions;\n\n  constructor(\n      private info: TemplateInfo, private position: number, private attr?: Attribute,\n      getExpressionScope?: () => SymbolTable) {\n    super();\n    this.getExpressionScope = getExpressionScope || (() => info.template.members);\n  }\n\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst): void {\n    this.attributeValueCompletions(ast.value);\n  }\n\n  visitElementProperty(ast: BoundElementPropertyAst): void {\n    this.attributeValueCompletions(ast.value);\n  }\n\n  visitEvent(ast: BoundEventAst): void { this.attributeValueCompletions(ast.handler); }\n\n  visitElement(ast: ElementAst): void {\n    if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n      // The value is a template expression but the expression AST was not produced when the\n      // TemplateAst was produce so\n      // do that now.\n\n      const key = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n\n      // Find the selector\n      const selectorInfo = getSelectors(this.info);\n      const selectors = selectorInfo.selectors;\n      const selector =\n          selectors.filter(s => s.attrs.some((attr, i) => i % 2 == 0 && attr == key))[0];\n\n      const templateBindingResult =\n          this.info.expressionParser.parseTemplateBindings(key, this.attr.value, null);\n\n      // find the template binding that contains the position\n      if (!this.attr.valueSpan) return;\n      const valueRelativePosition = this.position - this.attr.valueSpan.start.offset - 1;\n      const bindings = templateBindingResult.templateBindings;\n      const binding =\n          bindings.find(\n              binding => inSpan(valueRelativePosition, binding.span, /* exclusive */ true)) ||\n          bindings.find(binding => inSpan(valueRelativePosition, binding.span));\n\n      const keyCompletions = () => {\n        let keys: string[] = [];\n        if (selector) {\n          const attrNames = selector.attrs.filter((_, i) => i % 2 == 0);\n          keys = attrNames.filter(name => name.startsWith(key) && name != key)\n                     .map(name => lowerName(name.substr(key.length)));\n        }\n        keys.push('let');\n        this.result = keys.map(key => <Completion>{kind: 'key', name: key, sort: key});\n      };\n\n      if (!binding || (binding.key == key && !binding.expression)) {\n        // We are in the root binding. We should return `let` and keys that are left in the\n        // selector.\n        keyCompletions();\n      } else if (binding.keyIsVar) {\n        const equalLocation = this.attr.value.indexOf('=');\n        this.result = [];\n        if (equalLocation >= 0 && valueRelativePosition >= equalLocation) {\n          // We are after the '=' in a let clause. The valid values here are the members of the\n          // template reference's type parameter.\n          const directiveMetadata = selectorInfo.map.get(selector);\n          if (directiveMetadata) {\n            const contextTable =\n                this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n            if (contextTable) {\n              this.result = this.symbolsToCompletions(contextTable.values());\n            }\n          }\n        } else if (binding.key && valueRelativePosition <= (binding.key.length - key.length)) {\n          keyCompletions();\n        }\n      } else {\n        // If the position is in the expression or after the key or there is no key, return the\n        // expression completions\n        if ((binding.expression && inSpan(valueRelativePosition, binding.expression.ast.span)) ||\n            (binding.key &&\n             valueRelativePosition > binding.span.start + (binding.key.length - key.length)) ||\n            !binding.key) {\n          const span = new ParseSpan(0, this.attr.value.length);\n          this.attributeValueCompletions(\n              binding.expression ? binding.expression.ast :\n                                   new PropertyRead(span, new ImplicitReceiver(span), ''),\n              valueRelativePosition);\n        } else {\n          keyCompletions();\n        }\n      }\n    }\n  }\n\n  visitBoundText(ast: BoundTextAst) {\n    const expressionPosition = this.position - ast.sourceSpan.start.offset;\n    if (inSpan(expressionPosition, ast.value.span)) {\n      const completions = getExpressionCompletions(\n          this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n      if (completions) {\n        this.result = this.symbolsToCompletions(completions);\n      }\n    }\n  }\n\n  private attributeValueCompletions(value: AST, position?: number) {\n    const symbols = getExpressionCompletions(\n        this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position,\n        this.info.template.query);\n    if (symbols) {\n      this.result = this.symbolsToCompletions(symbols);\n    }\n  }\n\n  private symbolsToCompletions(symbols: Symbol[]): Completions {\n    return symbols.filter(s => !s.name.startsWith('__') && s.public)\n        .map(symbol => <Completion>{kind: symbol.kind, name: symbol.name, sort: symbol.name});\n  }\n\n  private get attributeValuePosition() {\n    if (this.attr && this.attr.valueSpan) {\n      return this.position - this.attr.valueSpan.start.offset - 1;\n    }\n    return 0;\n  }\n}\n\nfunction getSourceText(template: TemplateSource, span: Span): string {\n  return template.source.substring(span.start, span.end);\n}\n\nfunction nameOfAttr(attr: AttrInfo): string {\n  let name = attr.name;\n  if (attr.output) {\n    name = removeSuffix(name, 'Events');\n    name = removeSuffix(name, 'Changed');\n  }\n  let result = [name];\n  if (attr.input) {\n    result.unshift('[');\n    result.push(']');\n  }\n  if (attr.output) {\n    result.unshift('(');\n    result.push(')');\n  }\n  if (attr.template) {\n    result.unshift('*');\n  }\n  return result.join('');\n}\n\nconst templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element: Element): CssSelector {\n  const cssSelector = new CssSelector();\n  let elNameNoNs = splitNsName(element.name)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let attr of element.attrs) {\n    if (!attr.name.match(templateAttr)) {\n      let [_, attrNameNoNs] = splitNsName(attr.name);\n      cssSelector.addAttribute(attrNameNoNs, attr.value);\n      if (attr.name.toLowerCase() == 'class') {\n        const classes = attr.value.split(/s+/g);\n        classes.forEach(className => cssSelector.addClassName(className));\n      }\n    }\n  }\n  return cssSelector;\n}\n\nfunction foldAttrs(attrs: AttrInfo[]): AttrInfo[] {\n  let inputOutput = new Map<string, AttrInfo>();\n  let templates = new Map<string, AttrInfo>();\n  let result: AttrInfo[] = [];\n  attrs.forEach(attr => {\n    if (attr.fromHtml) {\n      return attr;\n    }\n    if (attr.template) {\n      let duplicate = templates.get(attr.name);\n      if (!duplicate) {\n        result.push({name: attr.name, template: true});\n        templates.set(attr.name, attr);\n      }\n    }\n    if (attr.input || attr.output) {\n      let duplicate = inputOutput.get(attr.name);\n      if (duplicate) {\n        duplicate.input = duplicate.input || attr.input;\n        duplicate.output = duplicate.output || attr.output;\n      } else {\n        let cloneAttr: AttrInfo = {name: attr.name};\n        if (attr.input) cloneAttr.input = true;\n        if (attr.output) cloneAttr.output = true;\n        result.push(cloneAttr);\n        inputOutput.set(attr.name, cloneAttr);\n      }\n    }\n  });\n  return result;\n}\n\nfunction expandedAttr(attr: AttrInfo): AttrInfo[] {\n  if (attr.input && attr.output) {\n    return [\n      attr, {name: attr.name, input: true, output: false},\n      {name: attr.name, input: false, output: true}\n    ];\n  }\n  return [attr];\n}\n\nfunction lowerName(name: string): string {\n  return name && (name[0].toLowerCase() + name.substr(1));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AST, Attribute, BoundDirectivePropertyAst, BoundEventAst, ElementAst, TemplateAst, TemplateAstPath, findNode, tokenReference} from '@angular/compiler';\nimport {getExpressionScope} from '@angular/compiler-cli';\n\nimport {TemplateInfo} from './common';\nimport {getExpressionSymbol} from './expressions';\nimport {Definition, Location, Span, Symbol, SymbolTable} from './types';\nimport {diagnosticInfoFromTemplateInfo, findTemplateAstAt, inSpan, offsetSpan, spanOf} from './utils';\n\nexport interface SymbolInfo {\n  symbol: Symbol;\n  span: Span;\n}\n\nexport function locateSymbol(info: TemplateInfo): SymbolInfo|undefined {\n  if (!info.position) return undefined;\n  const templatePosition = info.position - info.template.span.start;\n  const path = findTemplateAstAt(info.templateAst, templatePosition);\n  if (path.tail) {\n    let symbol: Symbol|undefined = undefined;\n    let span: Span|undefined = undefined;\n    const attributeValueSymbol = (ast: AST, inEvent: boolean = false): boolean => {\n      const attribute = findAttribute(info);\n      if (attribute) {\n        if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n          const dinfo = diagnosticInfoFromTemplateInfo(info);\n          const scope = getExpressionScope(dinfo, path, inEvent);\n          if (attribute.valueSpan) {\n            const expressionOffset = attribute.valueSpan.start.offset + 1;\n            const result = getExpressionSymbol(\n                scope, ast, templatePosition - expressionOffset, info.template.query);\n            if (result) {\n              symbol = result.symbol;\n              span = offsetSpan(result.span, expressionOffset);\n            }\n          }\n          return true;\n        }\n      }\n      return false;\n    };\n    path.tail.visit(\n        {\n          visitNgContent(ast) {},\n          visitEmbeddedTemplate(ast) {},\n          visitElement(ast) {\n            const component = ast.directives.find(d => d.directive.isComponent);\n            if (component) {\n              symbol = info.template.query.getTypeSymbol(component.directive.type.reference);\n              symbol = symbol && new OverrideKindSymbol(symbol, 'component');\n              span = spanOf(ast);\n            } else {\n              // Find a directive that matches the element name\n              const directive = ast.directives.find(\n                  d => d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0);\n              if (directive) {\n                symbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                symbol = symbol && new OverrideKindSymbol(symbol, 'directive');\n                span = spanOf(ast);\n              }\n            }\n          },\n          visitReference(ast) {\n            symbol = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n            span = spanOf(ast);\n          },\n          visitVariable(ast) {},\n          visitEvent(ast) {\n            if (!attributeValueSymbol(ast.handler, /* inEvent */ true)) {\n              symbol = findOutputBinding(info, path, ast);\n              symbol = symbol && new OverrideKindSymbol(symbol, 'event');\n              span = spanOf(ast);\n            }\n          },\n          visitElementProperty(ast) { attributeValueSymbol(ast.value); },\n          visitAttr(ast) {},\n          visitBoundText(ast) {\n            const expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n            if (inSpan(expressionPosition, ast.value.span)) {\n              const dinfo = diagnosticInfoFromTemplateInfo(info);\n              const scope = getExpressionScope(dinfo, path, /* includeEvent */ false);\n              const result =\n                  getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n              if (result) {\n                symbol = result.symbol;\n                span = offsetSpan(result.span, ast.sourceSpan.start.offset);\n              }\n            }\n          },\n          visitText(ast) {},\n          visitDirective(ast) {\n            symbol = info.template.query.getTypeSymbol(ast.directive.type.reference);\n            span = spanOf(ast);\n          },\n          visitDirectiveProperty(ast) {\n            if (!attributeValueSymbol(ast.value)) {\n              symbol = findInputBinding(info, path, ast);\n              span = spanOf(ast);\n            }\n          }\n        },\n        null);\n    if (symbol && span) {\n      return {symbol, span: offsetSpan(span, info.template.span.start)};\n    }\n  }\n}\n\nfunction findAttribute(info: TemplateInfo): Attribute|undefined {\n  if (info.position) {\n    const templatePosition = info.position - info.template.span.start;\n    const path = findNode(info.htmlAst, templatePosition);\n    return path.first(Attribute);\n  }\n}\n\nfunction findInputBinding(\n    info: TemplateInfo, path: TemplateAstPath, binding: BoundDirectivePropertyAst): Symbol|\n    undefined {\n  const element = path.first(ElementAst);\n  if (element) {\n    for (const directive of element.directives) {\n      const invertedInput = invertMap(directive.directive.inputs);\n      const fieldName = invertedInput[binding.templateName];\n      if (fieldName) {\n        const classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n        if (classSymbol) {\n          return classSymbol.members().get(fieldName);\n        }\n      }\n    }\n  }\n}\n\nfunction findOutputBinding(\n    info: TemplateInfo, path: TemplateAstPath, binding: BoundEventAst): Symbol|undefined {\n  const element = path.first(ElementAst);\n  if (element) {\n    for (const directive of element.directives) {\n      const invertedOutputs = invertMap(directive.directive.outputs);\n      const fieldName = invertedOutputs[binding.name];\n      if (fieldName) {\n        const classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n        if (classSymbol) {\n          return classSymbol.members().get(fieldName);\n        }\n      }\n    }\n  }\n}\n\nfunction invertMap(obj: {[name: string]: string}): {[name: string]: string} {\n  const result: {[name: string]: string} = {};\n  for (const name of Object.keys(obj)) {\n    const v = obj[name];\n    result[v] = name;\n  }\n  return result;\n}\n\n/**\n * Wrap a symbol and change its kind to component.\n */\nclass OverrideKindSymbol implements Symbol {\n  constructor(private sym: Symbol, private kindOverride: string) {}\n\n  get name(): string { return this.sym.name; }\n\n  get kind(): string { return this.kindOverride; }\n\n  get language(): string { return this.sym.language; }\n\n  get type(): Symbol|undefined { return this.sym.type; }\n\n  get container(): Symbol|undefined { return this.sym.container; }\n\n  get public(): boolean { return this.sym.public; }\n\n  get callable(): boolean { return this.sym.callable; }\n\n  get nullable(): boolean { return this.sym.nullable; }\n\n  get definition(): Definition { return this.sym.definition; }\n\n  members() { return this.sym.members(); }\n\n  signatures() { return this.sym.signatures(); }\n\n  selectSignature(types: Symbol[]) { return this.sym.selectSignature(types); }\n\n  indexed(argument: Symbol) { return this.sym.indexed(argument); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplateInfo} from './common';\nimport {locateSymbol} from './locate_symbol';\nimport {Definition} from './types';\n\nexport function getDefinition(info: TemplateInfo): Definition {\n  const result = locateSymbol(info);\n  return result && result.symbol.definition;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgAnalyzedModules, StaticSymbol} from '@angular/compiler';\nimport {DiagnosticTemplateInfo, getTemplateExpressionDiagnostics} from '@angular/compiler-cli';\n\nimport {AstResult} from './common';\nimport {Declarations, Diagnostic, DiagnosticKind, Diagnostics, Span, TemplateSource} from './types';\nimport {offsetSpan, spanOf} from './utils';\n\nexport interface AstProvider {\n  getTemplateAst(template: TemplateSource, fileName: string): AstResult;\n}\n\nexport function getTemplateDiagnostics(\n    fileName: string, astProvider: AstProvider, templates: TemplateSource[]): Diagnostics {\n  const results: Diagnostics = [];\n  for (const template of templates) {\n    const ast = astProvider.getTemplateAst(template, fileName);\n    if (ast) {\n      if (ast.parseErrors && ast.parseErrors.length) {\n        results.push(...ast.parseErrors.map<Diagnostic>(\n            e => ({\n              kind: DiagnosticKind.Error,\n              span: offsetSpan(spanOf(e.span), template.span.start),\n              message: e.msg\n            })));\n      } else if (ast.templateAst && ast.htmlAst) {\n        const info: DiagnosticTemplateInfo = {\n          templateAst: ast.templateAst,\n          htmlAst: ast.htmlAst,\n          offset: template.span.start,\n          query: template.query,\n          members: template.members\n        };\n        const expressionDiagnostics = getTemplateExpressionDiagnostics(info);\n        results.push(...expressionDiagnostics);\n      }\n      if (ast.errors) {\n        results.push(...ast.errors.map<Diagnostic>(\n            e => ({kind: e.kind, span: e.span || template.span, message: e.message})));\n      }\n    }\n  }\n  return results;\n}\n\nexport function getDeclarationDiagnostics(\n    declarations: Declarations, modules: NgAnalyzedModules): Diagnostics {\n  const results: Diagnostics = [];\n\n  let directives: Set<StaticSymbol>|undefined = undefined;\n  for (const declaration of declarations) {\n    const report = (message: string, span?: Span) => {\n      results.push(<Diagnostic>{\n        kind: DiagnosticKind.Error,\n        span: span || declaration.declarationSpan, message\n      });\n    };\n    for (const error of declaration.errors) {\n      report(error.message, error.span);\n    }\n    if (declaration.metadata) {\n      if (declaration.metadata.isComponent) {\n        if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n          report(\n              `Component '${declaration.type.name}' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration`);\n        }\n        if (!declaration.metadata.template !.template &&\n            !declaration.metadata.template !.templateUrl) {\n          report(`Component ${declaration.type.name} must have a template or templateUrl`);\n        }\n      } else {\n        if (!directives) {\n          directives = new Set();\n          modules.ngModules.forEach(module => {\n            module.declaredDirectives.forEach(\n                directive => { directives !.add(directive.reference); });\n          });\n        }\n        if (!directives.has(declaration.type)) {\n          report(\n              `Directive '${declaration.type.name}' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration`);\n        }\n      }\n    }\n  }\n\n  return results;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplateInfo} from './common';\nimport {locateSymbol} from './locate_symbol';\nimport {Hover, HoverTextSection, Symbol} from './types';\n\nexport function getHover(info: TemplateInfo): Hover|undefined {\n  const result = locateSymbol(info);\n  if (result) {\n    return {text: hoverTextOf(result.symbol), span: result.span};\n  }\n}\n\nfunction hoverTextOf(symbol: Symbol): HoverTextSection[] {\n  const result: HoverTextSection[] =\n      [{text: symbol.kind}, {text: ' '}, {text: symbol.name, language: symbol.language}];\n  const container = symbol.container;\n  if (container) {\n    result.push({text: ' of '}, {text: container.name, language: container.language});\n  }\n  return result;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileMetadataResolver, CompileNgModuleMetadata, CompilePipeSummary, CompilerConfig, DomElementSchemaRegistry, HtmlParser, I18NHtmlParser, Lexer, NgAnalyzedModules, Parser, TemplateParser} from '@angular/compiler';\n\nimport {AstResult, TemplateInfo} from './common';\nimport {getTemplateCompletions} from './completions';\nimport {getDefinition} from './definitions';\nimport {getDeclarationDiagnostics, getTemplateDiagnostics} from './diagnostics';\nimport {getHover} from './hover';\nimport {Completions, Definition, Diagnostic, DiagnosticKind, Diagnostics, Hover, LanguageService, LanguageServiceHost, Pipes, Span, TemplateSource} from './types';\n\n\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nexport function createLanguageService(host: LanguageServiceHost): LanguageService {\n  return new LanguageServiceImpl(host);\n}\n\nclass LanguageServiceImpl implements LanguageService {\n  constructor(private host: LanguageServiceHost) {}\n\n  private get metadataResolver(): CompileMetadataResolver { return this.host.resolver; }\n\n  getTemplateReferences(): string[] { return this.host.getTemplateReferences(); }\n\n  getDiagnostics(fileName: string): Diagnostics|undefined {\n    let results: Diagnostics = [];\n    let templates = this.host.getTemplates(fileName);\n    if (templates && templates.length) {\n      results.push(...getTemplateDiagnostics(fileName, this, templates));\n    }\n\n    let declarations = this.host.getDeclarations(fileName);\n    if (declarations && declarations.length) {\n      const summary = this.host.getAnalyzedModules();\n      results.push(...getDeclarationDiagnostics(declarations, summary));\n    }\n\n    return uniqueBySpan(results);\n  }\n\n  getPipesAt(fileName: string, position: number): CompilePipeSummary[] {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return templateInfo.pipes;\n    }\n    return [];\n  }\n\n  getCompletionsAt(fileName: string, position: number): Completions {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return getTemplateCompletions(templateInfo);\n    }\n  }\n\n  getDefinitionAt(fileName: string, position: number): Definition {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return getDefinition(templateInfo);\n    }\n  }\n\n  getHoverAt(fileName: string, position: number): Hover|undefined {\n    let templateInfo = this.getTemplateAstAtPosition(fileName, position);\n    if (templateInfo) {\n      return getHover(templateInfo);\n    }\n  }\n\n  private getTemplateAstAtPosition(fileName: string, position: number): TemplateInfo|undefined {\n    let template = this.host.getTemplateAt(fileName, position);\n    if (template) {\n      let astResult = this.getTemplateAst(template, fileName);\n      if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n          astResult.directives && astResult.pipes && astResult.expressionParser)\n        return {\n          position,\n          fileName,\n          template,\n          htmlAst: astResult.htmlAst,\n          directive: astResult.directive,\n          directives: astResult.directives,\n          pipes: astResult.pipes,\n          templateAst: astResult.templateAst,\n          expressionParser: astResult.expressionParser\n        };\n    }\n    return undefined;\n  }\n\n  getTemplateAst(template: TemplateSource, contextFile: string): AstResult {\n    let result: AstResult|undefined = undefined;\n    try {\n      const resolvedMetadata =\n          this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type as any);\n      const metadata = resolvedMetadata && resolvedMetadata.metadata;\n      if (metadata) {\n        const rawHtmlParser = new HtmlParser();\n        const htmlParser = new I18NHtmlParser(rawHtmlParser);\n        const expressionParser = new Parser(new Lexer());\n        const config = new CompilerConfig();\n        const parser = new TemplateParser(\n            config, this.host.resolver.getReflector(), expressionParser,\n            new DomElementSchemaRegistry(), htmlParser, null !, []);\n        const htmlResult = htmlParser.parse(template.source, '', true);\n        const analyzedModules = this.host.getAnalyzedModules();\n        let errors: Diagnostic[]|undefined = undefined;\n        let ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n        if (!ngModule) {\n          // Reported by the the declaration diagnostics.\n          ngModule = findSuitableDefaultModule(analyzedModules);\n        }\n        if (ngModule) {\n          const resolvedDirectives = ngModule.transitiveModule.directives.map(\n              d => this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference));\n          const directives = removeMissing(resolvedDirectives).map(d => d.metadata.toSummary());\n          const pipes = ngModule.transitiveModule.pipes.map(\n              p => this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary());\n          const schemas = ngModule.schemas;\n          const parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n          result = {\n            htmlAst: htmlResult.rootNodes,\n            templateAst: parseResult.templateAst,\n            directive: metadata, directives, pipes,\n            parseErrors: parseResult.errors, expressionParser, errors\n          };\n        }\n      }\n    } catch (e) {\n      let span = template.span;\n      if (e.fileName == contextFile) {\n        span = template.query.getSpanAt(e.line, e.column) || span;\n      }\n      result = {errors: [{kind: DiagnosticKind.Error, message: e.message, span}]};\n    }\n    return result || {};\n  }\n}\n\nfunction removeMissing<T>(values: (T | null | undefined)[]): T[] {\n  return values.filter(e => !!e) as T[];\n}\n\nfunction uniqueBySpan < T extends {\n  span: Span;\n}\n> (elements: T[] | undefined): T[]|undefined {\n  if (elements) {\n    const result: T[] = [];\n    const map = new Map<number, Set<number>>();\n    for (const element of elements) {\n      let span = element.span;\n      let set = map.get(span.start);\n      if (!set) {\n        set = new Set();\n        map.set(span.start, set);\n      }\n      if (!set.has(span.end)) {\n        set.add(span.end);\n        result.push(element);\n      }\n    }\n    return result;\n  }\n}\n\nfunction findSuitableDefaultModule(modules: NgAnalyzedModules): CompileNgModuleMetadata|undefined {\n  let result: CompileNgModuleMetadata|undefined = undefined;\n  let resultSize = 0;\n  for (const module of modules.ngModules) {\n    const moduleSize = module.transitiveModule.directives.length;\n    if (moduleSize > resultSize) {\n      result = module;\n      resultSize = moduleSize;\n    }\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AngularCompilerOptions, AotCompilerHost, CompilerHost, ModuleResolutionHostAdapter} from '@angular/compiler-cli';\nimport * as ts from 'typescript';\n\nclass ReflectorModuleModuleResolutionHost implements ts.ModuleResolutionHost {\n  constructor(private host: ts.LanguageServiceHost) {\n    if (host.directoryExists)\n      this.directoryExists = directoryName => this.host.directoryExists !(directoryName);\n  }\n\n  fileExists(fileName: string): boolean { return !!this.host.getScriptSnapshot(fileName); }\n\n  readFile(fileName: string): string {\n    let snapshot = this.host.getScriptSnapshot(fileName);\n    if (snapshot) {\n      return snapshot.getText(0, snapshot.getLength());\n    }\n\n    // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n    return undefined !;\n  }\n\n  directoryExists: (directoryName: string) => boolean;\n}\n\n// This reflector host's purpose is to first set verboseInvalidExpressions to true so the\n// reflector will collect errors instead of throwing, and second to all deferring the creation\n// of the program until it is actually needed.\nexport class ReflectorHost extends CompilerHost {\n  constructor(\n      private getProgram: () => ts.Program, serviceHost: ts.LanguageServiceHost,\n      options: AngularCompilerOptions) {\n    super(\n        // The ancestor value for program is overridden below so passing null here is safe.\n        /* program */ null !, options,\n        new ModuleResolutionHostAdapter(new ReflectorModuleModuleResolutionHost(serviceHost)),\n        {verboseInvalidExpression: true});\n  }\n\n  protected get program() { return this.getProgram(); }\n  protected set program(value: ts.Program) {\n    // Discard the result set by ancestor constructor\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AotSummaryResolver, CompileMetadataResolver, CompilerConfig, DEFAULT_INTERPOLATION_CONFIG, DirectiveNormalizer, DirectiveResolver, DomElementSchemaRegistry, HtmlParser, InterpolationConfig, JitSummaryResolver, NgAnalyzedModules, NgModuleResolver, ParseTreeResult, PipeResolver, ResourceLoader, StaticReflector, StaticSymbol, StaticSymbolCache, StaticSymbolResolver, SummaryResolver, analyzeNgModules, createOfflineCompileUrlResolver, extractProgramSymbols} from '@angular/compiler';\nimport {AngularCompilerOptions, getClassMembersFromDeclaration, getPipesTable, getSymbolQuery} from '@angular/compiler-cli';\nimport {ViewEncapsulation, ɵConsole as Console} from '@angular/core';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\n\nimport {createLanguageService} from './language_service';\nimport {ReflectorHost} from './reflector_host';\nimport {BuiltinType, Declaration, DeclarationError, DeclarationKind, Declarations, Definition, LanguageService, LanguageServiceHost, PipeInfo, Pipes, Signature, Span, Symbol, SymbolDeclaration, SymbolQuery, SymbolTable, TemplateSource, TemplateSources} from './types';\nimport {isTypescriptVersion} from './utils';\n\n\n/**\n * Create a `LanguageServiceHost`\n */\nexport function createLanguageServiceFromTypescript(\n    host: ts.LanguageServiceHost, service: ts.LanguageService): LanguageService {\n  const ngHost = new TypeScriptServiceHost(host, service);\n  const ngServer = createLanguageService(ngHost);\n  ngHost.setSite(ngServer);\n  return ngServer;\n}\n\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nexport class DummyHtmlParser extends HtmlParser {\n  parse(\n      source: string, url: string, parseExpansionForms: boolean = false,\n      interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG): ParseTreeResult {\n    return new ParseTreeResult([], []);\n  }\n}\n\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nexport class DummyResourceLoader extends ResourceLoader {\n  get(url: string): Promise<string> { return Promise.resolve(''); }\n}\n\n/**\n * An implemntation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nexport class TypeScriptServiceHost implements LanguageServiceHost {\n  private _resolver: CompileMetadataResolver|null;\n  private _staticSymbolCache = new StaticSymbolCache();\n  private _summaryResolver: AotSummaryResolver;\n  private _staticSymbolResolver: StaticSymbolResolver;\n  private _reflector: StaticReflector|null;\n  private _reflectorHost: ReflectorHost;\n  private _checker: ts.TypeChecker|null;\n  private _typeCache: Symbol[] = [];\n  private context: string|undefined;\n  private lastProgram: ts.Program|undefined;\n  private modulesOutOfDate: boolean = true;\n  private analyzedModules: NgAnalyzedModules|null;\n  private service: LanguageService;\n  private fileToComponent: Map<string, StaticSymbol>|null;\n  private templateReferences: string[]|null;\n  private collectedErrors: Map<string, any[]>|null;\n  private fileVersions = new Map<string, string>();\n\n  constructor(private host: ts.LanguageServiceHost, private tsService: ts.LanguageService) {}\n\n  setSite(service: LanguageService) { this.service = service; }\n\n  /**\n   * Angular LanguageServiceHost implementation\n   */\n  get resolver(): CompileMetadataResolver {\n    this.validate();\n    let result = this._resolver;\n    if (!result) {\n      const moduleResolver = new NgModuleResolver(this.reflector);\n      const directiveResolver = new DirectiveResolver(this.reflector);\n      const pipeResolver = new PipeResolver(this.reflector);\n      const elementSchemaRegistry = new DomElementSchemaRegistry();\n      const resourceLoader = new DummyResourceLoader();\n      const urlResolver = createOfflineCompileUrlResolver();\n      const htmlParser = new DummyHtmlParser();\n      // This tracks the CompileConfig in codegen.ts. Currently these options\n      // are hard-coded.\n      const config =\n          new CompilerConfig({defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false});\n      const directiveNormalizer =\n          new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n\n      result = this._resolver = new CompileMetadataResolver(\n          config, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(),\n          elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache,\n          this.reflector, (error, type) => this.collectError(error, type && type.filePath));\n    }\n    return result;\n  }\n\n  getTemplateReferences(): string[] {\n    this.ensureTemplateMap();\n    return this.templateReferences || [];\n  }\n\n  getTemplateAt(fileName: string, position: number): TemplateSource|undefined {\n    let sourceFile = this.getSourceFile(fileName);\n    if (sourceFile) {\n      this.context = sourceFile.fileName;\n      let node = this.findNode(sourceFile, position);\n      if (node) {\n        return this.getSourceFromNode(\n            fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n      }\n    } else {\n      this.ensureTemplateMap();\n      // TODO: Cannocalize the file?\n      const componentType = this.fileToComponent !.get(fileName);\n      if (componentType) {\n        return this.getSourceFromType(\n            fileName, this.host.getScriptVersion(fileName), componentType);\n      }\n    }\n    return undefined;\n  }\n\n  getAnalyzedModules(): NgAnalyzedModules {\n    this.validate();\n    return this.ensureAnalyzedModules();\n  }\n\n  private ensureAnalyzedModules(): NgAnalyzedModules {\n    let analyzedModules = this.analyzedModules;\n    if (!analyzedModules) {\n      const analyzeHost = {isSourceFile(filePath: string) { return true; }};\n      const programSymbols = extractProgramSymbols(\n          this.staticSymbolResolver, this.program.getSourceFiles().map(sf => sf.fileName),\n          analyzeHost);\n\n      analyzedModules = this.analyzedModules =\n          analyzeNgModules(programSymbols, analyzeHost, this.resolver);\n    }\n    return analyzedModules;\n  }\n\n  getTemplates(fileName: string): TemplateSources {\n    this.ensureTemplateMap();\n    const componentType = this.fileToComponent !.get(fileName);\n    if (componentType) {\n      const templateSource = this.getTemplateAt(fileName, 0);\n      if (templateSource) {\n        return [templateSource];\n      }\n    } else {\n      let version = this.host.getScriptVersion(fileName);\n      let result: TemplateSource[] = [];\n\n      // Find each template string in the file\n      let visit = (child: ts.Node) => {\n        let templateSource = this.getSourceFromNode(fileName, version, child);\n        if (templateSource) {\n          result.push(templateSource);\n        } else {\n          ts.forEachChild(child, visit);\n        }\n      };\n\n      let sourceFile = this.getSourceFile(fileName);\n      if (sourceFile) {\n        this.context = (sourceFile as any).path || sourceFile.fileName;\n        ts.forEachChild(sourceFile, visit);\n      }\n      return result.length ? result : undefined;\n    }\n  }\n\n  getDeclarations(fileName: string): Declarations {\n    const result: Declarations = [];\n    const sourceFile = this.getSourceFile(fileName);\n    if (sourceFile) {\n      let visit = (child: ts.Node) => {\n        let declaration = this.getDeclarationFromNode(sourceFile, child);\n        if (declaration) {\n          result.push(declaration);\n        } else {\n          ts.forEachChild(child, visit);\n        }\n      };\n      ts.forEachChild(sourceFile, visit);\n    }\n    return result;\n  }\n\n  getSourceFile(fileName: string): ts.SourceFile {\n    return this.tsService.getProgram().getSourceFile(fileName);\n  }\n\n  updateAnalyzedModules() {\n    this.validate();\n    if (this.modulesOutOfDate) {\n      this.analyzedModules = null;\n      this._reflector = null;\n      this.templateReferences = null;\n      this.fileToComponent = null;\n      this.ensureAnalyzedModules();\n      this.modulesOutOfDate = false;\n    }\n  }\n\n  private get program() { return this.tsService.getProgram(); }\n\n  private get checker() {\n    let checker = this._checker;\n    if (!checker) {\n      checker = this._checker = this.program.getTypeChecker();\n    }\n    return checker;\n  }\n\n  private validate() {\n    const program = this.program;\n    if (this._staticSymbolResolver && this.lastProgram != program) {\n      // Invalidate file that have changed in the static symbol resolver\n      const invalidateFile = (fileName: string) =>\n          this._staticSymbolResolver.invalidateFile(fileName);\n      this.clearCaches();\n      const seen = new Set<string>();\n      for (let sourceFile of this.program.getSourceFiles()) {\n        const fileName = sourceFile.fileName;\n        seen.add(fileName);\n        const version = this.host.getScriptVersion(fileName);\n        const lastVersion = this.fileVersions.get(fileName);\n        if (version != lastVersion) {\n          this.fileVersions.set(fileName, version);\n          invalidateFile(fileName);\n        }\n      }\n\n      // Remove file versions that are no longer in the file and invalidate them.\n      const missing = Array.from(this.fileVersions.keys()).filter(f => !seen.has(f));\n      missing.forEach(f => this.fileVersions.delete(f));\n      missing.forEach(invalidateFile);\n\n      this.lastProgram = program;\n    }\n  }\n\n  private clearCaches() {\n    this._checker = null;\n    this._typeCache = [];\n    this._resolver = null;\n    this.collectedErrors = null;\n    this.modulesOutOfDate = true;\n  }\n\n  private ensureTemplateMap() {\n    if (!this.fileToComponent || !this.templateReferences) {\n      const fileToComponent = new Map<string, StaticSymbol>();\n      const templateReference: string[] = [];\n      const ngModuleSummary = this.getAnalyzedModules();\n      const urlResolver = createOfflineCompileUrlResolver();\n      for (const module of ngModuleSummary.ngModules) {\n        for (const directive of module.declaredDirectives) {\n          const {metadata} = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference) !;\n          if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n            const templateName = urlResolver.resolve(\n                this.reflector.componentModuleUrl(directive.reference),\n                metadata.template.templateUrl);\n            fileToComponent.set(templateName, directive.reference);\n            templateReference.push(templateName);\n          }\n        }\n      }\n      this.fileToComponent = fileToComponent;\n      this.templateReferences = templateReference;\n    }\n  }\n\n  private getSourceFromDeclaration(\n      fileName: string, version: string, source: string, span: Span, type: StaticSymbol,\n      declaration: ts.ClassDeclaration, node: ts.Node, sourceFile: ts.SourceFile): TemplateSource\n      |undefined {\n    let queryCache: SymbolQuery|undefined = undefined;\n    const t = this;\n    if (declaration) {\n      return {\n        version,\n        source,\n        span,\n        type,\n        get members() {\n          return getClassMembersFromDeclaration(t.program, t.checker, sourceFile, declaration);\n        },\n        get query() {\n          if (!queryCache) {\n            const pipes = t.service.getPipesAt(fileName, node.getStart());\n            queryCache = getSymbolQuery(\n                t.program, t.checker, sourceFile,\n                () => getPipesTable(sourceFile, t.program, t.checker, pipes));\n          }\n          return queryCache;\n        }\n      };\n    }\n  }\n\n  private getSourceFromNode(fileName: string, version: string, node: ts.Node): TemplateSource\n      |undefined {\n    let result: TemplateSource|undefined = undefined;\n    const t = this;\n    switch (node.kind) {\n      case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n      case ts.SyntaxKind.StringLiteral:\n        let [declaration, decorator] = this.getTemplateClassDeclFromNode(node);\n        if (declaration && declaration.name) {\n          const sourceFile = this.getSourceFile(fileName);\n          return this.getSourceFromDeclaration(\n              fileName, version, this.stringOf(node) || '', shrink(spanOf(node)),\n              this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text),\n              declaration, node, sourceFile);\n        }\n        break;\n    }\n    return result;\n  }\n\n  private getSourceFromType(fileName: string, version: string, type: StaticSymbol): TemplateSource\n      |undefined {\n    let result: TemplateSource|undefined = undefined;\n    const declaration = this.getTemplateClassFromStaticSymbol(type);\n    if (declaration) {\n      const snapshot = this.host.getScriptSnapshot(fileName);\n      if (snapshot) {\n        const source = snapshot.getText(0, snapshot.getLength());\n        result = this.getSourceFromDeclaration(\n            fileName, version, source, {start: 0, end: source.length}, type, declaration,\n            declaration, declaration.getSourceFile());\n      }\n    }\n    return result;\n  }\n\n  private get reflectorHost(): ReflectorHost {\n    let result = this._reflectorHost;\n    if (!result) {\n      if (!this.context) {\n        // Make up a context by finding the first script and using that as the base dir.\n        this.context = this.host.getScriptFileNames()[0];\n      }\n\n      // Use the file context's directory as the base directory.\n      // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n      // tsserver. We don't need the exact base directory, just one that contains\n      // a source file.\n      const source = this.tsService.getProgram().getSourceFile(this.context);\n      if (!source) {\n        throw new Error('Internal error: no context could be determined');\n      }\n\n      const tsConfigPath = findTsConfig(source.fileName);\n      const basePath = path.dirname(tsConfigPath || this.context);\n      const options: AngularCompilerOptions = {basePath, genDir: basePath};\n      const compilerOptions = this.host.getCompilationSettings();\n      if (compilerOptions && compilerOptions.baseUrl) {\n        options.baseUrl = compilerOptions.baseUrl;\n      }\n      result = this._reflectorHost =\n          new ReflectorHost(() => this.tsService.getProgram(), this.host, options);\n    }\n    return result;\n  }\n\n  private collectError(error: any, filePath: string|null) {\n    if (filePath) {\n      let errorMap = this.collectedErrors;\n      if (!errorMap || !this.collectedErrors) {\n        errorMap = this.collectedErrors = new Map();\n      }\n      let errors = errorMap.get(filePath);\n      if (!errors) {\n        errors = [];\n        this.collectedErrors.set(filePath, errors);\n      }\n      errors.push(error);\n    }\n  }\n\n  private get staticSymbolResolver(): StaticSymbolResolver {\n    let result = this._staticSymbolResolver;\n    if (!result) {\n      this._summaryResolver = new AotSummaryResolver(\n          {\n            loadSummary(filePath: string) { return null; },\n            isSourceFile(sourceFilePath: string) { return true; },\n            getOutputFileName(sourceFilePath: string) { return sourceFilePath; }\n          },\n          this._staticSymbolCache);\n      result = this._staticSymbolResolver = new StaticSymbolResolver(\n          this.reflectorHost as any, this._staticSymbolCache, this._summaryResolver,\n          (e, filePath) => this.collectError(e, filePath !));\n    }\n    return result;\n  }\n\n  private get reflector(): StaticReflector {\n    let result = this._reflector;\n    if (!result) {\n      const ssr = this.staticSymbolResolver;\n      result = this._reflector = new StaticReflector(\n          this._summaryResolver, ssr, [], [], (e, filePath) => this.collectError(e, filePath !));\n    }\n    return result;\n  }\n\n  private getTemplateClassFromStaticSymbol(type: StaticSymbol): ts.ClassDeclaration|undefined {\n    const source = this.getSourceFile(type.filePath);\n    if (source) {\n      const declarationNode = ts.forEachChild(source, child => {\n        if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n          const classDeclaration = child as ts.ClassDeclaration;\n          if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n            return classDeclaration;\n          }\n        }\n      });\n      return declarationNode as ts.ClassDeclaration;\n    }\n\n    return undefined;\n  }\n\n  private static missingTemplate: [ts.ClassDeclaration | undefined, ts.Expression|undefined] =\n      [undefined, undefined];\n\n  /**\n   * Given a template string node, see if it is an Angular template string, and if so return the\n   * containing class.\n   */\n  private getTemplateClassDeclFromNode(currentToken: ts.Node):\n      [ts.ClassDeclaration | undefined, ts.Expression|undefined] {\n    // Verify we are in a 'template' property assignment, in an object literal, which is an call\n    // arg, in a decorator\n    let parentNode = currentToken.parent;  // PropertyAssignment\n    if (!parentNode) {\n      return TypeScriptServiceHost.missingTemplate;\n    }\n    if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n      return TypeScriptServiceHost.missingTemplate;\n    } else {\n      // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n      if ((parentNode as any).name.text !== 'template') {\n        return TypeScriptServiceHost.missingTemplate;\n      }\n    }\n    parentNode = parentNode.parent;  // ObjectLiteralExpression\n    if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n      return TypeScriptServiceHost.missingTemplate;\n    }\n\n    parentNode = parentNode.parent;  // CallExpression\n    if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n      return TypeScriptServiceHost.missingTemplate;\n    }\n    const callTarget = (<ts.CallExpression>parentNode).expression;\n\n    let decorator = parentNode.parent;  // Decorator\n    if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n      return TypeScriptServiceHost.missingTemplate;\n    }\n\n    let declaration = <ts.ClassDeclaration>decorator.parent;  // ClassDeclaration\n    if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n      return TypeScriptServiceHost.missingTemplate;\n    }\n    return [declaration, callTarget];\n  }\n\n  private getCollectedErrors(defaultSpan: Span, sourceFile: ts.SourceFile): DeclarationError[] {\n    const errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n    return (errors && errors.map((e: any) => {\n             return {message: e.message, span: spanAt(sourceFile, e.line, e.column) || defaultSpan};\n           })) ||\n        [];\n  }\n\n  private getDeclarationFromNode(sourceFile: ts.SourceFile, node: ts.Node): Declaration|undefined {\n    if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n        (node as ts.ClassDeclaration).name) {\n      for (const decorator of node.decorators) {\n        if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n          const classDeclaration = node as ts.ClassDeclaration;\n          if (classDeclaration.name) {\n            const call = decorator.expression as ts.CallExpression;\n            const target = call.expression;\n            const type = this.checker.getTypeAtLocation(target);\n            if (type) {\n              const staticSymbol =\n                  this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n              try {\n                if (this.resolver.isDirective(staticSymbol as any)) {\n                  const {metadata} =\n                      this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol as any) !;\n                  const declarationSpan = spanOf(target);\n                  return {\n                    type: staticSymbol,\n                    declarationSpan,\n                    metadata,\n                    errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                  };\n                }\n              } catch (e) {\n                if (e.message) {\n                  this.collectError(e, sourceFile.fileName);\n                  const declarationSpan = spanOf(target);\n                  return {\n                    type: staticSymbol,\n                    declarationSpan,\n                    errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                  };\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private stringOf(node: ts.Node): string|undefined {\n    switch (node.kind) {\n      case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n        return (<ts.LiteralExpression>node).text;\n      case ts.SyntaxKind.StringLiteral:\n        return (<ts.StringLiteral>node).text;\n    }\n  }\n\n  private findNode(sourceFile: ts.SourceFile, position: number): ts.Node|undefined {\n    function find(node: ts.Node): ts.Node|undefined {\n      if (position >= node.getStart() && position < node.getEnd()) {\n        return ts.forEachChild(node, find) || node;\n      }\n    }\n\n    return find(sourceFile);\n  }\n}\n\n\nfunction findTsConfig(fileName: string): string|undefined {\n  let dir = path.dirname(fileName);\n  while (fs.existsSync(dir)) {\n    const candidate = path.join(dir, 'tsconfig.json');\n    if (fs.existsSync(candidate)) return candidate;\n    const parentDir = path.dirname(dir);\n    if (parentDir === dir) break;\n    dir = parentDir;\n  }\n}\n\nfunction spanOf(node: ts.Node): Span {\n  return {start: node.getStart(), end: node.getEnd()};\n}\n\nfunction shrink(span: Span, offset?: number) {\n  if (offset == null) offset = 1;\n  return {start: span.start + offset, end: span.end - offset};\n}\n\nfunction spanAt(sourceFile: ts.SourceFile, line: number, column: number): Span|undefined {\n  if (line != null && column != null) {\n    const position = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n    const findChild = function findChild(node: ts.Node): ts.Node | undefined {\n      if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position && node.end > position) {\n        const betterNode = ts.forEachChild(node, findChild);\n        return betterNode || node;\n      }\n    };\n\n    const node = ts.forEachChild(sourceFile, findChild);\n    if (node) {\n      return {start: node.getStart(), end: node.getEnd()};\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {createLanguageService} from './language_service';\nimport {Completion, Diagnostic, LanguageService, LanguageServiceHost} from './types';\nimport {TypeScriptServiceHost} from './typescript_host';\n\nconst projectHostMap = new WeakMap<any, TypeScriptServiceHost>();\n\nexport function getExternalFiles(project: any): string[]|undefined {\n  const host = projectHostMap.get(project);\n  if (host) {\n    return host.getTemplateReferences();\n  }\n}\n\nconst angularOnlyResults = process.argv.indexOf('--angularOnlyResults') >= 0;\n\nfunction angularOnlyFilter(ls: ts.LanguageService): ts.LanguageService {\n  return {\n    cleanupSemanticCache: () => ls.cleanupSemanticCache(),\n    getSyntacticDiagnostics: fileName => <ts.Diagnostic[]>[],\n    getSemanticDiagnostics: fileName => <ts.Diagnostic[]>[],\n    getCompilerOptionsDiagnostics: () => <ts.Diagnostic[]>[],\n    getSyntacticClassifications: (fileName, span) => [],\n    getSemanticClassifications: (fileName, span) => [],\n    getEncodedSyntacticClassifications: (fileName, span) => <ts.Classifications><any>{undefined},\n    getEncodedSemanticClassifications: (fileName, span) => <ts.Classifications><any>undefined,\n    getCompletionsAtPosition: (fileName, position) => <ts.CompletionInfo><any>undefined,\n    getCompletionEntryDetails: (fileName, position, entryName) =>\n                                   <ts.CompletionEntryDetails><any>undefined,\n    getCompletionEntrySymbol: (fileName, position, entryName) => <ts.Symbol><any>undefined,\n    getQuickInfoAtPosition: (fileName, position) => <ts.QuickInfo><any>undefined,\n    getNameOrDottedNameSpan: (fileName, startPos, endPos) => <ts.TextSpan><any>undefined,\n    getBreakpointStatementAtPosition: (fileName, position) => <ts.TextSpan><any>undefined,\n    getSignatureHelpItems: (fileName, position) => <ts.SignatureHelpItems><any>undefined,\n    getRenameInfo: (fileName, position) => <ts.RenameInfo><any>undefined,\n    findRenameLocations: (fileName, position, findInStrings, findInComments) =>\n                             <ts.RenameLocation[]>[],\n    getDefinitionAtPosition: (fileName, position) => <ts.DefinitionInfo[]>[],\n    getTypeDefinitionAtPosition: (fileName, position) => <ts.DefinitionInfo[]>[],\n    getImplementationAtPosition: (fileName, position) => <ts.ImplementationLocation[]>[],\n    getReferencesAtPosition: (fileName: string, position: number) => <ts.ReferenceEntry[]>[],\n    findReferences: (fileName: string, position: number) => <ts.ReferencedSymbol[]>[],\n    getDocumentHighlights: (fileName, position, filesToSearch) => <ts.DocumentHighlights[]>[],\n    /** @deprecated */\n    getOccurrencesAtPosition: (fileName, position) => <ts.ReferenceEntry[]>[],\n    getNavigateToItems: searchValue => <ts.NavigateToItem[]>[],\n    getNavigationBarItems: fileName => <ts.NavigationBarItem[]>[],\n    getNavigationTree: fileName => <ts.NavigationTree><any>undefined,\n    getOutliningSpans: fileName => <ts.OutliningSpan[]>[],\n    getTodoComments: (fileName, descriptors) => <ts.TodoComment[]>[],\n    getBraceMatchingAtPosition: (fileName, position) => <ts.TextSpan[]>[],\n    getIndentationAtPosition: (fileName, position, options) => <number><any>undefined,\n    getFormattingEditsForRange: (fileName, start, end, options) => <ts.TextChange[]>[],\n    getFormattingEditsForDocument: (fileName, options) => <ts.TextChange[]>[],\n    getFormattingEditsAfterKeystroke: (fileName, position, key, options) => <ts.TextChange[]>[],\n    getDocCommentTemplateAtPosition: (fileName, position) => <ts.TextInsertion><any>undefined,\n    isValidBraceCompletionAtPosition: (fileName, position, openingBrace) => <boolean><any>undefined,\n    getCodeFixesAtPosition: (fileName, start, end, errorCodes) => <ts.CodeAction[]>[],\n    getEmitOutput: fileName => <ts.EmitOutput><any>undefined,\n    getProgram: () => ls.getProgram(),\n    dispose: () => ls.dispose()\n  };\n}\n\nexport function create(info: any /* ts.server.PluginCreateInfo */): ts.LanguageService {\n  // Create the proxy\n  const proxy: ts.LanguageService = Object.create(null);\n  let oldLS: ts.LanguageService = info.languageService;\n\n  if (angularOnlyResults) {\n    oldLS = angularOnlyFilter(oldLS);\n  }\n\n  function tryCall<T>(fileName: string | undefined, callback: () => T): T {\n    if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n      return undefined as any as T;\n    }\n    try {\n      return callback();\n    } catch (e) {\n      return undefined as any as T;\n    }\n  }\n\n  function tryFilenameCall<T>(m: (fileName: string) => T): (fileName: string) => T {\n    return fileName => tryCall(fileName, () => <T>(m.call(ls, fileName)));\n  }\n\n  function tryFilenameOneCall<T, P>(m: (fileName: string, p: P) => T): (filename: string, p: P) =>\n      T {\n    return (fileName, p) => tryCall(fileName, () => <T>(m.call(ls, fileName, p)));\n  }\n\n  function tryFilenameTwoCall<T, P1, P2>(m: (fileName: string, p1: P1, p2: P2) => T): (\n      filename: string, p1: P1, p2: P2) => T {\n    return (fileName, p1, p2) => tryCall(fileName, () => <T>(m.call(ls, fileName, p1, p2)));\n  }\n\n  function tryFilenameThreeCall<T, P1, P2, P3>(m: (fileName: string, p1: P1, p2: P2, p3: P3) => T):\n      (filename: string, p1: P1, p2: P2, p3: P3) => T {\n    return (fileName, p1, p2, p3) => tryCall(fileName, () => <T>(m.call(ls, fileName, p1, p2, p3)));\n  }\n\n  function tryFilenameFourCall<T, P1, P2, P3, P4>(\n      m: (fileName: string, p1: P1, p2: P2, p3: P3, p4: P4) =>\n          T): (fileName: string, p1: P1, p2: P2, p3: P3, p4: P4) => T {\n    return (fileName, p1, p2, p3, p4) =>\n               tryCall(fileName, () => <T>(m.call(ls, fileName, p1, p2, p3, p4)));\n  }\n\n  function typescriptOnly(ls: ts.LanguageService): ts.LanguageService {\n    return {\n      cleanupSemanticCache: () => ls.cleanupSemanticCache(),\n      getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n      getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n      getCompilerOptionsDiagnostics: () => ls.getCompilerOptionsDiagnostics(),\n      getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n      getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n      getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n      getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n      getCompletionsAtPosition: tryFilenameOneCall(ls.getCompletionsAtPosition),\n      getCompletionEntryDetails: tryFilenameTwoCall(ls.getCompletionEntryDetails),\n      getCompletionEntrySymbol: tryFilenameTwoCall(ls.getCompletionEntrySymbol),\n      getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n      getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n      getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n      getSignatureHelpItems: tryFilenameOneCall(ls.getSignatureHelpItems),\n      getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n      findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n      getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n      getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n      getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n      getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n      findReferences: tryFilenameOneCall(ls.findReferences),\n      getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n      /** @deprecated */\n      getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n      getNavigateToItems:\n          (searchValue, maxResultCount, fileName, excludeDtsFiles) => tryCall(\n              fileName,\n              () => ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles)),\n      getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n      getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n      getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n      getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n      getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n      getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n      getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n      getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n      getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n      getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n      isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n      getCodeFixesAtPosition: tryFilenameFourCall(ls.getCodeFixesAtPosition),\n      getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n      getProgram: () => ls.getProgram(),\n      dispose: () => ls.dispose()\n    };\n  }\n\n  oldLS = typescriptOnly(oldLS);\n\n  for (const k in oldLS) {\n    (<any>proxy)[k] = function() { return (oldLS as any)[k].apply(oldLS, arguments); };\n  }\n\n  function completionToEntry(c: Completion): ts.CompletionEntry {\n    return {kind: c.kind, name: c.name, sortText: c.sort, kindModifiers: ''};\n  }\n\n  function diagnosticToDiagnostic(d: Diagnostic, file: ts.SourceFile): ts.Diagnostic {\n    const result = {\n      file,\n      start: d.span.start,\n      length: d.span.end - d.span.start,\n      messageText: d.message,\n      category: ts.DiagnosticCategory.Error,\n      code: 0,\n      source: 'ng'\n    };\n    return result;\n  }\n\n  function tryOperation<T>(attempting: string, callback: () => T): T|null {\n    try {\n      return callback();\n    } catch (e) {\n      info.project.projectService.logger.info(`Failed to ${attempting}: ${e.toString()}`);\n      info.project.projectService.logger.info(`Stack trace: ${e.stack}`);\n      return null;\n    }\n  }\n\n  const serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n  const ls = createLanguageService(serviceHost as any);\n  serviceHost.setSite(ls);\n  projectHostMap.set(info.project, serviceHost);\n\n  proxy.getCompletionsAtPosition = function(fileName: string, position: number) {\n    let base = oldLS.getCompletionsAtPosition(fileName, position) || {\n      isGlobalCompletion: false,\n      isMemberCompletion: false,\n      isNewIdentifierLocation: false,\n      entries: []\n    };\n    tryOperation('get completions', () => {\n      const results = ls.getCompletionsAt(fileName, position);\n      if (results && results.length) {\n        if (base === undefined) {\n          base = {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n          };\n        }\n        for (const entry of results) {\n          base.entries.push(completionToEntry(entry));\n        }\n      }\n    });\n    return base;\n  };\n\n  proxy.getQuickInfoAtPosition = function(fileName: string, position: number): ts.QuickInfo {\n    let base = oldLS.getQuickInfoAtPosition(fileName, position);\n    // TODO(vicb): the tags property has been removed in TS 2.2\n    tryOperation('get quick info', () => {\n      const ours = ls.getHoverAt(fileName, position);\n      if (ours) {\n        const displayParts: ts.SymbolDisplayPart[] = [];\n        for (const part of ours.text) {\n          displayParts.push({kind: part.language || 'angular', text: part.text});\n        }\n        const tags = base && (<any>base).tags;\n        base = <any>{\n          displayParts,\n          documentation: [],\n          kind: 'angular',\n          kindModifiers: 'what does this do?',\n          textSpan: {start: ours.span.start, length: ours.span.end - ours.span.start},\n        };\n        if (tags) {\n          (<any>base).tags = tags;\n        }\n      }\n    });\n\n    return base;\n  };\n\n  proxy.getSemanticDiagnostics = function(fileName: string) {\n    let result = oldLS.getSemanticDiagnostics(fileName);\n    const base = result || [];\n    tryOperation('get diagnostics', () => {\n      info.project.projectService.logger.info(`Computing Angular semantic diagnostics...`);\n      const ours = ls.getDiagnostics(fileName);\n      if (ours && ours.length) {\n        const file = oldLS.getProgram().getSourceFile(fileName);\n        base.push.apply(base, ours.map(d => diagnosticToDiagnostic(d, file)));\n      }\n    });\n\n    return base;\n  };\n\n  proxy.getDefinitionAtPosition = function(\n                                      fileName: string, position: number): ts.DefinitionInfo[] {\n    let base = oldLS.getDefinitionAtPosition(fileName, position);\n    if (base && base.length) {\n      return base;\n    }\n\n    return tryOperation('get definition', () => {\n             const ours = ls.getDefinitionAt(fileName, position);\n             if (ours && ours.length) {\n               base = base || [];\n               for (const loc of ours) {\n                 base.push({\n                   fileName: loc.fileName,\n                   textSpan: {start: loc.span.start, length: loc.span.end - loc.span.start},\n                   name: '',\n                   kind: 'definition',\n                   containerName: loc.fileName,\n                   containerKind: 'file'\n                 });\n               }\n             }\n             return base;\n           }) || [];\n  };\n\n  return proxy;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const VERSION = new Version('5.0.0-beta.3-14502f5b34');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the language service package.\n */\nexport {createLanguageService} from './src/language_service';\nexport * from './src/ts_plugin';\nexport {Completion, Completions, Declaration, Declarations, Definition, Diagnostic, Diagnostics, Hover, HoverTextSection, LanguageService, LanguageServiceHost, Location, Span, TemplateSource, TemplateSources} from './src/types';\nexport {TypeScriptServiceHost, createLanguageServiceFromTypescript} from './src/typescript_host';\nexport {VERSION} from './src/version';\n"],"names":["tslib_1.__extends","VERSION","path","global","ResolvedReflectiveFactory","errorObject_1","__extends","isFunction_1","Symbol","root_1","Observer_1","rxSubscriber_1","observable","Observable_1","isScheduler_1","Subscriber_1","root","isArray_1","iterator","observable_1","isObject_1","Subscription_1","Subject_1","isPromise","createScope","Subject","Observable","merge","share","renderNode","NOT_CREATED","InjectorRefTokenKey","_createProviderInstance","tokenKey","fs","RendererV1","anchorDef","viewDef","AUTO_STYLE","_trigger","_animate","_group","_sequence","_style","_state","_keyframes","_transition","flatten","chars.$EOF","chars.$SPACE","chars.isDigit","chars.$PERIOD","chars.$LPAREN","chars.$RPAREN","chars.$LBRACE","chars.$RBRACE","chars.$LBRACKET","chars.$RBRACKET","chars.$COMMA","chars.$COLON","chars.$SEMICOLON","chars.$SQ","chars.$DQ","chars.$HASH","chars.$PLUS","chars.$MINUS","chars.$STAR","chars.$SLASH","chars.$PERCENT","chars.$CARET","chars.$QUESTION","chars.$LT","chars.$GT","chars.$EQ","chars.$BANG","chars.$AMPERSAND","chars.$BAR","chars.$NBSP","chars.isWhitespace","chars.$BACKSLASH","chars.$u","chars.$a","chars.$z","chars.$A","chars.$Z","chars.$_","chars.$$","chars.isAsciiLetter","chars.$e","chars.$E","chars.$BT","chars.$n","chars.$LF","chars.$f","chars.$FF","chars.$r","chars.$CR","chars.$t","chars.$TAB","chars.$v","chars.$VTAB","TokenType","Token","chars.$x","chars.$X","chars.$0","chars.$9","chars.isAsciiHexDigit","lex.tokenize","lex.TokenType","html.Comment","html.Expansion","lex.Token","html.ExpansionCase","html.Text","html.Element","html.Attribute","Text","ExpressionParser","ExpressionLexer","html.visitAll","i18n.Message","i18n.TagPlaceholder","i18n.Icu","i18n.Container","i18n.IcuPlaceholder","i18n.Text","i18n.Placeholder","Parser","i18n.RecurseVisitor","_Visitor","xml.Tag","xml.CR","xml.Text","xml.serialize","xml.Declaration","ml.visitAll","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_WriteVisitor","XmlToI18n","version","xml.Doctype","digest","ɵCodegenComponentFactoryResolver","ɵcmf","ɵmod","ɵmpd","ɵregisterModuleFactory","ɵinlineInterpolate","ɵinterpolate","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵvid","ɵeld","ɵand","ɵted","ɵdid","ɵprd","ɵqud","ɵpad","ɵpod","ɵppd","ɵpid","ɵnov","ɵncd","ɵunv","ɵcrt","ɵccf","style","cpl.viewClassName","cpl.hostViewClassName","cpl.identifierName","cpl.rendererTypeName","cpl.componentFactoryName","cpl.CompileDirectiveMetadata","cpl.CompileTemplateMetadata","cpl.CompileSummaryKind","cpl.CompileNgModuleMetadata","cpl.TransitiveCompileNgModuleMetadata","cpl.tokenReference","cpl.CompilePipeMetadata","cpl.ProviderMeta","ɵERROR_COMPONENT_TYPE","Type","RecursiveAstVisitor","AstTransformer","o.literalArr","o.LiteralMapEntry","o.LiteralMapExpr","o.literal","o.Expression","o.fn","o.ReturnStatement","o.INFERRED_TYPE","o.FnParam","o.DYNAMIC_TYPE","o.variable","o.NULL_EXPR","providerDef","o.importExpr","o.importType","o.expressionType","o.TypeModifier","o.StmtModifier","CATCH_ERROR_VAR","CATCH_STACK_VAR","o.BuiltinVar","o.BinaryOperator","o.Statement","o.Type","o.ExternalExpr","o.BuiltinTypeName","o.BuiltinMethod","o.ArrayType","o.literalMap","o.DeclareVarStmt","cdAst.AstTransformer","o.BinaryOperatorExpr","o.not","o.assertNotNull","cdAst.SafeMethodCall","cdAst.MethodCall","cdAst.PropertyRead","o.ReadVarExpr","o.ExpressionStatement","cdAst.FunctionCall","CLASS_ATTR","LOG_VAR","o.DeclareFunctionStmt","o.findReadVarNames","o.CommaExpr","o.applySourceSpanToExpressionIfNeeded","o.applySourceSpanToStatementIfNeeded","o.IfStmt","o.BOOL_TYPE","importExpr","o.ExternalReference","USE_VALUE","trigger","state","transition","animate","keyframes","sequence","group","fn","sourceUrl","ir.variable","ir.importExpr","i18n.CloneVisitor","i18n.I18NHtmlParser","ts","evaluator","DiagnosticCategory","tsickle","api","extractor","DiagnosticKind","spanOf","AstPathBase","BuiltinType","SCHEMA","BOOLEAN","NUMBER","STRING","OBJECT","TEMPLATE_ATTR_PREFIX","createElementCssSelector","ExpressionVisitor","getExpressionScope","Attribute","ts.forEachChild","ts.SyntaxKind","path.dirname","fs.existsSync","path.join","ts.getPositionOfLineAndCharacter","ts.DiagnosticCategory"],"mappings":"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"}